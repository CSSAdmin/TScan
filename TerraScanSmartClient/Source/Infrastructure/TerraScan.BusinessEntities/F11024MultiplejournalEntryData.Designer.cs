//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F11024MultiplejournalEntryData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F11024MultiplejournalEntryData : global::System.Data.DataSet {
        
        private f1124_JournalEntryTemplateItemDataTable tablef1124_JournalEntryTemplateItem;
        
        private f1124_SelectJournalEntryTemplateDataTable tablef1124_SelectJournalEntryTemplate;
        
        private f11024_SaveTemplateDetailsDataTable tablef11024_SaveTemplateDetails;
        
        private f11024_TempFromAccountTableDataTable tablef11024_TempFromAccountTable;
        
        private f11024_TempToAccountTableDataTable tablef11024_TempToAccountTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F11024MultiplejournalEntryData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F11024MultiplejournalEntryData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f1124_JournalEntryTemplateItem"] != null)) {
                    base.Tables.Add(new f1124_JournalEntryTemplateItemDataTable(ds.Tables["f1124_JournalEntryTemplateItem"]));
                }
                if ((ds.Tables["f1124_SelectJournalEntryTemplate"] != null)) {
                    base.Tables.Add(new f1124_SelectJournalEntryTemplateDataTable(ds.Tables["f1124_SelectJournalEntryTemplate"]));
                }
                if ((ds.Tables["f11024_SaveTemplateDetails"] != null)) {
                    base.Tables.Add(new f11024_SaveTemplateDetailsDataTable(ds.Tables["f11024_SaveTemplateDetails"]));
                }
                if ((ds.Tables["f11024_TempFromAccountTable"] != null)) {
                    base.Tables.Add(new f11024_TempFromAccountTableDataTable(ds.Tables["f11024_TempFromAccountTable"]));
                }
                if ((ds.Tables["f11024_TempToAccountTable"] != null)) {
                    base.Tables.Add(new f11024_TempToAccountTableDataTable(ds.Tables["f11024_TempToAccountTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f1124_JournalEntryTemplateItemDataTable f1124_JournalEntryTemplateItem {
            get {
                return this.tablef1124_JournalEntryTemplateItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f1124_SelectJournalEntryTemplateDataTable f1124_SelectJournalEntryTemplate {
            get {
                return this.tablef1124_SelectJournalEntryTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f11024_SaveTemplateDetailsDataTable f11024_SaveTemplateDetails {
            get {
                return this.tablef11024_SaveTemplateDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f11024_TempFromAccountTableDataTable f11024_TempFromAccountTable {
            get {
                return this.tablef11024_TempFromAccountTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f11024_TempToAccountTableDataTable f11024_TempToAccountTable {
            get {
                return this.tablef11024_TempToAccountTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F11024MultiplejournalEntryData cln = ((F11024MultiplejournalEntryData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f1124_JournalEntryTemplateItem"] != null)) {
                    base.Tables.Add(new f1124_JournalEntryTemplateItemDataTable(ds.Tables["f1124_JournalEntryTemplateItem"]));
                }
                if ((ds.Tables["f1124_SelectJournalEntryTemplate"] != null)) {
                    base.Tables.Add(new f1124_SelectJournalEntryTemplateDataTable(ds.Tables["f1124_SelectJournalEntryTemplate"]));
                }
                if ((ds.Tables["f11024_SaveTemplateDetails"] != null)) {
                    base.Tables.Add(new f11024_SaveTemplateDetailsDataTable(ds.Tables["f11024_SaveTemplateDetails"]));
                }
                if ((ds.Tables["f11024_TempFromAccountTable"] != null)) {
                    base.Tables.Add(new f11024_TempFromAccountTableDataTable(ds.Tables["f11024_TempFromAccountTable"]));
                }
                if ((ds.Tables["f11024_TempToAccountTable"] != null)) {
                    base.Tables.Add(new f11024_TempToAccountTableDataTable(ds.Tables["f11024_TempToAccountTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef1124_JournalEntryTemplateItem = ((f1124_JournalEntryTemplateItemDataTable)(base.Tables["f1124_JournalEntryTemplateItem"]));
            if ((initTable == true)) {
                if ((this.tablef1124_JournalEntryTemplateItem != null)) {
                    this.tablef1124_JournalEntryTemplateItem.InitVars();
                }
            }
            this.tablef1124_SelectJournalEntryTemplate = ((f1124_SelectJournalEntryTemplateDataTable)(base.Tables["f1124_SelectJournalEntryTemplate"]));
            if ((initTable == true)) {
                if ((this.tablef1124_SelectJournalEntryTemplate != null)) {
                    this.tablef1124_SelectJournalEntryTemplate.InitVars();
                }
            }
            this.tablef11024_SaveTemplateDetails = ((f11024_SaveTemplateDetailsDataTable)(base.Tables["f11024_SaveTemplateDetails"]));
            if ((initTable == true)) {
                if ((this.tablef11024_SaveTemplateDetails != null)) {
                    this.tablef11024_SaveTemplateDetails.InitVars();
                }
            }
            this.tablef11024_TempFromAccountTable = ((f11024_TempFromAccountTableDataTable)(base.Tables["f11024_TempFromAccountTable"]));
            if ((initTable == true)) {
                if ((this.tablef11024_TempFromAccountTable != null)) {
                    this.tablef11024_TempFromAccountTable.InitVars();
                }
            }
            this.tablef11024_TempToAccountTable = ((f11024_TempToAccountTableDataTable)(base.Tables["f11024_TempToAccountTable"]));
            if ((initTable == true)) {
                if ((this.tablef11024_TempToAccountTable != null)) {
                    this.tablef11024_TempToAccountTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F11024MultiplejournalEntryData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F11024MultiplejournalEntryData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef1124_JournalEntryTemplateItem = new f1124_JournalEntryTemplateItemDataTable();
            base.Tables.Add(this.tablef1124_JournalEntryTemplateItem);
            this.tablef1124_SelectJournalEntryTemplate = new f1124_SelectJournalEntryTemplateDataTable();
            base.Tables.Add(this.tablef1124_SelectJournalEntryTemplate);
            this.tablef11024_SaveTemplateDetails = new f11024_SaveTemplateDetailsDataTable();
            base.Tables.Add(this.tablef11024_SaveTemplateDetails);
            this.tablef11024_TempFromAccountTable = new f11024_TempFromAccountTableDataTable();
            base.Tables.Add(this.tablef11024_TempFromAccountTable);
            this.tablef11024_TempToAccountTable = new f11024_TempToAccountTableDataTable();
            base.Tables.Add(this.tablef11024_TempToAccountTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef1124_JournalEntryTemplateItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef1124_SelectJournalEntryTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef11024_SaveTemplateDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef11024_TempFromAccountTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef11024_TempToAccountTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F11024MultiplejournalEntryData ds = new F11024MultiplejournalEntryData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f1124_JournalEntryTemplateItemRowChangeEventHandler(object sender, f1124_JournalEntryTemplateItemRowChangeEvent e);
        
        public delegate void f1124_SelectJournalEntryTemplateRowChangeEventHandler(object sender, f1124_SelectJournalEntryTemplateRowChangeEvent e);
        
        public delegate void f11024_SaveTemplateDetailsRowChangeEventHandler(object sender, f11024_SaveTemplateDetailsRowChangeEvent e);
        
        public delegate void f11024_TempFromAccountTableRowChangeEventHandler(object sender, f11024_TempFromAccountTableRowChangeEvent e);
        
        public delegate void f11024_TempToAccountTableRowChangeEventHandler(object sender, f11024_TempToAccountTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f1124_JournalEntryTemplateItemDataTable : global::System.Data.TypedTableBase<f1124_JournalEntryTemplateItemRow> {
            
            private global::System.Data.DataColumn columnFromAccountID;
            
            private global::System.Data.DataColumn columnFromAccount;
            
            private global::System.Data.DataColumn columnToAccountID;
            
            private global::System.Data.DataColumn columnToAccount;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnTransferAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_JournalEntryTemplateItemDataTable() {
                this.TableName = "f1124_JournalEntryTemplateItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f1124_JournalEntryTemplateItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f1124_JournalEntryTemplateItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromAccountIDColumn {
                get {
                    return this.columnFromAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromAccountColumn {
                get {
                    return this.columnFromAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToAccountIDColumn {
                get {
                    return this.columnToAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToAccountColumn {
                get {
                    return this.columnToAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferAmountColumn {
                get {
                    return this.columnTransferAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_JournalEntryTemplateItemRow this[int index] {
                get {
                    return ((f1124_JournalEntryTemplateItemRow)(this.Rows[index]));
                }
            }
            
            public event f1124_JournalEntryTemplateItemRowChangeEventHandler f1124_JournalEntryTemplateItemRowChanging;
            
            public event f1124_JournalEntryTemplateItemRowChangeEventHandler f1124_JournalEntryTemplateItemRowChanged;
            
            public event f1124_JournalEntryTemplateItemRowChangeEventHandler f1124_JournalEntryTemplateItemRowDeleting;
            
            public event f1124_JournalEntryTemplateItemRowChangeEventHandler f1124_JournalEntryTemplateItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf1124_JournalEntryTemplateItemRow(f1124_JournalEntryTemplateItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_JournalEntryTemplateItemRow Addf1124_JournalEntryTemplateItemRow(int FromAccountID, string FromAccount, int ToAccountID, string ToAccount, string Description, decimal TransferAmount) {
                f1124_JournalEntryTemplateItemRow rowf1124_JournalEntryTemplateItemRow = ((f1124_JournalEntryTemplateItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FromAccountID,
                        FromAccount,
                        ToAccountID,
                        ToAccount,
                        Description,
                        TransferAmount};
                rowf1124_JournalEntryTemplateItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf1124_JournalEntryTemplateItemRow);
                return rowf1124_JournalEntryTemplateItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f1124_JournalEntryTemplateItemDataTable cln = ((f1124_JournalEntryTemplateItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f1124_JournalEntryTemplateItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFromAccountID = base.Columns["FromAccountID"];
                this.columnFromAccount = base.Columns["FromAccount"];
                this.columnToAccountID = base.Columns["ToAccountID"];
                this.columnToAccount = base.Columns["ToAccount"];
                this.columnDescription = base.Columns["Description"];
                this.columnTransferAmount = base.Columns["TransferAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFromAccountID = new global::System.Data.DataColumn("FromAccountID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromAccountID);
                this.columnFromAccount = new global::System.Data.DataColumn("FromAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromAccount);
                this.columnToAccountID = new global::System.Data.DataColumn("ToAccountID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToAccountID);
                this.columnToAccount = new global::System.Data.DataColumn("ToAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToAccount);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnTransferAmount = new global::System.Data.DataColumn("TransferAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferAmount);
                this.columnFromAccount.MaxLength = 366;
                this.columnToAccount.MaxLength = 366;
                this.columnDescription.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_JournalEntryTemplateItemRow Newf1124_JournalEntryTemplateItemRow() {
                return ((f1124_JournalEntryTemplateItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f1124_JournalEntryTemplateItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f1124_JournalEntryTemplateItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f1124_JournalEntryTemplateItemRowChanged != null)) {
                    this.f1124_JournalEntryTemplateItemRowChanged(this, new f1124_JournalEntryTemplateItemRowChangeEvent(((f1124_JournalEntryTemplateItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f1124_JournalEntryTemplateItemRowChanging != null)) {
                    this.f1124_JournalEntryTemplateItemRowChanging(this, new f1124_JournalEntryTemplateItemRowChangeEvent(((f1124_JournalEntryTemplateItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f1124_JournalEntryTemplateItemRowDeleted != null)) {
                    this.f1124_JournalEntryTemplateItemRowDeleted(this, new f1124_JournalEntryTemplateItemRowChangeEvent(((f1124_JournalEntryTemplateItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f1124_JournalEntryTemplateItemRowDeleting != null)) {
                    this.f1124_JournalEntryTemplateItemRowDeleting(this, new f1124_JournalEntryTemplateItemRowChangeEvent(((f1124_JournalEntryTemplateItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef1124_JournalEntryTemplateItemRow(f1124_JournalEntryTemplateItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F11024MultiplejournalEntryData ds = new F11024MultiplejournalEntryData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f1124_JournalEntryTemplateItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f1124_SelectJournalEntryTemplateDataTable : global::System.Data.TypedTableBase<f1124_SelectJournalEntryTemplateRow> {
            
            private global::System.Data.DataColumn columnTemplateID;
            
            private global::System.Data.DataColumn columnTemplateName;
            
            private global::System.Data.DataColumn columnRollyear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_SelectJournalEntryTemplateDataTable() {
                this.TableName = "f1124_SelectJournalEntryTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f1124_SelectJournalEntryTemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f1124_SelectJournalEntryTemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateIDColumn {
                get {
                    return this.columnTemplateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateNameColumn {
                get {
                    return this.columnTemplateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollyearColumn {
                get {
                    return this.columnRollyear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_SelectJournalEntryTemplateRow this[int index] {
                get {
                    return ((f1124_SelectJournalEntryTemplateRow)(this.Rows[index]));
                }
            }
            
            public event f1124_SelectJournalEntryTemplateRowChangeEventHandler f1124_SelectJournalEntryTemplateRowChanging;
            
            public event f1124_SelectJournalEntryTemplateRowChangeEventHandler f1124_SelectJournalEntryTemplateRowChanged;
            
            public event f1124_SelectJournalEntryTemplateRowChangeEventHandler f1124_SelectJournalEntryTemplateRowDeleting;
            
            public event f1124_SelectJournalEntryTemplateRowChangeEventHandler f1124_SelectJournalEntryTemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf1124_SelectJournalEntryTemplateRow(f1124_SelectJournalEntryTemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_SelectJournalEntryTemplateRow Addf1124_SelectJournalEntryTemplateRow(string TemplateName, int Rollyear) {
                f1124_SelectJournalEntryTemplateRow rowf1124_SelectJournalEntryTemplateRow = ((f1124_SelectJournalEntryTemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TemplateName,
                        Rollyear};
                rowf1124_SelectJournalEntryTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf1124_SelectJournalEntryTemplateRow);
                return rowf1124_SelectJournalEntryTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f1124_SelectJournalEntryTemplateDataTable cln = ((f1124_SelectJournalEntryTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f1124_SelectJournalEntryTemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTemplateID = base.Columns["TemplateID"];
                this.columnTemplateName = base.Columns["TemplateName"];
                this.columnRollyear = base.Columns["Rollyear"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTemplateID = new global::System.Data.DataColumn("TemplateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplateID);
                this.columnTemplateName = new global::System.Data.DataColumn("TemplateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplateName);
                this.columnRollyear = new global::System.Data.DataColumn("Rollyear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollyear);
                this.columnTemplateID.AutoIncrement = true;
                this.columnTemplateID.AllowDBNull = false;
                this.columnTemplateID.ReadOnly = true;
                this.columnTemplateName.MaxLength = 100;
                this.columnRollyear.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_SelectJournalEntryTemplateRow Newf1124_SelectJournalEntryTemplateRow() {
                return ((f1124_SelectJournalEntryTemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f1124_SelectJournalEntryTemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f1124_SelectJournalEntryTemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f1124_SelectJournalEntryTemplateRowChanged != null)) {
                    this.f1124_SelectJournalEntryTemplateRowChanged(this, new f1124_SelectJournalEntryTemplateRowChangeEvent(((f1124_SelectJournalEntryTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f1124_SelectJournalEntryTemplateRowChanging != null)) {
                    this.f1124_SelectJournalEntryTemplateRowChanging(this, new f1124_SelectJournalEntryTemplateRowChangeEvent(((f1124_SelectJournalEntryTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f1124_SelectJournalEntryTemplateRowDeleted != null)) {
                    this.f1124_SelectJournalEntryTemplateRowDeleted(this, new f1124_SelectJournalEntryTemplateRowChangeEvent(((f1124_SelectJournalEntryTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f1124_SelectJournalEntryTemplateRowDeleting != null)) {
                    this.f1124_SelectJournalEntryTemplateRowDeleting(this, new f1124_SelectJournalEntryTemplateRowChangeEvent(((f1124_SelectJournalEntryTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef1124_SelectJournalEntryTemplateRow(f1124_SelectJournalEntryTemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F11024MultiplejournalEntryData ds = new F11024MultiplejournalEntryData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f1124_SelectJournalEntryTemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f11024_SaveTemplateDetailsDataTable : global::System.Data.TypedTableBase<f11024_SaveTemplateDetailsRow> {
            
            private global::System.Data.DataColumn columnTransferAmount;
            
            private global::System.Data.DataColumn columnFromAccountID;
            
            private global::System.Data.DataColumn columnToAccountID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_SaveTemplateDetailsDataTable() {
                this.TableName = "f11024_SaveTemplateDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f11024_SaveTemplateDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f11024_SaveTemplateDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferAmountColumn {
                get {
                    return this.columnTransferAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromAccountIDColumn {
                get {
                    return this.columnFromAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToAccountIDColumn {
                get {
                    return this.columnToAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_SaveTemplateDetailsRow this[int index] {
                get {
                    return ((f11024_SaveTemplateDetailsRow)(this.Rows[index]));
                }
            }
            
            public event f11024_SaveTemplateDetailsRowChangeEventHandler f11024_SaveTemplateDetailsRowChanging;
            
            public event f11024_SaveTemplateDetailsRowChangeEventHandler f11024_SaveTemplateDetailsRowChanged;
            
            public event f11024_SaveTemplateDetailsRowChangeEventHandler f11024_SaveTemplateDetailsRowDeleting;
            
            public event f11024_SaveTemplateDetailsRowChangeEventHandler f11024_SaveTemplateDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf11024_SaveTemplateDetailsRow(f11024_SaveTemplateDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_SaveTemplateDetailsRow Addf11024_SaveTemplateDetailsRow(string TransferAmount, string FromAccountID, string ToAccountID) {
                f11024_SaveTemplateDetailsRow rowf11024_SaveTemplateDetailsRow = ((f11024_SaveTemplateDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TransferAmount,
                        FromAccountID,
                        ToAccountID};
                rowf11024_SaveTemplateDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf11024_SaveTemplateDetailsRow);
                return rowf11024_SaveTemplateDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f11024_SaveTemplateDetailsDataTable cln = ((f11024_SaveTemplateDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f11024_SaveTemplateDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTransferAmount = base.Columns["TransferAmount"];
                this.columnFromAccountID = base.Columns["FromAccountID"];
                this.columnToAccountID = base.Columns["ToAccountID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTransferAmount = new global::System.Data.DataColumn("TransferAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferAmount);
                this.columnFromAccountID = new global::System.Data.DataColumn("FromAccountID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromAccountID);
                this.columnToAccountID = new global::System.Data.DataColumn("ToAccountID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToAccountID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_SaveTemplateDetailsRow Newf11024_SaveTemplateDetailsRow() {
                return ((f11024_SaveTemplateDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f11024_SaveTemplateDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f11024_SaveTemplateDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f11024_SaveTemplateDetailsRowChanged != null)) {
                    this.f11024_SaveTemplateDetailsRowChanged(this, new f11024_SaveTemplateDetailsRowChangeEvent(((f11024_SaveTemplateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f11024_SaveTemplateDetailsRowChanging != null)) {
                    this.f11024_SaveTemplateDetailsRowChanging(this, new f11024_SaveTemplateDetailsRowChangeEvent(((f11024_SaveTemplateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f11024_SaveTemplateDetailsRowDeleted != null)) {
                    this.f11024_SaveTemplateDetailsRowDeleted(this, new f11024_SaveTemplateDetailsRowChangeEvent(((f11024_SaveTemplateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f11024_SaveTemplateDetailsRowDeleting != null)) {
                    this.f11024_SaveTemplateDetailsRowDeleting(this, new f11024_SaveTemplateDetailsRowChangeEvent(((f11024_SaveTemplateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef11024_SaveTemplateDetailsRow(f11024_SaveTemplateDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F11024MultiplejournalEntryData ds = new F11024MultiplejournalEntryData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f11024_SaveTemplateDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f11024_TempFromAccountTableDataTable : global::System.Data.TypedTableBase<f11024_TempFromAccountTableRow> {
            
            private global::System.Data.DataColumn columnFromAccountID;
            
            private global::System.Data.DataColumn columnFromAccount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempFromAccountTableDataTable() {
                this.TableName = "f11024_TempFromAccountTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f11024_TempFromAccountTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f11024_TempFromAccountTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromAccountIDColumn {
                get {
                    return this.columnFromAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromAccountColumn {
                get {
                    return this.columnFromAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempFromAccountTableRow this[int index] {
                get {
                    return ((f11024_TempFromAccountTableRow)(this.Rows[index]));
                }
            }
            
            public event f11024_TempFromAccountTableRowChangeEventHandler f11024_TempFromAccountTableRowChanging;
            
            public event f11024_TempFromAccountTableRowChangeEventHandler f11024_TempFromAccountTableRowChanged;
            
            public event f11024_TempFromAccountTableRowChangeEventHandler f11024_TempFromAccountTableRowDeleting;
            
            public event f11024_TempFromAccountTableRowChangeEventHandler f11024_TempFromAccountTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf11024_TempFromAccountTableRow(f11024_TempFromAccountTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempFromAccountTableRow Addf11024_TempFromAccountTableRow(string FromAccountID, string FromAccount) {
                f11024_TempFromAccountTableRow rowf11024_TempFromAccountTableRow = ((f11024_TempFromAccountTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FromAccountID,
                        FromAccount};
                rowf11024_TempFromAccountTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf11024_TempFromAccountTableRow);
                return rowf11024_TempFromAccountTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f11024_TempFromAccountTableDataTable cln = ((f11024_TempFromAccountTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f11024_TempFromAccountTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFromAccountID = base.Columns["FromAccountID"];
                this.columnFromAccount = base.Columns["FromAccount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFromAccountID = new global::System.Data.DataColumn("FromAccountID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromAccountID);
                this.columnFromAccount = new global::System.Data.DataColumn("FromAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromAccount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempFromAccountTableRow Newf11024_TempFromAccountTableRow() {
                return ((f11024_TempFromAccountTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f11024_TempFromAccountTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f11024_TempFromAccountTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f11024_TempFromAccountTableRowChanged != null)) {
                    this.f11024_TempFromAccountTableRowChanged(this, new f11024_TempFromAccountTableRowChangeEvent(((f11024_TempFromAccountTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f11024_TempFromAccountTableRowChanging != null)) {
                    this.f11024_TempFromAccountTableRowChanging(this, new f11024_TempFromAccountTableRowChangeEvent(((f11024_TempFromAccountTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f11024_TempFromAccountTableRowDeleted != null)) {
                    this.f11024_TempFromAccountTableRowDeleted(this, new f11024_TempFromAccountTableRowChangeEvent(((f11024_TempFromAccountTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f11024_TempFromAccountTableRowDeleting != null)) {
                    this.f11024_TempFromAccountTableRowDeleting(this, new f11024_TempFromAccountTableRowChangeEvent(((f11024_TempFromAccountTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef11024_TempFromAccountTableRow(f11024_TempFromAccountTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F11024MultiplejournalEntryData ds = new F11024MultiplejournalEntryData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f11024_TempFromAccountTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f11024_TempToAccountTableDataTable : global::System.Data.TypedTableBase<f11024_TempToAccountTableRow> {
            
            private global::System.Data.DataColumn columnToAccountID;
            
            private global::System.Data.DataColumn columnToAccount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempToAccountTableDataTable() {
                this.TableName = "f11024_TempToAccountTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f11024_TempToAccountTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f11024_TempToAccountTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToAccountIDColumn {
                get {
                    return this.columnToAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToAccountColumn {
                get {
                    return this.columnToAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempToAccountTableRow this[int index] {
                get {
                    return ((f11024_TempToAccountTableRow)(this.Rows[index]));
                }
            }
            
            public event f11024_TempToAccountTableRowChangeEventHandler f11024_TempToAccountTableRowChanging;
            
            public event f11024_TempToAccountTableRowChangeEventHandler f11024_TempToAccountTableRowChanged;
            
            public event f11024_TempToAccountTableRowChangeEventHandler f11024_TempToAccountTableRowDeleting;
            
            public event f11024_TempToAccountTableRowChangeEventHandler f11024_TempToAccountTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf11024_TempToAccountTableRow(f11024_TempToAccountTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempToAccountTableRow Addf11024_TempToAccountTableRow(string ToAccountID, string ToAccount) {
                f11024_TempToAccountTableRow rowf11024_TempToAccountTableRow = ((f11024_TempToAccountTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ToAccountID,
                        ToAccount};
                rowf11024_TempToAccountTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf11024_TempToAccountTableRow);
                return rowf11024_TempToAccountTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f11024_TempToAccountTableDataTable cln = ((f11024_TempToAccountTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f11024_TempToAccountTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnToAccountID = base.Columns["ToAccountID"];
                this.columnToAccount = base.Columns["ToAccount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnToAccountID = new global::System.Data.DataColumn("ToAccountID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToAccountID);
                this.columnToAccount = new global::System.Data.DataColumn("ToAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToAccount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempToAccountTableRow Newf11024_TempToAccountTableRow() {
                return ((f11024_TempToAccountTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f11024_TempToAccountTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f11024_TempToAccountTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f11024_TempToAccountTableRowChanged != null)) {
                    this.f11024_TempToAccountTableRowChanged(this, new f11024_TempToAccountTableRowChangeEvent(((f11024_TempToAccountTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f11024_TempToAccountTableRowChanging != null)) {
                    this.f11024_TempToAccountTableRowChanging(this, new f11024_TempToAccountTableRowChangeEvent(((f11024_TempToAccountTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f11024_TempToAccountTableRowDeleted != null)) {
                    this.f11024_TempToAccountTableRowDeleted(this, new f11024_TempToAccountTableRowChangeEvent(((f11024_TempToAccountTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f11024_TempToAccountTableRowDeleting != null)) {
                    this.f11024_TempToAccountTableRowDeleting(this, new f11024_TempToAccountTableRowChangeEvent(((f11024_TempToAccountTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef11024_TempToAccountTableRow(f11024_TempToAccountTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F11024MultiplejournalEntryData ds = new F11024MultiplejournalEntryData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f11024_TempToAccountTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f1124_JournalEntryTemplateItemRow : global::System.Data.DataRow {
            
            private f1124_JournalEntryTemplateItemDataTable tablef1124_JournalEntryTemplateItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f1124_JournalEntryTemplateItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef1124_JournalEntryTemplateItem = ((f1124_JournalEntryTemplateItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FromAccountID {
                get {
                    try {
                        return ((int)(this[this.tablef1124_JournalEntryTemplateItem.FromAccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromAccountID\' in table \'f1124_JournalEntryTemplateItem\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1124_JournalEntryTemplateItem.FromAccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromAccount {
                get {
                    try {
                        return ((string)(this[this.tablef1124_JournalEntryTemplateItem.FromAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromAccount\' in table \'f1124_JournalEntryTemplateItem\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef1124_JournalEntryTemplateItem.FromAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ToAccountID {
                get {
                    try {
                        return ((int)(this[this.tablef1124_JournalEntryTemplateItem.ToAccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToAccountID\' in table \'f1124_JournalEntryTemplateItem\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef1124_JournalEntryTemplateItem.ToAccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToAccount {
                get {
                    try {
                        return ((string)(this[this.tablef1124_JournalEntryTemplateItem.ToAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToAccount\' in table \'f1124_JournalEntryTemplateItem\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef1124_JournalEntryTemplateItem.ToAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablef1124_JournalEntryTemplateItem.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'f1124_JournalEntryTemplateItem\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef1124_JournalEntryTemplateItem.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TransferAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablef1124_JournalEntryTemplateItem.TransferAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferAmount\' in table \'f1124_JournalEntryTemplateItem\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1124_JournalEntryTemplateItem.TransferAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromAccountIDNull() {
                return this.IsNull(this.tablef1124_JournalEntryTemplateItem.FromAccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromAccountIDNull() {
                this[this.tablef1124_JournalEntryTemplateItem.FromAccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromAccountNull() {
                return this.IsNull(this.tablef1124_JournalEntryTemplateItem.FromAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromAccountNull() {
                this[this.tablef1124_JournalEntryTemplateItem.FromAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToAccountIDNull() {
                return this.IsNull(this.tablef1124_JournalEntryTemplateItem.ToAccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToAccountIDNull() {
                this[this.tablef1124_JournalEntryTemplateItem.ToAccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToAccountNull() {
                return this.IsNull(this.tablef1124_JournalEntryTemplateItem.ToAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToAccountNull() {
                this[this.tablef1124_JournalEntryTemplateItem.ToAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablef1124_JournalEntryTemplateItem.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablef1124_JournalEntryTemplateItem.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransferAmountNull() {
                return this.IsNull(this.tablef1124_JournalEntryTemplateItem.TransferAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransferAmountNull() {
                this[this.tablef1124_JournalEntryTemplateItem.TransferAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f1124_SelectJournalEntryTemplateRow : global::System.Data.DataRow {
            
            private f1124_SelectJournalEntryTemplateDataTable tablef1124_SelectJournalEntryTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f1124_SelectJournalEntryTemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef1124_SelectJournalEntryTemplate = ((f1124_SelectJournalEntryTemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TemplateID {
                get {
                    return ((int)(this[this.tablef1124_SelectJournalEntryTemplate.TemplateIDColumn]));
                }
                set {
                    this[this.tablef1124_SelectJournalEntryTemplate.TemplateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TemplateName {
                get {
                    try {
                        return ((string)(this[this.tablef1124_SelectJournalEntryTemplate.TemplateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TemplateName\' in table \'f1124_SelectJournalEntryTemplate\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1124_SelectJournalEntryTemplate.TemplateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Rollyear {
                get {
                    return ((int)(this[this.tablef1124_SelectJournalEntryTemplate.RollyearColumn]));
                }
                set {
                    this[this.tablef1124_SelectJournalEntryTemplate.RollyearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemplateNameNull() {
                return this.IsNull(this.tablef1124_SelectJournalEntryTemplate.TemplateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemplateNameNull() {
                this[this.tablef1124_SelectJournalEntryTemplate.TemplateNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f11024_SaveTemplateDetailsRow : global::System.Data.DataRow {
            
            private f11024_SaveTemplateDetailsDataTable tablef11024_SaveTemplateDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f11024_SaveTemplateDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef11024_SaveTemplateDetails = ((f11024_SaveTemplateDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransferAmount {
                get {
                    try {
                        return ((string)(this[this.tablef11024_SaveTemplateDetails.TransferAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferAmount\' in table \'f11024_SaveTemplateDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef11024_SaveTemplateDetails.TransferAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromAccountID {
                get {
                    try {
                        return ((string)(this[this.tablef11024_SaveTemplateDetails.FromAccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromAccountID\' in table \'f11024_SaveTemplateDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef11024_SaveTemplateDetails.FromAccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToAccountID {
                get {
                    try {
                        return ((string)(this[this.tablef11024_SaveTemplateDetails.ToAccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToAccountID\' in table \'f11024_SaveTemplateDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablef11024_SaveTemplateDetails.ToAccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransferAmountNull() {
                return this.IsNull(this.tablef11024_SaveTemplateDetails.TransferAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransferAmountNull() {
                this[this.tablef11024_SaveTemplateDetails.TransferAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromAccountIDNull() {
                return this.IsNull(this.tablef11024_SaveTemplateDetails.FromAccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromAccountIDNull() {
                this[this.tablef11024_SaveTemplateDetails.FromAccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToAccountIDNull() {
                return this.IsNull(this.tablef11024_SaveTemplateDetails.ToAccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToAccountIDNull() {
                this[this.tablef11024_SaveTemplateDetails.ToAccountIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f11024_TempFromAccountTableRow : global::System.Data.DataRow {
            
            private f11024_TempFromAccountTableDataTable tablef11024_TempFromAccountTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f11024_TempFromAccountTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef11024_TempFromAccountTable = ((f11024_TempFromAccountTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromAccountID {
                get {
                    try {
                        return ((string)(this[this.tablef11024_TempFromAccountTable.FromAccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromAccountID\' in table \'f11024_TempFromAccountTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef11024_TempFromAccountTable.FromAccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromAccount {
                get {
                    try {
                        return ((string)(this[this.tablef11024_TempFromAccountTable.FromAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromAccount\' in table \'f11024_TempFromAccountTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef11024_TempFromAccountTable.FromAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromAccountIDNull() {
                return this.IsNull(this.tablef11024_TempFromAccountTable.FromAccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromAccountIDNull() {
                this[this.tablef11024_TempFromAccountTable.FromAccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromAccountNull() {
                return this.IsNull(this.tablef11024_TempFromAccountTable.FromAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromAccountNull() {
                this[this.tablef11024_TempFromAccountTable.FromAccountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f11024_TempToAccountTableRow : global::System.Data.DataRow {
            
            private f11024_TempToAccountTableDataTable tablef11024_TempToAccountTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f11024_TempToAccountTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef11024_TempToAccountTable = ((f11024_TempToAccountTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToAccountID {
                get {
                    try {
                        return ((string)(this[this.tablef11024_TempToAccountTable.ToAccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToAccountID\' in table \'f11024_TempToAccountTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef11024_TempToAccountTable.ToAccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToAccount {
                get {
                    try {
                        return ((string)(this[this.tablef11024_TempToAccountTable.ToAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToAccount\' in table \'f11024_TempToAccountTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef11024_TempToAccountTable.ToAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToAccountIDNull() {
                return this.IsNull(this.tablef11024_TempToAccountTable.ToAccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToAccountIDNull() {
                this[this.tablef11024_TempToAccountTable.ToAccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToAccountNull() {
                return this.IsNull(this.tablef11024_TempToAccountTable.ToAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToAccountNull() {
                this[this.tablef11024_TempToAccountTable.ToAccountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f1124_JournalEntryTemplateItemRowChangeEvent : global::System.EventArgs {
            
            private f1124_JournalEntryTemplateItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_JournalEntryTemplateItemRowChangeEvent(f1124_JournalEntryTemplateItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_JournalEntryTemplateItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f1124_SelectJournalEntryTemplateRowChangeEvent : global::System.EventArgs {
            
            private f1124_SelectJournalEntryTemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_SelectJournalEntryTemplateRowChangeEvent(f1124_SelectJournalEntryTemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1124_SelectJournalEntryTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f11024_SaveTemplateDetailsRowChangeEvent : global::System.EventArgs {
            
            private f11024_SaveTemplateDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_SaveTemplateDetailsRowChangeEvent(f11024_SaveTemplateDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_SaveTemplateDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f11024_TempFromAccountTableRowChangeEvent : global::System.EventArgs {
            
            private f11024_TempFromAccountTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempFromAccountTableRowChangeEvent(f11024_TempFromAccountTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempFromAccountTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f11024_TempToAccountTableRowChangeEvent : global::System.EventArgs {
            
            private f11024_TempToAccountTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempToAccountTableRowChangeEvent(f11024_TempToAccountTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11024_TempToAccountTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591