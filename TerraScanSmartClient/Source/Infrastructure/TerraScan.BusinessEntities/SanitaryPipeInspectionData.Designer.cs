//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SanitaryPipeInspectionData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SanitaryPipeInspectionData : global::System.Data.DataSet {
        
        private GetEventEngineEventPropertiesDataTable tableGetEventEngineEventProperties;
        
        private SaveEventEngineEventPropertiesDataTable tableSaveEventEngineEventProperties;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SanitaryPipeInspectionData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SanitaryPipeInspectionData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GetEventEngineEventProperties"] != null)) {
                    base.Tables.Add(new GetEventEngineEventPropertiesDataTable(ds.Tables["GetEventEngineEventProperties"]));
                }
                if ((ds.Tables["SaveEventEngineEventProperties"] != null)) {
                    base.Tables.Add(new SaveEventEngineEventPropertiesDataTable(ds.Tables["SaveEventEngineEventProperties"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetEventEngineEventPropertiesDataTable GetEventEngineEventProperties {
            get {
                return this.tableGetEventEngineEventProperties;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SaveEventEngineEventPropertiesDataTable SaveEventEngineEventProperties {
            get {
                return this.tableSaveEventEngineEventProperties;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SanitaryPipeInspectionData cln = ((SanitaryPipeInspectionData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GetEventEngineEventProperties"] != null)) {
                    base.Tables.Add(new GetEventEngineEventPropertiesDataTable(ds.Tables["GetEventEngineEventProperties"]));
                }
                if ((ds.Tables["SaveEventEngineEventProperties"] != null)) {
                    base.Tables.Add(new SaveEventEngineEventPropertiesDataTable(ds.Tables["SaveEventEngineEventProperties"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGetEventEngineEventProperties = ((GetEventEngineEventPropertiesDataTable)(base.Tables["GetEventEngineEventProperties"]));
            if ((initTable == true)) {
                if ((this.tableGetEventEngineEventProperties != null)) {
                    this.tableGetEventEngineEventProperties.InitVars();
                }
            }
            this.tableSaveEventEngineEventProperties = ((SaveEventEngineEventPropertiesDataTable)(base.Tables["SaveEventEngineEventProperties"]));
            if ((initTable == true)) {
                if ((this.tableSaveEventEngineEventProperties != null)) {
                    this.tableSaveEventEngineEventProperties.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SanitaryPipeInspectionData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SanitaryPipeInspectionData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGetEventEngineEventProperties = new GetEventEngineEventPropertiesDataTable();
            base.Tables.Add(this.tableGetEventEngineEventProperties);
            this.tableSaveEventEngineEventProperties = new SaveEventEngineEventPropertiesDataTable();
            base.Tables.Add(this.tableSaveEventEngineEventProperties);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetEventEngineEventProperties() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSaveEventEngineEventProperties() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SanitaryPipeInspectionData ds = new SanitaryPipeInspectionData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GetEventEngineEventPropertiesRowChangeEventHandler(object sender, GetEventEngineEventPropertiesRowChangeEvent e);
        
        public delegate void SaveEventEngineEventPropertiesRowChangeEventHandler(object sender, SaveEventEngineEventPropertiesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetEventEngineEventPropertiesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnStart;
            
            private global::System.Data.DataColumn columnStop;
            
            private global::System.Data.DataColumn columnStructural;
            
            private global::System.Data.DataColumn columnRoots;
            
            private global::System.Data.DataColumn columnReverse;
            
            private global::System.Data.DataColumn columnRecommendation;
            
            private global::System.Data.DataColumn columnSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetEventEngineEventPropertiesDataTable() {
                this.TableName = "GetEventEngineEventProperties";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetEventEngineEventPropertiesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetEventEngineEventPropertiesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartColumn {
                get {
                    return this.columnStart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StopColumn {
                get {
                    return this.columnStop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StructuralColumn {
                get {
                    return this.columnStructural;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RootsColumn {
                get {
                    return this.columnRoots;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReverseColumn {
                get {
                    return this.columnReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecommendationColumn {
                get {
                    return this.columnRecommendation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SummaryColumn {
                get {
                    return this.columnSummary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetEventEngineEventPropertiesRow this[int index] {
                get {
                    return ((GetEventEngineEventPropertiesRow)(this.Rows[index]));
                }
            }
            
            public event GetEventEngineEventPropertiesRowChangeEventHandler GetEventEngineEventPropertiesRowChanging;
            
            public event GetEventEngineEventPropertiesRowChangeEventHandler GetEventEngineEventPropertiesRowChanged;
            
            public event GetEventEngineEventPropertiesRowChangeEventHandler GetEventEngineEventPropertiesRowDeleting;
            
            public event GetEventEngineEventPropertiesRowChangeEventHandler GetEventEngineEventPropertiesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetEventEngineEventPropertiesRow(GetEventEngineEventPropertiesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetEventEngineEventPropertiesRow AddGetEventEngineEventPropertiesRow(int EventID, string Form, string Number, string Start, string Stop, byte Structural, byte Roots, bool Reverse, string Recommendation, string Summary) {
                GetEventEngineEventPropertiesRow rowGetEventEngineEventPropertiesRow = ((GetEventEngineEventPropertiesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EventID,
                        Form,
                        Number,
                        Start,
                        Stop,
                        Structural,
                        Roots,
                        Reverse,
                        Recommendation,
                        Summary};
                rowGetEventEngineEventPropertiesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetEventEngineEventPropertiesRow);
                return rowGetEventEngineEventPropertiesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetEventEngineEventPropertiesDataTable cln = ((GetEventEngineEventPropertiesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetEventEngineEventPropertiesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEventID = base.Columns["EventID"];
                this.columnForm = base.Columns["Form"];
                this.columnNumber = base.Columns["Number"];
                this.columnStart = base.Columns["Start"];
                this.columnStop = base.Columns["Stop"];
                this.columnStructural = base.Columns["Structural"];
                this.columnRoots = base.Columns["Roots"];
                this.columnReverse = base.Columns["Reverse"];
                this.columnRecommendation = base.Columns["Recommendation"];
                this.columnSummary = base.Columns["Summary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnStart = new global::System.Data.DataColumn("Start", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStart);
                this.columnStop = new global::System.Data.DataColumn("Stop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStop);
                this.columnStructural = new global::System.Data.DataColumn("Structural", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStructural);
                this.columnRoots = new global::System.Data.DataColumn("Roots", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoots);
                this.columnReverse = new global::System.Data.DataColumn("Reverse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReverse);
                this.columnRecommendation = new global::System.Data.DataColumn("Recommendation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecommendation);
                this.columnSummary = new global::System.Data.DataColumn("Summary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummary);
                this.columnEventID.AllowDBNull = false;
                this.columnForm.MaxLength = 50;
                this.columnNumber.MaxLength = 50;
                this.columnStart.MaxLength = 50;
                this.columnStop.MaxLength = 50;
                this.columnRecommendation.MaxLength = 200;
                this.columnSummary.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetEventEngineEventPropertiesRow NewGetEventEngineEventPropertiesRow() {
                return ((GetEventEngineEventPropertiesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetEventEngineEventPropertiesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetEventEngineEventPropertiesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetEventEngineEventPropertiesRowChanged != null)) {
                    this.GetEventEngineEventPropertiesRowChanged(this, new GetEventEngineEventPropertiesRowChangeEvent(((GetEventEngineEventPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetEventEngineEventPropertiesRowChanging != null)) {
                    this.GetEventEngineEventPropertiesRowChanging(this, new GetEventEngineEventPropertiesRowChangeEvent(((GetEventEngineEventPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetEventEngineEventPropertiesRowDeleted != null)) {
                    this.GetEventEngineEventPropertiesRowDeleted(this, new GetEventEngineEventPropertiesRowChangeEvent(((GetEventEngineEventPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetEventEngineEventPropertiesRowDeleting != null)) {
                    this.GetEventEngineEventPropertiesRowDeleting(this, new GetEventEngineEventPropertiesRowChangeEvent(((GetEventEngineEventPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetEventEngineEventPropertiesRow(GetEventEngineEventPropertiesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SanitaryPipeInspectionData ds = new SanitaryPipeInspectionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetEventEngineEventPropertiesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SaveEventEngineEventPropertiesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnStart;
            
            private global::System.Data.DataColumn columnStop;
            
            private global::System.Data.DataColumn columnStructural;
            
            private global::System.Data.DataColumn columnRoots;
            
            private global::System.Data.DataColumn columnReverse;
            
            private global::System.Data.DataColumn columnRecommendation;
            
            private global::System.Data.DataColumn columnSummary;
            
            private global::System.Data.DataColumn columnEventID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineEventPropertiesDataTable() {
                this.TableName = "SaveEventEngineEventProperties";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SaveEventEngineEventPropertiesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SaveEventEngineEventPropertiesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartColumn {
                get {
                    return this.columnStart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StopColumn {
                get {
                    return this.columnStop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StructuralColumn {
                get {
                    return this.columnStructural;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RootsColumn {
                get {
                    return this.columnRoots;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReverseColumn {
                get {
                    return this.columnReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecommendationColumn {
                get {
                    return this.columnRecommendation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SummaryColumn {
                get {
                    return this.columnSummary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineEventPropertiesRow this[int index] {
                get {
                    return ((SaveEventEngineEventPropertiesRow)(this.Rows[index]));
                }
            }
            
            public event SaveEventEngineEventPropertiesRowChangeEventHandler SaveEventEngineEventPropertiesRowChanging;
            
            public event SaveEventEngineEventPropertiesRowChangeEventHandler SaveEventEngineEventPropertiesRowChanged;
            
            public event SaveEventEngineEventPropertiesRowChangeEventHandler SaveEventEngineEventPropertiesRowDeleting;
            
            public event SaveEventEngineEventPropertiesRowChangeEventHandler SaveEventEngineEventPropertiesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSaveEventEngineEventPropertiesRow(SaveEventEngineEventPropertiesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineEventPropertiesRow AddSaveEventEngineEventPropertiesRow(string Form, string Number, string Start, string Stop, byte Structural, byte Roots, bool Reverse, string Recommendation, string Summary, int EventID) {
                SaveEventEngineEventPropertiesRow rowSaveEventEngineEventPropertiesRow = ((SaveEventEngineEventPropertiesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Form,
                        Number,
                        Start,
                        Stop,
                        Structural,
                        Roots,
                        Reverse,
                        Recommendation,
                        Summary,
                        EventID};
                rowSaveEventEngineEventPropertiesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSaveEventEngineEventPropertiesRow);
                return rowSaveEventEngineEventPropertiesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SaveEventEngineEventPropertiesDataTable cln = ((SaveEventEngineEventPropertiesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SaveEventEngineEventPropertiesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnForm = base.Columns["Form"];
                this.columnNumber = base.Columns["Number"];
                this.columnStart = base.Columns["Start"];
                this.columnStop = base.Columns["Stop"];
                this.columnStructural = base.Columns["Structural"];
                this.columnRoots = base.Columns["Roots"];
                this.columnReverse = base.Columns["Reverse"];
                this.columnRecommendation = base.Columns["Recommendation"];
                this.columnSummary = base.Columns["Summary"];
                this.columnEventID = base.Columns["EventID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnStart = new global::System.Data.DataColumn("Start", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStart);
                this.columnStop = new global::System.Data.DataColumn("Stop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStop);
                this.columnStructural = new global::System.Data.DataColumn("Structural", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStructural);
                this.columnRoots = new global::System.Data.DataColumn("Roots", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoots);
                this.columnReverse = new global::System.Data.DataColumn("Reverse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReverse);
                this.columnRecommendation = new global::System.Data.DataColumn("Recommendation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecommendation);
                this.columnSummary = new global::System.Data.DataColumn("Summary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummary);
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnForm.MaxLength = 50;
                this.columnNumber.MaxLength = 50;
                this.columnStart.MaxLength = 50;
                this.columnStop.MaxLength = 50;
                this.columnRecommendation.MaxLength = 200;
                this.columnSummary.MaxLength = 200;
                this.columnEventID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineEventPropertiesRow NewSaveEventEngineEventPropertiesRow() {
                return ((SaveEventEngineEventPropertiesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SaveEventEngineEventPropertiesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SaveEventEngineEventPropertiesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SaveEventEngineEventPropertiesRowChanged != null)) {
                    this.SaveEventEngineEventPropertiesRowChanged(this, new SaveEventEngineEventPropertiesRowChangeEvent(((SaveEventEngineEventPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SaveEventEngineEventPropertiesRowChanging != null)) {
                    this.SaveEventEngineEventPropertiesRowChanging(this, new SaveEventEngineEventPropertiesRowChangeEvent(((SaveEventEngineEventPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SaveEventEngineEventPropertiesRowDeleted != null)) {
                    this.SaveEventEngineEventPropertiesRowDeleted(this, new SaveEventEngineEventPropertiesRowChangeEvent(((SaveEventEngineEventPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SaveEventEngineEventPropertiesRowDeleting != null)) {
                    this.SaveEventEngineEventPropertiesRowDeleting(this, new SaveEventEngineEventPropertiesRowChangeEvent(((SaveEventEngineEventPropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSaveEventEngineEventPropertiesRow(SaveEventEngineEventPropertiesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SanitaryPipeInspectionData ds = new SanitaryPipeInspectionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SaveEventEngineEventPropertiesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetEventEngineEventPropertiesRow : global::System.Data.DataRow {
            
            private GetEventEngineEventPropertiesDataTable tableGetEventEngineEventProperties;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetEventEngineEventPropertiesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetEventEngineEventProperties = ((GetEventEngineEventPropertiesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    return ((int)(this[this.tableGetEventEngineEventProperties.EventIDColumn]));
                }
                set {
                    this[this.tableGetEventEngineEventProperties.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Form {
                get {
                    try {
                        return ((string)(this[this.tableGetEventEngineEventProperties.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'GetEventEngineEventProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetEventEngineEventProperties.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableGetEventEngineEventProperties.NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Number\' in table \'GetEventEngineEventProperties\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetEventEngineEventProperties.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Start {
                get {
                    try {
                        return ((string)(this[this.tableGetEventEngineEventProperties.StartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Start\' in table \'GetEventEngineEventProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetEventEngineEventProperties.StartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Stop {
                get {
                    try {
                        return ((string)(this[this.tableGetEventEngineEventProperties.StopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stop\' in table \'GetEventEngineEventProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetEventEngineEventProperties.StopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Structural {
                get {
                    try {
                        return ((byte)(this[this.tableGetEventEngineEventProperties.StructuralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Structural\' in table \'GetEventEngineEventProperties\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetEventEngineEventProperties.StructuralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Roots {
                get {
                    try {
                        return ((byte)(this[this.tableGetEventEngineEventProperties.RootsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roots\' in table \'GetEventEngineEventProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetEventEngineEventProperties.RootsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Reverse {
                get {
                    try {
                        return ((bool)(this[this.tableGetEventEngineEventProperties.ReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reverse\' in table \'GetEventEngineEventProperties\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetEventEngineEventProperties.ReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Recommendation {
                get {
                    try {
                        return ((string)(this[this.tableGetEventEngineEventProperties.RecommendationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Recommendation\' in table \'GetEventEngineEventProperties\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetEventEngineEventProperties.RecommendationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Summary {
                get {
                    try {
                        return ((string)(this[this.tableGetEventEngineEventProperties.SummaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Summary\' in table \'GetEventEngineEventProperties\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetEventEngineEventProperties.SummaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tableGetEventEngineEventProperties.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tableGetEventEngineEventProperties.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberNull() {
                return this.IsNull(this.tableGetEventEngineEventProperties.NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberNull() {
                this[this.tableGetEventEngineEventProperties.NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartNull() {
                return this.IsNull(this.tableGetEventEngineEventProperties.StartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartNull() {
                this[this.tableGetEventEngineEventProperties.StartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStopNull() {
                return this.IsNull(this.tableGetEventEngineEventProperties.StopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStopNull() {
                this[this.tableGetEventEngineEventProperties.StopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStructuralNull() {
                return this.IsNull(this.tableGetEventEngineEventProperties.StructuralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStructuralNull() {
                this[this.tableGetEventEngineEventProperties.StructuralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRootsNull() {
                return this.IsNull(this.tableGetEventEngineEventProperties.RootsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRootsNull() {
                this[this.tableGetEventEngineEventProperties.RootsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReverseNull() {
                return this.IsNull(this.tableGetEventEngineEventProperties.ReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReverseNull() {
                this[this.tableGetEventEngineEventProperties.ReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecommendationNull() {
                return this.IsNull(this.tableGetEventEngineEventProperties.RecommendationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecommendationNull() {
                this[this.tableGetEventEngineEventProperties.RecommendationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSummaryNull() {
                return this.IsNull(this.tableGetEventEngineEventProperties.SummaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSummaryNull() {
                this[this.tableGetEventEngineEventProperties.SummaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SaveEventEngineEventPropertiesRow : global::System.Data.DataRow {
            
            private SaveEventEngineEventPropertiesDataTable tableSaveEventEngineEventProperties;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SaveEventEngineEventPropertiesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSaveEventEngineEventProperties = ((SaveEventEngineEventPropertiesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Form {
                get {
                    try {
                        return ((string)(this[this.tableSaveEventEngineEventProperties.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'SaveEventEngineEventProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineEventProperties.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableSaveEventEngineEventProperties.NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Number\' in table \'SaveEventEngineEventProperties\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineEventProperties.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Start {
                get {
                    try {
                        return ((string)(this[this.tableSaveEventEngineEventProperties.StartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Start\' in table \'SaveEventEngineEventProperties\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineEventProperties.StartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Stop {
                get {
                    try {
                        return ((string)(this[this.tableSaveEventEngineEventProperties.StopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stop\' in table \'SaveEventEngineEventProperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineEventProperties.StopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Structural {
                get {
                    try {
                        return ((byte)(this[this.tableSaveEventEngineEventProperties.StructuralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Structural\' in table \'SaveEventEngineEventProperties\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineEventProperties.StructuralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Roots {
                get {
                    try {
                        return ((byte)(this[this.tableSaveEventEngineEventProperties.RootsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roots\' in table \'SaveEventEngineEventProperties\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineEventProperties.RootsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Reverse {
                get {
                    try {
                        return ((bool)(this[this.tableSaveEventEngineEventProperties.ReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reverse\' in table \'SaveEventEngineEventProperties\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineEventProperties.ReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Recommendation {
                get {
                    try {
                        return ((string)(this[this.tableSaveEventEngineEventProperties.RecommendationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Recommendation\' in table \'SaveEventEngineEventProperties\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineEventProperties.RecommendationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Summary {
                get {
                    try {
                        return ((string)(this[this.tableSaveEventEngineEventProperties.SummaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Summary\' in table \'SaveEventEngineEventProperties\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineEventProperties.SummaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    return ((int)(this[this.tableSaveEventEngineEventProperties.EventIDColumn]));
                }
                set {
                    this[this.tableSaveEventEngineEventProperties.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tableSaveEventEngineEventProperties.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tableSaveEventEngineEventProperties.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberNull() {
                return this.IsNull(this.tableSaveEventEngineEventProperties.NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberNull() {
                this[this.tableSaveEventEngineEventProperties.NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartNull() {
                return this.IsNull(this.tableSaveEventEngineEventProperties.StartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartNull() {
                this[this.tableSaveEventEngineEventProperties.StartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStopNull() {
                return this.IsNull(this.tableSaveEventEngineEventProperties.StopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStopNull() {
                this[this.tableSaveEventEngineEventProperties.StopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStructuralNull() {
                return this.IsNull(this.tableSaveEventEngineEventProperties.StructuralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStructuralNull() {
                this[this.tableSaveEventEngineEventProperties.StructuralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRootsNull() {
                return this.IsNull(this.tableSaveEventEngineEventProperties.RootsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRootsNull() {
                this[this.tableSaveEventEngineEventProperties.RootsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReverseNull() {
                return this.IsNull(this.tableSaveEventEngineEventProperties.ReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReverseNull() {
                this[this.tableSaveEventEngineEventProperties.ReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecommendationNull() {
                return this.IsNull(this.tableSaveEventEngineEventProperties.RecommendationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecommendationNull() {
                this[this.tableSaveEventEngineEventProperties.RecommendationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSummaryNull() {
                return this.IsNull(this.tableSaveEventEngineEventProperties.SummaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSummaryNull() {
                this[this.tableSaveEventEngineEventProperties.SummaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetEventEngineEventPropertiesRowChangeEvent : global::System.EventArgs {
            
            private GetEventEngineEventPropertiesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetEventEngineEventPropertiesRowChangeEvent(GetEventEngineEventPropertiesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetEventEngineEventPropertiesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SaveEventEngineEventPropertiesRowChangeEvent : global::System.EventArgs {
            
            private SaveEventEngineEventPropertiesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineEventPropertiesRowChangeEvent(SaveEventEngineEventPropertiesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineEventPropertiesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591