//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F9044SnapshotOperations")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F9044SnapshotOperations : global::System.Data.DataSet {
        
        private f9044_pcget_SnapshotOperationCountDataTable tablef9044_pcget_SnapshotOperationCount;
        
        private f9044_pcget_SnapshotOperationsDataTable tablef9044_pcget_SnapshotOperations;
        
        private f9044_pcget_OperationsDataTable tablef9044_pcget_Operations;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F9044SnapshotOperations() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F9044SnapshotOperations(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f9044_pcget_SnapshotOperationCount"] != null)) {
                    base.Tables.Add(new f9044_pcget_SnapshotOperationCountDataTable(ds.Tables["f9044_pcget_SnapshotOperationCount"]));
                }
                if ((ds.Tables["f9044_pcget_SnapshotOperations"] != null)) {
                    base.Tables.Add(new f9044_pcget_SnapshotOperationsDataTable(ds.Tables["f9044_pcget_SnapshotOperations"]));
                }
                if ((ds.Tables["f9044_pcget_Operations"] != null)) {
                    base.Tables.Add(new f9044_pcget_OperationsDataTable(ds.Tables["f9044_pcget_Operations"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f9044_pcget_SnapshotOperationCountDataTable f9044_pcget_SnapshotOperationCount {
            get {
                return this.tablef9044_pcget_SnapshotOperationCount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f9044_pcget_SnapshotOperationsDataTable f9044_pcget_SnapshotOperations {
            get {
                return this.tablef9044_pcget_SnapshotOperations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f9044_pcget_OperationsDataTable f9044_pcget_Operations {
            get {
                return this.tablef9044_pcget_Operations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F9044SnapshotOperations cln = ((F9044SnapshotOperations)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f9044_pcget_SnapshotOperationCount"] != null)) {
                    base.Tables.Add(new f9044_pcget_SnapshotOperationCountDataTable(ds.Tables["f9044_pcget_SnapshotOperationCount"]));
                }
                if ((ds.Tables["f9044_pcget_SnapshotOperations"] != null)) {
                    base.Tables.Add(new f9044_pcget_SnapshotOperationsDataTable(ds.Tables["f9044_pcget_SnapshotOperations"]));
                }
                if ((ds.Tables["f9044_pcget_Operations"] != null)) {
                    base.Tables.Add(new f9044_pcget_OperationsDataTable(ds.Tables["f9044_pcget_Operations"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef9044_pcget_SnapshotOperationCount = ((f9044_pcget_SnapshotOperationCountDataTable)(base.Tables["f9044_pcget_SnapshotOperationCount"]));
            if ((initTable == true)) {
                if ((this.tablef9044_pcget_SnapshotOperationCount != null)) {
                    this.tablef9044_pcget_SnapshotOperationCount.InitVars();
                }
            }
            this.tablef9044_pcget_SnapshotOperations = ((f9044_pcget_SnapshotOperationsDataTable)(base.Tables["f9044_pcget_SnapshotOperations"]));
            if ((initTable == true)) {
                if ((this.tablef9044_pcget_SnapshotOperations != null)) {
                    this.tablef9044_pcget_SnapshotOperations.InitVars();
                }
            }
            this.tablef9044_pcget_Operations = ((f9044_pcget_OperationsDataTable)(base.Tables["f9044_pcget_Operations"]));
            if ((initTable == true)) {
                if ((this.tablef9044_pcget_Operations != null)) {
                    this.tablef9044_pcget_Operations.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F9044SnapshotOperations";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F9044SnapshotOperations.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef9044_pcget_SnapshotOperationCount = new f9044_pcget_SnapshotOperationCountDataTable();
            base.Tables.Add(this.tablef9044_pcget_SnapshotOperationCount);
            this.tablef9044_pcget_SnapshotOperations = new f9044_pcget_SnapshotOperationsDataTable();
            base.Tables.Add(this.tablef9044_pcget_SnapshotOperations);
            this.tablef9044_pcget_Operations = new f9044_pcget_OperationsDataTable();
            base.Tables.Add(this.tablef9044_pcget_Operations);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef9044_pcget_SnapshotOperationCount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef9044_pcget_SnapshotOperations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef9044_pcget_Operations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F9044SnapshotOperations ds = new F9044SnapshotOperations();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f9044_pcget_SnapshotOperationCountRowChangeEventHandler(object sender, f9044_pcget_SnapshotOperationCountRowChangeEvent e);
        
        public delegate void f9044_pcget_SnapshotOperationsRowChangeEventHandler(object sender, f9044_pcget_SnapshotOperationsRowChangeEvent e);
        
        public delegate void f9044_pcget_OperationsRowChangeEventHandler(object sender, f9044_pcget_OperationsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f9044_pcget_SnapshotOperationCountDataTable : global::System.Data.TypedTableBase<f9044_pcget_SnapshotOperationCountRow> {
            
            private global::System.Data.DataColumn columnRecordsInCommon;
            
            private global::System.Data.DataColumn columnRecordsInNewSnapshot;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationCountDataTable() {
                this.TableName = "f9044_pcget_SnapshotOperationCount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f9044_pcget_SnapshotOperationCountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f9044_pcget_SnapshotOperationCountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordsInCommonColumn {
                get {
                    return this.columnRecordsInCommon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordsInNewSnapshotColumn {
                get {
                    return this.columnRecordsInNewSnapshot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationCountRow this[int index] {
                get {
                    return ((f9044_pcget_SnapshotOperationCountRow)(this.Rows[index]));
                }
            }
            
            public event f9044_pcget_SnapshotOperationCountRowChangeEventHandler f9044_pcget_SnapshotOperationCountRowChanging;
            
            public event f9044_pcget_SnapshotOperationCountRowChangeEventHandler f9044_pcget_SnapshotOperationCountRowChanged;
            
            public event f9044_pcget_SnapshotOperationCountRowChangeEventHandler f9044_pcget_SnapshotOperationCountRowDeleting;
            
            public event f9044_pcget_SnapshotOperationCountRowChangeEventHandler f9044_pcget_SnapshotOperationCountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf9044_pcget_SnapshotOperationCountRow(f9044_pcget_SnapshotOperationCountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationCountRow Addf9044_pcget_SnapshotOperationCountRow(int RecordsInCommon, int RecordsInNewSnapshot) {
                f9044_pcget_SnapshotOperationCountRow rowf9044_pcget_SnapshotOperationCountRow = ((f9044_pcget_SnapshotOperationCountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RecordsInCommon,
                        RecordsInNewSnapshot};
                rowf9044_pcget_SnapshotOperationCountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf9044_pcget_SnapshotOperationCountRow);
                return rowf9044_pcget_SnapshotOperationCountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f9044_pcget_SnapshotOperationCountDataTable cln = ((f9044_pcget_SnapshotOperationCountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f9044_pcget_SnapshotOperationCountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRecordsInCommon = base.Columns["RecordsInCommon"];
                this.columnRecordsInNewSnapshot = base.Columns["RecordsInNewSnapshot"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRecordsInCommon = new global::System.Data.DataColumn("RecordsInCommon", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordsInCommon);
                this.columnRecordsInNewSnapshot = new global::System.Data.DataColumn("RecordsInNewSnapshot", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordsInNewSnapshot);
                this.columnRecordsInCommon.ReadOnly = true;
                this.columnRecordsInNewSnapshot.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationCountRow Newf9044_pcget_SnapshotOperationCountRow() {
                return ((f9044_pcget_SnapshotOperationCountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f9044_pcget_SnapshotOperationCountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f9044_pcget_SnapshotOperationCountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f9044_pcget_SnapshotOperationCountRowChanged != null)) {
                    this.f9044_pcget_SnapshotOperationCountRowChanged(this, new f9044_pcget_SnapshotOperationCountRowChangeEvent(((f9044_pcget_SnapshotOperationCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f9044_pcget_SnapshotOperationCountRowChanging != null)) {
                    this.f9044_pcget_SnapshotOperationCountRowChanging(this, new f9044_pcget_SnapshotOperationCountRowChangeEvent(((f9044_pcget_SnapshotOperationCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f9044_pcget_SnapshotOperationCountRowDeleted != null)) {
                    this.f9044_pcget_SnapshotOperationCountRowDeleted(this, new f9044_pcget_SnapshotOperationCountRowChangeEvent(((f9044_pcget_SnapshotOperationCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f9044_pcget_SnapshotOperationCountRowDeleting != null)) {
                    this.f9044_pcget_SnapshotOperationCountRowDeleting(this, new f9044_pcget_SnapshotOperationCountRowChangeEvent(((f9044_pcget_SnapshotOperationCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef9044_pcget_SnapshotOperationCountRow(f9044_pcget_SnapshotOperationCountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9044SnapshotOperations ds = new F9044SnapshotOperations();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f9044_pcget_SnapshotOperationCountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f9044_pcget_SnapshotOperationsDataTable : global::System.Data.TypedTableBase<f9044_pcget_SnapshotOperationsRow> {
            
            private global::System.Data.DataColumn columnSnapshotID;
            
            private global::System.Data.DataColumn columnSnapshotName;
            
            private global::System.Data.DataColumn columnSnapshotNote;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnRecordCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationsDataTable() {
                this.TableName = "f9044_pcget_SnapshotOperations";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f9044_pcget_SnapshotOperationsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f9044_pcget_SnapshotOperationsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnapshotIDColumn {
                get {
                    return this.columnSnapshotID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnapshotNameColumn {
                get {
                    return this.columnSnapshotName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnapshotNoteColumn {
                get {
                    return this.columnSnapshotNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordCountColumn {
                get {
                    return this.columnRecordCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationsRow this[int index] {
                get {
                    return ((f9044_pcget_SnapshotOperationsRow)(this.Rows[index]));
                }
            }
            
            public event f9044_pcget_SnapshotOperationsRowChangeEventHandler f9044_pcget_SnapshotOperationsRowChanging;
            
            public event f9044_pcget_SnapshotOperationsRowChangeEventHandler f9044_pcget_SnapshotOperationsRowChanged;
            
            public event f9044_pcget_SnapshotOperationsRowChangeEventHandler f9044_pcget_SnapshotOperationsRowDeleting;
            
            public event f9044_pcget_SnapshotOperationsRowChangeEventHandler f9044_pcget_SnapshotOperationsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf9044_pcget_SnapshotOperationsRow(f9044_pcget_SnapshotOperationsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationsRow Addf9044_pcget_SnapshotOperationsRow(string SnapshotName, string SnapshotNote, string CreatedBy, int RecordCount) {
                f9044_pcget_SnapshotOperationsRow rowf9044_pcget_SnapshotOperationsRow = ((f9044_pcget_SnapshotOperationsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SnapshotName,
                        SnapshotNote,
                        CreatedBy,
                        RecordCount};
                rowf9044_pcget_SnapshotOperationsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf9044_pcget_SnapshotOperationsRow);
                return rowf9044_pcget_SnapshotOperationsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f9044_pcget_SnapshotOperationsDataTable cln = ((f9044_pcget_SnapshotOperationsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f9044_pcget_SnapshotOperationsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSnapshotID = base.Columns["SnapshotID"];
                this.columnSnapshotName = base.Columns["SnapshotName"];
                this.columnSnapshotNote = base.Columns["SnapshotNote"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnRecordCount = base.Columns["RecordCount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSnapshotID = new global::System.Data.DataColumn("SnapshotID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSnapshotID);
                this.columnSnapshotName = new global::System.Data.DataColumn("SnapshotName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSnapshotName);
                this.columnSnapshotNote = new global::System.Data.DataColumn("SnapshotNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSnapshotNote);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnRecordCount = new global::System.Data.DataColumn("RecordCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordCount);
                this.columnSnapshotID.AutoIncrement = true;
                this.columnSnapshotID.AllowDBNull = false;
                this.columnSnapshotID.ReadOnly = true;
                this.columnSnapshotName.AllowDBNull = false;
                this.columnSnapshotName.MaxLength = 50;
                this.columnSnapshotNote.MaxLength = 250;
                this.columnCreatedBy.MaxLength = 50;
                this.columnRecordCount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationsRow Newf9044_pcget_SnapshotOperationsRow() {
                return ((f9044_pcget_SnapshotOperationsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f9044_pcget_SnapshotOperationsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f9044_pcget_SnapshotOperationsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f9044_pcget_SnapshotOperationsRowChanged != null)) {
                    this.f9044_pcget_SnapshotOperationsRowChanged(this, new f9044_pcget_SnapshotOperationsRowChangeEvent(((f9044_pcget_SnapshotOperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f9044_pcget_SnapshotOperationsRowChanging != null)) {
                    this.f9044_pcget_SnapshotOperationsRowChanging(this, new f9044_pcget_SnapshotOperationsRowChangeEvent(((f9044_pcget_SnapshotOperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f9044_pcget_SnapshotOperationsRowDeleted != null)) {
                    this.f9044_pcget_SnapshotOperationsRowDeleted(this, new f9044_pcget_SnapshotOperationsRowChangeEvent(((f9044_pcget_SnapshotOperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f9044_pcget_SnapshotOperationsRowDeleting != null)) {
                    this.f9044_pcget_SnapshotOperationsRowDeleting(this, new f9044_pcget_SnapshotOperationsRowChangeEvent(((f9044_pcget_SnapshotOperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef9044_pcget_SnapshotOperationsRow(f9044_pcget_SnapshotOperationsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9044SnapshotOperations ds = new F9044SnapshotOperations();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f9044_pcget_SnapshotOperationsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f9044_pcget_OperationsDataTable : global::System.Data.TypedTableBase<f9044_pcget_OperationsRow> {
            
            private global::System.Data.DataColumn columnOperationID;
            
            private global::System.Data.DataColumn columnOperation;
            
            private global::System.Data.DataColumn columnOperationDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_OperationsDataTable() {
                this.TableName = "f9044_pcget_Operations";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f9044_pcget_OperationsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f9044_pcget_OperationsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationIDColumn {
                get {
                    return this.columnOperationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationColumn {
                get {
                    return this.columnOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationDescriptionColumn {
                get {
                    return this.columnOperationDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_OperationsRow this[int index] {
                get {
                    return ((f9044_pcget_OperationsRow)(this.Rows[index]));
                }
            }
            
            public event f9044_pcget_OperationsRowChangeEventHandler f9044_pcget_OperationsRowChanging;
            
            public event f9044_pcget_OperationsRowChangeEventHandler f9044_pcget_OperationsRowChanged;
            
            public event f9044_pcget_OperationsRowChangeEventHandler f9044_pcget_OperationsRowDeleting;
            
            public event f9044_pcget_OperationsRowChangeEventHandler f9044_pcget_OperationsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf9044_pcget_OperationsRow(f9044_pcget_OperationsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_OperationsRow Addf9044_pcget_OperationsRow(int OperationID, string Operation, string OperationDescription) {
                f9044_pcget_OperationsRow rowf9044_pcget_OperationsRow = ((f9044_pcget_OperationsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OperationID,
                        Operation,
                        OperationDescription};
                rowf9044_pcget_OperationsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf9044_pcget_OperationsRow);
                return rowf9044_pcget_OperationsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f9044_pcget_OperationsDataTable cln = ((f9044_pcget_OperationsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f9044_pcget_OperationsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOperationID = base.Columns["OperationID"];
                this.columnOperation = base.Columns["Operation"];
                this.columnOperationDescription = base.Columns["OperationDescription"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOperationID = new global::System.Data.DataColumn("OperationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationID);
                this.columnOperation = new global::System.Data.DataColumn("Operation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation);
                this.columnOperationDescription = new global::System.Data.DataColumn("OperationDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationDescription);
                this.columnOperationID.ReadOnly = true;
                this.columnOperation.ReadOnly = true;
                this.columnOperation.MaxLength = 9;
                this.columnOperationDescription.ReadOnly = true;
                this.columnOperationDescription.MaxLength = 63;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_OperationsRow Newf9044_pcget_OperationsRow() {
                return ((f9044_pcget_OperationsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f9044_pcget_OperationsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f9044_pcget_OperationsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f9044_pcget_OperationsRowChanged != null)) {
                    this.f9044_pcget_OperationsRowChanged(this, new f9044_pcget_OperationsRowChangeEvent(((f9044_pcget_OperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f9044_pcget_OperationsRowChanging != null)) {
                    this.f9044_pcget_OperationsRowChanging(this, new f9044_pcget_OperationsRowChangeEvent(((f9044_pcget_OperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f9044_pcget_OperationsRowDeleted != null)) {
                    this.f9044_pcget_OperationsRowDeleted(this, new f9044_pcget_OperationsRowChangeEvent(((f9044_pcget_OperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f9044_pcget_OperationsRowDeleting != null)) {
                    this.f9044_pcget_OperationsRowDeleting(this, new f9044_pcget_OperationsRowChangeEvent(((f9044_pcget_OperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef9044_pcget_OperationsRow(f9044_pcget_OperationsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9044SnapshotOperations ds = new F9044SnapshotOperations();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f9044_pcget_OperationsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f9044_pcget_SnapshotOperationCountRow : global::System.Data.DataRow {
            
            private f9044_pcget_SnapshotOperationCountDataTable tablef9044_pcget_SnapshotOperationCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f9044_pcget_SnapshotOperationCountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef9044_pcget_SnapshotOperationCount = ((f9044_pcget_SnapshotOperationCountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RecordsInCommon {
                get {
                    try {
                        return ((int)(this[this.tablef9044_pcget_SnapshotOperationCount.RecordsInCommonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordsInCommon\' in table \'f9044_pcget_SnapshotOperationCou" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9044_pcget_SnapshotOperationCount.RecordsInCommonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RecordsInNewSnapshot {
                get {
                    try {
                        return ((int)(this[this.tablef9044_pcget_SnapshotOperationCount.RecordsInNewSnapshotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordsInNewSnapshot\' in table \'f9044_pcget_SnapshotOperati" +
                                "onCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9044_pcget_SnapshotOperationCount.RecordsInNewSnapshotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordsInCommonNull() {
                return this.IsNull(this.tablef9044_pcget_SnapshotOperationCount.RecordsInCommonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordsInCommonNull() {
                this[this.tablef9044_pcget_SnapshotOperationCount.RecordsInCommonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordsInNewSnapshotNull() {
                return this.IsNull(this.tablef9044_pcget_SnapshotOperationCount.RecordsInNewSnapshotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordsInNewSnapshotNull() {
                this[this.tablef9044_pcget_SnapshotOperationCount.RecordsInNewSnapshotColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f9044_pcget_SnapshotOperationsRow : global::System.Data.DataRow {
            
            private f9044_pcget_SnapshotOperationsDataTable tablef9044_pcget_SnapshotOperations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f9044_pcget_SnapshotOperationsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef9044_pcget_SnapshotOperations = ((f9044_pcget_SnapshotOperationsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SnapshotID {
                get {
                    return ((int)(this[this.tablef9044_pcget_SnapshotOperations.SnapshotIDColumn]));
                }
                set {
                    this[this.tablef9044_pcget_SnapshotOperations.SnapshotIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SnapshotName {
                get {
                    return ((string)(this[this.tablef9044_pcget_SnapshotOperations.SnapshotNameColumn]));
                }
                set {
                    this[this.tablef9044_pcget_SnapshotOperations.SnapshotNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SnapshotNote {
                get {
                    try {
                        return ((string)(this[this.tablef9044_pcget_SnapshotOperations.SnapshotNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SnapshotNote\' in table \'f9044_pcget_SnapshotOperations\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9044_pcget_SnapshotOperations.SnapshotNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tablef9044_pcget_SnapshotOperations.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'f9044_pcget_SnapshotOperations\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef9044_pcget_SnapshotOperations.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RecordCount {
                get {
                    try {
                        return ((int)(this[this.tablef9044_pcget_SnapshotOperations.RecordCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordCount\' in table \'f9044_pcget_SnapshotOperations\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef9044_pcget_SnapshotOperations.RecordCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSnapshotNoteNull() {
                return this.IsNull(this.tablef9044_pcget_SnapshotOperations.SnapshotNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSnapshotNoteNull() {
                this[this.tablef9044_pcget_SnapshotOperations.SnapshotNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tablef9044_pcget_SnapshotOperations.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tablef9044_pcget_SnapshotOperations.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordCountNull() {
                return this.IsNull(this.tablef9044_pcget_SnapshotOperations.RecordCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordCountNull() {
                this[this.tablef9044_pcget_SnapshotOperations.RecordCountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f9044_pcget_OperationsRow : global::System.Data.DataRow {
            
            private f9044_pcget_OperationsDataTable tablef9044_pcget_Operations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f9044_pcget_OperationsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef9044_pcget_Operations = ((f9044_pcget_OperationsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OperationID {
                get {
                    try {
                        return ((int)(this[this.tablef9044_pcget_Operations.OperationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OperationID\' in table \'f9044_pcget_Operations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9044_pcget_Operations.OperationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Operation {
                get {
                    try {
                        return ((string)(this[this.tablef9044_pcget_Operations.OperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operation\' in table \'f9044_pcget_Operations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9044_pcget_Operations.OperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OperationDescription {
                get {
                    try {
                        return ((string)(this[this.tablef9044_pcget_Operations.OperationDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OperationDescription\' in table \'f9044_pcget_Operations\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9044_pcget_Operations.OperationDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationIDNull() {
                return this.IsNull(this.tablef9044_pcget_Operations.OperationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationIDNull() {
                this[this.tablef9044_pcget_Operations.OperationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationNull() {
                return this.IsNull(this.tablef9044_pcget_Operations.OperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationNull() {
                this[this.tablef9044_pcget_Operations.OperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationDescriptionNull() {
                return this.IsNull(this.tablef9044_pcget_Operations.OperationDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationDescriptionNull() {
                this[this.tablef9044_pcget_Operations.OperationDescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f9044_pcget_SnapshotOperationCountRowChangeEvent : global::System.EventArgs {
            
            private f9044_pcget_SnapshotOperationCountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationCountRowChangeEvent(f9044_pcget_SnapshotOperationCountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationCountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f9044_pcget_SnapshotOperationsRowChangeEvent : global::System.EventArgs {
            
            private f9044_pcget_SnapshotOperationsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationsRowChangeEvent(f9044_pcget_SnapshotOperationsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_SnapshotOperationsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f9044_pcget_OperationsRowChangeEvent : global::System.EventArgs {
            
            private f9044_pcget_OperationsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_OperationsRowChangeEvent(f9044_pcget_OperationsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9044_pcget_OperationsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591