//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F15004AgencyManagementData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F15004AgencyManagementData : global::System.Data.DataSet {
        
        private GetAgencyDetailDataTable tableGetAgencyDetail;
        
        private ListDisbursementHistoryDataTable tableListDisbursementHistory;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F15004AgencyManagementData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F15004AgencyManagementData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GetAgencyDetail"] != null)) {
                    base.Tables.Add(new GetAgencyDetailDataTable(ds.Tables["GetAgencyDetail"]));
                }
                if ((ds.Tables["ListDisbursementHistory"] != null)) {
                    base.Tables.Add(new ListDisbursementHistoryDataTable(ds.Tables["ListDisbursementHistory"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetAgencyDetailDataTable GetAgencyDetail {
            get {
                return this.tableGetAgencyDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListDisbursementHistoryDataTable ListDisbursementHistory {
            get {
                return this.tableListDisbursementHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F15004AgencyManagementData cln = ((F15004AgencyManagementData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GetAgencyDetail"] != null)) {
                    base.Tables.Add(new GetAgencyDetailDataTable(ds.Tables["GetAgencyDetail"]));
                }
                if ((ds.Tables["ListDisbursementHistory"] != null)) {
                    base.Tables.Add(new ListDisbursementHistoryDataTable(ds.Tables["ListDisbursementHistory"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGetAgencyDetail = ((GetAgencyDetailDataTable)(base.Tables["GetAgencyDetail"]));
            if ((initTable == true)) {
                if ((this.tableGetAgencyDetail != null)) {
                    this.tableGetAgencyDetail.InitVars();
                }
            }
            this.tableListDisbursementHistory = ((ListDisbursementHistoryDataTable)(base.Tables["ListDisbursementHistory"]));
            if ((initTable == true)) {
                if ((this.tableListDisbursementHistory != null)) {
                    this.tableListDisbursementHistory.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F15004AgencyManagementData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F15004AgencyManagementData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGetAgencyDetail = new GetAgencyDetailDataTable();
            base.Tables.Add(this.tableGetAgencyDetail);
            this.tableListDisbursementHistory = new ListDisbursementHistoryDataTable();
            base.Tables.Add(this.tableListDisbursementHistory);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetAgencyDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListDisbursementHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F15004AgencyManagementData ds = new F15004AgencyManagementData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GetAgencyDetailRowChangeEventHandler(object sender, GetAgencyDetailRowChangeEvent e);
        
        public delegate void ListDisbursementHistoryRowChangeEventHandler(object sender, ListDisbursementHistoryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetAgencyDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAgencyID;
            
            private global::System.Data.DataColumn columnAgencyName;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnC1First;
            
            private global::System.Data.DataColumn columnC1Last;
            
            private global::System.Data.DataColumn columnC1Email;
            
            private global::System.Data.DataColumn columnC1Phone;
            
            private global::System.Data.DataColumn columnC1Extension;
            
            private global::System.Data.DataColumn columnC2First;
            
            private global::System.Data.DataColumn columnC2Last;
            
            private global::System.Data.DataColumn columnC2Email;
            
            private global::System.Data.DataColumn columnC2Phone;
            
            private global::System.Data.DataColumn columnC2Extension;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnDisbursementBalance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetAgencyDetailDataTable() {
                this.TableName = "GetAgencyDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetAgencyDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetAgencyDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgencyIDColumn {
                get {
                    return this.columnAgencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgencyNameColumn {
                get {
                    return this.columnAgencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C1FirstColumn {
                get {
                    return this.columnC1First;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C1LastColumn {
                get {
                    return this.columnC1Last;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C1EmailColumn {
                get {
                    return this.columnC1Email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C1PhoneColumn {
                get {
                    return this.columnC1Phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C1ExtensionColumn {
                get {
                    return this.columnC1Extension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C2FirstColumn {
                get {
                    return this.columnC2First;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C2LastColumn {
                get {
                    return this.columnC2Last;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C2EmailColumn {
                get {
                    return this.columnC2Email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C2PhoneColumn {
                get {
                    return this.columnC2Phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C2ExtensionColumn {
                get {
                    return this.columnC2Extension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisbursementBalanceColumn {
                get {
                    return this.columnDisbursementBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetAgencyDetailRow this[int index] {
                get {
                    return ((GetAgencyDetailRow)(this.Rows[index]));
                }
            }
            
            public event GetAgencyDetailRowChangeEventHandler GetAgencyDetailRowChanging;
            
            public event GetAgencyDetailRowChangeEventHandler GetAgencyDetailRowChanged;
            
            public event GetAgencyDetailRowChangeEventHandler GetAgencyDetailRowDeleting;
            
            public event GetAgencyDetailRowChangeEventHandler GetAgencyDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetAgencyDetailRow(GetAgencyDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetAgencyDetailRow AddGetAgencyDetailRow(
                        int AgencyID, 
                        string AgencyName, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string State, 
                        string Zip, 
                        string C1First, 
                        string C1Last, 
                        string C1Email, 
                        string C1Phone, 
                        string C1Extension, 
                        string C2First, 
                        string C2Last, 
                        string C2Email, 
                        string C2Phone, 
                        string C2Extension, 
                        string Comment, 
                        decimal DisbursementBalance) {
                GetAgencyDetailRow rowGetAgencyDetailRow = ((GetAgencyDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AgencyID,
                        AgencyName,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        C1First,
                        C1Last,
                        C1Email,
                        C1Phone,
                        C1Extension,
                        C2First,
                        C2Last,
                        C2Email,
                        C2Phone,
                        C2Extension,
                        Comment,
                        DisbursementBalance};
                rowGetAgencyDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetAgencyDetailRow);
                return rowGetAgencyDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetAgencyDetailDataTable cln = ((GetAgencyDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetAgencyDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAgencyID = base.Columns["AgencyID"];
                this.columnAgencyName = base.Columns["AgencyName"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
                this.columnC1First = base.Columns["C1First"];
                this.columnC1Last = base.Columns["C1Last"];
                this.columnC1Email = base.Columns["C1Email"];
                this.columnC1Phone = base.Columns["C1Phone"];
                this.columnC1Extension = base.Columns["C1Extension"];
                this.columnC2First = base.Columns["C2First"];
                this.columnC2Last = base.Columns["C2Last"];
                this.columnC2Email = base.Columns["C2Email"];
                this.columnC2Phone = base.Columns["C2Phone"];
                this.columnC2Extension = base.Columns["C2Extension"];
                this.columnComment = base.Columns["Comment"];
                this.columnDisbursementBalance = base.Columns["DisbursementBalance"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAgencyID = new global::System.Data.DataColumn("AgencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgencyID);
                this.columnAgencyName = new global::System.Data.DataColumn("AgencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgencyName);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnC1First = new global::System.Data.DataColumn("C1First", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1First);
                this.columnC1Last = new global::System.Data.DataColumn("C1Last", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1Last);
                this.columnC1Email = new global::System.Data.DataColumn("C1Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1Email);
                this.columnC1Phone = new global::System.Data.DataColumn("C1Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1Phone);
                this.columnC1Extension = new global::System.Data.DataColumn("C1Extension", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1Extension);
                this.columnC2First = new global::System.Data.DataColumn("C2First", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2First);
                this.columnC2Last = new global::System.Data.DataColumn("C2Last", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2Last);
                this.columnC2Email = new global::System.Data.DataColumn("C2Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2Email);
                this.columnC2Phone = new global::System.Data.DataColumn("C2Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2Phone);
                this.columnC2Extension = new global::System.Data.DataColumn("C2Extension", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2Extension);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDisbursementBalance = new global::System.Data.DataColumn("DisbursementBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisbursementBalance);
                this.columnAgencyID.ReadOnly = true;
                this.columnAgencyName.MaxLength = 50;
                this.columnAddress1.MaxLength = 50;
                this.columnAddress2.MaxLength = 50;
                this.columnCity.MaxLength = 50;
                this.columnState.MaxLength = 50;
                this.columnZip.MaxLength = 50;
                this.columnC1First.MaxLength = 50;
                this.columnC1Last.MaxLength = 50;
                this.columnC1Email.MaxLength = 50;
                this.columnC1Phone.MaxLength = 50;
                this.columnC1Extension.MaxLength = 50;
                this.columnC2First.MaxLength = 50;
                this.columnC2Last.MaxLength = 50;
                this.columnC2Email.MaxLength = 50;
                this.columnC2Phone.MaxLength = 50;
                this.columnC2Extension.MaxLength = 50;
                this.columnComment.MaxLength = 100;
                this.columnDisbursementBalance.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetAgencyDetailRow NewGetAgencyDetailRow() {
                return ((GetAgencyDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetAgencyDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetAgencyDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetAgencyDetailRowChanged != null)) {
                    this.GetAgencyDetailRowChanged(this, new GetAgencyDetailRowChangeEvent(((GetAgencyDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetAgencyDetailRowChanging != null)) {
                    this.GetAgencyDetailRowChanging(this, new GetAgencyDetailRowChangeEvent(((GetAgencyDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetAgencyDetailRowDeleted != null)) {
                    this.GetAgencyDetailRowDeleted(this, new GetAgencyDetailRowChangeEvent(((GetAgencyDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetAgencyDetailRowDeleting != null)) {
                    this.GetAgencyDetailRowDeleting(this, new GetAgencyDetailRowChangeEvent(((GetAgencyDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetAgencyDetailRow(GetAgencyDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F15004AgencyManagementData ds = new F15004AgencyManagementData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetAgencyDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListDisbursementHistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEntryDate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnCLID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDisbursementHistoryDataTable() {
                this.TableName = "ListDisbursementHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListDisbursementHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListDisbursementHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLIDColumn {
                get {
                    return this.columnCLID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDisbursementHistoryRow this[int index] {
                get {
                    return ((ListDisbursementHistoryRow)(this.Rows[index]));
                }
            }
            
            public event ListDisbursementHistoryRowChangeEventHandler ListDisbursementHistoryRowChanging;
            
            public event ListDisbursementHistoryRowChangeEventHandler ListDisbursementHistoryRowChanged;
            
            public event ListDisbursementHistoryRowChangeEventHandler ListDisbursementHistoryRowDeleting;
            
            public event ListDisbursementHistoryRowChangeEventHandler ListDisbursementHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListDisbursementHistoryRow(ListDisbursementHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDisbursementHistoryRow AddListDisbursementHistoryRow(System.DateTime EntryDate, decimal Amount, int CLID) {
                ListDisbursementHistoryRow rowListDisbursementHistoryRow = ((ListDisbursementHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EntryDate,
                        Amount,
                        CLID};
                rowListDisbursementHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListDisbursementHistoryRow);
                return rowListDisbursementHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListDisbursementHistoryDataTable cln = ((ListDisbursementHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListDisbursementHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEntryDate = base.Columns["EntryDate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCLID = base.Columns["CLID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEntryDate = new global::System.Data.DataColumn("EntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCLID = new global::System.Data.DataColumn("CLID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDisbursementHistoryRow NewListDisbursementHistoryRow() {
                return ((ListDisbursementHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListDisbursementHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListDisbursementHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListDisbursementHistoryRowChanged != null)) {
                    this.ListDisbursementHistoryRowChanged(this, new ListDisbursementHistoryRowChangeEvent(((ListDisbursementHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListDisbursementHistoryRowChanging != null)) {
                    this.ListDisbursementHistoryRowChanging(this, new ListDisbursementHistoryRowChangeEvent(((ListDisbursementHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListDisbursementHistoryRowDeleted != null)) {
                    this.ListDisbursementHistoryRowDeleted(this, new ListDisbursementHistoryRowChangeEvent(((ListDisbursementHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListDisbursementHistoryRowDeleting != null)) {
                    this.ListDisbursementHistoryRowDeleting(this, new ListDisbursementHistoryRowChangeEvent(((ListDisbursementHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListDisbursementHistoryRow(ListDisbursementHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F15004AgencyManagementData ds = new F15004AgencyManagementData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListDisbursementHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetAgencyDetailRow : global::System.Data.DataRow {
            
            private GetAgencyDetailDataTable tableGetAgencyDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetAgencyDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetAgencyDetail = ((GetAgencyDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AgencyID {
                get {
                    try {
                        return ((int)(this[this.tableGetAgencyDetail.AgencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgencyID\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.AgencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgencyName {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.AgencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgencyName\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.AgencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.ZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zip\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C1First {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.C1FirstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1First\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.C1FirstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C1Last {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.C1LastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1Last\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.C1LastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C1Email {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.C1EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1Email\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.C1EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C1Phone {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.C1PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1Phone\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.C1PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C1Extension {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.C1ExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1Extension\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.C1ExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C2First {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.C2FirstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2First\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.C2FirstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C2Last {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.C2LastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2Last\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.C2LastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C2Email {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.C2EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2Email\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.C2EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C2Phone {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.C2PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2Phone\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.C2PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C2Extension {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.C2ExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2Extension\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.C2ExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGetAgencyDetail.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DisbursementBalance {
                get {
                    try {
                        return ((decimal)(this[this.tableGetAgencyDetail.DisbursementBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisbursementBalance\' in table \'GetAgencyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAgencyDetail.DisbursementBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgencyIDNull() {
                return this.IsNull(this.tableGetAgencyDetail.AgencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgencyIDNull() {
                this[this.tableGetAgencyDetail.AgencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgencyNameNull() {
                return this.IsNull(this.tableGetAgencyDetail.AgencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgencyNameNull() {
                this[this.tableGetAgencyDetail.AgencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableGetAgencyDetail.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableGetAgencyDetail.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableGetAgencyDetail.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableGetAgencyDetail.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableGetAgencyDetail.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableGetAgencyDetail.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableGetAgencyDetail.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableGetAgencyDetail.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipNull() {
                return this.IsNull(this.tableGetAgencyDetail.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipNull() {
                this[this.tableGetAgencyDetail.ZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC1FirstNull() {
                return this.IsNull(this.tableGetAgencyDetail.C1FirstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC1FirstNull() {
                this[this.tableGetAgencyDetail.C1FirstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC1LastNull() {
                return this.IsNull(this.tableGetAgencyDetail.C1LastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC1LastNull() {
                this[this.tableGetAgencyDetail.C1LastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC1EmailNull() {
                return this.IsNull(this.tableGetAgencyDetail.C1EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC1EmailNull() {
                this[this.tableGetAgencyDetail.C1EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC1PhoneNull() {
                return this.IsNull(this.tableGetAgencyDetail.C1PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC1PhoneNull() {
                this[this.tableGetAgencyDetail.C1PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC1ExtensionNull() {
                return this.IsNull(this.tableGetAgencyDetail.C1ExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC1ExtensionNull() {
                this[this.tableGetAgencyDetail.C1ExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC2FirstNull() {
                return this.IsNull(this.tableGetAgencyDetail.C2FirstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC2FirstNull() {
                this[this.tableGetAgencyDetail.C2FirstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC2LastNull() {
                return this.IsNull(this.tableGetAgencyDetail.C2LastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC2LastNull() {
                this[this.tableGetAgencyDetail.C2LastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC2EmailNull() {
                return this.IsNull(this.tableGetAgencyDetail.C2EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC2EmailNull() {
                this[this.tableGetAgencyDetail.C2EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC2PhoneNull() {
                return this.IsNull(this.tableGetAgencyDetail.C2PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC2PhoneNull() {
                this[this.tableGetAgencyDetail.C2PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC2ExtensionNull() {
                return this.IsNull(this.tableGetAgencyDetail.C2ExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC2ExtensionNull() {
                this[this.tableGetAgencyDetail.C2ExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableGetAgencyDetail.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableGetAgencyDetail.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisbursementBalanceNull() {
                return this.IsNull(this.tableGetAgencyDetail.DisbursementBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisbursementBalanceNull() {
                this[this.tableGetAgencyDetail.DisbursementBalanceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListDisbursementHistoryRow : global::System.Data.DataRow {
            
            private ListDisbursementHistoryDataTable tableListDisbursementHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListDisbursementHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListDisbursementHistory = ((ListDisbursementHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EntryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableListDisbursementHistory.EntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryDate\' in table \'ListDisbursementHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDisbursementHistory.EntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableListDisbursementHistory.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'ListDisbursementHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDisbursementHistory.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CLID {
                get {
                    try {
                        return ((int)(this[this.tableListDisbursementHistory.CLIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CLID\' in table \'ListDisbursementHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDisbursementHistory.CLIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryDateNull() {
                return this.IsNull(this.tableListDisbursementHistory.EntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryDateNull() {
                this[this.tableListDisbursementHistory.EntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableListDisbursementHistory.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableListDisbursementHistory.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLIDNull() {
                return this.IsNull(this.tableListDisbursementHistory.CLIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLIDNull() {
                this[this.tableListDisbursementHistory.CLIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetAgencyDetailRowChangeEvent : global::System.EventArgs {
            
            private GetAgencyDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetAgencyDetailRowChangeEvent(GetAgencyDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetAgencyDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListDisbursementHistoryRowChangeEvent : global::System.EventArgs {
            
            private ListDisbursementHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDisbursementHistoryRowChangeEvent(ListDisbursementHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDisbursementHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591