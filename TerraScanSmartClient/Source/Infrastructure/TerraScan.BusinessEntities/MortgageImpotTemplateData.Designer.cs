//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4984
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MortgageImpotTemplateData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MortgageImpotTemplateData : global::System.Data.DataSet {
        
        private ListMortgageImportTemplateDataTable tableListMortgageImportTemplate;
        
        private GetMortgageImportTemplateDataTable tableGetMortgageImportTemplate;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MortgageImpotTemplateData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MortgageImpotTemplateData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ListMortgageImportTemplate"] != null)) {
                    base.Tables.Add(new ListMortgageImportTemplateDataTable(ds.Tables["ListMortgageImportTemplate"]));
                }
                if ((ds.Tables["GetMortgageImportTemplate"] != null)) {
                    base.Tables.Add(new GetMortgageImportTemplateDataTable(ds.Tables["GetMortgageImportTemplate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListMortgageImportTemplateDataTable ListMortgageImportTemplate {
            get {
                return this.tableListMortgageImportTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetMortgageImportTemplateDataTable GetMortgageImportTemplate {
            get {
                return this.tableGetMortgageImportTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MortgageImpotTemplateData cln = ((MortgageImpotTemplateData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ListMortgageImportTemplate"] != null)) {
                    base.Tables.Add(new ListMortgageImportTemplateDataTable(ds.Tables["ListMortgageImportTemplate"]));
                }
                if ((ds.Tables["GetMortgageImportTemplate"] != null)) {
                    base.Tables.Add(new GetMortgageImportTemplateDataTable(ds.Tables["GetMortgageImportTemplate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableListMortgageImportTemplate = ((ListMortgageImportTemplateDataTable)(base.Tables["ListMortgageImportTemplate"]));
            if ((initTable == true)) {
                if ((this.tableListMortgageImportTemplate != null)) {
                    this.tableListMortgageImportTemplate.InitVars();
                }
            }
            this.tableGetMortgageImportTemplate = ((GetMortgageImportTemplateDataTable)(base.Tables["GetMortgageImportTemplate"]));
            if ((initTable == true)) {
                if ((this.tableGetMortgageImportTemplate != null)) {
                    this.tableGetMortgageImportTemplate.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MortgageImpotTemplateData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MortgageImpotTemplateData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableListMortgageImportTemplate = new ListMortgageImportTemplateDataTable();
            base.Tables.Add(this.tableListMortgageImportTemplate);
            this.tableGetMortgageImportTemplate = new GetMortgageImportTemplateDataTable();
            base.Tables.Add(this.tableGetMortgageImportTemplate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListMortgageImportTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetMortgageImportTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MortgageImpotTemplateData ds = new MortgageImpotTemplateData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ListMortgageImportTemplateRowChangeEventHandler(object sender, ListMortgageImportTemplateRowChangeEvent e);
        
        public delegate void GetMortgageImportTemplateRowChangeEventHandler(object sender, GetMortgageImportTemplateRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListMortgageImportTemplateDataTable : global::System.Data.TypedTableBase<ListMortgageImportTemplateRow> {
            
            private global::System.Data.DataColumn columnTemplateID;
            
            private global::System.Data.DataColumn columnTemplateName;
            
            private global::System.Data.DataColumn columnTypeName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMortgageImportTemplateDataTable() {
                this.TableName = "ListMortgageImportTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListMortgageImportTemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListMortgageImportTemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateIDColumn {
                get {
                    return this.columnTemplateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateNameColumn {
                get {
                    return this.columnTemplateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeNameColumn {
                get {
                    return this.columnTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMortgageImportTemplateRow this[int index] {
                get {
                    return ((ListMortgageImportTemplateRow)(this.Rows[index]));
                }
            }
            
            public event ListMortgageImportTemplateRowChangeEventHandler ListMortgageImportTemplateRowChanging;
            
            public event ListMortgageImportTemplateRowChangeEventHandler ListMortgageImportTemplateRowChanged;
            
            public event ListMortgageImportTemplateRowChangeEventHandler ListMortgageImportTemplateRowDeleting;
            
            public event ListMortgageImportTemplateRowChangeEventHandler ListMortgageImportTemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListMortgageImportTemplateRow(ListMortgageImportTemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMortgageImportTemplateRow AddListMortgageImportTemplateRow(int TemplateID, string TemplateName, string TypeName) {
                ListMortgageImportTemplateRow rowListMortgageImportTemplateRow = ((ListMortgageImportTemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TemplateID,
                        TemplateName,
                        TypeName};
                rowListMortgageImportTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListMortgageImportTemplateRow);
                return rowListMortgageImportTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListMortgageImportTemplateDataTable cln = ((ListMortgageImportTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListMortgageImportTemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTemplateID = base.Columns["TemplateID"];
                this.columnTemplateName = base.Columns["TemplateName"];
                this.columnTypeName = base.Columns["TypeName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTemplateID = new global::System.Data.DataColumn("TemplateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplateID);
                this.columnTemplateName = new global::System.Data.DataColumn("TemplateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplateName);
                this.columnTypeName = new global::System.Data.DataColumn("TypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeName);
                this.columnTemplateID.AllowDBNull = false;
                this.columnTemplateName.AllowDBNull = false;
                this.columnTemplateName.MaxLength = 50;
                this.columnTypeName.AllowDBNull = false;
                this.columnTypeName.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMortgageImportTemplateRow NewListMortgageImportTemplateRow() {
                return ((ListMortgageImportTemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListMortgageImportTemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListMortgageImportTemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListMortgageImportTemplateRowChanged != null)) {
                    this.ListMortgageImportTemplateRowChanged(this, new ListMortgageImportTemplateRowChangeEvent(((ListMortgageImportTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListMortgageImportTemplateRowChanging != null)) {
                    this.ListMortgageImportTemplateRowChanging(this, new ListMortgageImportTemplateRowChangeEvent(((ListMortgageImportTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListMortgageImportTemplateRowDeleted != null)) {
                    this.ListMortgageImportTemplateRowDeleted(this, new ListMortgageImportTemplateRowChangeEvent(((ListMortgageImportTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListMortgageImportTemplateRowDeleting != null)) {
                    this.ListMortgageImportTemplateRowDeleting(this, new ListMortgageImportTemplateRowChangeEvent(((ListMortgageImportTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListMortgageImportTemplateRow(ListMortgageImportTemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MortgageImpotTemplateData ds = new MortgageImpotTemplateData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListMortgageImportTemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetMortgageImportTemplateDataTable : global::System.Data.TypedTableBase<GetMortgageImportTemplateRow> {
            
            private global::System.Data.DataColumn columnTemplateID;
            
            private global::System.Data.DataColumn columnTemplateName;
            
            private global::System.Data.DataColumn columnTypeID;
            
            private global::System.Data.DataColumn columnTypeName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnFilePath;
            
            private global::System.Data.DataColumn columnStatementID_Pos;
            
            private global::System.Data.DataColumn columnStatementID_Wid;
            
            private global::System.Data.DataColumn columnStatementNum_Pos;
            
            private global::System.Data.DataColumn columnStatementNum_Wid;
            
            private global::System.Data.DataColumn columnAmount_Pos;
            
            private global::System.Data.DataColumn columnAmount_wid;
            
            private global::System.Data.DataColumn columnComment_Pos;
            
            private global::System.Data.DataColumn columnComment_Wid;
            
            private global::System.Data.DataColumn columnBankCode_pos;
            
            private global::System.Data.DataColumn columnBankCode_Wid;
            
            private global::System.Data.DataColumn columnLoanNum_Pos;
            
            private global::System.Data.DataColumn columnLoanNum_Wid;
            
            private global::System.Data.DataColumn columnTaxPayName_Pos;
            
            private global::System.Data.DataColumn columnTaxPayName_Wid;
            
            private global::System.Data.DataColumn columnParcelNumber_Pos;
            
            private global::System.Data.DataColumn columnParcelNumber_Wid;
            
            private global::System.Data.DataColumn columnPostType_Pos;
            
            private global::System.Data.DataColumn columnPostType_Wid;
            
            private global::System.Data.DataColumn columnOwnerID_Pos;
            
            private global::System.Data.DataColumn columnOwnerID_Wid;
            
            private global::System.Data.DataColumn columnCartID_Pos;
            
            private global::System.Data.DataColumn columnCartID_Wid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMortgageImportTemplateDataTable() {
                this.TableName = "GetMortgageImportTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetMortgageImportTemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetMortgageImportTemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateIDColumn {
                get {
                    return this.columnTemplateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateNameColumn {
                get {
                    return this.columnTemplateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeIDColumn {
                get {
                    return this.columnTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeNameColumn {
                get {
                    return this.columnTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilePathColumn {
                get {
                    return this.columnFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatementID_PosColumn {
                get {
                    return this.columnStatementID_Pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatementID_WidColumn {
                get {
                    return this.columnStatementID_Wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatementNum_PosColumn {
                get {
                    return this.columnStatementNum_Pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatementNum_WidColumn {
                get {
                    return this.columnStatementNum_Wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Amount_PosColumn {
                get {
                    return this.columnAmount_Pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Amount_widColumn {
                get {
                    return this.columnAmount_wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comment_PosColumn {
                get {
                    return this.columnComment_Pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comment_WidColumn {
                get {
                    return this.columnComment_Wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankCode_posColumn {
                get {
                    return this.columnBankCode_pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankCode_WidColumn {
                get {
                    return this.columnBankCode_Wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoanNum_PosColumn {
                get {
                    return this.columnLoanNum_Pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoanNum_WidColumn {
                get {
                    return this.columnLoanNum_Wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxPayName_PosColumn {
                get {
                    return this.columnTaxPayName_Pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxPayName_WidColumn {
                get {
                    return this.columnTaxPayName_Wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumber_PosColumn {
                get {
                    return this.columnParcelNumber_Pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumber_WidColumn {
                get {
                    return this.columnParcelNumber_Wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostType_PosColumn {
                get {
                    return this.columnPostType_Pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostType_WidColumn {
                get {
                    return this.columnPostType_Wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerID_PosColumn {
                get {
                    return this.columnOwnerID_Pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerID_WidColumn {
                get {
                    return this.columnOwnerID_Wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartID_PosColumn {
                get {
                    return this.columnCartID_Pos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartID_WidColumn {
                get {
                    return this.columnCartID_Wid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMortgageImportTemplateRow this[int index] {
                get {
                    return ((GetMortgageImportTemplateRow)(this.Rows[index]));
                }
            }
            
            public event GetMortgageImportTemplateRowChangeEventHandler GetMortgageImportTemplateRowChanging;
            
            public event GetMortgageImportTemplateRowChangeEventHandler GetMortgageImportTemplateRowChanged;
            
            public event GetMortgageImportTemplateRowChangeEventHandler GetMortgageImportTemplateRowDeleting;
            
            public event GetMortgageImportTemplateRowChangeEventHandler GetMortgageImportTemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetMortgageImportTemplateRow(GetMortgageImportTemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMortgageImportTemplateRow AddGetMortgageImportTemplateRow(
                        string TemplateName, 
                        byte TypeID, 
                        string TypeName, 
                        string Description, 
                        string FilePath, 
                        short StatementID_Pos, 
                        short StatementID_Wid, 
                        short StatementNum_Pos, 
                        short StatementNum_Wid, 
                        short Amount_Pos, 
                        short Amount_wid, 
                        short Comment_Pos, 
                        short Comment_Wid, 
                        short BankCode_pos, 
                        short BankCode_Wid, 
                        short LoanNum_Pos, 
                        short LoanNum_Wid, 
                        short TaxPayName_Pos, 
                        short TaxPayName_Wid, 
                        short ParcelNumber_Pos, 
                        short ParcelNumber_Wid, 
                        short PostType_Pos, 
                        short PostType_Wid, 
                        short OwnerID_Pos, 
                        short OwnerID_Wid, 
                        short CartID_Pos, 
                        short CartID_Wid) {
                GetMortgageImportTemplateRow rowGetMortgageImportTemplateRow = ((GetMortgageImportTemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TemplateName,
                        TypeID,
                        TypeName,
                        Description,
                        FilePath,
                        StatementID_Pos,
                        StatementID_Wid,
                        StatementNum_Pos,
                        StatementNum_Wid,
                        Amount_Pos,
                        Amount_wid,
                        Comment_Pos,
                        Comment_Wid,
                        BankCode_pos,
                        BankCode_Wid,
                        LoanNum_Pos,
                        LoanNum_Wid,
                        TaxPayName_Pos,
                        TaxPayName_Wid,
                        ParcelNumber_Pos,
                        ParcelNumber_Wid,
                        PostType_Pos,
                        PostType_Wid,
                        OwnerID_Pos,
                        OwnerID_Wid,
                        CartID_Pos,
                        CartID_Wid};
                rowGetMortgageImportTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetMortgageImportTemplateRow);
                return rowGetMortgageImportTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetMortgageImportTemplateDataTable cln = ((GetMortgageImportTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetMortgageImportTemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTemplateID = base.Columns["TemplateID"];
                this.columnTemplateName = base.Columns["TemplateName"];
                this.columnTypeID = base.Columns["TypeID"];
                this.columnTypeName = base.Columns["TypeName"];
                this.columnDescription = base.Columns["Description"];
                this.columnFilePath = base.Columns["FilePath"];
                this.columnStatementID_Pos = base.Columns["StatementID_Pos"];
                this.columnStatementID_Wid = base.Columns["StatementID_Wid"];
                this.columnStatementNum_Pos = base.Columns["StatementNum_Pos"];
                this.columnStatementNum_Wid = base.Columns["StatementNum_Wid"];
                this.columnAmount_Pos = base.Columns["Amount_Pos"];
                this.columnAmount_wid = base.Columns["Amount_wid"];
                this.columnComment_Pos = base.Columns["Comment_Pos"];
                this.columnComment_Wid = base.Columns["Comment_Wid"];
                this.columnBankCode_pos = base.Columns["BankCode_pos"];
                this.columnBankCode_Wid = base.Columns["BankCode_Wid"];
                this.columnLoanNum_Pos = base.Columns["LoanNum_Pos"];
                this.columnLoanNum_Wid = base.Columns["LoanNum_Wid"];
                this.columnTaxPayName_Pos = base.Columns["TaxPayName_Pos"];
                this.columnTaxPayName_Wid = base.Columns["TaxPayName_Wid"];
                this.columnParcelNumber_Pos = base.Columns["ParcelNumber_Pos"];
                this.columnParcelNumber_Wid = base.Columns["ParcelNumber_Wid"];
                this.columnPostType_Pos = base.Columns["PostType_Pos"];
                this.columnPostType_Wid = base.Columns["PostType_Wid"];
                this.columnOwnerID_Pos = base.Columns["OwnerID_Pos"];
                this.columnOwnerID_Wid = base.Columns["OwnerID_Wid"];
                this.columnCartID_Pos = base.Columns["CartID_Pos"];
                this.columnCartID_Wid = base.Columns["CartID_Wid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTemplateID = new global::System.Data.DataColumn("TemplateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplateID);
                this.columnTemplateName = new global::System.Data.DataColumn("TemplateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplateName);
                this.columnTypeID = new global::System.Data.DataColumn("TypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeID);
                this.columnTypeName = new global::System.Data.DataColumn("TypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnFilePath = new global::System.Data.DataColumn("FilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilePath);
                this.columnStatementID_Pos = new global::System.Data.DataColumn("StatementID_Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementID_Pos);
                this.columnStatementID_Wid = new global::System.Data.DataColumn("StatementID_Wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementID_Wid);
                this.columnStatementNum_Pos = new global::System.Data.DataColumn("StatementNum_Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementNum_Pos);
                this.columnStatementNum_Wid = new global::System.Data.DataColumn("StatementNum_Wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementNum_Wid);
                this.columnAmount_Pos = new global::System.Data.DataColumn("Amount_Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount_Pos);
                this.columnAmount_wid = new global::System.Data.DataColumn("Amount_wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount_wid);
                this.columnComment_Pos = new global::System.Data.DataColumn("Comment_Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment_Pos);
                this.columnComment_Wid = new global::System.Data.DataColumn("Comment_Wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment_Wid);
                this.columnBankCode_pos = new global::System.Data.DataColumn("BankCode_pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCode_pos);
                this.columnBankCode_Wid = new global::System.Data.DataColumn("BankCode_Wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCode_Wid);
                this.columnLoanNum_Pos = new global::System.Data.DataColumn("LoanNum_Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoanNum_Pos);
                this.columnLoanNum_Wid = new global::System.Data.DataColumn("LoanNum_Wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoanNum_Wid);
                this.columnTaxPayName_Pos = new global::System.Data.DataColumn("TaxPayName_Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxPayName_Pos);
                this.columnTaxPayName_Wid = new global::System.Data.DataColumn("TaxPayName_Wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxPayName_Wid);
                this.columnParcelNumber_Pos = new global::System.Data.DataColumn("ParcelNumber_Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber_Pos);
                this.columnParcelNumber_Wid = new global::System.Data.DataColumn("ParcelNumber_Wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber_Wid);
                this.columnPostType_Pos = new global::System.Data.DataColumn("PostType_Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostType_Pos);
                this.columnPostType_Wid = new global::System.Data.DataColumn("PostType_Wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostType_Wid);
                this.columnOwnerID_Pos = new global::System.Data.DataColumn("OwnerID_Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID_Pos);
                this.columnOwnerID_Wid = new global::System.Data.DataColumn("OwnerID_Wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID_Wid);
                this.columnCartID_Pos = new global::System.Data.DataColumn("CartID_Pos", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartID_Pos);
                this.columnCartID_Wid = new global::System.Data.DataColumn("CartID_Wid", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartID_Wid);
                this.columnTemplateID.AutoIncrement = true;
                this.columnTemplateID.AllowDBNull = false;
                this.columnTemplateID.ReadOnly = true;
                this.columnTemplateName.AllowDBNull = false;
                this.columnTemplateName.MaxLength = 50;
                this.columnTypeID.AllowDBNull = false;
                this.columnTypeName.AllowDBNull = false;
                this.columnTypeName.MaxLength = 50;
                this.columnDescription.MaxLength = 250;
                this.columnFilePath.AllowDBNull = false;
                this.columnFilePath.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMortgageImportTemplateRow NewGetMortgageImportTemplateRow() {
                return ((GetMortgageImportTemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetMortgageImportTemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetMortgageImportTemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetMortgageImportTemplateRowChanged != null)) {
                    this.GetMortgageImportTemplateRowChanged(this, new GetMortgageImportTemplateRowChangeEvent(((GetMortgageImportTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetMortgageImportTemplateRowChanging != null)) {
                    this.GetMortgageImportTemplateRowChanging(this, new GetMortgageImportTemplateRowChangeEvent(((GetMortgageImportTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetMortgageImportTemplateRowDeleted != null)) {
                    this.GetMortgageImportTemplateRowDeleted(this, new GetMortgageImportTemplateRowChangeEvent(((GetMortgageImportTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetMortgageImportTemplateRowDeleting != null)) {
                    this.GetMortgageImportTemplateRowDeleting(this, new GetMortgageImportTemplateRowChangeEvent(((GetMortgageImportTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetMortgageImportTemplateRow(GetMortgageImportTemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MortgageImpotTemplateData ds = new MortgageImpotTemplateData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetMortgageImportTemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListMortgageImportTemplateRow : global::System.Data.DataRow {
            
            private ListMortgageImportTemplateDataTable tableListMortgageImportTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListMortgageImportTemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListMortgageImportTemplate = ((ListMortgageImportTemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TemplateID {
                get {
                    return ((int)(this[this.tableListMortgageImportTemplate.TemplateIDColumn]));
                }
                set {
                    this[this.tableListMortgageImportTemplate.TemplateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TemplateName {
                get {
                    return ((string)(this[this.tableListMortgageImportTemplate.TemplateNameColumn]));
                }
                set {
                    this[this.tableListMortgageImportTemplate.TemplateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TypeName {
                get {
                    return ((string)(this[this.tableListMortgageImportTemplate.TypeNameColumn]));
                }
                set {
                    this[this.tableListMortgageImportTemplate.TypeNameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetMortgageImportTemplateRow : global::System.Data.DataRow {
            
            private GetMortgageImportTemplateDataTable tableGetMortgageImportTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetMortgageImportTemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetMortgageImportTemplate = ((GetMortgageImportTemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TemplateID {
                get {
                    return ((int)(this[this.tableGetMortgageImportTemplate.TemplateIDColumn]));
                }
                set {
                    this[this.tableGetMortgageImportTemplate.TemplateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TemplateName {
                get {
                    return ((string)(this[this.tableGetMortgageImportTemplate.TemplateNameColumn]));
                }
                set {
                    this[this.tableGetMortgageImportTemplate.TemplateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte TypeID {
                get {
                    return ((byte)(this[this.tableGetMortgageImportTemplate.TypeIDColumn]));
                }
                set {
                    this[this.tableGetMortgageImportTemplate.TypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TypeName {
                get {
                    return ((string)(this[this.tableGetMortgageImportTemplate.TypeNameColumn]));
                }
                set {
                    this[this.tableGetMortgageImportTemplate.TypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGetMortgageImportTemplate.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'GetMortgageImportTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilePath {
                get {
                    return ((string)(this[this.tableGetMortgageImportTemplate.FilePathColumn]));
                }
                set {
                    this[this.tableGetMortgageImportTemplate.FilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short StatementID_Pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.StatementID_PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatementID_Pos\' in table \'GetMortgageImportTemplate\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.StatementID_PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short StatementID_Wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.StatementID_WidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatementID_Wid\' in table \'GetMortgageImportTemplate\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.StatementID_WidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short StatementNum_Pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.StatementNum_PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatementNum_Pos\' in table \'GetMortgageImportTemplate\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.StatementNum_PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short StatementNum_Wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.StatementNum_WidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatementNum_Wid\' in table \'GetMortgageImportTemplate\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.StatementNum_WidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Amount_Pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.Amount_PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount_Pos\' in table \'GetMortgageImportTemplate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.Amount_PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Amount_wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.Amount_widColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount_wid\' in table \'GetMortgageImportTemplate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.Amount_widColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Comment_Pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.Comment_PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment_Pos\' in table \'GetMortgageImportTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.Comment_PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Comment_Wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.Comment_WidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment_Wid\' in table \'GetMortgageImportTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.Comment_WidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short BankCode_pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.BankCode_posColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCode_pos\' in table \'GetMortgageImportTemplate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.BankCode_posColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short BankCode_Wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.BankCode_WidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCode_Wid\' in table \'GetMortgageImportTemplate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.BankCode_WidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short LoanNum_Pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.LoanNum_PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoanNum_Pos\' in table \'GetMortgageImportTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.LoanNum_PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short LoanNum_Wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.LoanNum_WidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoanNum_Wid\' in table \'GetMortgageImportTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.LoanNum_WidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short TaxPayName_Pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.TaxPayName_PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxPayName_Pos\' in table \'GetMortgageImportTemplate\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.TaxPayName_PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short TaxPayName_Wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.TaxPayName_WidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxPayName_Wid\' in table \'GetMortgageImportTemplate\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.TaxPayName_WidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ParcelNumber_Pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.ParcelNumber_PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber_Pos\' in table \'GetMortgageImportTemplate\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.ParcelNumber_PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ParcelNumber_Wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.ParcelNumber_WidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber_Wid\' in table \'GetMortgageImportTemplate\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.ParcelNumber_WidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PostType_Pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.PostType_PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostType_Pos\' in table \'GetMortgageImportTemplate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.PostType_PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PostType_Wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.PostType_WidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostType_Wid\' in table \'GetMortgageImportTemplate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.PostType_WidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short OwnerID_Pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.OwnerID_PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID_Pos\' in table \'GetMortgageImportTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.OwnerID_PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short OwnerID_Wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.OwnerID_WidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID_Wid\' in table \'GetMortgageImportTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.OwnerID_WidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CartID_Pos {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.CartID_PosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartID_Pos\' in table \'GetMortgageImportTemplate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.CartID_PosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CartID_Wid {
                get {
                    try {
                        return ((short)(this[this.tableGetMortgageImportTemplate.CartID_WidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartID_Wid\' in table \'GetMortgageImportTemplate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetMortgageImportTemplate.CartID_WidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableGetMortgageImportTemplate.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementID_PosNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.StatementID_PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementID_PosNull() {
                this[this.tableGetMortgageImportTemplate.StatementID_PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementID_WidNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.StatementID_WidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementID_WidNull() {
                this[this.tableGetMortgageImportTemplate.StatementID_WidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementNum_PosNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.StatementNum_PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementNum_PosNull() {
                this[this.tableGetMortgageImportTemplate.StatementNum_PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementNum_WidNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.StatementNum_WidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementNum_WidNull() {
                this[this.tableGetMortgageImportTemplate.StatementNum_WidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmount_PosNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.Amount_PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmount_PosNull() {
                this[this.tableGetMortgageImportTemplate.Amount_PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmount_widNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.Amount_widColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmount_widNull() {
                this[this.tableGetMortgageImportTemplate.Amount_widColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComment_PosNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.Comment_PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComment_PosNull() {
                this[this.tableGetMortgageImportTemplate.Comment_PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComment_WidNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.Comment_WidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComment_WidNull() {
                this[this.tableGetMortgageImportTemplate.Comment_WidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankCode_posNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.BankCode_posColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankCode_posNull() {
                this[this.tableGetMortgageImportTemplate.BankCode_posColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankCode_WidNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.BankCode_WidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankCode_WidNull() {
                this[this.tableGetMortgageImportTemplate.BankCode_WidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoanNum_PosNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.LoanNum_PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoanNum_PosNull() {
                this[this.tableGetMortgageImportTemplate.LoanNum_PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoanNum_WidNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.LoanNum_WidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoanNum_WidNull() {
                this[this.tableGetMortgageImportTemplate.LoanNum_WidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxPayName_PosNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.TaxPayName_PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxPayName_PosNull() {
                this[this.tableGetMortgageImportTemplate.TaxPayName_PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxPayName_WidNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.TaxPayName_WidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxPayName_WidNull() {
                this[this.tableGetMortgageImportTemplate.TaxPayName_WidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumber_PosNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.ParcelNumber_PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumber_PosNull() {
                this[this.tableGetMortgageImportTemplate.ParcelNumber_PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumber_WidNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.ParcelNumber_WidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumber_WidNull() {
                this[this.tableGetMortgageImportTemplate.ParcelNumber_WidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostType_PosNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.PostType_PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostType_PosNull() {
                this[this.tableGetMortgageImportTemplate.PostType_PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostType_WidNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.PostType_WidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostType_WidNull() {
                this[this.tableGetMortgageImportTemplate.PostType_WidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerID_PosNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.OwnerID_PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerID_PosNull() {
                this[this.tableGetMortgageImportTemplate.OwnerID_PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerID_WidNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.OwnerID_WidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerID_WidNull() {
                this[this.tableGetMortgageImportTemplate.OwnerID_WidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartID_PosNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.CartID_PosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartID_PosNull() {
                this[this.tableGetMortgageImportTemplate.CartID_PosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartID_WidNull() {
                return this.IsNull(this.tableGetMortgageImportTemplate.CartID_WidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartID_WidNull() {
                this[this.tableGetMortgageImportTemplate.CartID_WidColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListMortgageImportTemplateRowChangeEvent : global::System.EventArgs {
            
            private ListMortgageImportTemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMortgageImportTemplateRowChangeEvent(ListMortgageImportTemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMortgageImportTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetMortgageImportTemplateRowChangeEvent : global::System.EventArgs {
            
            private GetMortgageImportTemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMortgageImportTemplateRowChangeEvent(GetMortgageImportTemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMortgageImportTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591