//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("F35100NeighborhoodHeaderData")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F35100NeighborhoodHeaderData : System.Data.DataSet {
        
        private f35100GetUserDetailsDataTableDataTable tablef35100GetUserDetailsDataTable;
        
        private f35100NeighborhoodGroupDataTableDataTable tablef35100NeighborhoodGroupDataTable;
        
        private f35100pclstNeighborhoodDataTableDataTable tablef35100pclstNeighborhoodDataTable;
        
        private f35100NeighborhoodLocksDataTableDataTable tablef35100NeighborhoodLocksDataTable;
        
        private f35100GrpNeighborhoodDataTable tablef35100GrpNeighborhood;
        
        private saveNeighborhoodHeaderDetailsDataTable tablesaveNeighborhoodHeaderDetails;
        
        private f35100NeighborhoodHeaderDataTableDataTable tablef35100NeighborhoodHeaderDataTable;
        
        private CheckDuplicateNeighborhoodTableDataTable tableCheckDuplicateNeighborhoodTable;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F35100NeighborhoodHeaderData() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F35100NeighborhoodHeaderData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["f35100GetUserDetailsDataTable"] != null)) {
                    base.Tables.Add(new f35100GetUserDetailsDataTableDataTable(ds.Tables["f35100GetUserDetailsDataTable"]));
                }
                if ((ds.Tables["f35100NeighborhoodGroupDataTable"] != null)) {
                    base.Tables.Add(new f35100NeighborhoodGroupDataTableDataTable(ds.Tables["f35100NeighborhoodGroupDataTable"]));
                }
                if ((ds.Tables["f35100pclstNeighborhoodDataTable"] != null)) {
                    base.Tables.Add(new f35100pclstNeighborhoodDataTableDataTable(ds.Tables["f35100pclstNeighborhoodDataTable"]));
                }
                if ((ds.Tables["f35100NeighborhoodLocksDataTable"] != null)) {
                    base.Tables.Add(new f35100NeighborhoodLocksDataTableDataTable(ds.Tables["f35100NeighborhoodLocksDataTable"]));
                }
                if ((ds.Tables["f35100GrpNeighborhood"] != null)) {
                    base.Tables.Add(new f35100GrpNeighborhoodDataTable(ds.Tables["f35100GrpNeighborhood"]));
                }
                if ((ds.Tables["saveNeighborhoodHeaderDetails"] != null)) {
                    base.Tables.Add(new saveNeighborhoodHeaderDetailsDataTable(ds.Tables["saveNeighborhoodHeaderDetails"]));
                }
                if ((ds.Tables["f35100NeighborhoodHeaderDataTable"] != null)) {
                    base.Tables.Add(new f35100NeighborhoodHeaderDataTableDataTable(ds.Tables["f35100NeighborhoodHeaderDataTable"]));
                }
                if ((ds.Tables["CheckDuplicateNeighborhoodTable"] != null)) {
                    base.Tables.Add(new CheckDuplicateNeighborhoodTableDataTable(ds.Tables["CheckDuplicateNeighborhoodTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35100GetUserDetailsDataTableDataTable f35100GetUserDetailsDataTable {
            get {
                return this.tablef35100GetUserDetailsDataTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35100NeighborhoodGroupDataTableDataTable f35100NeighborhoodGroupDataTable {
            get {
                return this.tablef35100NeighborhoodGroupDataTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35100pclstNeighborhoodDataTableDataTable f35100pclstNeighborhoodDataTable {
            get {
                return this.tablef35100pclstNeighborhoodDataTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35100NeighborhoodLocksDataTableDataTable f35100NeighborhoodLocksDataTable {
            get {
                return this.tablef35100NeighborhoodLocksDataTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35100GrpNeighborhoodDataTable f35100GrpNeighborhood {
            get {
                return this.tablef35100GrpNeighborhood;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public saveNeighborhoodHeaderDetailsDataTable saveNeighborhoodHeaderDetails {
            get {
                return this.tablesaveNeighborhoodHeaderDetails;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35100NeighborhoodHeaderDataTableDataTable f35100NeighborhoodHeaderDataTable {
            get {
                return this.tablef35100NeighborhoodHeaderDataTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CheckDuplicateNeighborhoodTableDataTable CheckDuplicateNeighborhoodTable {
            get {
                return this.tableCheckDuplicateNeighborhoodTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            F35100NeighborhoodHeaderData cln = ((F35100NeighborhoodHeaderData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f35100GetUserDetailsDataTable"] != null)) {
                    base.Tables.Add(new f35100GetUserDetailsDataTableDataTable(ds.Tables["f35100GetUserDetailsDataTable"]));
                }
                if ((ds.Tables["f35100NeighborhoodGroupDataTable"] != null)) {
                    base.Tables.Add(new f35100NeighborhoodGroupDataTableDataTable(ds.Tables["f35100NeighborhoodGroupDataTable"]));
                }
                if ((ds.Tables["f35100pclstNeighborhoodDataTable"] != null)) {
                    base.Tables.Add(new f35100pclstNeighborhoodDataTableDataTable(ds.Tables["f35100pclstNeighborhoodDataTable"]));
                }
                if ((ds.Tables["f35100NeighborhoodLocksDataTable"] != null)) {
                    base.Tables.Add(new f35100NeighborhoodLocksDataTableDataTable(ds.Tables["f35100NeighborhoodLocksDataTable"]));
                }
                if ((ds.Tables["f35100GrpNeighborhood"] != null)) {
                    base.Tables.Add(new f35100GrpNeighborhoodDataTable(ds.Tables["f35100GrpNeighborhood"]));
                }
                if ((ds.Tables["saveNeighborhoodHeaderDetails"] != null)) {
                    base.Tables.Add(new saveNeighborhoodHeaderDetailsDataTable(ds.Tables["saveNeighborhoodHeaderDetails"]));
                }
                if ((ds.Tables["f35100NeighborhoodHeaderDataTable"] != null)) {
                    base.Tables.Add(new f35100NeighborhoodHeaderDataTableDataTable(ds.Tables["f35100NeighborhoodHeaderDataTable"]));
                }
                if ((ds.Tables["CheckDuplicateNeighborhoodTable"] != null)) {
                    base.Tables.Add(new CheckDuplicateNeighborhoodTableDataTable(ds.Tables["CheckDuplicateNeighborhoodTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef35100GetUserDetailsDataTable = ((f35100GetUserDetailsDataTableDataTable)(base.Tables["f35100GetUserDetailsDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef35100GetUserDetailsDataTable != null)) {
                    this.tablef35100GetUserDetailsDataTable.InitVars();
                }
            }
            this.tablef35100NeighborhoodGroupDataTable = ((f35100NeighborhoodGroupDataTableDataTable)(base.Tables["f35100NeighborhoodGroupDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef35100NeighborhoodGroupDataTable != null)) {
                    this.tablef35100NeighborhoodGroupDataTable.InitVars();
                }
            }
            this.tablef35100pclstNeighborhoodDataTable = ((f35100pclstNeighborhoodDataTableDataTable)(base.Tables["f35100pclstNeighborhoodDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef35100pclstNeighborhoodDataTable != null)) {
                    this.tablef35100pclstNeighborhoodDataTable.InitVars();
                }
            }
            this.tablef35100NeighborhoodLocksDataTable = ((f35100NeighborhoodLocksDataTableDataTable)(base.Tables["f35100NeighborhoodLocksDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef35100NeighborhoodLocksDataTable != null)) {
                    this.tablef35100NeighborhoodLocksDataTable.InitVars();
                }
            }
            this.tablef35100GrpNeighborhood = ((f35100GrpNeighborhoodDataTable)(base.Tables["f35100GrpNeighborhood"]));
            if ((initTable == true)) {
                if ((this.tablef35100GrpNeighborhood != null)) {
                    this.tablef35100GrpNeighborhood.InitVars();
                }
            }
            this.tablesaveNeighborhoodHeaderDetails = ((saveNeighborhoodHeaderDetailsDataTable)(base.Tables["saveNeighborhoodHeaderDetails"]));
            if ((initTable == true)) {
                if ((this.tablesaveNeighborhoodHeaderDetails != null)) {
                    this.tablesaveNeighborhoodHeaderDetails.InitVars();
                }
            }
            this.tablef35100NeighborhoodHeaderDataTable = ((f35100NeighborhoodHeaderDataTableDataTable)(base.Tables["f35100NeighborhoodHeaderDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef35100NeighborhoodHeaderDataTable != null)) {
                    this.tablef35100NeighborhoodHeaderDataTable.InitVars();
                }
            }
            this.tableCheckDuplicateNeighborhoodTable = ((CheckDuplicateNeighborhoodTableDataTable)(base.Tables["CheckDuplicateNeighborhoodTable"]));
            if ((initTable == true)) {
                if ((this.tableCheckDuplicateNeighborhoodTable != null)) {
                    this.tableCheckDuplicateNeighborhoodTable.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F35100NeighborhoodHeaderData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F35100NeighborhoodHeaderData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef35100GetUserDetailsDataTable = new f35100GetUserDetailsDataTableDataTable();
            base.Tables.Add(this.tablef35100GetUserDetailsDataTable);
            this.tablef35100NeighborhoodGroupDataTable = new f35100NeighborhoodGroupDataTableDataTable();
            base.Tables.Add(this.tablef35100NeighborhoodGroupDataTable);
            this.tablef35100pclstNeighborhoodDataTable = new f35100pclstNeighborhoodDataTableDataTable();
            base.Tables.Add(this.tablef35100pclstNeighborhoodDataTable);
            this.tablef35100NeighborhoodLocksDataTable = new f35100NeighborhoodLocksDataTableDataTable();
            base.Tables.Add(this.tablef35100NeighborhoodLocksDataTable);
            this.tablef35100GrpNeighborhood = new f35100GrpNeighborhoodDataTable();
            base.Tables.Add(this.tablef35100GrpNeighborhood);
            this.tablesaveNeighborhoodHeaderDetails = new saveNeighborhoodHeaderDetailsDataTable();
            base.Tables.Add(this.tablesaveNeighborhoodHeaderDetails);
            this.tablef35100NeighborhoodHeaderDataTable = new f35100NeighborhoodHeaderDataTableDataTable();
            base.Tables.Add(this.tablef35100NeighborhoodHeaderDataTable);
            this.tableCheckDuplicateNeighborhoodTable = new CheckDuplicateNeighborhoodTableDataTable();
            base.Tables.Add(this.tableCheckDuplicateNeighborhoodTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35100GetUserDetailsDataTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35100NeighborhoodGroupDataTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35100pclstNeighborhoodDataTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35100NeighborhoodLocksDataTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35100GrpNeighborhood() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesaveNeighborhoodHeaderDetails() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35100NeighborhoodHeaderDataTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCheckDuplicateNeighborhoodTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            F35100NeighborhoodHeaderData ds = new F35100NeighborhoodHeaderData();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void f35100GetUserDetailsDataTableRowChangeEventHandler(object sender, f35100GetUserDetailsDataTableRowChangeEvent e);
        
        public delegate void f35100NeighborhoodGroupDataTableRowChangeEventHandler(object sender, f35100NeighborhoodGroupDataTableRowChangeEvent e);
        
        public delegate void f35100pclstNeighborhoodDataTableRowChangeEventHandler(object sender, f35100pclstNeighborhoodDataTableRowChangeEvent e);
        
        public delegate void f35100NeighborhoodLocksDataTableRowChangeEventHandler(object sender, f35100NeighborhoodLocksDataTableRowChangeEvent e);
        
        public delegate void f35100GrpNeighborhoodRowChangeEventHandler(object sender, f35100GrpNeighborhoodRowChangeEvent e);
        
        public delegate void saveNeighborhoodHeaderDetailsRowChangeEventHandler(object sender, saveNeighborhoodHeaderDetailsRowChangeEvent e);
        
        public delegate void f35100NeighborhoodHeaderDataTableRowChangeEventHandler(object sender, f35100NeighborhoodHeaderDataTableRowChangeEvent e);
        
        public delegate void CheckDuplicateNeighborhoodTableRowChangeEventHandler(object sender, CheckDuplicateNeighborhoodTableRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35100GetUserDetailsDataTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnUserID;
            
            private System.Data.DataColumn columnUserName;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GetUserDetailsDataTableDataTable() {
                this.TableName = "f35100GetUserDetailsDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100GetUserDetailsDataTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35100GetUserDetailsDataTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GetUserDetailsDataTableRow this[int index] {
                get {
                    return ((f35100GetUserDetailsDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f35100GetUserDetailsDataTableRowChangeEventHandler f35100GetUserDetailsDataTableRowChanging;
            
            public event f35100GetUserDetailsDataTableRowChangeEventHandler f35100GetUserDetailsDataTableRowChanged;
            
            public event f35100GetUserDetailsDataTableRowChangeEventHandler f35100GetUserDetailsDataTableRowDeleting;
            
            public event f35100GetUserDetailsDataTableRowChangeEventHandler f35100GetUserDetailsDataTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35100GetUserDetailsDataTableRow(f35100GetUserDetailsDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GetUserDetailsDataTableRow Addf35100GetUserDetailsDataTableRow(string UserName) {
                f35100GetUserDetailsDataTableRow rowf35100GetUserDetailsDataTableRow = ((f35100GetUserDetailsDataTableRow)(this.NewRow()));
                rowf35100GetUserDetailsDataTableRow.ItemArray = new object[] {
                        null,
                        UserName};
                this.Rows.Add(rowf35100GetUserDetailsDataTableRow);
                return rowf35100GetUserDetailsDataTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GetUserDetailsDataTableRow FindByUserID(int UserID) {
                return ((f35100GetUserDetailsDataTableRow)(this.Rows.Find(new object[] {
                            UserID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                f35100GetUserDetailsDataTableDataTable cln = ((f35100GetUserDetailsDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new f35100GetUserDetailsDataTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserID = base.Columns["UserID"];
                this.columnUserName = base.Columns["UserName"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserID = new System.Data.DataColumn("UserID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserName = new System.Data.DataColumn("UserName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnUserID}, true));
                this.columnUserID.AutoIncrement = true;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.ReadOnly = true;
                this.columnUserID.Unique = true;
                this.columnUserName.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GetUserDetailsDataTableRow Newf35100GetUserDetailsDataTableRow() {
                return ((f35100GetUserDetailsDataTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new f35100GetUserDetailsDataTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(f35100GetUserDetailsDataTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35100GetUserDetailsDataTableRowChanged != null)) {
                    this.f35100GetUserDetailsDataTableRowChanged(this, new f35100GetUserDetailsDataTableRowChangeEvent(((f35100GetUserDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35100GetUserDetailsDataTableRowChanging != null)) {
                    this.f35100GetUserDetailsDataTableRowChanging(this, new f35100GetUserDetailsDataTableRowChangeEvent(((f35100GetUserDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35100GetUserDetailsDataTableRowDeleted != null)) {
                    this.f35100GetUserDetailsDataTableRowDeleted(this, new f35100GetUserDetailsDataTableRowChangeEvent(((f35100GetUserDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35100GetUserDetailsDataTableRowDeleting != null)) {
                    this.f35100GetUserDetailsDataTableRowDeleting(this, new f35100GetUserDetailsDataTableRowChangeEvent(((f35100GetUserDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35100GetUserDetailsDataTableRow(f35100GetUserDetailsDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                F35100NeighborhoodHeaderData ds = new F35100NeighborhoodHeaderData();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35100GetUserDetailsDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35100NeighborhoodGroupDataTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNBHDGroupID;
            
            private System.Data.DataColumn columnGroupName;
            
            private System.Data.DataColumn columnRollYear;
            
            private System.Data.DataColumn columnReviewedBy;
            
            private System.Data.DataColumn columnDescription;
            
            private System.Data.DataColumn columnMarketReview;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodGroupDataTableDataTable() {
                this.TableName = "f35100NeighborhoodGroupDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100NeighborhoodGroupDataTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35100NeighborhoodGroupDataTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NBHDGroupIDColumn {
                get {
                    return this.columnNBHDGroupID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GroupNameColumn {
                get {
                    return this.columnGroupName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReviewedByColumn {
                get {
                    return this.columnReviewedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MarketReviewColumn {
                get {
                    return this.columnMarketReview;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodGroupDataTableRow this[int index] {
                get {
                    return ((f35100NeighborhoodGroupDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f35100NeighborhoodGroupDataTableRowChangeEventHandler f35100NeighborhoodGroupDataTableRowChanging;
            
            public event f35100NeighborhoodGroupDataTableRowChangeEventHandler f35100NeighborhoodGroupDataTableRowChanged;
            
            public event f35100NeighborhoodGroupDataTableRowChangeEventHandler f35100NeighborhoodGroupDataTableRowDeleting;
            
            public event f35100NeighborhoodGroupDataTableRowChangeEventHandler f35100NeighborhoodGroupDataTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35100NeighborhoodGroupDataTableRow(f35100NeighborhoodGroupDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodGroupDataTableRow Addf35100NeighborhoodGroupDataTableRow(string GroupName, short RollYear, string Description, string MarketReview) {
                f35100NeighborhoodGroupDataTableRow rowf35100NeighborhoodGroupDataTableRow = ((f35100NeighborhoodGroupDataTableRow)(this.NewRow()));
                rowf35100NeighborhoodGroupDataTableRow.ItemArray = new object[] {
                        null,
                        GroupName,
                        RollYear,
                        null,
                        Description,
                        MarketReview};
                this.Rows.Add(rowf35100NeighborhoodGroupDataTableRow);
                return rowf35100NeighborhoodGroupDataTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                f35100NeighborhoodGroupDataTableDataTable cln = ((f35100NeighborhoodGroupDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new f35100NeighborhoodGroupDataTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNBHDGroupID = base.Columns["NBHDGroupID"];
                this.columnGroupName = base.Columns["GroupName"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnReviewedBy = base.Columns["ReviewedBy"];
                this.columnDescription = base.Columns["Description"];
                this.columnMarketReview = base.Columns["MarketReview"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNBHDGroupID = new System.Data.DataColumn("NBHDGroupID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDGroupID);
                this.columnGroupName = new System.Data.DataColumn("GroupName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupName);
                this.columnRollYear = new System.Data.DataColumn("RollYear", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnReviewedBy = new System.Data.DataColumn("ReviewedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewedBy);
                this.columnDescription = new System.Data.DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMarketReview = new System.Data.DataColumn("MarketReview", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketReview);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnNBHDGroupID,
                                this.columnReviewedBy}, false));
                this.columnNBHDGroupID.AutoIncrement = true;
                this.columnNBHDGroupID.AllowDBNull = false;
                this.columnNBHDGroupID.ReadOnly = true;
                this.columnGroupName.AllowDBNull = false;
                this.columnGroupName.MaxLength = 50;
                this.columnRollYear.AllowDBNull = false;
                this.columnReviewedBy.AutoIncrement = true;
                this.columnReviewedBy.ReadOnly = true;
                this.columnDescription.MaxLength = 2000;
                this.columnMarketReview.MaxLength = 2000;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodGroupDataTableRow Newf35100NeighborhoodGroupDataTableRow() {
                return ((f35100NeighborhoodGroupDataTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new f35100NeighborhoodGroupDataTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(f35100NeighborhoodGroupDataTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35100NeighborhoodGroupDataTableRowChanged != null)) {
                    this.f35100NeighborhoodGroupDataTableRowChanged(this, new f35100NeighborhoodGroupDataTableRowChangeEvent(((f35100NeighborhoodGroupDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35100NeighborhoodGroupDataTableRowChanging != null)) {
                    this.f35100NeighborhoodGroupDataTableRowChanging(this, new f35100NeighborhoodGroupDataTableRowChangeEvent(((f35100NeighborhoodGroupDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35100NeighborhoodGroupDataTableRowDeleted != null)) {
                    this.f35100NeighborhoodGroupDataTableRowDeleted(this, new f35100NeighborhoodGroupDataTableRowChangeEvent(((f35100NeighborhoodGroupDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35100NeighborhoodGroupDataTableRowDeleting != null)) {
                    this.f35100NeighborhoodGroupDataTableRowDeleting(this, new f35100NeighborhoodGroupDataTableRowChangeEvent(((f35100NeighborhoodGroupDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35100NeighborhoodGroupDataTableRow(f35100NeighborhoodGroupDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                F35100NeighborhoodHeaderData ds = new F35100NeighborhoodHeaderData();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35100NeighborhoodGroupDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35100pclstNeighborhoodDataTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNBHDID;
            
            private System.Data.DataColumn columnNeighborhood;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100pclstNeighborhoodDataTableDataTable() {
                this.TableName = "f35100pclstNeighborhoodDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100pclstNeighborhoodDataTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35100pclstNeighborhoodDataTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NeighborhoodColumn {
                get {
                    return this.columnNeighborhood;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100pclstNeighborhoodDataTableRow this[int index] {
                get {
                    return ((f35100pclstNeighborhoodDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f35100pclstNeighborhoodDataTableRowChangeEventHandler f35100pclstNeighborhoodDataTableRowChanging;
            
            public event f35100pclstNeighborhoodDataTableRowChangeEventHandler f35100pclstNeighborhoodDataTableRowChanged;
            
            public event f35100pclstNeighborhoodDataTableRowChangeEventHandler f35100pclstNeighborhoodDataTableRowDeleting;
            
            public event f35100pclstNeighborhoodDataTableRowChangeEventHandler f35100pclstNeighborhoodDataTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35100pclstNeighborhoodDataTableRow(f35100pclstNeighborhoodDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100pclstNeighborhoodDataTableRow Addf35100pclstNeighborhoodDataTableRow(string Neighborhood) {
                f35100pclstNeighborhoodDataTableRow rowf35100pclstNeighborhoodDataTableRow = ((f35100pclstNeighborhoodDataTableRow)(this.NewRow()));
                rowf35100pclstNeighborhoodDataTableRow.ItemArray = new object[] {
                        null,
                        Neighborhood};
                this.Rows.Add(rowf35100pclstNeighborhoodDataTableRow);
                return rowf35100pclstNeighborhoodDataTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                f35100pclstNeighborhoodDataTableDataTable cln = ((f35100pclstNeighborhoodDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new f35100pclstNeighborhoodDataTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnNeighborhood = base.Columns["Neighborhood"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNBHDID = new System.Data.DataColumn("NBHDID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnNeighborhood = new System.Data.DataColumn("Neighborhood", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhood);
                this.columnNBHDID.AutoIncrement = true;
                this.columnNBHDID.AllowDBNull = false;
                this.columnNBHDID.ReadOnly = true;
                this.columnNeighborhood.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100pclstNeighborhoodDataTableRow Newf35100pclstNeighborhoodDataTableRow() {
                return ((f35100pclstNeighborhoodDataTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new f35100pclstNeighborhoodDataTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(f35100pclstNeighborhoodDataTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35100pclstNeighborhoodDataTableRowChanged != null)) {
                    this.f35100pclstNeighborhoodDataTableRowChanged(this, new f35100pclstNeighborhoodDataTableRowChangeEvent(((f35100pclstNeighborhoodDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35100pclstNeighborhoodDataTableRowChanging != null)) {
                    this.f35100pclstNeighborhoodDataTableRowChanging(this, new f35100pclstNeighborhoodDataTableRowChangeEvent(((f35100pclstNeighborhoodDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35100pclstNeighborhoodDataTableRowDeleted != null)) {
                    this.f35100pclstNeighborhoodDataTableRowDeleted(this, new f35100pclstNeighborhoodDataTableRowChangeEvent(((f35100pclstNeighborhoodDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35100pclstNeighborhoodDataTableRowDeleting != null)) {
                    this.f35100pclstNeighborhoodDataTableRowDeleting(this, new f35100pclstNeighborhoodDataTableRowChangeEvent(((f35100pclstNeighborhoodDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35100pclstNeighborhoodDataTableRow(f35100pclstNeighborhoodDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                F35100NeighborhoodHeaderData ds = new F35100NeighborhoodHeaderData();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35100pclstNeighborhoodDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35100NeighborhoodLocksDataTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNeighborhoodLabel;
            
            private System.Data.DataColumn columnLockAppraisal;
            
            private System.Data.DataColumn columnLockAppraisalName;
            
            private System.Data.DataColumn columnLockAssessment;
            
            private System.Data.DataColumn columnLockAssessmentName;
            
            private System.Data.DataColumn columnLockAdmin;
            
            private System.Data.DataColumn columnLockAdminName;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodLocksDataTableDataTable() {
                this.TableName = "f35100NeighborhoodLocksDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100NeighborhoodLocksDataTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35100NeighborhoodLocksDataTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NeighborhoodLabelColumn {
                get {
                    return this.columnNeighborhoodLabel;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LockAppraisalColumn {
                get {
                    return this.columnLockAppraisal;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LockAppraisalNameColumn {
                get {
                    return this.columnLockAppraisalName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LockAssessmentColumn {
                get {
                    return this.columnLockAssessment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LockAssessmentNameColumn {
                get {
                    return this.columnLockAssessmentName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LockAdminColumn {
                get {
                    return this.columnLockAdmin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LockAdminNameColumn {
                get {
                    return this.columnLockAdminName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodLocksDataTableRow this[int index] {
                get {
                    return ((f35100NeighborhoodLocksDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f35100NeighborhoodLocksDataTableRowChangeEventHandler f35100NeighborhoodLocksDataTableRowChanging;
            
            public event f35100NeighborhoodLocksDataTableRowChangeEventHandler f35100NeighborhoodLocksDataTableRowChanged;
            
            public event f35100NeighborhoodLocksDataTableRowChangeEventHandler f35100NeighborhoodLocksDataTableRowDeleting;
            
            public event f35100NeighborhoodLocksDataTableRowChangeEventHandler f35100NeighborhoodLocksDataTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35100NeighborhoodLocksDataTableRow(f35100NeighborhoodLocksDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodLocksDataTableRow Addf35100NeighborhoodLocksDataTableRow(string NeighborhoodLabel, int LockAppraisal, string LockAppraisalName, int LockAssessment, string LockAssessmentName, int LockAdmin, string LockAdminName) {
                f35100NeighborhoodLocksDataTableRow rowf35100NeighborhoodLocksDataTableRow = ((f35100NeighborhoodLocksDataTableRow)(this.NewRow()));
                rowf35100NeighborhoodLocksDataTableRow.ItemArray = new object[] {
                        NeighborhoodLabel,
                        LockAppraisal,
                        LockAppraisalName,
                        LockAssessment,
                        LockAssessmentName,
                        LockAdmin,
                        LockAdminName};
                this.Rows.Add(rowf35100NeighborhoodLocksDataTableRow);
                return rowf35100NeighborhoodLocksDataTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                f35100NeighborhoodLocksDataTableDataTable cln = ((f35100NeighborhoodLocksDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new f35100NeighborhoodLocksDataTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNeighborhoodLabel = base.Columns["NeighborhoodLabel"];
                this.columnLockAppraisal = base.Columns["LockAppraisal"];
                this.columnLockAppraisalName = base.Columns["LockAppraisalName"];
                this.columnLockAssessment = base.Columns["LockAssessment"];
                this.columnLockAssessmentName = base.Columns["LockAssessmentName"];
                this.columnLockAdmin = base.Columns["LockAdmin"];
                this.columnLockAdminName = base.Columns["LockAdminName"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNeighborhoodLabel = new System.Data.DataColumn("NeighborhoodLabel", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhoodLabel);
                this.columnLockAppraisal = new System.Data.DataColumn("LockAppraisal", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAppraisal);
                this.columnLockAppraisalName = new System.Data.DataColumn("LockAppraisalName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAppraisalName);
                this.columnLockAssessment = new System.Data.DataColumn("LockAssessment", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAssessment);
                this.columnLockAssessmentName = new System.Data.DataColumn("LockAssessmentName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAssessmentName);
                this.columnLockAdmin = new System.Data.DataColumn("LockAdmin", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAdmin);
                this.columnLockAdminName = new System.Data.DataColumn("LockAdminName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAdminName);
                this.columnNeighborhoodLabel.ReadOnly = true;
                this.columnNeighborhoodLabel.MaxLength = 61;
                this.columnLockAppraisal.ReadOnly = true;
                this.columnLockAppraisalName.ReadOnly = true;
                this.columnLockAppraisalName.MaxLength = 50;
                this.columnLockAssessment.ReadOnly = true;
                this.columnLockAssessmentName.ReadOnly = true;
                this.columnLockAssessmentName.MaxLength = 50;
                this.columnLockAdmin.ReadOnly = true;
                this.columnLockAdminName.ReadOnly = true;
                this.columnLockAdminName.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodLocksDataTableRow Newf35100NeighborhoodLocksDataTableRow() {
                return ((f35100NeighborhoodLocksDataTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new f35100NeighborhoodLocksDataTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(f35100NeighborhoodLocksDataTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35100NeighborhoodLocksDataTableRowChanged != null)) {
                    this.f35100NeighborhoodLocksDataTableRowChanged(this, new f35100NeighborhoodLocksDataTableRowChangeEvent(((f35100NeighborhoodLocksDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35100NeighborhoodLocksDataTableRowChanging != null)) {
                    this.f35100NeighborhoodLocksDataTableRowChanging(this, new f35100NeighborhoodLocksDataTableRowChangeEvent(((f35100NeighborhoodLocksDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35100NeighborhoodLocksDataTableRowDeleted != null)) {
                    this.f35100NeighborhoodLocksDataTableRowDeleted(this, new f35100NeighborhoodLocksDataTableRowChangeEvent(((f35100NeighborhoodLocksDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35100NeighborhoodLocksDataTableRowDeleting != null)) {
                    this.f35100NeighborhoodLocksDataTableRowDeleting(this, new f35100NeighborhoodLocksDataTableRowChangeEvent(((f35100NeighborhoodLocksDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35100NeighborhoodLocksDataTableRow(f35100NeighborhoodLocksDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                F35100NeighborhoodHeaderData ds = new F35100NeighborhoodHeaderData();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35100NeighborhoodLocksDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35100GrpNeighborhoodDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNBHDID;
            
            private System.Data.DataColumn columnNeighborhood;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GrpNeighborhoodDataTable() {
                this.TableName = "f35100GrpNeighborhood";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100GrpNeighborhoodDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35100GrpNeighborhoodDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NeighborhoodColumn {
                get {
                    return this.columnNeighborhood;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GrpNeighborhoodRow this[int index] {
                get {
                    return ((f35100GrpNeighborhoodRow)(this.Rows[index]));
                }
            }
            
            public event f35100GrpNeighborhoodRowChangeEventHandler f35100GrpNeighborhoodRowChanging;
            
            public event f35100GrpNeighborhoodRowChangeEventHandler f35100GrpNeighborhoodRowChanged;
            
            public event f35100GrpNeighborhoodRowChangeEventHandler f35100GrpNeighborhoodRowDeleting;
            
            public event f35100GrpNeighborhoodRowChangeEventHandler f35100GrpNeighborhoodRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35100GrpNeighborhoodRow(f35100GrpNeighborhoodRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GrpNeighborhoodRow Addf35100GrpNeighborhoodRow(string Neighborhood) {
                f35100GrpNeighborhoodRow rowf35100GrpNeighborhoodRow = ((f35100GrpNeighborhoodRow)(this.NewRow()));
                rowf35100GrpNeighborhoodRow.ItemArray = new object[] {
                        null,
                        Neighborhood};
                this.Rows.Add(rowf35100GrpNeighborhoodRow);
                return rowf35100GrpNeighborhoodRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                f35100GrpNeighborhoodDataTable cln = ((f35100GrpNeighborhoodDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new f35100GrpNeighborhoodDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnNeighborhood = base.Columns["Neighborhood"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNBHDID = new System.Data.DataColumn("NBHDID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnNeighborhood = new System.Data.DataColumn("Neighborhood", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhood);
                this.columnNBHDID.AutoIncrement = true;
                this.columnNBHDID.AllowDBNull = false;
                this.columnNBHDID.ReadOnly = true;
                this.columnNeighborhood.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GrpNeighborhoodRow Newf35100GrpNeighborhoodRow() {
                return ((f35100GrpNeighborhoodRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new f35100GrpNeighborhoodRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(f35100GrpNeighborhoodRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35100GrpNeighborhoodRowChanged != null)) {
                    this.f35100GrpNeighborhoodRowChanged(this, new f35100GrpNeighborhoodRowChangeEvent(((f35100GrpNeighborhoodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35100GrpNeighborhoodRowChanging != null)) {
                    this.f35100GrpNeighborhoodRowChanging(this, new f35100GrpNeighborhoodRowChangeEvent(((f35100GrpNeighborhoodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35100GrpNeighborhoodRowDeleted != null)) {
                    this.f35100GrpNeighborhoodRowDeleted(this, new f35100GrpNeighborhoodRowChangeEvent(((f35100GrpNeighborhoodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35100GrpNeighborhoodRowDeleting != null)) {
                    this.f35100GrpNeighborhoodRowDeleting(this, new f35100GrpNeighborhoodRowChangeEvent(((f35100GrpNeighborhoodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35100GrpNeighborhoodRow(f35100GrpNeighborhoodRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                F35100NeighborhoodHeaderData ds = new F35100NeighborhoodHeaderData();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35100GrpNeighborhoodDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class saveNeighborhoodHeaderDetailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNeighborhood;
            
            private System.Data.DataColumn columnNBHID;
            
            private System.Data.DataColumn columnPNBHID;
            
            private System.Data.DataColumn columnRollYear;
            
            private System.Data.DataColumn columnType;
            
            private System.Data.DataColumn columnParentNeighborhood;
            
            private System.Data.DataColumn columnGrantParentNeighborhood;
            
            private System.Data.DataColumn columnDescription;
            
            private System.Data.DataColumn columnMarketReview;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveNeighborhoodHeaderDetailsDataTable() {
                this.TableName = "saveNeighborhoodHeaderDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal saveNeighborhoodHeaderDetailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected saveNeighborhoodHeaderDetailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NeighborhoodColumn {
                get {
                    return this.columnNeighborhood;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NBHIDColumn {
                get {
                    return this.columnNBHID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PNBHIDColumn {
                get {
                    return this.columnPNBHID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ParentNeighborhoodColumn {
                get {
                    return this.columnParentNeighborhood;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GrantParentNeighborhoodColumn {
                get {
                    return this.columnGrantParentNeighborhood;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MarketReviewColumn {
                get {
                    return this.columnMarketReview;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveNeighborhoodHeaderDetailsRow this[int index] {
                get {
                    return ((saveNeighborhoodHeaderDetailsRow)(this.Rows[index]));
                }
            }
            
            public event saveNeighborhoodHeaderDetailsRowChangeEventHandler saveNeighborhoodHeaderDetailsRowChanging;
            
            public event saveNeighborhoodHeaderDetailsRowChangeEventHandler saveNeighborhoodHeaderDetailsRowChanged;
            
            public event saveNeighborhoodHeaderDetailsRowChangeEventHandler saveNeighborhoodHeaderDetailsRowDeleting;
            
            public event saveNeighborhoodHeaderDetailsRowChangeEventHandler saveNeighborhoodHeaderDetailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsaveNeighborhoodHeaderDetailsRow(saveNeighborhoodHeaderDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveNeighborhoodHeaderDetailsRow AddsaveNeighborhoodHeaderDetailsRow(string Neighborhood, int NBHID, int PNBHID, int RollYear, int Type, int ParentNeighborhood, int GrantParentNeighborhood, string Description, string MarketReview) {
                saveNeighborhoodHeaderDetailsRow rowsaveNeighborhoodHeaderDetailsRow = ((saveNeighborhoodHeaderDetailsRow)(this.NewRow()));
                rowsaveNeighborhoodHeaderDetailsRow.ItemArray = new object[] {
                        Neighborhood,
                        NBHID,
                        PNBHID,
                        RollYear,
                        Type,
                        ParentNeighborhood,
                        GrantParentNeighborhood,
                        Description,
                        MarketReview};
                this.Rows.Add(rowsaveNeighborhoodHeaderDetailsRow);
                return rowsaveNeighborhoodHeaderDetailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                saveNeighborhoodHeaderDetailsDataTable cln = ((saveNeighborhoodHeaderDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new saveNeighborhoodHeaderDetailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNeighborhood = base.Columns["Neighborhood"];
                this.columnNBHID = base.Columns["NBHID"];
                this.columnPNBHID = base.Columns["PNBHID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnType = base.Columns["Type"];
                this.columnParentNeighborhood = base.Columns["ParentNeighborhood"];
                this.columnGrantParentNeighborhood = base.Columns["GrantParentNeighborhood"];
                this.columnDescription = base.Columns["Description"];
                this.columnMarketReview = base.Columns["MarketReview"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNeighborhood = new System.Data.DataColumn("Neighborhood", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhood);
                this.columnNBHID = new System.Data.DataColumn("NBHID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHID);
                this.columnPNBHID = new System.Data.DataColumn("PNBHID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNBHID);
                this.columnRollYear = new System.Data.DataColumn("RollYear", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnType = new System.Data.DataColumn("Type", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnParentNeighborhood = new System.Data.DataColumn("ParentNeighborhood", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentNeighborhood);
                this.columnGrantParentNeighborhood = new System.Data.DataColumn("GrantParentNeighborhood", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrantParentNeighborhood);
                this.columnDescription = new System.Data.DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMarketReview = new System.Data.DataColumn("MarketReview", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketReview);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveNeighborhoodHeaderDetailsRow NewsaveNeighborhoodHeaderDetailsRow() {
                return ((saveNeighborhoodHeaderDetailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new saveNeighborhoodHeaderDetailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(saveNeighborhoodHeaderDetailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.saveNeighborhoodHeaderDetailsRowChanged != null)) {
                    this.saveNeighborhoodHeaderDetailsRowChanged(this, new saveNeighborhoodHeaderDetailsRowChangeEvent(((saveNeighborhoodHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.saveNeighborhoodHeaderDetailsRowChanging != null)) {
                    this.saveNeighborhoodHeaderDetailsRowChanging(this, new saveNeighborhoodHeaderDetailsRowChangeEvent(((saveNeighborhoodHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.saveNeighborhoodHeaderDetailsRowDeleted != null)) {
                    this.saveNeighborhoodHeaderDetailsRowDeleted(this, new saveNeighborhoodHeaderDetailsRowChangeEvent(((saveNeighborhoodHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.saveNeighborhoodHeaderDetailsRowDeleting != null)) {
                    this.saveNeighborhoodHeaderDetailsRowDeleting(this, new saveNeighborhoodHeaderDetailsRowChangeEvent(((saveNeighborhoodHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesaveNeighborhoodHeaderDetailsRow(saveNeighborhoodHeaderDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                F35100NeighborhoodHeaderData ds = new F35100NeighborhoodHeaderData();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "saveNeighborhoodHeaderDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35100NeighborhoodHeaderDataTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNBHDID;
            
            private System.Data.DataColumn columnPNBHDID;
            
            private System.Data.DataColumn columnGrandParent;
            
            private System.Data.DataColumn columnGrandParentName;
            
            private System.Data.DataColumn columnRollYear;
            
            private System.Data.DataColumn columnNBHDType;
            
            private System.Data.DataColumn columnNeighborhood;
            
            private System.Data.DataColumn columnDescription;
            
            private System.Data.DataColumn columnMarketReview;
            
            private System.Data.DataColumn columnLockAppraisalBy;
            
            private System.Data.DataColumn columnLockAssessmentBy;
            
            private System.Data.DataColumn columnLockAdminBy;
            
            private System.Data.DataColumn columnRollYearDisabled;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodHeaderDataTableDataTable() {
                this.TableName = "f35100NeighborhoodHeaderDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100NeighborhoodHeaderDataTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35100NeighborhoodHeaderDataTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PNBHDIDColumn {
                get {
                    return this.columnPNBHDID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GrandParentColumn {
                get {
                    return this.columnGrandParent;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GrandParentNameColumn {
                get {
                    return this.columnGrandParentName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NBHDTypeColumn {
                get {
                    return this.columnNBHDType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NeighborhoodColumn {
                get {
                    return this.columnNeighborhood;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MarketReviewColumn {
                get {
                    return this.columnMarketReview;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LockAppraisalByColumn {
                get {
                    return this.columnLockAppraisalBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LockAssessmentByColumn {
                get {
                    return this.columnLockAssessmentBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LockAdminByColumn {
                get {
                    return this.columnLockAdminBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RollYearDisabledColumn {
                get {
                    return this.columnRollYearDisabled;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodHeaderDataTableRow this[int index] {
                get {
                    return ((f35100NeighborhoodHeaderDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f35100NeighborhoodHeaderDataTableRowChangeEventHandler f35100NeighborhoodHeaderDataTableRowChanging;
            
            public event f35100NeighborhoodHeaderDataTableRowChangeEventHandler f35100NeighborhoodHeaderDataTableRowChanged;
            
            public event f35100NeighborhoodHeaderDataTableRowChangeEventHandler f35100NeighborhoodHeaderDataTableRowDeleting;
            
            public event f35100NeighborhoodHeaderDataTableRowChangeEventHandler f35100NeighborhoodHeaderDataTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35100NeighborhoodHeaderDataTableRow(f35100NeighborhoodHeaderDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodHeaderDataTableRow Addf35100NeighborhoodHeaderDataTableRow(int PNBHDID, int GrandParent, string GrandParentName, short RollYear, byte NBHDType, string Neighborhood, string Description, string MarketReview, int LockAppraisalBy, int LockAssessmentBy, int LockAdminBy, int RollYearDisabled) {
                f35100NeighborhoodHeaderDataTableRow rowf35100NeighborhoodHeaderDataTableRow = ((f35100NeighborhoodHeaderDataTableRow)(this.NewRow()));
                rowf35100NeighborhoodHeaderDataTableRow.ItemArray = new object[] {
                        null,
                        PNBHDID,
                        GrandParent,
                        GrandParentName,
                        RollYear,
                        NBHDType,
                        Neighborhood,
                        Description,
                        MarketReview,
                        LockAppraisalBy,
                        LockAssessmentBy,
                        LockAdminBy,
                        RollYearDisabled};
                this.Rows.Add(rowf35100NeighborhoodHeaderDataTableRow);
                return rowf35100NeighborhoodHeaderDataTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodHeaderDataTableRow FindByNBHDID(int NBHDID) {
                return ((f35100NeighborhoodHeaderDataTableRow)(this.Rows.Find(new object[] {
                            NBHDID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                f35100NeighborhoodHeaderDataTableDataTable cln = ((f35100NeighborhoodHeaderDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new f35100NeighborhoodHeaderDataTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnPNBHDID = base.Columns["PNBHDID"];
                this.columnGrandParent = base.Columns["GrandParent"];
                this.columnGrandParentName = base.Columns["GrandParentName"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnNBHDType = base.Columns["NBHDType"];
                this.columnNeighborhood = base.Columns["Neighborhood"];
                this.columnDescription = base.Columns["Description"];
                this.columnMarketReview = base.Columns["MarketReview"];
                this.columnLockAppraisalBy = base.Columns["LockAppraisalBy"];
                this.columnLockAssessmentBy = base.Columns["LockAssessmentBy"];
                this.columnLockAdminBy = base.Columns["LockAdminBy"];
                this.columnRollYearDisabled = base.Columns["RollYearDisabled"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNBHDID = new System.Data.DataColumn("NBHDID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnPNBHDID = new System.Data.DataColumn("PNBHDID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNBHDID);
                this.columnGrandParent = new System.Data.DataColumn("GrandParent", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandParent);
                this.columnGrandParentName = new System.Data.DataColumn("GrandParentName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandParentName);
                this.columnRollYear = new System.Data.DataColumn("RollYear", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnNBHDType = new System.Data.DataColumn("NBHDType", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDType);
                this.columnNeighborhood = new System.Data.DataColumn("Neighborhood", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhood);
                this.columnDescription = new System.Data.DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMarketReview = new System.Data.DataColumn("MarketReview", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketReview);
                this.columnLockAppraisalBy = new System.Data.DataColumn("LockAppraisalBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAppraisalBy);
                this.columnLockAssessmentBy = new System.Data.DataColumn("LockAssessmentBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAssessmentBy);
                this.columnLockAdminBy = new System.Data.DataColumn("LockAdminBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAdminBy);
                this.columnRollYearDisabled = new System.Data.DataColumn("RollYearDisabled", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYearDisabled);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnNBHDID}, true));
                this.columnNBHDID.AutoIncrement = true;
                this.columnNBHDID.AllowDBNull = false;
                this.columnNBHDID.ReadOnly = true;
                this.columnNBHDID.Unique = true;
                this.columnGrandParent.ReadOnly = true;
                this.columnGrandParentName.ReadOnly = true;
                this.columnGrandParentName.MaxLength = 50;
                this.columnRollYear.AllowDBNull = false;
                this.columnNeighborhood.AllowDBNull = false;
                this.columnNeighborhood.MaxLength = 50;
                this.columnDescription.MaxLength = 2000;
                this.columnMarketReview.MaxLength = 2000;
                this.columnLockAppraisalBy.ReadOnly = true;
                this.columnLockAssessmentBy.ReadOnly = true;
                this.columnLockAdminBy.ReadOnly = true;
                this.columnRollYearDisabled.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodHeaderDataTableRow Newf35100NeighborhoodHeaderDataTableRow() {
                return ((f35100NeighborhoodHeaderDataTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new f35100NeighborhoodHeaderDataTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(f35100NeighborhoodHeaderDataTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35100NeighborhoodHeaderDataTableRowChanged != null)) {
                    this.f35100NeighborhoodHeaderDataTableRowChanged(this, new f35100NeighborhoodHeaderDataTableRowChangeEvent(((f35100NeighborhoodHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35100NeighborhoodHeaderDataTableRowChanging != null)) {
                    this.f35100NeighborhoodHeaderDataTableRowChanging(this, new f35100NeighborhoodHeaderDataTableRowChangeEvent(((f35100NeighborhoodHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35100NeighborhoodHeaderDataTableRowDeleted != null)) {
                    this.f35100NeighborhoodHeaderDataTableRowDeleted(this, new f35100NeighborhoodHeaderDataTableRowChangeEvent(((f35100NeighborhoodHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35100NeighborhoodHeaderDataTableRowDeleting != null)) {
                    this.f35100NeighborhoodHeaderDataTableRowDeleting(this, new f35100NeighborhoodHeaderDataTableRowChangeEvent(((f35100NeighborhoodHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35100NeighborhoodHeaderDataTableRow(f35100NeighborhoodHeaderDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                F35100NeighborhoodHeaderData ds = new F35100NeighborhoodHeaderData();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35100NeighborhoodHeaderDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CheckDuplicateNeighborhoodTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNBHDID;
            
            private System.Data.DataColumn columnNeighborhood;
            
            private System.Data.DataColumn columnType;
            
            private System.Data.DataColumn columnRollYear;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CheckDuplicateNeighborhoodTableDataTable() {
                this.TableName = "CheckDuplicateNeighborhoodTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CheckDuplicateNeighborhoodTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CheckDuplicateNeighborhoodTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NeighborhoodColumn {
                get {
                    return this.columnNeighborhood;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CheckDuplicateNeighborhoodTableRow this[int index] {
                get {
                    return ((CheckDuplicateNeighborhoodTableRow)(this.Rows[index]));
                }
            }
            
            public event CheckDuplicateNeighborhoodTableRowChangeEventHandler CheckDuplicateNeighborhoodTableRowChanging;
            
            public event CheckDuplicateNeighborhoodTableRowChangeEventHandler CheckDuplicateNeighborhoodTableRowChanged;
            
            public event CheckDuplicateNeighborhoodTableRowChangeEventHandler CheckDuplicateNeighborhoodTableRowDeleting;
            
            public event CheckDuplicateNeighborhoodTableRowChangeEventHandler CheckDuplicateNeighborhoodTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCheckDuplicateNeighborhoodTableRow(CheckDuplicateNeighborhoodTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CheckDuplicateNeighborhoodTableRow AddCheckDuplicateNeighborhoodTableRow(string NBHDID, string Neighborhood, string Type, string RollYear) {
                CheckDuplicateNeighborhoodTableRow rowCheckDuplicateNeighborhoodTableRow = ((CheckDuplicateNeighborhoodTableRow)(this.NewRow()));
                rowCheckDuplicateNeighborhoodTableRow.ItemArray = new object[] {
                        NBHDID,
                        Neighborhood,
                        Type,
                        RollYear};
                this.Rows.Add(rowCheckDuplicateNeighborhoodTableRow);
                return rowCheckDuplicateNeighborhoodTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CheckDuplicateNeighborhoodTableDataTable cln = ((CheckDuplicateNeighborhoodTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CheckDuplicateNeighborhoodTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnNeighborhood = base.Columns["Neighborhood"];
                this.columnType = base.Columns["Type"];
                this.columnRollYear = base.Columns["RollYear"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNBHDID = new System.Data.DataColumn("NBHDID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnNeighborhood = new System.Data.DataColumn("Neighborhood", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhood);
                this.columnType = new System.Data.DataColumn("Type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnRollYear = new System.Data.DataColumn("RollYear", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CheckDuplicateNeighborhoodTableRow NewCheckDuplicateNeighborhoodTableRow() {
                return ((CheckDuplicateNeighborhoodTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CheckDuplicateNeighborhoodTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CheckDuplicateNeighborhoodTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CheckDuplicateNeighborhoodTableRowChanged != null)) {
                    this.CheckDuplicateNeighborhoodTableRowChanged(this, new CheckDuplicateNeighborhoodTableRowChangeEvent(((CheckDuplicateNeighborhoodTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CheckDuplicateNeighborhoodTableRowChanging != null)) {
                    this.CheckDuplicateNeighborhoodTableRowChanging(this, new CheckDuplicateNeighborhoodTableRowChangeEvent(((CheckDuplicateNeighborhoodTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CheckDuplicateNeighborhoodTableRowDeleted != null)) {
                    this.CheckDuplicateNeighborhoodTableRowDeleted(this, new CheckDuplicateNeighborhoodTableRowChangeEvent(((CheckDuplicateNeighborhoodTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CheckDuplicateNeighborhoodTableRowDeleting != null)) {
                    this.CheckDuplicateNeighborhoodTableRowDeleting(this, new CheckDuplicateNeighborhoodTableRowChangeEvent(((CheckDuplicateNeighborhoodTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCheckDuplicateNeighborhoodTableRow(CheckDuplicateNeighborhoodTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                F35100NeighborhoodHeaderData ds = new F35100NeighborhoodHeaderData();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CheckDuplicateNeighborhoodTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35100GetUserDetailsDataTableRow : System.Data.DataRow {
            
            private f35100GetUserDetailsDataTableDataTable tablef35100GetUserDetailsDataTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100GetUserDetailsDataTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35100GetUserDetailsDataTable = ((f35100GetUserDetailsDataTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tablef35100GetUserDetailsDataTable.UserIDColumn]));
                }
                set {
                    this[this.tablef35100GetUserDetailsDataTable.UserIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tablef35100GetUserDetailsDataTable.UserNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UserName\' in table \'f35100GetUserDetailsDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablef35100GetUserDetailsDataTable.UserNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tablef35100GetUserDetailsDataTable.UserNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tablef35100GetUserDetailsDataTable.UserNameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35100NeighborhoodGroupDataTableRow : System.Data.DataRow {
            
            private f35100NeighborhoodGroupDataTableDataTable tablef35100NeighborhoodGroupDataTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100NeighborhoodGroupDataTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35100NeighborhoodGroupDataTable = ((f35100NeighborhoodGroupDataTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDGroupID {
                get {
                    return ((int)(this[this.tablef35100NeighborhoodGroupDataTable.NBHDGroupIDColumn]));
                }
                set {
                    this[this.tablef35100NeighborhoodGroupDataTable.NBHDGroupIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupName {
                get {
                    return ((string)(this[this.tablef35100NeighborhoodGroupDataTable.GroupNameColumn]));
                }
                set {
                    this[this.tablef35100NeighborhoodGroupDataTable.GroupNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    return ((short)(this[this.tablef35100NeighborhoodGroupDataTable.RollYearColumn]));
                }
                set {
                    this[this.tablef35100NeighborhoodGroupDataTable.RollYearColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReviewedBy {
                get {
                    try {
                        return ((int)(this[this.tablef35100NeighborhoodGroupDataTable.ReviewedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ReviewedBy\' in table \'f35100NeighborhoodGroupDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodGroupDataTable.ReviewedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablef35100NeighborhoodGroupDataTable.DescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Description\' in table \'f35100NeighborhoodGroupDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodGroupDataTable.DescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MarketReview {
                get {
                    try {
                        return ((string)(this[this.tablef35100NeighborhoodGroupDataTable.MarketReviewColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MarketReview\' in table \'f35100NeighborhoodGroupDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodGroupDataTable.MarketReviewColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewedByNull() {
                return this.IsNull(this.tablef35100NeighborhoodGroupDataTable.ReviewedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewedByNull() {
                this[this.tablef35100NeighborhoodGroupDataTable.ReviewedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablef35100NeighborhoodGroupDataTable.DescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablef35100NeighborhoodGroupDataTable.DescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketReviewNull() {
                return this.IsNull(this.tablef35100NeighborhoodGroupDataTable.MarketReviewColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketReviewNull() {
                this[this.tablef35100NeighborhoodGroupDataTable.MarketReviewColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35100pclstNeighborhoodDataTableRow : System.Data.DataRow {
            
            private f35100pclstNeighborhoodDataTableDataTable tablef35100pclstNeighborhoodDataTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100pclstNeighborhoodDataTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35100pclstNeighborhoodDataTable = ((f35100pclstNeighborhoodDataTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    return ((int)(this[this.tablef35100pclstNeighborhoodDataTable.NBHDIDColumn]));
                }
                set {
                    this[this.tablef35100pclstNeighborhoodDataTable.NBHDIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Neighborhood {
                get {
                    try {
                        return ((string)(this[this.tablef35100pclstNeighborhoodDataTable.NeighborhoodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Neighborhood\' in table \'f35100pclstNeighborhoodDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100pclstNeighborhoodDataTable.NeighborhoodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodNull() {
                return this.IsNull(this.tablef35100pclstNeighborhoodDataTable.NeighborhoodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodNull() {
                this[this.tablef35100pclstNeighborhoodDataTable.NeighborhoodColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35100NeighborhoodLocksDataTableRow : System.Data.DataRow {
            
            private f35100NeighborhoodLocksDataTableDataTable tablef35100NeighborhoodLocksDataTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100NeighborhoodLocksDataTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35100NeighborhoodLocksDataTable = ((f35100NeighborhoodLocksDataTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NeighborhoodLabel {
                get {
                    try {
                        return ((string)(this[this.tablef35100NeighborhoodLocksDataTable.NeighborhoodLabelColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NeighborhoodLabel\' in table \'f35100NeighborhoodLocksDataTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodLocksDataTable.NeighborhoodLabelColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAppraisal {
                get {
                    try {
                        return ((int)(this[this.tablef35100NeighborhoodLocksDataTable.LockAppraisalColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LockAppraisal\' in table \'f35100NeighborhoodLocksDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodLocksDataTable.LockAppraisalColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LockAppraisalName {
                get {
                    try {
                        return ((string)(this[this.tablef35100NeighborhoodLocksDataTable.LockAppraisalNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LockAppraisalName\' in table \'f35100NeighborhoodLocksDataTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodLocksDataTable.LockAppraisalNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAssessment {
                get {
                    try {
                        return ((int)(this[this.tablef35100NeighborhoodLocksDataTable.LockAssessmentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LockAssessment\' in table \'f35100NeighborhoodLocksDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodLocksDataTable.LockAssessmentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LockAssessmentName {
                get {
                    try {
                        return ((string)(this[this.tablef35100NeighborhoodLocksDataTable.LockAssessmentNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LockAssessmentName\' in table \'f35100NeighborhoodLocksDataTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodLocksDataTable.LockAssessmentNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAdmin {
                get {
                    try {
                        return ((int)(this[this.tablef35100NeighborhoodLocksDataTable.LockAdminColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LockAdmin\' in table \'f35100NeighborhoodLocksDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodLocksDataTable.LockAdminColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LockAdminName {
                get {
                    try {
                        return ((string)(this[this.tablef35100NeighborhoodLocksDataTable.LockAdminNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LockAdminName\' in table \'f35100NeighborhoodLocksDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodLocksDataTable.LockAdminNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodLabelNull() {
                return this.IsNull(this.tablef35100NeighborhoodLocksDataTable.NeighborhoodLabelColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodLabelNull() {
                this[this.tablef35100NeighborhoodLocksDataTable.NeighborhoodLabelColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAppraisalNull() {
                return this.IsNull(this.tablef35100NeighborhoodLocksDataTable.LockAppraisalColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAppraisalNull() {
                this[this.tablef35100NeighborhoodLocksDataTable.LockAppraisalColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAppraisalNameNull() {
                return this.IsNull(this.tablef35100NeighborhoodLocksDataTable.LockAppraisalNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAppraisalNameNull() {
                this[this.tablef35100NeighborhoodLocksDataTable.LockAppraisalNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAssessmentNull() {
                return this.IsNull(this.tablef35100NeighborhoodLocksDataTable.LockAssessmentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAssessmentNull() {
                this[this.tablef35100NeighborhoodLocksDataTable.LockAssessmentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAssessmentNameNull() {
                return this.IsNull(this.tablef35100NeighborhoodLocksDataTable.LockAssessmentNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAssessmentNameNull() {
                this[this.tablef35100NeighborhoodLocksDataTable.LockAssessmentNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAdminNull() {
                return this.IsNull(this.tablef35100NeighborhoodLocksDataTable.LockAdminColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAdminNull() {
                this[this.tablef35100NeighborhoodLocksDataTable.LockAdminColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAdminNameNull() {
                return this.IsNull(this.tablef35100NeighborhoodLocksDataTable.LockAdminNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAdminNameNull() {
                this[this.tablef35100NeighborhoodLocksDataTable.LockAdminNameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35100GrpNeighborhoodRow : System.Data.DataRow {
            
            private f35100GrpNeighborhoodDataTable tablef35100GrpNeighborhood;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100GrpNeighborhoodRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35100GrpNeighborhood = ((f35100GrpNeighborhoodDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    return ((int)(this[this.tablef35100GrpNeighborhood.NBHDIDColumn]));
                }
                set {
                    this[this.tablef35100GrpNeighborhood.NBHDIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Neighborhood {
                get {
                    try {
                        return ((string)(this[this.tablef35100GrpNeighborhood.NeighborhoodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Neighborhood\' in table \'f35100GrpNeighborhood\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100GrpNeighborhood.NeighborhoodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodNull() {
                return this.IsNull(this.tablef35100GrpNeighborhood.NeighborhoodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodNull() {
                this[this.tablef35100GrpNeighborhood.NeighborhoodColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class saveNeighborhoodHeaderDetailsRow : System.Data.DataRow {
            
            private saveNeighborhoodHeaderDetailsDataTable tablesaveNeighborhoodHeaderDetails;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal saveNeighborhoodHeaderDetailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesaveNeighborhoodHeaderDetails = ((saveNeighborhoodHeaderDetailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Neighborhood {
                get {
                    try {
                        return ((string)(this[this.tablesaveNeighborhoodHeaderDetails.NeighborhoodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Neighborhood\' in table \'saveNeighborhoodHeaderDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesaveNeighborhoodHeaderDetails.NeighborhoodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHID {
                get {
                    try {
                        return ((int)(this[this.tablesaveNeighborhoodHeaderDetails.NBHIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NBHID\' in table \'saveNeighborhoodHeaderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveNeighborhoodHeaderDetails.NBHIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PNBHID {
                get {
                    try {
                        return ((int)(this[this.tablesaveNeighborhoodHeaderDetails.PNBHIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PNBHID\' in table \'saveNeighborhoodHeaderDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesaveNeighborhoodHeaderDetails.PNBHIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RollYear {
                get {
                    try {
                        return ((int)(this[this.tablesaveNeighborhoodHeaderDetails.RollYearColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RollYear\' in table \'saveNeighborhoodHeaderDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesaveNeighborhoodHeaderDetails.RollYearColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Type {
                get {
                    try {
                        return ((int)(this[this.tablesaveNeighborhoodHeaderDetails.TypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Type\' in table \'saveNeighborhoodHeaderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveNeighborhoodHeaderDetails.TypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParentNeighborhood {
                get {
                    try {
                        return ((int)(this[this.tablesaveNeighborhoodHeaderDetails.ParentNeighborhoodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ParentNeighborhood\' in table \'saveNeighborhoodHeaderDetails" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveNeighborhoodHeaderDetails.ParentNeighborhoodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GrantParentNeighborhood {
                get {
                    try {
                        return ((int)(this[this.tablesaveNeighborhoodHeaderDetails.GrantParentNeighborhoodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GrantParentNeighborhood\' in table \'saveNeighborhoodHeaderDe" +
                                "tails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveNeighborhoodHeaderDetails.GrantParentNeighborhoodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    if (this.IsDescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablesaveNeighborhoodHeaderDetails.DescriptionColumn]));
                    }
                }
                set {
                    this[this.tablesaveNeighborhoodHeaderDetails.DescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MarketReview {
                get {
                    if (this.IsMarketReviewNull()) {
                        return "(Empty)";
                    }
                    else {
                        return ((string)(this[this.tablesaveNeighborhoodHeaderDetails.MarketReviewColumn]));
                    }
                }
                set {
                    this[this.tablesaveNeighborhoodHeaderDetails.MarketReviewColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodNull() {
                return this.IsNull(this.tablesaveNeighborhoodHeaderDetails.NeighborhoodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodNull() {
                this[this.tablesaveNeighborhoodHeaderDetails.NeighborhoodColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHIDNull() {
                return this.IsNull(this.tablesaveNeighborhoodHeaderDetails.NBHIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHIDNull() {
                this[this.tablesaveNeighborhoodHeaderDetails.NBHIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNBHIDNull() {
                return this.IsNull(this.tablesaveNeighborhoodHeaderDetails.PNBHIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNBHIDNull() {
                this[this.tablesaveNeighborhoodHeaderDetails.PNBHIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tablesaveNeighborhoodHeaderDetails.RollYearColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tablesaveNeighborhoodHeaderDetails.RollYearColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tablesaveNeighborhoodHeaderDetails.TypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tablesaveNeighborhoodHeaderDetails.TypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentNeighborhoodNull() {
                return this.IsNull(this.tablesaveNeighborhoodHeaderDetails.ParentNeighborhoodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentNeighborhoodNull() {
                this[this.tablesaveNeighborhoodHeaderDetails.ParentNeighborhoodColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrantParentNeighborhoodNull() {
                return this.IsNull(this.tablesaveNeighborhoodHeaderDetails.GrantParentNeighborhoodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrantParentNeighborhoodNull() {
                this[this.tablesaveNeighborhoodHeaderDetails.GrantParentNeighborhoodColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablesaveNeighborhoodHeaderDetails.DescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablesaveNeighborhoodHeaderDetails.DescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketReviewNull() {
                return this.IsNull(this.tablesaveNeighborhoodHeaderDetails.MarketReviewColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketReviewNull() {
                this[this.tablesaveNeighborhoodHeaderDetails.MarketReviewColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35100NeighborhoodHeaderDataTableRow : System.Data.DataRow {
            
            private f35100NeighborhoodHeaderDataTableDataTable tablef35100NeighborhoodHeaderDataTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35100NeighborhoodHeaderDataTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35100NeighborhoodHeaderDataTable = ((f35100NeighborhoodHeaderDataTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    return ((int)(this[this.tablef35100NeighborhoodHeaderDataTable.NBHDIDColumn]));
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.NBHDIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PNBHDID {
                get {
                    try {
                        return ((int)(this[this.tablef35100NeighborhoodHeaderDataTable.PNBHDIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PNBHDID\' in table \'f35100NeighborhoodHeaderDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.PNBHDIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GrandParent {
                get {
                    try {
                        return ((int)(this[this.tablef35100NeighborhoodHeaderDataTable.GrandParentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GrandParent\' in table \'f35100NeighborhoodHeaderDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.GrandParentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GrandParentName {
                get {
                    try {
                        return ((string)(this[this.tablef35100NeighborhoodHeaderDataTable.GrandParentNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GrandParentName\' in table \'f35100NeighborhoodHeaderDataTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.GrandParentNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    return ((short)(this[this.tablef35100NeighborhoodHeaderDataTable.RollYearColumn]));
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.RollYearColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NBHDType {
                get {
                    try {
                        return ((byte)(this[this.tablef35100NeighborhoodHeaderDataTable.NBHDTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NBHDType\' in table \'f35100NeighborhoodHeaderDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.NBHDTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Neighborhood {
                get {
                    return ((string)(this[this.tablef35100NeighborhoodHeaderDataTable.NeighborhoodColumn]));
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.NeighborhoodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    if (this.IsDescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef35100NeighborhoodHeaderDataTable.DescriptionColumn]));
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.DescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MarketReview {
                get {
                    if (this.IsMarketReviewNull()) {
                        return "(Empty)";
                    }
                    else {
                        return ((string)(this[this.tablef35100NeighborhoodHeaderDataTable.MarketReviewColumn]));
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.MarketReviewColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAppraisalBy {
                get {
                    try {
                        return ((int)(this[this.tablef35100NeighborhoodHeaderDataTable.LockAppraisalByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LockAppraisalBy\' in table \'f35100NeighborhoodHeaderDataTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.LockAppraisalByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAssessmentBy {
                get {
                    try {
                        return ((int)(this[this.tablef35100NeighborhoodHeaderDataTable.LockAssessmentByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LockAssessmentBy\' in table \'f35100NeighborhoodHeaderDataTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.LockAssessmentByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAdminBy {
                get {
                    try {
                        return ((int)(this[this.tablef35100NeighborhoodHeaderDataTable.LockAdminByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LockAdminBy\' in table \'f35100NeighborhoodHeaderDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.LockAdminByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RollYearDisabled {
                get {
                    try {
                        return ((int)(this[this.tablef35100NeighborhoodHeaderDataTable.RollYearDisabledColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RollYearDisabled\' in table \'f35100NeighborhoodHeaderDataTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35100NeighborhoodHeaderDataTable.RollYearDisabledColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNBHDIDNull() {
                return this.IsNull(this.tablef35100NeighborhoodHeaderDataTable.PNBHDIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNBHDIDNull() {
                this[this.tablef35100NeighborhoodHeaderDataTable.PNBHDIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrandParentNull() {
                return this.IsNull(this.tablef35100NeighborhoodHeaderDataTable.GrandParentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrandParentNull() {
                this[this.tablef35100NeighborhoodHeaderDataTable.GrandParentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrandParentNameNull() {
                return this.IsNull(this.tablef35100NeighborhoodHeaderDataTable.GrandParentNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrandParentNameNull() {
                this[this.tablef35100NeighborhoodHeaderDataTable.GrandParentNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDTypeNull() {
                return this.IsNull(this.tablef35100NeighborhoodHeaderDataTable.NBHDTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDTypeNull() {
                this[this.tablef35100NeighborhoodHeaderDataTable.NBHDTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablef35100NeighborhoodHeaderDataTable.DescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablef35100NeighborhoodHeaderDataTable.DescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketReviewNull() {
                return this.IsNull(this.tablef35100NeighborhoodHeaderDataTable.MarketReviewColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketReviewNull() {
                this[this.tablef35100NeighborhoodHeaderDataTable.MarketReviewColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAppraisalByNull() {
                return this.IsNull(this.tablef35100NeighborhoodHeaderDataTable.LockAppraisalByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAppraisalByNull() {
                this[this.tablef35100NeighborhoodHeaderDataTable.LockAppraisalByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAssessmentByNull() {
                return this.IsNull(this.tablef35100NeighborhoodHeaderDataTable.LockAssessmentByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAssessmentByNull() {
                this[this.tablef35100NeighborhoodHeaderDataTable.LockAssessmentByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAdminByNull() {
                return this.IsNull(this.tablef35100NeighborhoodHeaderDataTable.LockAdminByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAdminByNull() {
                this[this.tablef35100NeighborhoodHeaderDataTable.LockAdminByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearDisabledNull() {
                return this.IsNull(this.tablef35100NeighborhoodHeaderDataTable.RollYearDisabledColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearDisabledNull() {
                this[this.tablef35100NeighborhoodHeaderDataTable.RollYearDisabledColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CheckDuplicateNeighborhoodTableRow : System.Data.DataRow {
            
            private CheckDuplicateNeighborhoodTableDataTable tableCheckDuplicateNeighborhoodTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CheckDuplicateNeighborhoodTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCheckDuplicateNeighborhoodTable = ((CheckDuplicateNeighborhoodTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NBHDID {
                get {
                    try {
                        return ((string)(this[this.tableCheckDuplicateNeighborhoodTable.NBHDIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'CheckDuplicateNeighborhoodTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCheckDuplicateNeighborhoodTable.NBHDIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Neighborhood {
                get {
                    try {
                        return ((string)(this[this.tableCheckDuplicateNeighborhoodTable.NeighborhoodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Neighborhood\' in table \'CheckDuplicateNeighborhoodTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCheckDuplicateNeighborhoodTable.NeighborhoodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableCheckDuplicateNeighborhoodTable.TypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Type\' in table \'CheckDuplicateNeighborhoodTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCheckDuplicateNeighborhoodTable.TypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RollYear {
                get {
                    try {
                        return ((string)(this[this.tableCheckDuplicateNeighborhoodTable.RollYearColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RollYear\' in table \'CheckDuplicateNeighborhoodTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCheckDuplicateNeighborhoodTable.RollYearColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tableCheckDuplicateNeighborhoodTable.NBHDIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tableCheckDuplicateNeighborhoodTable.NBHDIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodNull() {
                return this.IsNull(this.tableCheckDuplicateNeighborhoodTable.NeighborhoodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodNull() {
                this[this.tableCheckDuplicateNeighborhoodTable.NeighborhoodColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableCheckDuplicateNeighborhoodTable.TypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableCheckDuplicateNeighborhoodTable.TypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableCheckDuplicateNeighborhoodTable.RollYearColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableCheckDuplicateNeighborhoodTable.RollYearColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35100GetUserDetailsDataTableRowChangeEvent : System.EventArgs {
            
            private f35100GetUserDetailsDataTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GetUserDetailsDataTableRowChangeEvent(f35100GetUserDetailsDataTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GetUserDetailsDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35100NeighborhoodGroupDataTableRowChangeEvent : System.EventArgs {
            
            private f35100NeighborhoodGroupDataTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodGroupDataTableRowChangeEvent(f35100NeighborhoodGroupDataTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodGroupDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35100pclstNeighborhoodDataTableRowChangeEvent : System.EventArgs {
            
            private f35100pclstNeighborhoodDataTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100pclstNeighborhoodDataTableRowChangeEvent(f35100pclstNeighborhoodDataTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100pclstNeighborhoodDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35100NeighborhoodLocksDataTableRowChangeEvent : System.EventArgs {
            
            private f35100NeighborhoodLocksDataTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodLocksDataTableRowChangeEvent(f35100NeighborhoodLocksDataTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodLocksDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35100GrpNeighborhoodRowChangeEvent : System.EventArgs {
            
            private f35100GrpNeighborhoodRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GrpNeighborhoodRowChangeEvent(f35100GrpNeighborhoodRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100GrpNeighborhoodRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class saveNeighborhoodHeaderDetailsRowChangeEvent : System.EventArgs {
            
            private saveNeighborhoodHeaderDetailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveNeighborhoodHeaderDetailsRowChangeEvent(saveNeighborhoodHeaderDetailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveNeighborhoodHeaderDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35100NeighborhoodHeaderDataTableRowChangeEvent : System.EventArgs {
            
            private f35100NeighborhoodHeaderDataTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodHeaderDataTableRowChangeEvent(f35100NeighborhoodHeaderDataTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35100NeighborhoodHeaderDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CheckDuplicateNeighborhoodTableRowChangeEvent : System.EventArgs {
            
            private CheckDuplicateNeighborhoodTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CheckDuplicateNeighborhoodTableRowChangeEvent(CheckDuplicateNeighborhoodTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CheckDuplicateNeighborhoodTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591