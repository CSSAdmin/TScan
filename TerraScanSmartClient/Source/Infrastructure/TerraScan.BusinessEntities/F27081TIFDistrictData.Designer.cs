//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F27081TIFDistrictData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F27081TIFDistrictData : global::System.Data.DataSet {
        
        private F27081TIFSubfundComboboxDataTableDataTable tableF27081TIFSubfundComboboxDataTable;
        
        private F27081TIFDistrictDataTableDataTable tableF27081TIFDistrictDataTable;
        
        private F27081_TIFGridDistrictDataTableDataTable tableF27081_TIFGridDistrictDataTable;
        
        private F27801_TIFSaveDataTableDataTable tableF27801_TIFSaveDataTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F27081TIFDistrictData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F27081TIFDistrictData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["F27081TIFSubfundComboboxDataTable"] != null)) {
                    base.Tables.Add(new F27081TIFSubfundComboboxDataTableDataTable(ds.Tables["F27081TIFSubfundComboboxDataTable"]));
                }
                if ((ds.Tables["F27081TIFDistrictDataTable"] != null)) {
                    base.Tables.Add(new F27081TIFDistrictDataTableDataTable(ds.Tables["F27081TIFDistrictDataTable"]));
                }
                if ((ds.Tables["F27081_TIFGridDistrictDataTable"] != null)) {
                    base.Tables.Add(new F27081_TIFGridDistrictDataTableDataTable(ds.Tables["F27081_TIFGridDistrictDataTable"]));
                }
                if ((ds.Tables["F27801_TIFSaveDataTable"] != null)) {
                    base.Tables.Add(new F27801_TIFSaveDataTableDataTable(ds.Tables["F27801_TIFSaveDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F27081TIFSubfundComboboxDataTableDataTable F27081TIFSubfundComboboxDataTable {
            get {
                return this.tableF27081TIFSubfundComboboxDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F27081TIFDistrictDataTableDataTable F27081TIFDistrictDataTable {
            get {
                return this.tableF27081TIFDistrictDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F27081_TIFGridDistrictDataTableDataTable F27081_TIFGridDistrictDataTable {
            get {
                return this.tableF27081_TIFGridDistrictDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F27801_TIFSaveDataTableDataTable F27801_TIFSaveDataTable {
            get {
                return this.tableF27801_TIFSaveDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F27081TIFDistrictData cln = ((F27081TIFDistrictData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["F27081TIFSubfundComboboxDataTable"] != null)) {
                    base.Tables.Add(new F27081TIFSubfundComboboxDataTableDataTable(ds.Tables["F27081TIFSubfundComboboxDataTable"]));
                }
                if ((ds.Tables["F27081TIFDistrictDataTable"] != null)) {
                    base.Tables.Add(new F27081TIFDistrictDataTableDataTable(ds.Tables["F27081TIFDistrictDataTable"]));
                }
                if ((ds.Tables["F27081_TIFGridDistrictDataTable"] != null)) {
                    base.Tables.Add(new F27081_TIFGridDistrictDataTableDataTable(ds.Tables["F27081_TIFGridDistrictDataTable"]));
                }
                if ((ds.Tables["F27801_TIFSaveDataTable"] != null)) {
                    base.Tables.Add(new F27801_TIFSaveDataTableDataTable(ds.Tables["F27801_TIFSaveDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableF27081TIFSubfundComboboxDataTable = ((F27081TIFSubfundComboboxDataTableDataTable)(base.Tables["F27081TIFSubfundComboboxDataTable"]));
            if ((initTable == true)) {
                if ((this.tableF27081TIFSubfundComboboxDataTable != null)) {
                    this.tableF27081TIFSubfundComboboxDataTable.InitVars();
                }
            }
            this.tableF27081TIFDistrictDataTable = ((F27081TIFDistrictDataTableDataTable)(base.Tables["F27081TIFDistrictDataTable"]));
            if ((initTable == true)) {
                if ((this.tableF27081TIFDistrictDataTable != null)) {
                    this.tableF27081TIFDistrictDataTable.InitVars();
                }
            }
            this.tableF27081_TIFGridDistrictDataTable = ((F27081_TIFGridDistrictDataTableDataTable)(base.Tables["F27081_TIFGridDistrictDataTable"]));
            if ((initTable == true)) {
                if ((this.tableF27081_TIFGridDistrictDataTable != null)) {
                    this.tableF27081_TIFGridDistrictDataTable.InitVars();
                }
            }
            this.tableF27801_TIFSaveDataTable = ((F27801_TIFSaveDataTableDataTable)(base.Tables["F27801_TIFSaveDataTable"]));
            if ((initTable == true)) {
                if ((this.tableF27801_TIFSaveDataTable != null)) {
                    this.tableF27801_TIFSaveDataTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F27081TIFDistrictData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F27081TIFDistrictData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableF27081TIFSubfundComboboxDataTable = new F27081TIFSubfundComboboxDataTableDataTable();
            base.Tables.Add(this.tableF27081TIFSubfundComboboxDataTable);
            this.tableF27081TIFDistrictDataTable = new F27081TIFDistrictDataTableDataTable();
            base.Tables.Add(this.tableF27081TIFDistrictDataTable);
            this.tableF27081_TIFGridDistrictDataTable = new F27081_TIFGridDistrictDataTableDataTable();
            base.Tables.Add(this.tableF27081_TIFGridDistrictDataTable);
            this.tableF27801_TIFSaveDataTable = new F27801_TIFSaveDataTableDataTable();
            base.Tables.Add(this.tableF27801_TIFSaveDataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF27081TIFSubfundComboboxDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF27081TIFDistrictDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF27081_TIFGridDistrictDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF27801_TIFSaveDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F27081TIFDistrictData ds = new F27081TIFDistrictData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void F27081TIFSubfundComboboxDataTableRowChangeEventHandler(object sender, F27081TIFSubfundComboboxDataTableRowChangeEvent e);
        
        public delegate void F27081TIFDistrictDataTableRowChangeEventHandler(object sender, F27081TIFDistrictDataTableRowChangeEvent e);
        
        public delegate void F27081_TIFGridDistrictDataTableRowChangeEventHandler(object sender, F27081_TIFGridDistrictDataTableRowChangeEvent e);
        
        public delegate void F27801_TIFSaveDataTableRowChangeEventHandler(object sender, F27801_TIFSaveDataTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F27081TIFSubfundComboboxDataTableDataTable : global::System.Data.TypedTableBase<F27081TIFSubfundComboboxDataTableRow> {
            
            private global::System.Data.DataColumn columnSubFundID;
            
            private global::System.Data.DataColumn columnSubFund;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFSubfundComboboxDataTableDataTable() {
                this.TableName = "F27081TIFSubfundComboboxDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F27081TIFSubfundComboboxDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F27081TIFSubfundComboboxDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubFundIDColumn {
                get {
                    return this.columnSubFundID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubFundColumn {
                get {
                    return this.columnSubFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFSubfundComboboxDataTableRow this[int index] {
                get {
                    return ((F27081TIFSubfundComboboxDataTableRow)(this.Rows[index]));
                }
            }
            
            public event F27081TIFSubfundComboboxDataTableRowChangeEventHandler F27081TIFSubfundComboboxDataTableRowChanging;
            
            public event F27081TIFSubfundComboboxDataTableRowChangeEventHandler F27081TIFSubfundComboboxDataTableRowChanged;
            
            public event F27081TIFSubfundComboboxDataTableRowChangeEventHandler F27081TIFSubfundComboboxDataTableRowDeleting;
            
            public event F27081TIFSubfundComboboxDataTableRowChangeEventHandler F27081TIFSubfundComboboxDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF27081TIFSubfundComboboxDataTableRow(F27081TIFSubfundComboboxDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFSubfundComboboxDataTableRow AddF27081TIFSubfundComboboxDataTableRow(string SubFund) {
                F27081TIFSubfundComboboxDataTableRow rowF27081TIFSubfundComboboxDataTableRow = ((F27081TIFSubfundComboboxDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SubFund};
                rowF27081TIFSubfundComboboxDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF27081TIFSubfundComboboxDataTableRow);
                return rowF27081TIFSubfundComboboxDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F27081TIFSubfundComboboxDataTableDataTable cln = ((F27081TIFSubfundComboboxDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F27081TIFSubfundComboboxDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSubFundID = base.Columns["SubFundID"];
                this.columnSubFund = base.Columns["SubFund"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSubFundID = new global::System.Data.DataColumn("SubFundID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubFundID);
                this.columnSubFund = new global::System.Data.DataColumn("SubFund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubFund);
                this.columnSubFundID.AutoIncrement = true;
                this.columnSubFundID.AllowDBNull = false;
                this.columnSubFundID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFSubfundComboboxDataTableRow NewF27081TIFSubfundComboboxDataTableRow() {
                return ((F27081TIFSubfundComboboxDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F27081TIFSubfundComboboxDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F27081TIFSubfundComboboxDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F27081TIFSubfundComboboxDataTableRowChanged != null)) {
                    this.F27081TIFSubfundComboboxDataTableRowChanged(this, new F27081TIFSubfundComboboxDataTableRowChangeEvent(((F27081TIFSubfundComboboxDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F27081TIFSubfundComboboxDataTableRowChanging != null)) {
                    this.F27081TIFSubfundComboboxDataTableRowChanging(this, new F27081TIFSubfundComboboxDataTableRowChangeEvent(((F27081TIFSubfundComboboxDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F27081TIFSubfundComboboxDataTableRowDeleted != null)) {
                    this.F27081TIFSubfundComboboxDataTableRowDeleted(this, new F27081TIFSubfundComboboxDataTableRowChangeEvent(((F27081TIFSubfundComboboxDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F27081TIFSubfundComboboxDataTableRowDeleting != null)) {
                    this.F27081TIFSubfundComboboxDataTableRowDeleting(this, new F27081TIFSubfundComboboxDataTableRowChangeEvent(((F27081TIFSubfundComboboxDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF27081TIFSubfundComboboxDataTableRow(F27081TIFSubfundComboboxDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F27081TIFDistrictData ds = new F27081TIFDistrictData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F27081TIFSubfundComboboxDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F27081TIFDistrictDataTableDataTable : global::System.Data.TypedTableBase<F27081TIFDistrictDataTableRow> {
            
            private global::System.Data.DataColumn columnTIFCode;
            
            private global::System.Data.DataColumn columnTIFDistrict;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnSubFundID;
            
            private global::System.Data.DataColumn columnBeginYear;
            
            private global::System.Data.DataColumn columnCityName;
            
            private global::System.Data.DataColumn columnSchoolName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFDistrictDataTableDataTable() {
                this.TableName = "F27081TIFDistrictDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F27081TIFDistrictDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F27081TIFDistrictDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIFCodeColumn {
                get {
                    return this.columnTIFCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIFDistrictColumn {
                get {
                    return this.columnTIFDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubFundIDColumn {
                get {
                    return this.columnSubFundID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeginYearColumn {
                get {
                    return this.columnBeginYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolNameColumn {
                get {
                    return this.columnSchoolName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFDistrictDataTableRow this[int index] {
                get {
                    return ((F27081TIFDistrictDataTableRow)(this.Rows[index]));
                }
            }
            
            public event F27081TIFDistrictDataTableRowChangeEventHandler F27081TIFDistrictDataTableRowChanging;
            
            public event F27081TIFDistrictDataTableRowChangeEventHandler F27081TIFDistrictDataTableRowChanged;
            
            public event F27081TIFDistrictDataTableRowChangeEventHandler F27081TIFDistrictDataTableRowDeleting;
            
            public event F27081TIFDistrictDataTableRowChangeEventHandler F27081TIFDistrictDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF27081TIFDistrictDataTableRow(F27081TIFDistrictDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFDistrictDataTableRow AddF27081TIFDistrictDataTableRow(string TIFCode, string TIFDistrict, int RollYear, int SubFundID, int BeginYear, string CityName, string SchoolName) {
                F27081TIFDistrictDataTableRow rowF27081TIFDistrictDataTableRow = ((F27081TIFDistrictDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TIFCode,
                        TIFDistrict,
                        RollYear,
                        SubFundID,
                        BeginYear,
                        CityName,
                        SchoolName};
                rowF27081TIFDistrictDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF27081TIFDistrictDataTableRow);
                return rowF27081TIFDistrictDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F27081TIFDistrictDataTableDataTable cln = ((F27081TIFDistrictDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F27081TIFDistrictDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTIFCode = base.Columns["TIFCode"];
                this.columnTIFDistrict = base.Columns["TIFDistrict"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnSubFundID = base.Columns["SubFundID"];
                this.columnBeginYear = base.Columns["BeginYear"];
                this.columnCityName = base.Columns["CityName"];
                this.columnSchoolName = base.Columns["SchoolName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTIFCode = new global::System.Data.DataColumn("TIFCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIFCode);
                this.columnTIFDistrict = new global::System.Data.DataColumn("TIFDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIFDistrict);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnSubFundID = new global::System.Data.DataColumn("SubFundID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubFundID);
                this.columnBeginYear = new global::System.Data.DataColumn("BeginYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeginYear);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
                this.columnSchoolName = new global::System.Data.DataColumn("SchoolName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolName);
                this.columnTIFCode.MaxLength = 20;
                this.columnTIFDistrict.MaxLength = 50;
                this.columnRollYear.AllowDBNull = false;
                this.columnSubFundID.AllowDBNull = false;
                this.columnCityName.MaxLength = 50;
                this.columnSchoolName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFDistrictDataTableRow NewF27081TIFDistrictDataTableRow() {
                return ((F27081TIFDistrictDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F27081TIFDistrictDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F27081TIFDistrictDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F27081TIFDistrictDataTableRowChanged != null)) {
                    this.F27081TIFDistrictDataTableRowChanged(this, new F27081TIFDistrictDataTableRowChangeEvent(((F27081TIFDistrictDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F27081TIFDistrictDataTableRowChanging != null)) {
                    this.F27081TIFDistrictDataTableRowChanging(this, new F27081TIFDistrictDataTableRowChangeEvent(((F27081TIFDistrictDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F27081TIFDistrictDataTableRowDeleted != null)) {
                    this.F27081TIFDistrictDataTableRowDeleted(this, new F27081TIFDistrictDataTableRowChangeEvent(((F27081TIFDistrictDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F27081TIFDistrictDataTableRowDeleting != null)) {
                    this.F27081TIFDistrictDataTableRowDeleting(this, new F27081TIFDistrictDataTableRowChangeEvent(((F27081TIFDistrictDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF27081TIFDistrictDataTableRow(F27081TIFDistrictDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F27081TIFDistrictData ds = new F27081TIFDistrictData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F27081TIFDistrictDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F27081_TIFGridDistrictDataTableDataTable : global::System.Data.TypedTableBase<F27081_TIFGridDistrictDataTableRow> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnDistrictID;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnTotalValue;
            
            private global::System.Data.DataColumn columnBaseValue;
            
            private global::System.Data.DataColumn columnExcessValue;
            
            private global::System.Data.DataColumn columnNumberOfParcels;
            
            private global::System.Data.DataColumn columnSummedTotalValue;
            
            private global::System.Data.DataColumn columnSummedBaseValue;
            
            private global::System.Data.DataColumn columnSummedExcessValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081_TIFGridDistrictDataTableDataTable() {
                this.TableName = "F27081_TIFGridDistrictDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F27081_TIFGridDistrictDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F27081_TIFGridDistrictDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictIDColumn {
                get {
                    return this.columnDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalValueColumn {
                get {
                    return this.columnTotalValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseValueColumn {
                get {
                    return this.columnBaseValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExcessValueColumn {
                get {
                    return this.columnExcessValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfParcelsColumn {
                get {
                    return this.columnNumberOfParcels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SummedTotalValueColumn {
                get {
                    return this.columnSummedTotalValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SummedBaseValueColumn {
                get {
                    return this.columnSummedBaseValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SummedExcessValueColumn {
                get {
                    return this.columnSummedExcessValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081_TIFGridDistrictDataTableRow this[int index] {
                get {
                    return ((F27081_TIFGridDistrictDataTableRow)(this.Rows[index]));
                }
            }
            
            public event F27081_TIFGridDistrictDataTableRowChangeEventHandler F27081_TIFGridDistrictDataTableRowChanging;
            
            public event F27081_TIFGridDistrictDataTableRowChangeEventHandler F27081_TIFGridDistrictDataTableRowChanged;
            
            public event F27081_TIFGridDistrictDataTableRowChangeEventHandler F27081_TIFGridDistrictDataTableRowDeleting;
            
            public event F27081_TIFGridDistrictDataTableRowChangeEventHandler F27081_TIFGridDistrictDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF27081_TIFGridDistrictDataTableRow(F27081_TIFGridDistrictDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081_TIFGridDistrictDataTableRow AddF27081_TIFGridDistrictDataTableRow(string ParcelNumber, string District, decimal TotalValue, decimal BaseValue, decimal ExcessValue, int NumberOfParcels, decimal SummedTotalValue, decimal SummedBaseValue, decimal SummedExcessValue) {
                F27081_TIFGridDistrictDataTableRow rowF27081_TIFGridDistrictDataTableRow = ((F27081_TIFGridDistrictDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ParcelNumber,
                        null,
                        District,
                        TotalValue,
                        BaseValue,
                        ExcessValue,
                        NumberOfParcels,
                        SummedTotalValue,
                        SummedBaseValue,
                        SummedExcessValue};
                rowF27081_TIFGridDistrictDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF27081_TIFGridDistrictDataTableRow);
                return rowF27081_TIFGridDistrictDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F27081_TIFGridDistrictDataTableDataTable cln = ((F27081_TIFGridDistrictDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F27081_TIFGridDistrictDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnDistrictID = base.Columns["DistrictID"];
                this.columnDistrict = base.Columns["District"];
                this.columnTotalValue = base.Columns["TotalValue"];
                this.columnBaseValue = base.Columns["BaseValue"];
                this.columnExcessValue = base.Columns["ExcessValue"];
                this.columnNumberOfParcels = base.Columns["NumberOfParcels"];
                this.columnSummedTotalValue = base.Columns["SummedTotalValue"];
                this.columnSummedBaseValue = base.Columns["SummedBaseValue"];
                this.columnSummedExcessValue = base.Columns["SummedExcessValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnDistrictID = new global::System.Data.DataColumn("DistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictID);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnTotalValue = new global::System.Data.DataColumn("TotalValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalValue);
                this.columnBaseValue = new global::System.Data.DataColumn("BaseValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseValue);
                this.columnExcessValue = new global::System.Data.DataColumn("ExcessValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcessValue);
                this.columnNumberOfParcels = new global::System.Data.DataColumn("NumberOfParcels", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfParcels);
                this.columnSummedTotalValue = new global::System.Data.DataColumn("SummedTotalValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummedTotalValue);
                this.columnSummedBaseValue = new global::System.Data.DataColumn("SummedBaseValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummedBaseValue);
                this.columnSummedExcessValue = new global::System.Data.DataColumn("SummedExcessValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummedExcessValue);
                this.columnParcelID.AutoIncrement = true;
                this.columnParcelID.AllowDBNull = false;
                this.columnParcelID.ReadOnly = true;
                this.columnParcelNumber.AllowDBNull = false;
                this.columnParcelNumber.MaxLength = 50;
                this.columnDistrictID.AutoIncrement = true;
                this.columnDistrictID.AllowDBNull = false;
                this.columnDistrictID.ReadOnly = true;
                this.columnDistrict.AllowDBNull = false;
                this.columnDistrict.MaxLength = 50;
                this.columnTotalValue.ReadOnly = true;
                this.columnBaseValue.ReadOnly = true;
                this.columnExcessValue.ReadOnly = true;
                this.columnNumberOfParcels.ReadOnly = true;
                this.columnSummedTotalValue.ReadOnly = true;
                this.columnSummedBaseValue.ReadOnly = true;
                this.columnSummedExcessValue.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081_TIFGridDistrictDataTableRow NewF27081_TIFGridDistrictDataTableRow() {
                return ((F27081_TIFGridDistrictDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F27081_TIFGridDistrictDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F27081_TIFGridDistrictDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F27081_TIFGridDistrictDataTableRowChanged != null)) {
                    this.F27081_TIFGridDistrictDataTableRowChanged(this, new F27081_TIFGridDistrictDataTableRowChangeEvent(((F27081_TIFGridDistrictDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F27081_TIFGridDistrictDataTableRowChanging != null)) {
                    this.F27081_TIFGridDistrictDataTableRowChanging(this, new F27081_TIFGridDistrictDataTableRowChangeEvent(((F27081_TIFGridDistrictDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F27081_TIFGridDistrictDataTableRowDeleted != null)) {
                    this.F27081_TIFGridDistrictDataTableRowDeleted(this, new F27081_TIFGridDistrictDataTableRowChangeEvent(((F27081_TIFGridDistrictDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F27081_TIFGridDistrictDataTableRowDeleting != null)) {
                    this.F27081_TIFGridDistrictDataTableRowDeleting(this, new F27081_TIFGridDistrictDataTableRowChangeEvent(((F27081_TIFGridDistrictDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF27081_TIFGridDistrictDataTableRow(F27081_TIFGridDistrictDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F27081TIFDistrictData ds = new F27081TIFDistrictData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F27081_TIFGridDistrictDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F27801_TIFSaveDataTableDataTable : global::System.Data.TypedTableBase<F27801_TIFSaveDataTableRow> {
            
            private global::System.Data.DataColumn columnTIFCode;
            
            private global::System.Data.DataColumn columnTIFDistrict;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnSubFundID;
            
            private global::System.Data.DataColumn columnBeginYear;
            
            private global::System.Data.DataColumn columnCityName;
            
            private global::System.Data.DataColumn columnSchoolName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27801_TIFSaveDataTableDataTable() {
                this.TableName = "F27801_TIFSaveDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F27801_TIFSaveDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F27801_TIFSaveDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIFCodeColumn {
                get {
                    return this.columnTIFCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIFDistrictColumn {
                get {
                    return this.columnTIFDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubFundIDColumn {
                get {
                    return this.columnSubFundID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeginYearColumn {
                get {
                    return this.columnBeginYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolNameColumn {
                get {
                    return this.columnSchoolName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27801_TIFSaveDataTableRow this[int index] {
                get {
                    return ((F27801_TIFSaveDataTableRow)(this.Rows[index]));
                }
            }
            
            public event F27801_TIFSaveDataTableRowChangeEventHandler F27801_TIFSaveDataTableRowChanging;
            
            public event F27801_TIFSaveDataTableRowChangeEventHandler F27801_TIFSaveDataTableRowChanged;
            
            public event F27801_TIFSaveDataTableRowChangeEventHandler F27801_TIFSaveDataTableRowDeleting;
            
            public event F27801_TIFSaveDataTableRowChangeEventHandler F27801_TIFSaveDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF27801_TIFSaveDataTableRow(F27801_TIFSaveDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27801_TIFSaveDataTableRow AddF27801_TIFSaveDataTableRow(string TIFCode, string TIFDistrict, int RollYear, string SubFundID, int BeginYear, string CityName, string SchoolName) {
                F27801_TIFSaveDataTableRow rowF27801_TIFSaveDataTableRow = ((F27801_TIFSaveDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TIFCode,
                        TIFDistrict,
                        RollYear,
                        SubFundID,
                        BeginYear,
                        CityName,
                        SchoolName};
                rowF27801_TIFSaveDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF27801_TIFSaveDataTableRow);
                return rowF27801_TIFSaveDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F27801_TIFSaveDataTableDataTable cln = ((F27801_TIFSaveDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F27801_TIFSaveDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTIFCode = base.Columns["TIFCode"];
                this.columnTIFDistrict = base.Columns["TIFDistrict"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnSubFundID = base.Columns["SubFundID"];
                this.columnBeginYear = base.Columns["BeginYear"];
                this.columnCityName = base.Columns["CityName"];
                this.columnSchoolName = base.Columns["SchoolName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTIFCode = new global::System.Data.DataColumn("TIFCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIFCode);
                this.columnTIFDistrict = new global::System.Data.DataColumn("TIFDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIFDistrict);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnSubFundID = new global::System.Data.DataColumn("SubFundID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubFundID);
                this.columnBeginYear = new global::System.Data.DataColumn("BeginYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeginYear);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
                this.columnSchoolName = new global::System.Data.DataColumn("SchoolName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27801_TIFSaveDataTableRow NewF27801_TIFSaveDataTableRow() {
                return ((F27801_TIFSaveDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F27801_TIFSaveDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F27801_TIFSaveDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F27801_TIFSaveDataTableRowChanged != null)) {
                    this.F27801_TIFSaveDataTableRowChanged(this, new F27801_TIFSaveDataTableRowChangeEvent(((F27801_TIFSaveDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F27801_TIFSaveDataTableRowChanging != null)) {
                    this.F27801_TIFSaveDataTableRowChanging(this, new F27801_TIFSaveDataTableRowChangeEvent(((F27801_TIFSaveDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F27801_TIFSaveDataTableRowDeleted != null)) {
                    this.F27801_TIFSaveDataTableRowDeleted(this, new F27801_TIFSaveDataTableRowChangeEvent(((F27801_TIFSaveDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F27801_TIFSaveDataTableRowDeleting != null)) {
                    this.F27801_TIFSaveDataTableRowDeleting(this, new F27801_TIFSaveDataTableRowChangeEvent(((F27801_TIFSaveDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF27801_TIFSaveDataTableRow(F27801_TIFSaveDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F27081TIFDistrictData ds = new F27081TIFDistrictData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F27801_TIFSaveDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F27081TIFSubfundComboboxDataTableRow : global::System.Data.DataRow {
            
            private F27081TIFSubfundComboboxDataTableDataTable tableF27081TIFSubfundComboboxDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F27081TIFSubfundComboboxDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF27081TIFSubfundComboboxDataTable = ((F27081TIFSubfundComboboxDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubFundID {
                get {
                    return ((int)(this[this.tableF27081TIFSubfundComboboxDataTable.SubFundIDColumn]));
                }
                set {
                    this[this.tableF27081TIFSubfundComboboxDataTable.SubFundIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubFund {
                get {
                    try {
                        return ((string)(this[this.tableF27081TIFSubfundComboboxDataTable.SubFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubFund\' in table \'F27081TIFSubfundComboboxDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableF27081TIFSubfundComboboxDataTable.SubFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubFundNull() {
                return this.IsNull(this.tableF27081TIFSubfundComboboxDataTable.SubFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubFundNull() {
                this[this.tableF27081TIFSubfundComboboxDataTable.SubFundColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F27081TIFDistrictDataTableRow : global::System.Data.DataRow {
            
            private F27081TIFDistrictDataTableDataTable tableF27081TIFDistrictDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F27081TIFDistrictDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF27081TIFDistrictDataTable = ((F27081TIFDistrictDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIFCode {
                get {
                    try {
                        return ((string)(this[this.tableF27081TIFDistrictDataTable.TIFCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIFCode\' in table \'F27081TIFDistrictDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27081TIFDistrictDataTable.TIFCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIFDistrict {
                get {
                    try {
                        return ((string)(this[this.tableF27081TIFDistrictDataTable.TIFDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIFDistrict\' in table \'F27081TIFDistrictDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableF27081TIFDistrictDataTable.TIFDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RollYear {
                get {
                    return ((int)(this[this.tableF27081TIFDistrictDataTable.RollYearColumn]));
                }
                set {
                    this[this.tableF27081TIFDistrictDataTable.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubFundID {
                get {
                    return ((int)(this[this.tableF27081TIFDistrictDataTable.SubFundIDColumn]));
                }
                set {
                    this[this.tableF27081TIFDistrictDataTable.SubFundIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BeginYear {
                get {
                    try {
                        return ((int)(this[this.tableF27081TIFDistrictDataTable.BeginYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeginYear\' in table \'F27081TIFDistrictDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableF27081TIFDistrictDataTable.BeginYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableF27081TIFDistrictDataTable.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'F27081TIFDistrictDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27081TIFDistrictDataTable.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchoolName {
                get {
                    try {
                        return ((string)(this[this.tableF27081TIFDistrictDataTable.SchoolNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolName\' in table \'F27081TIFDistrictDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableF27081TIFDistrictDataTable.SchoolNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIFCodeNull() {
                return this.IsNull(this.tableF27081TIFDistrictDataTable.TIFCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIFCodeNull() {
                this[this.tableF27081TIFDistrictDataTable.TIFCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIFDistrictNull() {
                return this.IsNull(this.tableF27081TIFDistrictDataTable.TIFDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIFDistrictNull() {
                this[this.tableF27081TIFDistrictDataTable.TIFDistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeginYearNull() {
                return this.IsNull(this.tableF27081TIFDistrictDataTable.BeginYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeginYearNull() {
                this[this.tableF27081TIFDistrictDataTable.BeginYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableF27081TIFDistrictDataTable.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNameNull() {
                this[this.tableF27081TIFDistrictDataTable.CityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolNameNull() {
                return this.IsNull(this.tableF27081TIFDistrictDataTable.SchoolNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolNameNull() {
                this[this.tableF27081TIFDistrictDataTable.SchoolNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F27081_TIFGridDistrictDataTableRow : global::System.Data.DataRow {
            
            private F27081_TIFGridDistrictDataTableDataTable tableF27081_TIFGridDistrictDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F27081_TIFGridDistrictDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF27081_TIFGridDistrictDataTable = ((F27081_TIFGridDistrictDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    return ((int)(this[this.tableF27081_TIFGridDistrictDataTable.ParcelIDColumn]));
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    return ((string)(this[this.tableF27081_TIFGridDistrictDataTable.ParcelNumberColumn]));
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DistrictID {
                get {
                    return ((int)(this[this.tableF27081_TIFGridDistrictDataTable.DistrictIDColumn]));
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.DistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    return ((string)(this[this.tableF27081_TIFGridDistrictDataTable.DistrictColumn]));
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalValue {
                get {
                    try {
                        return ((decimal)(this[this.tableF27081_TIFGridDistrictDataTable.TotalValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalValue\' in table \'F27081_TIFGridDistrictDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.TotalValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseValue {
                get {
                    try {
                        return ((decimal)(this[this.tableF27081_TIFGridDistrictDataTable.BaseValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseValue\' in table \'F27081_TIFGridDistrictDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.BaseValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExcessValue {
                get {
                    try {
                        return ((decimal)(this[this.tableF27081_TIFGridDistrictDataTable.ExcessValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExcessValue\' in table \'F27081_TIFGridDistrictDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.ExcessValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfParcels {
                get {
                    try {
                        return ((int)(this[this.tableF27081_TIFGridDistrictDataTable.NumberOfParcelsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfParcels\' in table \'F27081_TIFGridDistrictDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.NumberOfParcelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SummedTotalValue {
                get {
                    try {
                        return ((decimal)(this[this.tableF27081_TIFGridDistrictDataTable.SummedTotalValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SummedTotalValue\' in table \'F27081_TIFGridDistrictDataTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.SummedTotalValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SummedBaseValue {
                get {
                    try {
                        return ((decimal)(this[this.tableF27081_TIFGridDistrictDataTable.SummedBaseValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SummedBaseValue\' in table \'F27081_TIFGridDistrictDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.SummedBaseValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SummedExcessValue {
                get {
                    try {
                        return ((decimal)(this[this.tableF27081_TIFGridDistrictDataTable.SummedExcessValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SummedExcessValue\' in table \'F27081_TIFGridDistrictDataTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27081_TIFGridDistrictDataTable.SummedExcessValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalValueNull() {
                return this.IsNull(this.tableF27081_TIFGridDistrictDataTable.TotalValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalValueNull() {
                this[this.tableF27081_TIFGridDistrictDataTable.TotalValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseValueNull() {
                return this.IsNull(this.tableF27081_TIFGridDistrictDataTable.BaseValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseValueNull() {
                this[this.tableF27081_TIFGridDistrictDataTable.BaseValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExcessValueNull() {
                return this.IsNull(this.tableF27081_TIFGridDistrictDataTable.ExcessValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExcessValueNull() {
                this[this.tableF27081_TIFGridDistrictDataTable.ExcessValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfParcelsNull() {
                return this.IsNull(this.tableF27081_TIFGridDistrictDataTable.NumberOfParcelsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfParcelsNull() {
                this[this.tableF27081_TIFGridDistrictDataTable.NumberOfParcelsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSummedTotalValueNull() {
                return this.IsNull(this.tableF27081_TIFGridDistrictDataTable.SummedTotalValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSummedTotalValueNull() {
                this[this.tableF27081_TIFGridDistrictDataTable.SummedTotalValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSummedBaseValueNull() {
                return this.IsNull(this.tableF27081_TIFGridDistrictDataTable.SummedBaseValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSummedBaseValueNull() {
                this[this.tableF27081_TIFGridDistrictDataTable.SummedBaseValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSummedExcessValueNull() {
                return this.IsNull(this.tableF27081_TIFGridDistrictDataTable.SummedExcessValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSummedExcessValueNull() {
                this[this.tableF27081_TIFGridDistrictDataTable.SummedExcessValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F27801_TIFSaveDataTableRow : global::System.Data.DataRow {
            
            private F27801_TIFSaveDataTableDataTable tableF27801_TIFSaveDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F27801_TIFSaveDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF27801_TIFSaveDataTable = ((F27801_TIFSaveDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIFCode {
                get {
                    try {
                        return ((string)(this[this.tableF27801_TIFSaveDataTable.TIFCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIFCode\' in table \'F27801_TIFSaveDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27801_TIFSaveDataTable.TIFCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIFDistrict {
                get {
                    try {
                        return ((string)(this[this.tableF27801_TIFSaveDataTable.TIFDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIFDistrict\' in table \'F27801_TIFSaveDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27801_TIFSaveDataTable.TIFDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RollYear {
                get {
                    try {
                        return ((int)(this[this.tableF27801_TIFSaveDataTable.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'F27801_TIFSaveDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27801_TIFSaveDataTable.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubFundID {
                get {
                    try {
                        return ((string)(this[this.tableF27801_TIFSaveDataTable.SubFundIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubFundID\' in table \'F27801_TIFSaveDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27801_TIFSaveDataTable.SubFundIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BeginYear {
                get {
                    try {
                        return ((int)(this[this.tableF27801_TIFSaveDataTable.BeginYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeginYear\' in table \'F27801_TIFSaveDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27801_TIFSaveDataTable.BeginYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableF27801_TIFSaveDataTable.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'F27801_TIFSaveDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27801_TIFSaveDataTable.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchoolName {
                get {
                    try {
                        return ((string)(this[this.tableF27801_TIFSaveDataTable.SchoolNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolName\' in table \'F27801_TIFSaveDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF27801_TIFSaveDataTable.SchoolNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIFCodeNull() {
                return this.IsNull(this.tableF27801_TIFSaveDataTable.TIFCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIFCodeNull() {
                this[this.tableF27801_TIFSaveDataTable.TIFCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIFDistrictNull() {
                return this.IsNull(this.tableF27801_TIFSaveDataTable.TIFDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIFDistrictNull() {
                this[this.tableF27801_TIFSaveDataTable.TIFDistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableF27801_TIFSaveDataTable.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableF27801_TIFSaveDataTable.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubFundIDNull() {
                return this.IsNull(this.tableF27801_TIFSaveDataTable.SubFundIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubFundIDNull() {
                this[this.tableF27801_TIFSaveDataTable.SubFundIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeginYearNull() {
                return this.IsNull(this.tableF27801_TIFSaveDataTable.BeginYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeginYearNull() {
                this[this.tableF27801_TIFSaveDataTable.BeginYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableF27801_TIFSaveDataTable.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNameNull() {
                this[this.tableF27801_TIFSaveDataTable.CityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolNameNull() {
                return this.IsNull(this.tableF27801_TIFSaveDataTable.SchoolNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolNameNull() {
                this[this.tableF27801_TIFSaveDataTable.SchoolNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F27081TIFSubfundComboboxDataTableRowChangeEvent : global::System.EventArgs {
            
            private F27081TIFSubfundComboboxDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFSubfundComboboxDataTableRowChangeEvent(F27081TIFSubfundComboboxDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFSubfundComboboxDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F27081TIFDistrictDataTableRowChangeEvent : global::System.EventArgs {
            
            private F27081TIFDistrictDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFDistrictDataTableRowChangeEvent(F27081TIFDistrictDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081TIFDistrictDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F27081_TIFGridDistrictDataTableRowChangeEvent : global::System.EventArgs {
            
            private F27081_TIFGridDistrictDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081_TIFGridDistrictDataTableRowChangeEvent(F27081_TIFGridDistrictDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27081_TIFGridDistrictDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F27801_TIFSaveDataTableRowChangeEvent : global::System.EventArgs {
            
            private F27801_TIFSaveDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27801_TIFSaveDataTableRowChangeEvent(F27801_TIFSaveDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F27801_TIFSaveDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591