//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F35081CentralAssessedGridData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F35081CentralAssessedGridData : global::System.Data.DataSet {
        
        private f35081_GetCentrallyAssessedItemRateDataTable tablef35081_GetCentrallyAssessedItemRate;
        
        private f35081_InsertGridDetailsDataTable tablef35081_InsertGridDetails;
        
        private f35081_GetCentrallyAssessedItemDataTable tablef35081_GetCentrallyAssessedItem;
        
        private CentralAssessmentListDataTable tableCentralAssessmentList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F35081CentralAssessedGridData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F35081CentralAssessedGridData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f35081_GetCentrallyAssessedItemRate"] != null)) {
                    base.Tables.Add(new f35081_GetCentrallyAssessedItemRateDataTable(ds.Tables["f35081_GetCentrallyAssessedItemRate"]));
                }
                if ((ds.Tables["f35081_InsertGridDetails"] != null)) {
                    base.Tables.Add(new f35081_InsertGridDetailsDataTable(ds.Tables["f35081_InsertGridDetails"]));
                }
                if ((ds.Tables["f35081_GetCentrallyAssessedItem"] != null)) {
                    base.Tables.Add(new f35081_GetCentrallyAssessedItemDataTable(ds.Tables["f35081_GetCentrallyAssessedItem"]));
                }
                if ((ds.Tables["CentralAssessmentList"] != null)) {
                    base.Tables.Add(new CentralAssessmentListDataTable(ds.Tables["CentralAssessmentList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35081_GetCentrallyAssessedItemRateDataTable f35081_GetCentrallyAssessedItemRate {
            get {
                return this.tablef35081_GetCentrallyAssessedItemRate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35081_InsertGridDetailsDataTable f35081_InsertGridDetails {
            get {
                return this.tablef35081_InsertGridDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35081_GetCentrallyAssessedItemDataTable f35081_GetCentrallyAssessedItem {
            get {
                return this.tablef35081_GetCentrallyAssessedItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CentralAssessmentListDataTable CentralAssessmentList {
            get {
                return this.tableCentralAssessmentList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F35081CentralAssessedGridData cln = ((F35081CentralAssessedGridData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f35081_GetCentrallyAssessedItemRate"] != null)) {
                    base.Tables.Add(new f35081_GetCentrallyAssessedItemRateDataTable(ds.Tables["f35081_GetCentrallyAssessedItemRate"]));
                }
                if ((ds.Tables["f35081_InsertGridDetails"] != null)) {
                    base.Tables.Add(new f35081_InsertGridDetailsDataTable(ds.Tables["f35081_InsertGridDetails"]));
                }
                if ((ds.Tables["f35081_GetCentrallyAssessedItem"] != null)) {
                    base.Tables.Add(new f35081_GetCentrallyAssessedItemDataTable(ds.Tables["f35081_GetCentrallyAssessedItem"]));
                }
                if ((ds.Tables["CentralAssessmentList"] != null)) {
                    base.Tables.Add(new CentralAssessmentListDataTable(ds.Tables["CentralAssessmentList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef35081_GetCentrallyAssessedItemRate = ((f35081_GetCentrallyAssessedItemRateDataTable)(base.Tables["f35081_GetCentrallyAssessedItemRate"]));
            if ((initTable == true)) {
                if ((this.tablef35081_GetCentrallyAssessedItemRate != null)) {
                    this.tablef35081_GetCentrallyAssessedItemRate.InitVars();
                }
            }
            this.tablef35081_InsertGridDetails = ((f35081_InsertGridDetailsDataTable)(base.Tables["f35081_InsertGridDetails"]));
            if ((initTable == true)) {
                if ((this.tablef35081_InsertGridDetails != null)) {
                    this.tablef35081_InsertGridDetails.InitVars();
                }
            }
            this.tablef35081_GetCentrallyAssessedItem = ((f35081_GetCentrallyAssessedItemDataTable)(base.Tables["f35081_GetCentrallyAssessedItem"]));
            if ((initTable == true)) {
                if ((this.tablef35081_GetCentrallyAssessedItem != null)) {
                    this.tablef35081_GetCentrallyAssessedItem.InitVars();
                }
            }
            this.tableCentralAssessmentList = ((CentralAssessmentListDataTable)(base.Tables["CentralAssessmentList"]));
            if ((initTable == true)) {
                if ((this.tableCentralAssessmentList != null)) {
                    this.tableCentralAssessmentList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F35081CentralAssessedGridData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F35081CentralAssessedGridData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef35081_GetCentrallyAssessedItemRate = new f35081_GetCentrallyAssessedItemRateDataTable();
            base.Tables.Add(this.tablef35081_GetCentrallyAssessedItemRate);
            this.tablef35081_InsertGridDetails = new f35081_InsertGridDetailsDataTable();
            base.Tables.Add(this.tablef35081_InsertGridDetails);
            this.tablef35081_GetCentrallyAssessedItem = new f35081_GetCentrallyAssessedItemDataTable();
            base.Tables.Add(this.tablef35081_GetCentrallyAssessedItem);
            this.tableCentralAssessmentList = new CentralAssessmentListDataTable();
            base.Tables.Add(this.tableCentralAssessmentList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35081_GetCentrallyAssessedItemRate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35081_InsertGridDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35081_GetCentrallyAssessedItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCentralAssessmentList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F35081CentralAssessedGridData ds = new F35081CentralAssessedGridData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f35081_GetCentrallyAssessedItemRateRowChangeEventHandler(object sender, f35081_GetCentrallyAssessedItemRateRowChangeEvent e);
        
        public delegate void f35081_InsertGridDetailsRowChangeEventHandler(object sender, f35081_InsertGridDetailsRowChangeEvent e);
        
        public delegate void f35081_GetCentrallyAssessedItemRowChangeEventHandler(object sender, f35081_GetCentrallyAssessedItemRowChangeEvent e);
        
        public delegate void CentralAssessmentListRowChangeEventHandler(object sender, CentralAssessmentListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35081_GetCentrallyAssessedItemRateDataTable : global::System.Data.TypedTableBase<f35081_GetCentrallyAssessedItemRateRow> {
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnGrossRealTax;
            
            private global::System.Data.DataColumn columnTaxCredit;
            
            private global::System.Data.DataColumn columnNERETax;
            
            private global::System.Data.DataColumn columnPPTax;
            
            private global::System.Data.DataColumn columnTotalTax;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRateDataTable() {
                this.TableName = "f35081_GetCentrallyAssessedItemRate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35081_GetCentrallyAssessedItemRateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35081_GetCentrallyAssessedItemRateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossRealTaxColumn {
                get {
                    return this.columnGrossRealTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxCreditColumn {
                get {
                    return this.columnTaxCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NERETaxColumn {
                get {
                    return this.columnNERETax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PPTaxColumn {
                get {
                    return this.columnPPTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalTaxColumn {
                get {
                    return this.columnTotalTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRateRow this[int index] {
                get {
                    return ((f35081_GetCentrallyAssessedItemRateRow)(this.Rows[index]));
                }
            }
            
            public event f35081_GetCentrallyAssessedItemRateRowChangeEventHandler f35081_GetCentrallyAssessedItemRateRowChanging;
            
            public event f35081_GetCentrallyAssessedItemRateRowChangeEventHandler f35081_GetCentrallyAssessedItemRateRowChanged;
            
            public event f35081_GetCentrallyAssessedItemRateRowChangeEventHandler f35081_GetCentrallyAssessedItemRateRowDeleting;
            
            public event f35081_GetCentrallyAssessedItemRateRowChangeEventHandler f35081_GetCentrallyAssessedItemRateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35081_GetCentrallyAssessedItemRateRow(f35081_GetCentrallyAssessedItemRateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRateRow Addf35081_GetCentrallyAssessedItemRateRow(decimal Total, string Description, decimal Rate, decimal GrossRealTax, decimal TaxCredit, decimal NERETax, decimal PPTax, decimal TotalTax) {
                f35081_GetCentrallyAssessedItemRateRow rowf35081_GetCentrallyAssessedItemRateRow = ((f35081_GetCentrallyAssessedItemRateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Total,
                        Description,
                        Rate,
                        GrossRealTax,
                        TaxCredit,
                        NERETax,
                        PPTax,
                        TotalTax};
                rowf35081_GetCentrallyAssessedItemRateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf35081_GetCentrallyAssessedItemRateRow);
                return rowf35081_GetCentrallyAssessedItemRateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f35081_GetCentrallyAssessedItemRateDataTable cln = ((f35081_GetCentrallyAssessedItemRateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f35081_GetCentrallyAssessedItemRateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTotal = base.Columns["Total"];
                this.columnDescription = base.Columns["Description"];
                this.columnRate = base.Columns["Rate"];
                this.columnGrossRealTax = base.Columns["GrossRealTax"];
                this.columnTaxCredit = base.Columns["TaxCredit"];
                this.columnNERETax = base.Columns["NERETax"];
                this.columnPPTax = base.Columns["PPTax"];
                this.columnTotalTax = base.Columns["TotalTax"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnGrossRealTax = new global::System.Data.DataColumn("GrossRealTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossRealTax);
                this.columnTaxCredit = new global::System.Data.DataColumn("TaxCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxCredit);
                this.columnNERETax = new global::System.Data.DataColumn("NERETax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNERETax);
                this.columnPPTax = new global::System.Data.DataColumn("PPTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPTax);
                this.columnTotalTax = new global::System.Data.DataColumn("TotalTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTax);
                this.columnDescription.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRateRow Newf35081_GetCentrallyAssessedItemRateRow() {
                return ((f35081_GetCentrallyAssessedItemRateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f35081_GetCentrallyAssessedItemRateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f35081_GetCentrallyAssessedItemRateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35081_GetCentrallyAssessedItemRateRowChanged != null)) {
                    this.f35081_GetCentrallyAssessedItemRateRowChanged(this, new f35081_GetCentrallyAssessedItemRateRowChangeEvent(((f35081_GetCentrallyAssessedItemRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35081_GetCentrallyAssessedItemRateRowChanging != null)) {
                    this.f35081_GetCentrallyAssessedItemRateRowChanging(this, new f35081_GetCentrallyAssessedItemRateRowChangeEvent(((f35081_GetCentrallyAssessedItemRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35081_GetCentrallyAssessedItemRateRowDeleted != null)) {
                    this.f35081_GetCentrallyAssessedItemRateRowDeleted(this, new f35081_GetCentrallyAssessedItemRateRowChangeEvent(((f35081_GetCentrallyAssessedItemRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35081_GetCentrallyAssessedItemRateRowDeleting != null)) {
                    this.f35081_GetCentrallyAssessedItemRateRowDeleting(this, new f35081_GetCentrallyAssessedItemRateRowChangeEvent(((f35081_GetCentrallyAssessedItemRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35081_GetCentrallyAssessedItemRateRow(f35081_GetCentrallyAssessedItemRateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35081CentralAssessedGridData ds = new F35081CentralAssessedGridData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35081_GetCentrallyAssessedItemRateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35081_InsertGridDetailsDataTable : global::System.Data.TypedTableBase<f35081_InsertGridDetailsRow> {
            
            private global::System.Data.DataColumn columnCentrallyAssessedID;
            
            private global::System.Data.DataColumn columnFundID;
            
            private global::System.Data.DataColumn columnPersonalProperty;
            
            private global::System.Data.DataColumn columnRealProperty;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_InsertGridDetailsDataTable() {
                this.TableName = "f35081_InsertGridDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35081_InsertGridDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35081_InsertGridDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CentrallyAssessedIDColumn {
                get {
                    return this.columnCentrallyAssessedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FundIDColumn {
                get {
                    return this.columnFundID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalPropertyColumn {
                get {
                    return this.columnPersonalProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RealPropertyColumn {
                get {
                    return this.columnRealProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_InsertGridDetailsRow this[int index] {
                get {
                    return ((f35081_InsertGridDetailsRow)(this.Rows[index]));
                }
            }
            
            public event f35081_InsertGridDetailsRowChangeEventHandler f35081_InsertGridDetailsRowChanging;
            
            public event f35081_InsertGridDetailsRowChangeEventHandler f35081_InsertGridDetailsRowChanged;
            
            public event f35081_InsertGridDetailsRowChangeEventHandler f35081_InsertGridDetailsRowDeleting;
            
            public event f35081_InsertGridDetailsRowChangeEventHandler f35081_InsertGridDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35081_InsertGridDetailsRow(f35081_InsertGridDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_InsertGridDetailsRow Addf35081_InsertGridDetailsRow(string CentrallyAssessedID, string FundID, string PersonalProperty, string RealProperty, string Total, string Description) {
                f35081_InsertGridDetailsRow rowf35081_InsertGridDetailsRow = ((f35081_InsertGridDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CentrallyAssessedID,
                        FundID,
                        PersonalProperty,
                        RealProperty,
                        Total,
                        Description};
                rowf35081_InsertGridDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf35081_InsertGridDetailsRow);
                return rowf35081_InsertGridDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f35081_InsertGridDetailsDataTable cln = ((f35081_InsertGridDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f35081_InsertGridDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCentrallyAssessedID = base.Columns["CentrallyAssessedID"];
                this.columnFundID = base.Columns["FundID"];
                this.columnPersonalProperty = base.Columns["PersonalProperty"];
                this.columnRealProperty = base.Columns["RealProperty"];
                this.columnTotal = base.Columns["Total"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCentrallyAssessedID = new global::System.Data.DataColumn("CentrallyAssessedID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentrallyAssessedID);
                this.columnFundID = new global::System.Data.DataColumn("FundID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFundID);
                this.columnPersonalProperty = new global::System.Data.DataColumn("PersonalProperty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalProperty);
                this.columnRealProperty = new global::System.Data.DataColumn("RealProperty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealProperty);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDescription.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_InsertGridDetailsRow Newf35081_InsertGridDetailsRow() {
                return ((f35081_InsertGridDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f35081_InsertGridDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f35081_InsertGridDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35081_InsertGridDetailsRowChanged != null)) {
                    this.f35081_InsertGridDetailsRowChanged(this, new f35081_InsertGridDetailsRowChangeEvent(((f35081_InsertGridDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35081_InsertGridDetailsRowChanging != null)) {
                    this.f35081_InsertGridDetailsRowChanging(this, new f35081_InsertGridDetailsRowChangeEvent(((f35081_InsertGridDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35081_InsertGridDetailsRowDeleted != null)) {
                    this.f35081_InsertGridDetailsRowDeleted(this, new f35081_InsertGridDetailsRowChangeEvent(((f35081_InsertGridDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35081_InsertGridDetailsRowDeleting != null)) {
                    this.f35081_InsertGridDetailsRowDeleting(this, new f35081_InsertGridDetailsRowChangeEvent(((f35081_InsertGridDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35081_InsertGridDetailsRow(f35081_InsertGridDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35081CentralAssessedGridData ds = new F35081CentralAssessedGridData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35081_InsertGridDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35081_GetCentrallyAssessedItemDataTable : global::System.Data.TypedTableBase<f35081_GetCentrallyAssessedItemRow> {
            
            private global::System.Data.DataColumn columnFundID;
            
            private global::System.Data.DataColumn columnFund;
            
            private global::System.Data.DataColumn columnCentralItemID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPersonalProperty;
            
            private global::System.Data.DataColumn columnRealProperty;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnGrossRealTax;
            
            private global::System.Data.DataColumn columnTaxCredit;
            
            private global::System.Data.DataColumn columnNERETax;
            
            private global::System.Data.DataColumn columnPPTax;
            
            private global::System.Data.DataColumn columnTotalTax;
            
            private global::System.Data.DataColumn columnStatementID;
            
            private global::System.Data.DataColumn columnStatementNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemDataTable() {
                this.TableName = "f35081_GetCentrallyAssessedItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35081_GetCentrallyAssessedItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35081_GetCentrallyAssessedItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FundIDColumn {
                get {
                    return this.columnFundID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CentralItemIDColumn {
                get {
                    return this.columnCentralItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalPropertyColumn {
                get {
                    return this.columnPersonalProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RealPropertyColumn {
                get {
                    return this.columnRealProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossRealTaxColumn {
                get {
                    return this.columnGrossRealTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxCreditColumn {
                get {
                    return this.columnTaxCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NERETaxColumn {
                get {
                    return this.columnNERETax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PPTaxColumn {
                get {
                    return this.columnPPTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalTaxColumn {
                get {
                    return this.columnTotalTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatementIDColumn {
                get {
                    return this.columnStatementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatementNumberColumn {
                get {
                    return this.columnStatementNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRow this[int index] {
                get {
                    return ((f35081_GetCentrallyAssessedItemRow)(this.Rows[index]));
                }
            }
            
            public event f35081_GetCentrallyAssessedItemRowChangeEventHandler f35081_GetCentrallyAssessedItemRowChanging;
            
            public event f35081_GetCentrallyAssessedItemRowChangeEventHandler f35081_GetCentrallyAssessedItemRowChanged;
            
            public event f35081_GetCentrallyAssessedItemRowChangeEventHandler f35081_GetCentrallyAssessedItemRowDeleting;
            
            public event f35081_GetCentrallyAssessedItemRowChangeEventHandler f35081_GetCentrallyAssessedItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35081_GetCentrallyAssessedItemRow(f35081_GetCentrallyAssessedItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRow Addf35081_GetCentrallyAssessedItemRow(string FundID, string Fund, string CentralItemID, string Description, long PersonalProperty, long RealProperty, decimal Total, decimal Rate, decimal GrossRealTax, decimal TaxCredit, decimal NERETax, decimal PPTax, decimal TotalTax, int StatementID, string StatementNumber) {
                f35081_GetCentrallyAssessedItemRow rowf35081_GetCentrallyAssessedItemRow = ((f35081_GetCentrallyAssessedItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FundID,
                        Fund,
                        CentralItemID,
                        Description,
                        PersonalProperty,
                        RealProperty,
                        Total,
                        Rate,
                        GrossRealTax,
                        TaxCredit,
                        NERETax,
                        PPTax,
                        TotalTax,
                        StatementID,
                        StatementNumber};
                rowf35081_GetCentrallyAssessedItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf35081_GetCentrallyAssessedItemRow);
                return rowf35081_GetCentrallyAssessedItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f35081_GetCentrallyAssessedItemDataTable cln = ((f35081_GetCentrallyAssessedItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f35081_GetCentrallyAssessedItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFundID = base.Columns["FundID"];
                this.columnFund = base.Columns["Fund"];
                this.columnCentralItemID = base.Columns["CentralItemID"];
                this.columnDescription = base.Columns["Description"];
                this.columnPersonalProperty = base.Columns["PersonalProperty"];
                this.columnRealProperty = base.Columns["RealProperty"];
                this.columnTotal = base.Columns["Total"];
                this.columnRate = base.Columns["Rate"];
                this.columnGrossRealTax = base.Columns["GrossRealTax"];
                this.columnTaxCredit = base.Columns["TaxCredit"];
                this.columnNERETax = base.Columns["NERETax"];
                this.columnPPTax = base.Columns["PPTax"];
                this.columnTotalTax = base.Columns["TotalTax"];
                this.columnStatementID = base.Columns["StatementID"];
                this.columnStatementNumber = base.Columns["StatementNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFundID = new global::System.Data.DataColumn("FundID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFundID);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnCentralItemID = new global::System.Data.DataColumn("CentralItemID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentralItemID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPersonalProperty = new global::System.Data.DataColumn("PersonalProperty", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalProperty);
                this.columnRealProperty = new global::System.Data.DataColumn("RealProperty", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealProperty);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnGrossRealTax = new global::System.Data.DataColumn("GrossRealTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossRealTax);
                this.columnTaxCredit = new global::System.Data.DataColumn("TaxCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxCredit);
                this.columnNERETax = new global::System.Data.DataColumn("NERETax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNERETax);
                this.columnPPTax = new global::System.Data.DataColumn("PPTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPTax);
                this.columnTotalTax = new global::System.Data.DataColumn("TotalTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTax);
                this.columnStatementID = new global::System.Data.DataColumn("StatementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementID);
                this.columnStatementNumber = new global::System.Data.DataColumn("StatementNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementNumber);
                this.columnDescription.MaxLength = 50;
                this.columnStatementID.ReadOnly = true;
                this.columnStatementNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRow Newf35081_GetCentrallyAssessedItemRow() {
                return ((f35081_GetCentrallyAssessedItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f35081_GetCentrallyAssessedItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f35081_GetCentrallyAssessedItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35081_GetCentrallyAssessedItemRowChanged != null)) {
                    this.f35081_GetCentrallyAssessedItemRowChanged(this, new f35081_GetCentrallyAssessedItemRowChangeEvent(((f35081_GetCentrallyAssessedItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35081_GetCentrallyAssessedItemRowChanging != null)) {
                    this.f35081_GetCentrallyAssessedItemRowChanging(this, new f35081_GetCentrallyAssessedItemRowChangeEvent(((f35081_GetCentrallyAssessedItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35081_GetCentrallyAssessedItemRowDeleted != null)) {
                    this.f35081_GetCentrallyAssessedItemRowDeleted(this, new f35081_GetCentrallyAssessedItemRowChangeEvent(((f35081_GetCentrallyAssessedItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35081_GetCentrallyAssessedItemRowDeleting != null)) {
                    this.f35081_GetCentrallyAssessedItemRowDeleting(this, new f35081_GetCentrallyAssessedItemRowChangeEvent(((f35081_GetCentrallyAssessedItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35081_GetCentrallyAssessedItemRow(f35081_GetCentrallyAssessedItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35081CentralAssessedGridData ds = new F35081CentralAssessedGridData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35081_GetCentrallyAssessedItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CentralAssessmentListDataTable : global::System.Data.TypedTableBase<CentralAssessmentListRow> {
            
            private global::System.Data.DataColumn columnCentralID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyNumber;
            
            private global::System.Data.DataColumn columnBranchLine;
            
            private global::System.Data.DataColumn columnPropertyClassID;
            
            private global::System.Data.DataColumn columnOwnerID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentralAssessmentListDataTable() {
                this.TableName = "CentralAssessmentList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CentralAssessmentListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CentralAssessmentListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CentralIDColumn {
                get {
                    return this.columnCentralID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNumberColumn {
                get {
                    return this.columnCompanyNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchLineColumn {
                get {
                    return this.columnBranchLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassIDColumn {
                get {
                    return this.columnPropertyClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentralAssessmentListRow this[int index] {
                get {
                    return ((CentralAssessmentListRow)(this.Rows[index]));
                }
            }
            
            public event CentralAssessmentListRowChangeEventHandler CentralAssessmentListRowChanging;
            
            public event CentralAssessmentListRowChangeEventHandler CentralAssessmentListRowChanged;
            
            public event CentralAssessmentListRowChangeEventHandler CentralAssessmentListRowDeleting;
            
            public event CentralAssessmentListRowChangeEventHandler CentralAssessmentListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCentralAssessmentListRow(CentralAssessmentListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentralAssessmentListRow AddCentralAssessmentListRow(string CentralID, string ParcelNumber, string RollYear, string CompanyName, string CompanyNumber, string BranchLine, string PropertyClassID, string OwnerID) {
                CentralAssessmentListRow rowCentralAssessmentListRow = ((CentralAssessmentListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CentralID,
                        ParcelNumber,
                        RollYear,
                        CompanyName,
                        CompanyNumber,
                        BranchLine,
                        PropertyClassID,
                        OwnerID};
                rowCentralAssessmentListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCentralAssessmentListRow);
                return rowCentralAssessmentListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CentralAssessmentListDataTable cln = ((CentralAssessmentListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CentralAssessmentListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCentralID = base.Columns["CentralID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyNumber = base.Columns["CompanyNumber"];
                this.columnBranchLine = base.Columns["BranchLine"];
                this.columnPropertyClassID = base.Columns["PropertyClassID"];
                this.columnOwnerID = base.Columns["OwnerID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCentralID = new global::System.Data.DataColumn("CentralID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentralID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyNumber = new global::System.Data.DataColumn("CompanyNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyNumber);
                this.columnBranchLine = new global::System.Data.DataColumn("BranchLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchLine);
                this.columnPropertyClassID = new global::System.Data.DataColumn("PropertyClassID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClassID);
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentralAssessmentListRow NewCentralAssessmentListRow() {
                return ((CentralAssessmentListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CentralAssessmentListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CentralAssessmentListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CentralAssessmentListRowChanged != null)) {
                    this.CentralAssessmentListRowChanged(this, new CentralAssessmentListRowChangeEvent(((CentralAssessmentListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CentralAssessmentListRowChanging != null)) {
                    this.CentralAssessmentListRowChanging(this, new CentralAssessmentListRowChangeEvent(((CentralAssessmentListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CentralAssessmentListRowDeleted != null)) {
                    this.CentralAssessmentListRowDeleted(this, new CentralAssessmentListRowChangeEvent(((CentralAssessmentListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CentralAssessmentListRowDeleting != null)) {
                    this.CentralAssessmentListRowDeleting(this, new CentralAssessmentListRowChangeEvent(((CentralAssessmentListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCentralAssessmentListRow(CentralAssessmentListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35081CentralAssessedGridData ds = new F35081CentralAssessedGridData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CentralAssessmentListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35081_GetCentrallyAssessedItemRateRow : global::System.Data.DataRow {
            
            private f35081_GetCentrallyAssessedItemRateDataTable tablef35081_GetCentrallyAssessedItemRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35081_GetCentrallyAssessedItemRateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35081_GetCentrallyAssessedItemRate = ((f35081_GetCentrallyAssessedItemRateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItemRate.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'f35081_GetCentrallyAssessedItemRate\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItemRate.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablef35081_GetCentrallyAssessedItemRate.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'f35081_GetCentrallyAssessedItemRate\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItemRate.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItemRate.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'f35081_GetCentrallyAssessedItemRate\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItemRate.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GrossRealTax {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItemRate.GrossRealTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossRealTax\' in table \'f35081_GetCentrallyAssessedItemRate" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItemRate.GrossRealTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxCredit {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItemRate.TaxCreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxCredit\' in table \'f35081_GetCentrallyAssessedItemRate\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItemRate.TaxCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NERETax {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItemRate.NERETaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NERETax\' in table \'f35081_GetCentrallyAssessedItemRate\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItemRate.NERETaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PPTax {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItemRate.PPTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PPTax\' in table \'f35081_GetCentrallyAssessedItemRate\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItemRate.PPTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalTax {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItemRate.TotalTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTax\' in table \'f35081_GetCentrallyAssessedItemRate\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItemRate.TotalTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItemRate.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tablef35081_GetCentrallyAssessedItemRate.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItemRate.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablef35081_GetCentrallyAssessedItemRate.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItemRate.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tablef35081_GetCentrallyAssessedItemRate.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossRealTaxNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItemRate.GrossRealTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossRealTaxNull() {
                this[this.tablef35081_GetCentrallyAssessedItemRate.GrossRealTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxCreditNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItemRate.TaxCreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxCreditNull() {
                this[this.tablef35081_GetCentrallyAssessedItemRate.TaxCreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNERETaxNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItemRate.NERETaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNERETaxNull() {
                this[this.tablef35081_GetCentrallyAssessedItemRate.NERETaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPPTaxNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItemRate.PPTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPPTaxNull() {
                this[this.tablef35081_GetCentrallyAssessedItemRate.PPTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalTaxNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItemRate.TotalTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalTaxNull() {
                this[this.tablef35081_GetCentrallyAssessedItemRate.TotalTaxColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35081_InsertGridDetailsRow : global::System.Data.DataRow {
            
            private f35081_InsertGridDetailsDataTable tablef35081_InsertGridDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35081_InsertGridDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35081_InsertGridDetails = ((f35081_InsertGridDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CentrallyAssessedID {
                get {
                    try {
                        return ((string)(this[this.tablef35081_InsertGridDetails.CentrallyAssessedIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CentrallyAssessedID\' in table \'f35081_InsertGridDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_InsertGridDetails.CentrallyAssessedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FundID {
                get {
                    try {
                        return ((string)(this[this.tablef35081_InsertGridDetails.FundIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FundID\' in table \'f35081_InsertGridDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_InsertGridDetails.FundIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PersonalProperty {
                get {
                    try {
                        return ((string)(this[this.tablef35081_InsertGridDetails.PersonalPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalProperty\' in table \'f35081_InsertGridDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef35081_InsertGridDetails.PersonalPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RealProperty {
                get {
                    try {
                        return ((string)(this[this.tablef35081_InsertGridDetails.RealPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealProperty\' in table \'f35081_InsertGridDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef35081_InsertGridDetails.RealPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total {
                get {
                    try {
                        return ((string)(this[this.tablef35081_InsertGridDetails.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'f35081_InsertGridDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_InsertGridDetails.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablef35081_InsertGridDetails.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'f35081_InsertGridDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef35081_InsertGridDetails.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCentrallyAssessedIDNull() {
                return this.IsNull(this.tablef35081_InsertGridDetails.CentrallyAssessedIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCentrallyAssessedIDNull() {
                this[this.tablef35081_InsertGridDetails.CentrallyAssessedIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFundIDNull() {
                return this.IsNull(this.tablef35081_InsertGridDetails.FundIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFundIDNull() {
                this[this.tablef35081_InsertGridDetails.FundIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalPropertyNull() {
                return this.IsNull(this.tablef35081_InsertGridDetails.PersonalPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalPropertyNull() {
                this[this.tablef35081_InsertGridDetails.PersonalPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRealPropertyNull() {
                return this.IsNull(this.tablef35081_InsertGridDetails.RealPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRealPropertyNull() {
                this[this.tablef35081_InsertGridDetails.RealPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tablef35081_InsertGridDetails.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tablef35081_InsertGridDetails.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablef35081_InsertGridDetails.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablef35081_InsertGridDetails.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35081_GetCentrallyAssessedItemRow : global::System.Data.DataRow {
            
            private f35081_GetCentrallyAssessedItemDataTable tablef35081_GetCentrallyAssessedItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35081_GetCentrallyAssessedItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35081_GetCentrallyAssessedItem = ((f35081_GetCentrallyAssessedItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FundID {
                get {
                    try {
                        return ((string)(this[this.tablef35081_GetCentrallyAssessedItem.FundIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FundID\' in table \'f35081_GetCentrallyAssessedItem\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.FundIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tablef35081_GetCentrallyAssessedItem.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'f35081_GetCentrallyAssessedItem\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CentralItemID {
                get {
                    try {
                        return ((string)(this[this.tablef35081_GetCentrallyAssessedItem.CentralItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CentralItemID\' in table \'f35081_GetCentrallyAssessedItem\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.CentralItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablef35081_GetCentrallyAssessedItem.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'f35081_GetCentrallyAssessedItem\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PersonalProperty {
                get {
                    try {
                        return ((long)(this[this.tablef35081_GetCentrallyAssessedItem.PersonalPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalProperty\' in table \'f35081_GetCentrallyAssessedItem" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.PersonalPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long RealProperty {
                get {
                    try {
                        return ((long)(this[this.tablef35081_GetCentrallyAssessedItem.RealPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealProperty\' in table \'f35081_GetCentrallyAssessedItem\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.RealPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItem.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'f35081_GetCentrallyAssessedItem\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItem.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'f35081_GetCentrallyAssessedItem\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GrossRealTax {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItem.GrossRealTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossRealTax\' in table \'f35081_GetCentrallyAssessedItem\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.GrossRealTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxCredit {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItem.TaxCreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxCredit\' in table \'f35081_GetCentrallyAssessedItem\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.TaxCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NERETax {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItem.NERETaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NERETax\' in table \'f35081_GetCentrallyAssessedItem\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.NERETaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PPTax {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItem.PPTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PPTax\' in table \'f35081_GetCentrallyAssessedItem\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.PPTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalTax {
                get {
                    try {
                        return ((decimal)(this[this.tablef35081_GetCentrallyAssessedItem.TotalTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTax\' in table \'f35081_GetCentrallyAssessedItem\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.TotalTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatementID {
                get {
                    try {
                        return ((int)(this[this.tablef35081_GetCentrallyAssessedItem.StatementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatementID\' in table \'f35081_GetCentrallyAssessedItem\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.StatementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatementNumber {
                get {
                    try {
                        return ((string)(this[this.tablef35081_GetCentrallyAssessedItem.StatementNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatementNumber\' in table \'f35081_GetCentrallyAssessedItem\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35081_GetCentrallyAssessedItem.StatementNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFundIDNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.FundIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFundIDNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.FundIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFundNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFundNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.FundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCentralItemIDNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.CentralItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCentralItemIDNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.CentralItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalPropertyNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.PersonalPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalPropertyNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.PersonalPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRealPropertyNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.RealPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRealPropertyNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.RealPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossRealTaxNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.GrossRealTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossRealTaxNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.GrossRealTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxCreditNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.TaxCreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxCreditNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.TaxCreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNERETaxNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.NERETaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNERETaxNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.NERETaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPPTaxNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.PPTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPPTaxNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.PPTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalTaxNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.TotalTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalTaxNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.TotalTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementIDNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.StatementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementIDNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.StatementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementNumberNull() {
                return this.IsNull(this.tablef35081_GetCentrallyAssessedItem.StatementNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementNumberNull() {
                this[this.tablef35081_GetCentrallyAssessedItem.StatementNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CentralAssessmentListRow : global::System.Data.DataRow {
            
            private CentralAssessmentListDataTable tableCentralAssessmentList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CentralAssessmentListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCentralAssessmentList = ((CentralAssessmentListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CentralID {
                get {
                    try {
                        return ((string)(this[this.tableCentralAssessmentList.CentralIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CentralID\' in table \'CentralAssessmentList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentralAssessmentList.CentralIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    try {
                        return ((string)(this[this.tableCentralAssessmentList.ParcelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber\' in table \'CentralAssessmentList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentralAssessmentList.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RollYear {
                get {
                    try {
                        return ((string)(this[this.tableCentralAssessmentList.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'CentralAssessmentList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentralAssessmentList.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tableCentralAssessmentList.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'CentralAssessmentList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentralAssessmentList.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyNumber {
                get {
                    try {
                        return ((string)(this[this.tableCentralAssessmentList.CompanyNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyNumber\' in table \'CentralAssessmentList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentralAssessmentList.CompanyNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchLine {
                get {
                    try {
                        return ((string)(this[this.tableCentralAssessmentList.BranchLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchLine\' in table \'CentralAssessmentList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentralAssessmentList.BranchLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyClassID {
                get {
                    try {
                        return ((string)(this[this.tableCentralAssessmentList.PropertyClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyClassID\' in table \'CentralAssessmentList\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCentralAssessmentList.PropertyClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerID {
                get {
                    try {
                        return ((string)(this[this.tableCentralAssessmentList.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'CentralAssessmentList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentralAssessmentList.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCentralIDNull() {
                return this.IsNull(this.tableCentralAssessmentList.CentralIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCentralIDNull() {
                this[this.tableCentralAssessmentList.CentralIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tableCentralAssessmentList.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tableCentralAssessmentList.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableCentralAssessmentList.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableCentralAssessmentList.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tableCentralAssessmentList.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tableCentralAssessmentList.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNumberNull() {
                return this.IsNull(this.tableCentralAssessmentList.CompanyNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNumberNull() {
                this[this.tableCentralAssessmentList.CompanyNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchLineNull() {
                return this.IsNull(this.tableCentralAssessmentList.BranchLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchLineNull() {
                this[this.tableCentralAssessmentList.BranchLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyClassIDNull() {
                return this.IsNull(this.tableCentralAssessmentList.PropertyClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyClassIDNull() {
                this[this.tableCentralAssessmentList.PropertyClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tableCentralAssessmentList.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tableCentralAssessmentList.OwnerIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35081_GetCentrallyAssessedItemRateRowChangeEvent : global::System.EventArgs {
            
            private f35081_GetCentrallyAssessedItemRateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRateRowChangeEvent(f35081_GetCentrallyAssessedItemRateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35081_InsertGridDetailsRowChangeEvent : global::System.EventArgs {
            
            private f35081_InsertGridDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_InsertGridDetailsRowChangeEvent(f35081_InsertGridDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_InsertGridDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35081_GetCentrallyAssessedItemRowChangeEvent : global::System.EventArgs {
            
            private f35081_GetCentrallyAssessedItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRowChangeEvent(f35081_GetCentrallyAssessedItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35081_GetCentrallyAssessedItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CentralAssessmentListRowChangeEvent : global::System.EventArgs {
            
            private CentralAssessmentListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentralAssessmentListRowChangeEvent(CentralAssessmentListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentralAssessmentListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591