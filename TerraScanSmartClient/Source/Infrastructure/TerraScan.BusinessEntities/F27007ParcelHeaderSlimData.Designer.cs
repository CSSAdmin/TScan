//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F27007ParcelHeaderSlimData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F27007ParcelHeaderSlimData : global::System.Data.DataSet {
        
        private f27007ParcelHeaderSlim1DataTable tablef27007ParcelHeaderSlim1;
        
        private f27007ParcelHeaderSlimDataTable tablef27007ParcelHeaderSlim;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F27007ParcelHeaderSlimData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F27007ParcelHeaderSlimData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f27007ParcelHeaderSlim1"] != null)) {
                    base.Tables.Add(new f27007ParcelHeaderSlim1DataTable(ds.Tables["f27007ParcelHeaderSlim1"]));
                }
                if ((ds.Tables["f27007ParcelHeaderSlim"] != null)) {
                    base.Tables.Add(new f27007ParcelHeaderSlimDataTable(ds.Tables["f27007ParcelHeaderSlim"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f27007ParcelHeaderSlim1DataTable f27007ParcelHeaderSlim1 {
            get {
                return this.tablef27007ParcelHeaderSlim1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f27007ParcelHeaderSlimDataTable f27007ParcelHeaderSlim {
            get {
                return this.tablef27007ParcelHeaderSlim;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F27007ParcelHeaderSlimData cln = ((F27007ParcelHeaderSlimData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f27007ParcelHeaderSlim1"] != null)) {
                    base.Tables.Add(new f27007ParcelHeaderSlim1DataTable(ds.Tables["f27007ParcelHeaderSlim1"]));
                }
                if ((ds.Tables["f27007ParcelHeaderSlim"] != null)) {
                    base.Tables.Add(new f27007ParcelHeaderSlimDataTable(ds.Tables["f27007ParcelHeaderSlim"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef27007ParcelHeaderSlim1 = ((f27007ParcelHeaderSlim1DataTable)(base.Tables["f27007ParcelHeaderSlim1"]));
            if ((initTable == true)) {
                if ((this.tablef27007ParcelHeaderSlim1 != null)) {
                    this.tablef27007ParcelHeaderSlim1.InitVars();
                }
            }
            this.tablef27007ParcelHeaderSlim = ((f27007ParcelHeaderSlimDataTable)(base.Tables["f27007ParcelHeaderSlim"]));
            if ((initTable == true)) {
                if ((this.tablef27007ParcelHeaderSlim != null)) {
                    this.tablef27007ParcelHeaderSlim.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F27007ParcelHeaderSlimData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F27007ParcelHeaderSlimData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef27007ParcelHeaderSlim1 = new f27007ParcelHeaderSlim1DataTable();
            base.Tables.Add(this.tablef27007ParcelHeaderSlim1);
            this.tablef27007ParcelHeaderSlim = new f27007ParcelHeaderSlimDataTable();
            base.Tables.Add(this.tablef27007ParcelHeaderSlim);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef27007ParcelHeaderSlim1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef27007ParcelHeaderSlim() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F27007ParcelHeaderSlimData ds = new F27007ParcelHeaderSlimData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f27007ParcelHeaderSlim1RowChangeEventHandler(object sender, f27007ParcelHeaderSlim1RowChangeEvent e);
        
        public delegate void f27007ParcelHeaderSlimRowChangeEventHandler(object sender, f27007ParcelHeaderSlimRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f27007ParcelHeaderSlim1DataTable : global::System.Data.TypedTableBase<f27007ParcelHeaderSlim1Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnRetired;
            
            private global::System.Data.DataColumn columnExempt;
            
            private global::System.Data.DataColumn columnLockAdminBy;
            
            private global::System.Data.DataColumn columnLockAppraisalBy;
            
            private global::System.Data.DataColumn columnLockValueBy;
            
            private global::System.Data.DataColumn columnEvents;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPrimaryOwner;
            
            private global::System.Data.DataColumn columnSitus;
            
            private global::System.Data.DataColumn columnLegal;
            
            private global::System.Data.DataColumn columnDOR;
            
            private global::System.Data.DataColumn columnMID1;
            
            private global::System.Data.DataColumn columnMID2;
            
            private global::System.Data.DataColumn columnMID3;
            
            private global::System.Data.DataColumn columnMID4;
            
            private global::System.Data.DataColumn columnMID5;
            
            private global::System.Data.DataColumn columnLabel;
            
            private global::System.Data.DataColumn columnLabe2;
            
            private global::System.Data.DataColumn columnLabe3;
            
            private global::System.Data.DataColumn columnLabe4;
            
            private global::System.Data.DataColumn columnLabe5;
            
            private global::System.Data.DataColumn columnMask1;
            
            private global::System.Data.DataColumn columnMask2;
            
            private global::System.Data.DataColumn columnMask3;
            
            private global::System.Data.DataColumn columnMask4;
            
            private global::System.Data.DataColumn columnMask5;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnNeighborhoodGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlim1DataTable() {
                this.TableName = "f27007ParcelHeaderSlim1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f27007ParcelHeaderSlim1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f27007ParcelHeaderSlim1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RetiredColumn {
                get {
                    return this.columnRetired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptColumn {
                get {
                    return this.columnExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAdminByColumn {
                get {
                    return this.columnLockAdminBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAppraisalByColumn {
                get {
                    return this.columnLockAppraisalBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockValueByColumn {
                get {
                    return this.columnLockValueBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventsColumn {
                get {
                    return this.columnEvents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimaryOwnerColumn {
                get {
                    return this.columnPrimaryOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SitusColumn {
                get {
                    return this.columnSitus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LegalColumn {
                get {
                    return this.columnLegal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DORColumn {
                get {
                    return this.columnDOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID1Column {
                get {
                    return this.columnMID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID2Column {
                get {
                    return this.columnMID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID3Column {
                get {
                    return this.columnMID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID4Column {
                get {
                    return this.columnMID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID5Column {
                get {
                    return this.columnMID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelColumn {
                get {
                    return this.columnLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe2Column {
                get {
                    return this.columnLabe2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe3Column {
                get {
                    return this.columnLabe3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe4Column {
                get {
                    return this.columnLabe4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe5Column {
                get {
                    return this.columnLabe5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask1Column {
                get {
                    return this.columnMask1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask2Column {
                get {
                    return this.columnMask2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask3Column {
                get {
                    return this.columnMask3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask4Column {
                get {
                    return this.columnMask4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask5Column {
                get {
                    return this.columnMask5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeighborhoodGroupColumn {
                get {
                    return this.columnNeighborhoodGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlim1Row this[int index] {
                get {
                    return ((f27007ParcelHeaderSlim1Row)(this.Rows[index]));
                }
            }
            
            public event f27007ParcelHeaderSlim1RowChangeEventHandler f27007ParcelHeaderSlim1RowChanging;
            
            public event f27007ParcelHeaderSlim1RowChangeEventHandler f27007ParcelHeaderSlim1RowChanged;
            
            public event f27007ParcelHeaderSlim1RowChangeEventHandler f27007ParcelHeaderSlim1RowDeleting;
            
            public event f27007ParcelHeaderSlim1RowChangeEventHandler f27007ParcelHeaderSlim1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf27007ParcelHeaderSlim1Row(f27007ParcelHeaderSlim1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlim1Row Addf27007ParcelHeaderSlim1Row(
                        string ParcelNumber, 
                        short RollYear, 
                        string Type, 
                        string Retired, 
                        string Exempt, 
                        int LockAdminBy, 
                        int LockAppraisalBy, 
                        int LockValueBy, 
                        string Events, 
                        string Description, 
                        string PrimaryOwner, 
                        string Situs, 
                        string Legal, 
                        string DOR, 
                        string MID1, 
                        string MID2, 
                        string MID3, 
                        string MID4, 
                        string MID5, 
                        string Label, 
                        string Labe2, 
                        string Labe3, 
                        string Labe4, 
                        string Labe5, 
                        string Mask1, 
                        string Mask2, 
                        string Mask3, 
                        string Mask4, 
                        string Mask5, 
                        string District, 
                        string NeighborhoodGroup) {
                f27007ParcelHeaderSlim1Row rowf27007ParcelHeaderSlim1Row = ((f27007ParcelHeaderSlim1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ParcelNumber,
                        RollYear,
                        Type,
                        Retired,
                        Exempt,
                        LockAdminBy,
                        LockAppraisalBy,
                        LockValueBy,
                        Events,
                        Description,
                        PrimaryOwner,
                        Situs,
                        Legal,
                        DOR,
                        MID1,
                        MID2,
                        MID3,
                        MID4,
                        MID5,
                        Label,
                        Labe2,
                        Labe3,
                        Labe4,
                        Labe5,
                        Mask1,
                        Mask2,
                        Mask3,
                        Mask4,
                        Mask5,
                        District,
                        NeighborhoodGroup};
                rowf27007ParcelHeaderSlim1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowf27007ParcelHeaderSlim1Row);
                return rowf27007ParcelHeaderSlim1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlim1Row FindByParcelID(int ParcelID) {
                return ((f27007ParcelHeaderSlim1Row)(this.Rows.Find(new object[] {
                            ParcelID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f27007ParcelHeaderSlim1DataTable cln = ((f27007ParcelHeaderSlim1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f27007ParcelHeaderSlim1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnType = base.Columns["Type"];
                this.columnRetired = base.Columns["Retired"];
                this.columnExempt = base.Columns["Exempt"];
                this.columnLockAdminBy = base.Columns["LockAdminBy"];
                this.columnLockAppraisalBy = base.Columns["LockAppraisalBy"];
                this.columnLockValueBy = base.Columns["LockValueBy"];
                this.columnEvents = base.Columns["Events"];
                this.columnDescription = base.Columns["Description"];
                this.columnPrimaryOwner = base.Columns["PrimaryOwner"];
                this.columnSitus = base.Columns["Situs"];
                this.columnLegal = base.Columns["Legal"];
                this.columnDOR = base.Columns["DOR"];
                this.columnMID1 = base.Columns["MID1"];
                this.columnMID2 = base.Columns["MID2"];
                this.columnMID3 = base.Columns["MID3"];
                this.columnMID4 = base.Columns["MID4"];
                this.columnMID5 = base.Columns["MID5"];
                this.columnLabel = base.Columns["Label"];
                this.columnLabe2 = base.Columns["Labe2"];
                this.columnLabe3 = base.Columns["Labe3"];
                this.columnLabe4 = base.Columns["Labe4"];
                this.columnLabe5 = base.Columns["Labe5"];
                this.columnMask1 = base.Columns["Mask1"];
                this.columnMask2 = base.Columns["Mask2"];
                this.columnMask3 = base.Columns["Mask3"];
                this.columnMask4 = base.Columns["Mask4"];
                this.columnMask5 = base.Columns["Mask5"];
                this.columnDistrict = base.Columns["District"];
                this.columnNeighborhoodGroup = base.Columns["NeighborhoodGroup"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnRetired = new global::System.Data.DataColumn("Retired", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetired);
                this.columnExempt = new global::System.Data.DataColumn("Exempt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExempt);
                this.columnLockAdminBy = new global::System.Data.DataColumn("LockAdminBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAdminBy);
                this.columnLockAppraisalBy = new global::System.Data.DataColumn("LockAppraisalBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAppraisalBy);
                this.columnLockValueBy = new global::System.Data.DataColumn("LockValueBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockValueBy);
                this.columnEvents = new global::System.Data.DataColumn("Events", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvents);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPrimaryOwner = new global::System.Data.DataColumn("PrimaryOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryOwner);
                this.columnSitus = new global::System.Data.DataColumn("Situs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSitus);
                this.columnLegal = new global::System.Data.DataColumn("Legal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLegal);
                this.columnDOR = new global::System.Data.DataColumn("DOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOR);
                this.columnMID1 = new global::System.Data.DataColumn("MID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID1);
                this.columnMID2 = new global::System.Data.DataColumn("MID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID2);
                this.columnMID3 = new global::System.Data.DataColumn("MID3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID3);
                this.columnMID4 = new global::System.Data.DataColumn("MID4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID4);
                this.columnMID5 = new global::System.Data.DataColumn("MID5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID5);
                this.columnLabel = new global::System.Data.DataColumn("Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabel);
                this.columnLabe2 = new global::System.Data.DataColumn("Labe2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe2);
                this.columnLabe3 = new global::System.Data.DataColumn("Labe3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe3);
                this.columnLabe4 = new global::System.Data.DataColumn("Labe4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe4);
                this.columnLabe5 = new global::System.Data.DataColumn("Labe5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe5);
                this.columnMask1 = new global::System.Data.DataColumn("Mask1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask1);
                this.columnMask2 = new global::System.Data.DataColumn("Mask2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask2);
                this.columnMask3 = new global::System.Data.DataColumn("Mask3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask3);
                this.columnMask4 = new global::System.Data.DataColumn("Mask4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask4);
                this.columnMask5 = new global::System.Data.DataColumn("Mask5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask5);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnNeighborhoodGroup = new global::System.Data.DataColumn("NeighborhoodGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhoodGroup);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnParcelID}, true));
                this.columnParcelID.AutoIncrement = true;
                this.columnParcelID.AllowDBNull = false;
                this.columnParcelID.ReadOnly = true;
                this.columnParcelID.Unique = true;
                this.columnParcelNumber.AllowDBNull = false;
                this.columnParcelNumber.MaxLength = 51;
                this.columnType.ReadOnly = true;
                this.columnType.MaxLength = 7;
                this.columnRetired.ReadOnly = true;
                this.columnRetired.MaxLength = 7;
                this.columnExempt.ReadOnly = true;
                this.columnExempt.MaxLength = 6;
                this.columnEvents.ReadOnly = true;
                this.columnEvents.MaxLength = 6;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 50;
                this.columnPrimaryOwner.ReadOnly = true;
                this.columnPrimaryOwner.MaxLength = 102;
                this.columnSitus.ReadOnly = true;
                this.columnSitus.MaxLength = 50;
                this.columnLegal.ReadOnly = true;
                this.columnLegal.MaxLength = 5000;
                this.columnDOR.ReadOnly = true;
                this.columnDOR.MaxLength = 50;
                this.columnMID1.MaxLength = 50;
                this.columnMID2.MaxLength = 50;
                this.columnMID3.MaxLength = 50;
                this.columnMID4.MaxLength = 50;
                this.columnMID5.MaxLength = 50;
                this.columnLabel.ReadOnly = true;
                this.columnLabel.MaxLength = 1000;
                this.columnLabe2.ReadOnly = true;
                this.columnLabe2.MaxLength = 1000;
                this.columnLabe3.ReadOnly = true;
                this.columnLabe3.MaxLength = 1000;
                this.columnLabe4.ReadOnly = true;
                this.columnLabe4.MaxLength = 1000;
                this.columnLabe5.ReadOnly = true;
                this.columnLabe5.MaxLength = 1000;
                this.columnMask1.ReadOnly = true;
                this.columnMask1.MaxLength = 1000;
                this.columnMask2.ReadOnly = true;
                this.columnMask2.MaxLength = 1000;
                this.columnMask3.ReadOnly = true;
                this.columnMask3.MaxLength = 1000;
                this.columnMask4.ReadOnly = true;
                this.columnMask4.MaxLength = 1000;
                this.columnMask5.ReadOnly = true;
                this.columnMask5.MaxLength = 1000;
                this.columnDistrict.ReadOnly = true;
                this.columnDistrict.MaxLength = 103;
                this.columnNeighborhoodGroup.ReadOnly = true;
                this.columnNeighborhoodGroup.MaxLength = 104;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlim1Row Newf27007ParcelHeaderSlim1Row() {
                return ((f27007ParcelHeaderSlim1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f27007ParcelHeaderSlim1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f27007ParcelHeaderSlim1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f27007ParcelHeaderSlim1RowChanged != null)) {
                    this.f27007ParcelHeaderSlim1RowChanged(this, new f27007ParcelHeaderSlim1RowChangeEvent(((f27007ParcelHeaderSlim1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f27007ParcelHeaderSlim1RowChanging != null)) {
                    this.f27007ParcelHeaderSlim1RowChanging(this, new f27007ParcelHeaderSlim1RowChangeEvent(((f27007ParcelHeaderSlim1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f27007ParcelHeaderSlim1RowDeleted != null)) {
                    this.f27007ParcelHeaderSlim1RowDeleted(this, new f27007ParcelHeaderSlim1RowChangeEvent(((f27007ParcelHeaderSlim1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f27007ParcelHeaderSlim1RowDeleting != null)) {
                    this.f27007ParcelHeaderSlim1RowDeleting(this, new f27007ParcelHeaderSlim1RowChangeEvent(((f27007ParcelHeaderSlim1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef27007ParcelHeaderSlim1Row(f27007ParcelHeaderSlim1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F27007ParcelHeaderSlimData ds = new F27007ParcelHeaderSlimData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f27007ParcelHeaderSlim1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f27007ParcelHeaderSlimDataTable : global::System.Data.TypedTableBase<f27007ParcelHeaderSlimRow> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnSitus;
            
            private global::System.Data.DataColumn columnLegal;
            
            private global::System.Data.DataColumn columnLabel;
            
            private global::System.Data.DataColumn columnMask1;
            
            private global::System.Data.DataColumn columnDistrictID;
            
            private global::System.Data.DataColumn columnDistrict;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlimDataTable() {
                this.TableName = "f27007ParcelHeaderSlim";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f27007ParcelHeaderSlimDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f27007ParcelHeaderSlimDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SitusColumn {
                get {
                    return this.columnSitus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LegalColumn {
                get {
                    return this.columnLegal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelColumn {
                get {
                    return this.columnLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask1Column {
                get {
                    return this.columnMask1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictIDColumn {
                get {
                    return this.columnDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlimRow this[int index] {
                get {
                    return ((f27007ParcelHeaderSlimRow)(this.Rows[index]));
                }
            }
            
            public event f27007ParcelHeaderSlimRowChangeEventHandler f27007ParcelHeaderSlimRowChanging;
            
            public event f27007ParcelHeaderSlimRowChangeEventHandler f27007ParcelHeaderSlimRowChanged;
            
            public event f27007ParcelHeaderSlimRowChangeEventHandler f27007ParcelHeaderSlimRowDeleting;
            
            public event f27007ParcelHeaderSlimRowChangeEventHandler f27007ParcelHeaderSlimRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf27007ParcelHeaderSlimRow(f27007ParcelHeaderSlimRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlimRow Addf27007ParcelHeaderSlimRow(string ParcelNumber, short RollYear, string Situs, string Legal, string Label, string Mask1, string District) {
                f27007ParcelHeaderSlimRow rowf27007ParcelHeaderSlimRow = ((f27007ParcelHeaderSlimRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ParcelNumber,
                        RollYear,
                        Situs,
                        Legal,
                        Label,
                        Mask1,
                        null,
                        District};
                rowf27007ParcelHeaderSlimRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf27007ParcelHeaderSlimRow);
                return rowf27007ParcelHeaderSlimRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f27007ParcelHeaderSlimDataTable cln = ((f27007ParcelHeaderSlimDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f27007ParcelHeaderSlimDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnSitus = base.Columns["Situs"];
                this.columnLegal = base.Columns["Legal"];
                this.columnLabel = base.Columns["Label"];
                this.columnMask1 = base.Columns["Mask1"];
                this.columnDistrictID = base.Columns["DistrictID"];
                this.columnDistrict = base.Columns["District"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnSitus = new global::System.Data.DataColumn("Situs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSitus);
                this.columnLegal = new global::System.Data.DataColumn("Legal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLegal);
                this.columnLabel = new global::System.Data.DataColumn("Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabel);
                this.columnMask1 = new global::System.Data.DataColumn("Mask1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask1);
                this.columnDistrictID = new global::System.Data.DataColumn("DistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictID);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnParcelID,
                                this.columnDistrictID}, false));
                this.columnParcelID.AutoIncrement = true;
                this.columnParcelID.AllowDBNull = false;
                this.columnParcelID.ReadOnly = true;
                this.columnParcelNumber.AllowDBNull = false;
                this.columnParcelNumber.MaxLength = 50;
                this.columnSitus.ReadOnly = true;
                this.columnSitus.MaxLength = 400;
                this.columnLegal.ReadOnly = true;
                this.columnLegal.MaxLength = 5000;
                this.columnLabel.ReadOnly = true;
                this.columnLabel.MaxLength = 1000;
                this.columnMask1.ReadOnly = true;
                this.columnMask1.MaxLength = 1000;
                this.columnDistrictID.AutoIncrement = true;
                this.columnDistrictID.ReadOnly = true;
                this.columnDistrict.ReadOnly = true;
                this.columnDistrict.MaxLength = 103;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlimRow Newf27007ParcelHeaderSlimRow() {
                return ((f27007ParcelHeaderSlimRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f27007ParcelHeaderSlimRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f27007ParcelHeaderSlimRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f27007ParcelHeaderSlimRowChanged != null)) {
                    this.f27007ParcelHeaderSlimRowChanged(this, new f27007ParcelHeaderSlimRowChangeEvent(((f27007ParcelHeaderSlimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f27007ParcelHeaderSlimRowChanging != null)) {
                    this.f27007ParcelHeaderSlimRowChanging(this, new f27007ParcelHeaderSlimRowChangeEvent(((f27007ParcelHeaderSlimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f27007ParcelHeaderSlimRowDeleted != null)) {
                    this.f27007ParcelHeaderSlimRowDeleted(this, new f27007ParcelHeaderSlimRowChangeEvent(((f27007ParcelHeaderSlimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f27007ParcelHeaderSlimRowDeleting != null)) {
                    this.f27007ParcelHeaderSlimRowDeleting(this, new f27007ParcelHeaderSlimRowChangeEvent(((f27007ParcelHeaderSlimRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef27007ParcelHeaderSlimRow(f27007ParcelHeaderSlimRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F27007ParcelHeaderSlimData ds = new F27007ParcelHeaderSlimData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f27007ParcelHeaderSlimDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f27007ParcelHeaderSlim1Row : global::System.Data.DataRow {
            
            private f27007ParcelHeaderSlim1DataTable tablef27007ParcelHeaderSlim1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f27007ParcelHeaderSlim1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef27007ParcelHeaderSlim1 = ((f27007ParcelHeaderSlim1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    return ((int)(this[this.tablef27007ParcelHeaderSlim1.ParcelIDColumn]));
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    return ((string)(this[this.tablef27007ParcelHeaderSlim1.ParcelNumberColumn]));
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tablef27007ParcelHeaderSlim1.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Retired {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.RetiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Retired\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.RetiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Exempt {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.ExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Exempt\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.ExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAdminBy {
                get {
                    try {
                        return ((int)(this[this.tablef27007ParcelHeaderSlim1.LockAdminByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAdminBy\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.LockAdminByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAppraisalBy {
                get {
                    try {
                        return ((int)(this[this.tablef27007ParcelHeaderSlim1.LockAppraisalByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAppraisalBy\' in table \'f27007ParcelHeaderSlim1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.LockAppraisalByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockValueBy {
                get {
                    try {
                        return ((int)(this[this.tablef27007ParcelHeaderSlim1.LockValueByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockValueBy\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.LockValueByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Events {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.EventsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Events\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.EventsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    return ((string)(this[this.tablef27007ParcelHeaderSlim1.DescriptionColumn]));
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrimaryOwner {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.PrimaryOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrimaryOwner\' in table \'f27007ParcelHeaderSlim1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.PrimaryOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Situs {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.SitusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Situs\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.SitusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Legal {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.LegalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Legal\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.LegalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOR {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.DORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOR\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.DORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID1 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.MID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID1\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.MID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID2 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.MID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID2\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.MID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID3 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.MID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID3\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.MID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID4 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.MID4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID4\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.MID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID5 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.MID5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID5\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.MID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Label {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Label\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe2 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.Labe2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe2\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.Labe2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe3 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.Labe3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe3\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.Labe3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe4 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.Labe4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe4\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.Labe4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe5 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.Labe5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe5\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.Labe5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask1 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.Mask1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask1\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.Mask1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask2 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.Mask2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask2\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.Mask2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask3 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.Mask3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask3\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.Mask3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask4 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.Mask4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask4\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.Mask4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask5 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.Mask5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask5\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.Mask5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'f27007ParcelHeaderSlim1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NeighborhoodGroup {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim1.NeighborhoodGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NeighborhoodGroup\' in table \'f27007ParcelHeaderSlim1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim1.NeighborhoodGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tablef27007ParcelHeaderSlim1.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tablef27007ParcelHeaderSlim1.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetiredNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.RetiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetiredNull() {
                this[this.tablef27007ParcelHeaderSlim1.RetiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.ExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptNull() {
                this[this.tablef27007ParcelHeaderSlim1.ExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAdminByNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.LockAdminByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAdminByNull() {
                this[this.tablef27007ParcelHeaderSlim1.LockAdminByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAppraisalByNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.LockAppraisalByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAppraisalByNull() {
                this[this.tablef27007ParcelHeaderSlim1.LockAppraisalByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockValueByNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.LockValueByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockValueByNull() {
                this[this.tablef27007ParcelHeaderSlim1.LockValueByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventsNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.EventsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventsNull() {
                this[this.tablef27007ParcelHeaderSlim1.EventsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimaryOwnerNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.PrimaryOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimaryOwnerNull() {
                this[this.tablef27007ParcelHeaderSlim1.PrimaryOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSitusNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.SitusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSitusNull() {
                this[this.tablef27007ParcelHeaderSlim1.SitusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLegalNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.LegalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLegalNull() {
                this[this.tablef27007ParcelHeaderSlim1.LegalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDORNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.DORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDORNull() {
                this[this.tablef27007ParcelHeaderSlim1.DORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID1Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.MID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID1Null() {
                this[this.tablef27007ParcelHeaderSlim1.MID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID2Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.MID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID2Null() {
                this[this.tablef27007ParcelHeaderSlim1.MID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID3Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.MID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID3Null() {
                this[this.tablef27007ParcelHeaderSlim1.MID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID4Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.MID4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID4Null() {
                this[this.tablef27007ParcelHeaderSlim1.MID4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID5Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.MID5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID5Null() {
                this[this.tablef27007ParcelHeaderSlim1.MID5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelNull() {
                this[this.tablef27007ParcelHeaderSlim1.LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe2Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.Labe2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe2Null() {
                this[this.tablef27007ParcelHeaderSlim1.Labe2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe3Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.Labe3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe3Null() {
                this[this.tablef27007ParcelHeaderSlim1.Labe3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe4Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.Labe4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe4Null() {
                this[this.tablef27007ParcelHeaderSlim1.Labe4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe5Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.Labe5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe5Null() {
                this[this.tablef27007ParcelHeaderSlim1.Labe5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask1Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.Mask1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask1Null() {
                this[this.tablef27007ParcelHeaderSlim1.Mask1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask2Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.Mask2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask2Null() {
                this[this.tablef27007ParcelHeaderSlim1.Mask2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask3Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.Mask3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask3Null() {
                this[this.tablef27007ParcelHeaderSlim1.Mask3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask4Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.Mask4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask4Null() {
                this[this.tablef27007ParcelHeaderSlim1.Mask4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask5Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.Mask5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask5Null() {
                this[this.tablef27007ParcelHeaderSlim1.Mask5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tablef27007ParcelHeaderSlim1.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodGroupNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim1.NeighborhoodGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodGroupNull() {
                this[this.tablef27007ParcelHeaderSlim1.NeighborhoodGroupColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f27007ParcelHeaderSlimRow : global::System.Data.DataRow {
            
            private f27007ParcelHeaderSlimDataTable tablef27007ParcelHeaderSlim;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f27007ParcelHeaderSlimRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef27007ParcelHeaderSlim = ((f27007ParcelHeaderSlimDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    return ((int)(this[this.tablef27007ParcelHeaderSlim.ParcelIDColumn]));
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    return ((string)(this[this.tablef27007ParcelHeaderSlim.ParcelNumberColumn]));
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tablef27007ParcelHeaderSlim.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'f27007ParcelHeaderSlim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Situs {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim.SitusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Situs\' in table \'f27007ParcelHeaderSlim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim.SitusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Legal {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim.LegalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Legal\' in table \'f27007ParcelHeaderSlim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim.LegalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Label {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim.LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Label\' in table \'f27007ParcelHeaderSlim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim.LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask1 {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim.Mask1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask1\' in table \'f27007ParcelHeaderSlim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim.Mask1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DistrictID {
                get {
                    try {
                        return ((int)(this[this.tablef27007ParcelHeaderSlim.DistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictID\' in table \'f27007ParcelHeaderSlim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim.DistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tablef27007ParcelHeaderSlim.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'f27007ParcelHeaderSlim\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef27007ParcelHeaderSlim.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tablef27007ParcelHeaderSlim.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSitusNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim.SitusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSitusNull() {
                this[this.tablef27007ParcelHeaderSlim.SitusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLegalNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim.LegalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLegalNull() {
                this[this.tablef27007ParcelHeaderSlim.LegalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim.LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelNull() {
                this[this.tablef27007ParcelHeaderSlim.LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask1Null() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim.Mask1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask1Null() {
                this[this.tablef27007ParcelHeaderSlim.Mask1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictIDNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim.DistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictIDNull() {
                this[this.tablef27007ParcelHeaderSlim.DistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tablef27007ParcelHeaderSlim.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tablef27007ParcelHeaderSlim.DistrictColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f27007ParcelHeaderSlim1RowChangeEvent : global::System.EventArgs {
            
            private f27007ParcelHeaderSlim1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlim1RowChangeEvent(f27007ParcelHeaderSlim1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlim1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f27007ParcelHeaderSlimRowChangeEvent : global::System.EventArgs {
            
            private f27007ParcelHeaderSlimRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlimRowChangeEvent(f27007ParcelHeaderSlimRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f27007ParcelHeaderSlimRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591