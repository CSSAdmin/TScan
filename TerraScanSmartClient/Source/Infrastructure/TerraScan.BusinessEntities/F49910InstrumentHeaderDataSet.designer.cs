//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F49910InstrumentHeaderDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F49910InstrumentHeaderDataSet : global::System.Data.DataSet {
        
        private f49901PaymentDetailsDataTableDataTable tablef49901PaymentDetailsDataTable;
        
        private f4991InstrumentCopyDataTableDataTable tablef4991InstrumentCopyDataTable;
        
        private f4991GrantorCopyDataTableDataTable tablef4991GrantorCopyDataTable;
        
        private f4991GranteeCopyDataTableDataTable tablef4991GranteeCopyDataTable;
        
        private f4991LegalCopyDataTableDataTable tablef4991LegalCopyDataTable;
        
        private f49910_pclst_CustomerValueDataTable tablef49910_pclst_CustomerValue;
        
        private f49910InstrumentTypeDataTableDataTable tablef49910InstrumentTypeDataTable;
        
        private f49910_pclst_TenderTypeDataTable tablef49910_pclst_TenderType;
        
        private f49910_pclst_GrantListDataTable tablef49910_pclst_GrantList;
        
        private f49910_pclst_ExemptionTypeDataTable tablef49910_pclst_ExemptionType;
        
        private F49911GrantorDetailsDataTable tableF49911GrantorDetails;
        
        private F49911GranteeDetailsDataTable tableF49911GranteeDetails;
        
        private F49912LegalFieldListingDataTable tableF49912LegalFieldListing;
        
        private F49912ListLegalSubDivisionDataTable tableF49912ListLegalSubDivision;
        
        private ListPartiesFieldDataTable tableListPartiesField;
        
        private f49910SaveInstrumentHeaderDataTable tablef49910SaveInstrumentHeader;
        
        private f49910GrantListValuesDataTable tablef49910GrantListValues;
        
        private f49901RecorderDetailsDataTableDataTable tablef49901RecorderDetailsDataTable;
        
        private f49910feeDetailsTableDataTable tablef49910feeDetailsTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F49910InstrumentHeaderDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F49910InstrumentHeaderDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f49901PaymentDetailsDataTable"] != null)) {
                    base.Tables.Add(new f49901PaymentDetailsDataTableDataTable(ds.Tables["f49901PaymentDetailsDataTable"]));
                }
                if ((ds.Tables["f4991InstrumentCopyDataTable"] != null)) {
                    base.Tables.Add(new f4991InstrumentCopyDataTableDataTable(ds.Tables["f4991InstrumentCopyDataTable"]));
                }
                if ((ds.Tables["f4991GrantorCopyDataTable"] != null)) {
                    base.Tables.Add(new f4991GrantorCopyDataTableDataTable(ds.Tables["f4991GrantorCopyDataTable"]));
                }
                if ((ds.Tables["f4991GranteeCopyDataTable"] != null)) {
                    base.Tables.Add(new f4991GranteeCopyDataTableDataTable(ds.Tables["f4991GranteeCopyDataTable"]));
                }
                if ((ds.Tables["f4991LegalCopyDataTable"] != null)) {
                    base.Tables.Add(new f4991LegalCopyDataTableDataTable(ds.Tables["f4991LegalCopyDataTable"]));
                }
                if ((ds.Tables["f49910_pclst_CustomerValue"] != null)) {
                    base.Tables.Add(new f49910_pclst_CustomerValueDataTable(ds.Tables["f49910_pclst_CustomerValue"]));
                }
                if ((ds.Tables["f49910InstrumentTypeDataTable"] != null)) {
                    base.Tables.Add(new f49910InstrumentTypeDataTableDataTable(ds.Tables["f49910InstrumentTypeDataTable"]));
                }
                if ((ds.Tables["f49910_pclst_TenderType"] != null)) {
                    base.Tables.Add(new f49910_pclst_TenderTypeDataTable(ds.Tables["f49910_pclst_TenderType"]));
                }
                if ((ds.Tables["f49910_pclst_GrantList"] != null)) {
                    base.Tables.Add(new f49910_pclst_GrantListDataTable(ds.Tables["f49910_pclst_GrantList"]));
                }
                if ((ds.Tables["f49910_pclst_ExemptionType"] != null)) {
                    base.Tables.Add(new f49910_pclst_ExemptionTypeDataTable(ds.Tables["f49910_pclst_ExemptionType"]));
                }
                if ((ds.Tables["F49911GrantorDetails"] != null)) {
                    base.Tables.Add(new F49911GrantorDetailsDataTable(ds.Tables["F49911GrantorDetails"]));
                }
                if ((ds.Tables["F49911GranteeDetails"] != null)) {
                    base.Tables.Add(new F49911GranteeDetailsDataTable(ds.Tables["F49911GranteeDetails"]));
                }
                if ((ds.Tables["F49912LegalFieldListing"] != null)) {
                    base.Tables.Add(new F49912LegalFieldListingDataTable(ds.Tables["F49912LegalFieldListing"]));
                }
                if ((ds.Tables["F49912ListLegalSubDivision"] != null)) {
                    base.Tables.Add(new F49912ListLegalSubDivisionDataTable(ds.Tables["F49912ListLegalSubDivision"]));
                }
                if ((ds.Tables["ListPartiesField"] != null)) {
                    base.Tables.Add(new ListPartiesFieldDataTable(ds.Tables["ListPartiesField"]));
                }
                if ((ds.Tables["f49910SaveInstrumentHeader"] != null)) {
                    base.Tables.Add(new f49910SaveInstrumentHeaderDataTable(ds.Tables["f49910SaveInstrumentHeader"]));
                }
                if ((ds.Tables["f49910GrantListValues"] != null)) {
                    base.Tables.Add(new f49910GrantListValuesDataTable(ds.Tables["f49910GrantListValues"]));
                }
                if ((ds.Tables["f49901RecorderDetailsDataTable"] != null)) {
                    base.Tables.Add(new f49901RecorderDetailsDataTableDataTable(ds.Tables["f49901RecorderDetailsDataTable"]));
                }
                if ((ds.Tables["f49910feeDetailsTable"] != null)) {
                    base.Tables.Add(new f49910feeDetailsTableDataTable(ds.Tables["f49910feeDetailsTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f49901PaymentDetailsDataTableDataTable f49901PaymentDetailsDataTable {
            get {
                return this.tablef49901PaymentDetailsDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f4991InstrumentCopyDataTableDataTable f4991InstrumentCopyDataTable {
            get {
                return this.tablef4991InstrumentCopyDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f4991GrantorCopyDataTableDataTable f4991GrantorCopyDataTable {
            get {
                return this.tablef4991GrantorCopyDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f4991GranteeCopyDataTableDataTable f4991GranteeCopyDataTable {
            get {
                return this.tablef4991GranteeCopyDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f4991LegalCopyDataTableDataTable f4991LegalCopyDataTable {
            get {
                return this.tablef4991LegalCopyDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f49910_pclst_CustomerValueDataTable f49910_pclst_CustomerValue {
            get {
                return this.tablef49910_pclst_CustomerValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f49910InstrumentTypeDataTableDataTable f49910InstrumentTypeDataTable {
            get {
                return this.tablef49910InstrumentTypeDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f49910_pclst_TenderTypeDataTable f49910_pclst_TenderType {
            get {
                return this.tablef49910_pclst_TenderType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f49910_pclst_GrantListDataTable f49910_pclst_GrantList {
            get {
                return this.tablef49910_pclst_GrantList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f49910_pclst_ExemptionTypeDataTable f49910_pclst_ExemptionType {
            get {
                return this.tablef49910_pclst_ExemptionType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F49911GrantorDetailsDataTable F49911GrantorDetails {
            get {
                return this.tableF49911GrantorDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F49911GranteeDetailsDataTable F49911GranteeDetails {
            get {
                return this.tableF49911GranteeDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F49912LegalFieldListingDataTable F49912LegalFieldListing {
            get {
                return this.tableF49912LegalFieldListing;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F49912ListLegalSubDivisionDataTable F49912ListLegalSubDivision {
            get {
                return this.tableF49912ListLegalSubDivision;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListPartiesFieldDataTable ListPartiesField {
            get {
                return this.tableListPartiesField;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f49910SaveInstrumentHeaderDataTable f49910SaveInstrumentHeader {
            get {
                return this.tablef49910SaveInstrumentHeader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f49910GrantListValuesDataTable f49910GrantListValues {
            get {
                return this.tablef49910GrantListValues;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f49901RecorderDetailsDataTableDataTable f49901RecorderDetailsDataTable {
            get {
                return this.tablef49901RecorderDetailsDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f49910feeDetailsTableDataTable f49910feeDetailsTable {
            get {
                return this.tablef49910feeDetailsTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F49910InstrumentHeaderDataSet cln = ((F49910InstrumentHeaderDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f49901PaymentDetailsDataTable"] != null)) {
                    base.Tables.Add(new f49901PaymentDetailsDataTableDataTable(ds.Tables["f49901PaymentDetailsDataTable"]));
                }
                if ((ds.Tables["f4991InstrumentCopyDataTable"] != null)) {
                    base.Tables.Add(new f4991InstrumentCopyDataTableDataTable(ds.Tables["f4991InstrumentCopyDataTable"]));
                }
                if ((ds.Tables["f4991GrantorCopyDataTable"] != null)) {
                    base.Tables.Add(new f4991GrantorCopyDataTableDataTable(ds.Tables["f4991GrantorCopyDataTable"]));
                }
                if ((ds.Tables["f4991GranteeCopyDataTable"] != null)) {
                    base.Tables.Add(new f4991GranteeCopyDataTableDataTable(ds.Tables["f4991GranteeCopyDataTable"]));
                }
                if ((ds.Tables["f4991LegalCopyDataTable"] != null)) {
                    base.Tables.Add(new f4991LegalCopyDataTableDataTable(ds.Tables["f4991LegalCopyDataTable"]));
                }
                if ((ds.Tables["f49910_pclst_CustomerValue"] != null)) {
                    base.Tables.Add(new f49910_pclst_CustomerValueDataTable(ds.Tables["f49910_pclst_CustomerValue"]));
                }
                if ((ds.Tables["f49910InstrumentTypeDataTable"] != null)) {
                    base.Tables.Add(new f49910InstrumentTypeDataTableDataTable(ds.Tables["f49910InstrumentTypeDataTable"]));
                }
                if ((ds.Tables["f49910_pclst_TenderType"] != null)) {
                    base.Tables.Add(new f49910_pclst_TenderTypeDataTable(ds.Tables["f49910_pclst_TenderType"]));
                }
                if ((ds.Tables["f49910_pclst_GrantList"] != null)) {
                    base.Tables.Add(new f49910_pclst_GrantListDataTable(ds.Tables["f49910_pclst_GrantList"]));
                }
                if ((ds.Tables["f49910_pclst_ExemptionType"] != null)) {
                    base.Tables.Add(new f49910_pclst_ExemptionTypeDataTable(ds.Tables["f49910_pclst_ExemptionType"]));
                }
                if ((ds.Tables["F49911GrantorDetails"] != null)) {
                    base.Tables.Add(new F49911GrantorDetailsDataTable(ds.Tables["F49911GrantorDetails"]));
                }
                if ((ds.Tables["F49911GranteeDetails"] != null)) {
                    base.Tables.Add(new F49911GranteeDetailsDataTable(ds.Tables["F49911GranteeDetails"]));
                }
                if ((ds.Tables["F49912LegalFieldListing"] != null)) {
                    base.Tables.Add(new F49912LegalFieldListingDataTable(ds.Tables["F49912LegalFieldListing"]));
                }
                if ((ds.Tables["F49912ListLegalSubDivision"] != null)) {
                    base.Tables.Add(new F49912ListLegalSubDivisionDataTable(ds.Tables["F49912ListLegalSubDivision"]));
                }
                if ((ds.Tables["ListPartiesField"] != null)) {
                    base.Tables.Add(new ListPartiesFieldDataTable(ds.Tables["ListPartiesField"]));
                }
                if ((ds.Tables["f49910SaveInstrumentHeader"] != null)) {
                    base.Tables.Add(new f49910SaveInstrumentHeaderDataTable(ds.Tables["f49910SaveInstrumentHeader"]));
                }
                if ((ds.Tables["f49910GrantListValues"] != null)) {
                    base.Tables.Add(new f49910GrantListValuesDataTable(ds.Tables["f49910GrantListValues"]));
                }
                if ((ds.Tables["f49901RecorderDetailsDataTable"] != null)) {
                    base.Tables.Add(new f49901RecorderDetailsDataTableDataTable(ds.Tables["f49901RecorderDetailsDataTable"]));
                }
                if ((ds.Tables["f49910feeDetailsTable"] != null)) {
                    base.Tables.Add(new f49910feeDetailsTableDataTable(ds.Tables["f49910feeDetailsTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef49901PaymentDetailsDataTable = ((f49901PaymentDetailsDataTableDataTable)(base.Tables["f49901PaymentDetailsDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef49901PaymentDetailsDataTable != null)) {
                    this.tablef49901PaymentDetailsDataTable.InitVars();
                }
            }
            this.tablef4991InstrumentCopyDataTable = ((f4991InstrumentCopyDataTableDataTable)(base.Tables["f4991InstrumentCopyDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef4991InstrumentCopyDataTable != null)) {
                    this.tablef4991InstrumentCopyDataTable.InitVars();
                }
            }
            this.tablef4991GrantorCopyDataTable = ((f4991GrantorCopyDataTableDataTable)(base.Tables["f4991GrantorCopyDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef4991GrantorCopyDataTable != null)) {
                    this.tablef4991GrantorCopyDataTable.InitVars();
                }
            }
            this.tablef4991GranteeCopyDataTable = ((f4991GranteeCopyDataTableDataTable)(base.Tables["f4991GranteeCopyDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef4991GranteeCopyDataTable != null)) {
                    this.tablef4991GranteeCopyDataTable.InitVars();
                }
            }
            this.tablef4991LegalCopyDataTable = ((f4991LegalCopyDataTableDataTable)(base.Tables["f4991LegalCopyDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef4991LegalCopyDataTable != null)) {
                    this.tablef4991LegalCopyDataTable.InitVars();
                }
            }
            this.tablef49910_pclst_CustomerValue = ((f49910_pclst_CustomerValueDataTable)(base.Tables["f49910_pclst_CustomerValue"]));
            if ((initTable == true)) {
                if ((this.tablef49910_pclst_CustomerValue != null)) {
                    this.tablef49910_pclst_CustomerValue.InitVars();
                }
            }
            this.tablef49910InstrumentTypeDataTable = ((f49910InstrumentTypeDataTableDataTable)(base.Tables["f49910InstrumentTypeDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef49910InstrumentTypeDataTable != null)) {
                    this.tablef49910InstrumentTypeDataTable.InitVars();
                }
            }
            this.tablef49910_pclst_TenderType = ((f49910_pclst_TenderTypeDataTable)(base.Tables["f49910_pclst_TenderType"]));
            if ((initTable == true)) {
                if ((this.tablef49910_pclst_TenderType != null)) {
                    this.tablef49910_pclst_TenderType.InitVars();
                }
            }
            this.tablef49910_pclst_GrantList = ((f49910_pclst_GrantListDataTable)(base.Tables["f49910_pclst_GrantList"]));
            if ((initTable == true)) {
                if ((this.tablef49910_pclst_GrantList != null)) {
                    this.tablef49910_pclst_GrantList.InitVars();
                }
            }
            this.tablef49910_pclst_ExemptionType = ((f49910_pclst_ExemptionTypeDataTable)(base.Tables["f49910_pclst_ExemptionType"]));
            if ((initTable == true)) {
                if ((this.tablef49910_pclst_ExemptionType != null)) {
                    this.tablef49910_pclst_ExemptionType.InitVars();
                }
            }
            this.tableF49911GrantorDetails = ((F49911GrantorDetailsDataTable)(base.Tables["F49911GrantorDetails"]));
            if ((initTable == true)) {
                if ((this.tableF49911GrantorDetails != null)) {
                    this.tableF49911GrantorDetails.InitVars();
                }
            }
            this.tableF49911GranteeDetails = ((F49911GranteeDetailsDataTable)(base.Tables["F49911GranteeDetails"]));
            if ((initTable == true)) {
                if ((this.tableF49911GranteeDetails != null)) {
                    this.tableF49911GranteeDetails.InitVars();
                }
            }
            this.tableF49912LegalFieldListing = ((F49912LegalFieldListingDataTable)(base.Tables["F49912LegalFieldListing"]));
            if ((initTable == true)) {
                if ((this.tableF49912LegalFieldListing != null)) {
                    this.tableF49912LegalFieldListing.InitVars();
                }
            }
            this.tableF49912ListLegalSubDivision = ((F49912ListLegalSubDivisionDataTable)(base.Tables["F49912ListLegalSubDivision"]));
            if ((initTable == true)) {
                if ((this.tableF49912ListLegalSubDivision != null)) {
                    this.tableF49912ListLegalSubDivision.InitVars();
                }
            }
            this.tableListPartiesField = ((ListPartiesFieldDataTable)(base.Tables["ListPartiesField"]));
            if ((initTable == true)) {
                if ((this.tableListPartiesField != null)) {
                    this.tableListPartiesField.InitVars();
                }
            }
            this.tablef49910SaveInstrumentHeader = ((f49910SaveInstrumentHeaderDataTable)(base.Tables["f49910SaveInstrumentHeader"]));
            if ((initTable == true)) {
                if ((this.tablef49910SaveInstrumentHeader != null)) {
                    this.tablef49910SaveInstrumentHeader.InitVars();
                }
            }
            this.tablef49910GrantListValues = ((f49910GrantListValuesDataTable)(base.Tables["f49910GrantListValues"]));
            if ((initTable == true)) {
                if ((this.tablef49910GrantListValues != null)) {
                    this.tablef49910GrantListValues.InitVars();
                }
            }
            this.tablef49901RecorderDetailsDataTable = ((f49901RecorderDetailsDataTableDataTable)(base.Tables["f49901RecorderDetailsDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef49901RecorderDetailsDataTable != null)) {
                    this.tablef49901RecorderDetailsDataTable.InitVars();
                }
            }
            this.tablef49910feeDetailsTable = ((f49910feeDetailsTableDataTable)(base.Tables["f49910feeDetailsTable"]));
            if ((initTable == true)) {
                if ((this.tablef49910feeDetailsTable != null)) {
                    this.tablef49910feeDetailsTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F49910InstrumentHeaderDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F49910InstrumentHeaderDataSet.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef49901PaymentDetailsDataTable = new f49901PaymentDetailsDataTableDataTable();
            base.Tables.Add(this.tablef49901PaymentDetailsDataTable);
            this.tablef4991InstrumentCopyDataTable = new f4991InstrumentCopyDataTableDataTable();
            base.Tables.Add(this.tablef4991InstrumentCopyDataTable);
            this.tablef4991GrantorCopyDataTable = new f4991GrantorCopyDataTableDataTable();
            base.Tables.Add(this.tablef4991GrantorCopyDataTable);
            this.tablef4991GranteeCopyDataTable = new f4991GranteeCopyDataTableDataTable();
            base.Tables.Add(this.tablef4991GranteeCopyDataTable);
            this.tablef4991LegalCopyDataTable = new f4991LegalCopyDataTableDataTable();
            base.Tables.Add(this.tablef4991LegalCopyDataTable);
            this.tablef49910_pclst_CustomerValue = new f49910_pclst_CustomerValueDataTable();
            base.Tables.Add(this.tablef49910_pclst_CustomerValue);
            this.tablef49910InstrumentTypeDataTable = new f49910InstrumentTypeDataTableDataTable();
            base.Tables.Add(this.tablef49910InstrumentTypeDataTable);
            this.tablef49910_pclst_TenderType = new f49910_pclst_TenderTypeDataTable();
            base.Tables.Add(this.tablef49910_pclst_TenderType);
            this.tablef49910_pclst_GrantList = new f49910_pclst_GrantListDataTable();
            base.Tables.Add(this.tablef49910_pclst_GrantList);
            this.tablef49910_pclst_ExemptionType = new f49910_pclst_ExemptionTypeDataTable();
            base.Tables.Add(this.tablef49910_pclst_ExemptionType);
            this.tableF49911GrantorDetails = new F49911GrantorDetailsDataTable();
            base.Tables.Add(this.tableF49911GrantorDetails);
            this.tableF49911GranteeDetails = new F49911GranteeDetailsDataTable();
            base.Tables.Add(this.tableF49911GranteeDetails);
            this.tableF49912LegalFieldListing = new F49912LegalFieldListingDataTable();
            base.Tables.Add(this.tableF49912LegalFieldListing);
            this.tableF49912ListLegalSubDivision = new F49912ListLegalSubDivisionDataTable();
            base.Tables.Add(this.tableF49912ListLegalSubDivision);
            this.tableListPartiesField = new ListPartiesFieldDataTable();
            base.Tables.Add(this.tableListPartiesField);
            this.tablef49910SaveInstrumentHeader = new f49910SaveInstrumentHeaderDataTable();
            base.Tables.Add(this.tablef49910SaveInstrumentHeader);
            this.tablef49910GrantListValues = new f49910GrantListValuesDataTable();
            base.Tables.Add(this.tablef49910GrantListValues);
            this.tablef49901RecorderDetailsDataTable = new f49901RecorderDetailsDataTableDataTable();
            base.Tables.Add(this.tablef49901RecorderDetailsDataTable);
            this.tablef49910feeDetailsTable = new f49910feeDetailsTableDataTable();
            base.Tables.Add(this.tablef49910feeDetailsTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef49901PaymentDetailsDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef4991InstrumentCopyDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef4991GrantorCopyDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef4991GranteeCopyDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef4991LegalCopyDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef49910_pclst_CustomerValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef49910InstrumentTypeDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef49910_pclst_TenderType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef49910_pclst_GrantList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef49910_pclst_ExemptionType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF49911GrantorDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF49911GranteeDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF49912LegalFieldListing() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF49912ListLegalSubDivision() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListPartiesField() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef49910SaveInstrumentHeader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef49910GrantListValues() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef49901RecorderDetailsDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef49910feeDetailsTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f49901PaymentDetailsDataTableRowChangeEventHandler(object sender, f49901PaymentDetailsDataTableRowChangeEvent e);
        
        public delegate void f4991InstrumentCopyDataTableRowChangeEventHandler(object sender, f4991InstrumentCopyDataTableRowChangeEvent e);
        
        public delegate void f4991GrantorCopyDataTableRowChangeEventHandler(object sender, f4991GrantorCopyDataTableRowChangeEvent e);
        
        public delegate void f4991GranteeCopyDataTableRowChangeEventHandler(object sender, f4991GranteeCopyDataTableRowChangeEvent e);
        
        public delegate void f4991LegalCopyDataTableRowChangeEventHandler(object sender, f4991LegalCopyDataTableRowChangeEvent e);
        
        public delegate void f49910_pclst_CustomerValueRowChangeEventHandler(object sender, f49910_pclst_CustomerValueRowChangeEvent e);
        
        public delegate void f49910InstrumentTypeDataTableRowChangeEventHandler(object sender, f49910InstrumentTypeDataTableRowChangeEvent e);
        
        public delegate void f49910_pclst_TenderTypeRowChangeEventHandler(object sender, f49910_pclst_TenderTypeRowChangeEvent e);
        
        public delegate void f49910_pclst_GrantListRowChangeEventHandler(object sender, f49910_pclst_GrantListRowChangeEvent e);
        
        public delegate void f49910_pclst_ExemptionTypeRowChangeEventHandler(object sender, f49910_pclst_ExemptionTypeRowChangeEvent e);
        
        public delegate void F49911GrantorDetailsRowChangeEventHandler(object sender, F49911GrantorDetailsRowChangeEvent e);
        
        public delegate void F49911GranteeDetailsRowChangeEventHandler(object sender, F49911GranteeDetailsRowChangeEvent e);
        
        public delegate void F49912LegalFieldListingRowChangeEventHandler(object sender, F49912LegalFieldListingRowChangeEvent e);
        
        public delegate void F49912ListLegalSubDivisionRowChangeEventHandler(object sender, F49912ListLegalSubDivisionRowChangeEvent e);
        
        public delegate void ListPartiesFieldRowChangeEventHandler(object sender, ListPartiesFieldRowChangeEvent e);
        
        public delegate void f49910SaveInstrumentHeaderRowChangeEventHandler(object sender, f49910SaveInstrumentHeaderRowChangeEvent e);
        
        public delegate void f49910GrantListValuesRowChangeEventHandler(object sender, f49910GrantListValuesRowChangeEvent e);
        
        public delegate void f49901RecorderDetailsDataTableRowChangeEventHandler(object sender, f49901RecorderDetailsDataTableRowChangeEvent e);
        
        public delegate void f49910feeDetailsTableRowChangeEventHandler(object sender, f49910feeDetailsTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f49901PaymentDetailsDataTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnInstID;
            
            private global::System.Data.DataColumn columnPaymentID;
            
            private global::System.Data.DataColumn columnTenderTypeID;
            
            private global::System.Data.DataColumn columnTenderType;
            
            private global::System.Data.DataColumn columnPaidBy;
            
            private global::System.Data.DataColumn columnCheckNumber;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901PaymentDetailsDataTableDataTable() {
                this.TableName = "f49901PaymentDetailsDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49901PaymentDetailsDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f49901PaymentDetailsDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstIDColumn {
                get {
                    return this.columnInstID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentIDColumn {
                get {
                    return this.columnPaymentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenderTypeIDColumn {
                get {
                    return this.columnTenderTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenderTypeColumn {
                get {
                    return this.columnTenderType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidByColumn {
                get {
                    return this.columnPaidBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckNumberColumn {
                get {
                    return this.columnCheckNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901PaymentDetailsDataTableRow this[int index] {
                get {
                    return ((f49901PaymentDetailsDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f49901PaymentDetailsDataTableRowChangeEventHandler f49901PaymentDetailsDataTableRowChanging;
            
            public event f49901PaymentDetailsDataTableRowChangeEventHandler f49901PaymentDetailsDataTableRowChanged;
            
            public event f49901PaymentDetailsDataTableRowChangeEventHandler f49901PaymentDetailsDataTableRowDeleting;
            
            public event f49901PaymentDetailsDataTableRowChangeEventHandler f49901PaymentDetailsDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf49901PaymentDetailsDataTableRow(f49901PaymentDetailsDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901PaymentDetailsDataTableRow Addf49901PaymentDetailsDataTableRow(int TenderTypeID, string TenderType, string PaidBy, string CheckNumber, decimal Amount) {
                f49901PaymentDetailsDataTableRow rowf49901PaymentDetailsDataTableRow = ((f49901PaymentDetailsDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        TenderTypeID,
                        TenderType,
                        PaidBy,
                        CheckNumber,
                        Amount};
                rowf49901PaymentDetailsDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf49901PaymentDetailsDataTableRow);
                return rowf49901PaymentDetailsDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f49901PaymentDetailsDataTableDataTable cln = ((f49901PaymentDetailsDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f49901PaymentDetailsDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInstID = base.Columns["InstID"];
                this.columnPaymentID = base.Columns["PaymentID"];
                this.columnTenderTypeID = base.Columns["TenderTypeID"];
                this.columnTenderType = base.Columns["TenderType"];
                this.columnPaidBy = base.Columns["PaidBy"];
                this.columnCheckNumber = base.Columns["CheckNumber"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInstID = new global::System.Data.DataColumn("InstID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstID);
                this.columnPaymentID = new global::System.Data.DataColumn("PaymentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentID);
                this.columnTenderTypeID = new global::System.Data.DataColumn("TenderTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderTypeID);
                this.columnTenderType = new global::System.Data.DataColumn("TenderType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderType);
                this.columnPaidBy = new global::System.Data.DataColumn("PaidBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidBy);
                this.columnCheckNumber = new global::System.Data.DataColumn("CheckNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckNumber);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnInstID.AutoIncrement = true;
                this.columnInstID.AllowDBNull = false;
                this.columnInstID.ReadOnly = true;
                this.columnPaymentID.AutoIncrement = true;
                this.columnPaymentID.AllowDBNull = false;
                this.columnPaymentID.ReadOnly = true;
                this.columnTenderTypeID.AllowDBNull = false;
                this.columnTenderType.AllowDBNull = false;
                this.columnTenderType.MaxLength = 50;
                this.columnPaidBy.MaxLength = 50;
                this.columnCheckNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901PaymentDetailsDataTableRow Newf49901PaymentDetailsDataTableRow() {
                return ((f49901PaymentDetailsDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f49901PaymentDetailsDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f49901PaymentDetailsDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f49901PaymentDetailsDataTableRowChanged != null)) {
                    this.f49901PaymentDetailsDataTableRowChanged(this, new f49901PaymentDetailsDataTableRowChangeEvent(((f49901PaymentDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f49901PaymentDetailsDataTableRowChanging != null)) {
                    this.f49901PaymentDetailsDataTableRowChanging(this, new f49901PaymentDetailsDataTableRowChangeEvent(((f49901PaymentDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f49901PaymentDetailsDataTableRowDeleted != null)) {
                    this.f49901PaymentDetailsDataTableRowDeleted(this, new f49901PaymentDetailsDataTableRowChangeEvent(((f49901PaymentDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f49901PaymentDetailsDataTableRowDeleting != null)) {
                    this.f49901PaymentDetailsDataTableRowDeleting(this, new f49901PaymentDetailsDataTableRowChangeEvent(((f49901PaymentDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef49901PaymentDetailsDataTableRow(f49901PaymentDetailsDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f49901PaymentDetailsDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f4991InstrumentCopyDataTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnInstNum;
            
            private global::System.Data.DataColumn columnFileDate;
            
            private global::System.Data.DataColumn columnFileTime;
            
            private global::System.Data.DataColumn columnInstDate;
            
            private global::System.Data.DataColumn columnITypeID;
            
            private global::System.Data.DataColumn columnColumn1;
            
            private global::System.Data.DataColumn columnRcvFrom;
            
            private global::System.Data.DataColumn columnReturnedTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991InstrumentCopyDataTableDataTable() {
                this.TableName = "f4991InstrumentCopyDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f4991InstrumentCopyDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f4991InstrumentCopyDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstNumColumn {
                get {
                    return this.columnInstNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileDateColumn {
                get {
                    return this.columnFileDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileTimeColumn {
                get {
                    return this.columnFileTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstDateColumn {
                get {
                    return this.columnInstDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITypeIDColumn {
                get {
                    return this.columnITypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RcvFromColumn {
                get {
                    return this.columnRcvFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedToColumn {
                get {
                    return this.columnReturnedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991InstrumentCopyDataTableRow this[int index] {
                get {
                    return ((f4991InstrumentCopyDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f4991InstrumentCopyDataTableRowChangeEventHandler f4991InstrumentCopyDataTableRowChanging;
            
            public event f4991InstrumentCopyDataTableRowChangeEventHandler f4991InstrumentCopyDataTableRowChanged;
            
            public event f4991InstrumentCopyDataTableRowChangeEventHandler f4991InstrumentCopyDataTableRowDeleting;
            
            public event f4991InstrumentCopyDataTableRowChangeEventHandler f4991InstrumentCopyDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf4991InstrumentCopyDataTableRow(f4991InstrumentCopyDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991InstrumentCopyDataTableRow Addf4991InstrumentCopyDataTableRow(string InstNum, string FileDate, string FileTime, string InstDate, int ITypeID, int Column1, string RcvFrom, string ReturnedTo) {
                f4991InstrumentCopyDataTableRow rowf4991InstrumentCopyDataTableRow = ((f4991InstrumentCopyDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InstNum,
                        FileDate,
                        FileTime,
                        InstDate,
                        ITypeID,
                        Column1,
                        RcvFrom,
                        ReturnedTo};
                rowf4991InstrumentCopyDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf4991InstrumentCopyDataTableRow);
                return rowf4991InstrumentCopyDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f4991InstrumentCopyDataTableDataTable cln = ((f4991InstrumentCopyDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f4991InstrumentCopyDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInstNum = base.Columns["InstNum"];
                this.columnFileDate = base.Columns["FileDate"];
                this.columnFileTime = base.Columns["FileTime"];
                this.columnInstDate = base.Columns["InstDate"];
                this.columnITypeID = base.Columns["ITypeID"];
                this.columnColumn1 = base.Columns["Column1"];
                this.columnRcvFrom = base.Columns["RcvFrom"];
                this.columnReturnedTo = base.Columns["ReturnedTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInstNum = new global::System.Data.DataColumn("InstNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstNum);
                this.columnFileDate = new global::System.Data.DataColumn("FileDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileDate);
                this.columnFileTime = new global::System.Data.DataColumn("FileTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileTime);
                this.columnInstDate = new global::System.Data.DataColumn("InstDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstDate);
                this.columnITypeID = new global::System.Data.DataColumn("ITypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITypeID);
                this.columnColumn1 = new global::System.Data.DataColumn("Column1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
                this.columnRcvFrom = new global::System.Data.DataColumn("RcvFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRcvFrom);
                this.columnReturnedTo = new global::System.Data.DataColumn("ReturnedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedTo);
                this.columnInstNum.AllowDBNull = false;
                this.columnInstNum.MaxLength = 50;
                this.columnFileDate.ReadOnly = true;
                this.columnFileDate.MaxLength = 10;
                this.columnFileTime.ReadOnly = true;
                this.columnFileTime.MaxLength = 10;
                this.columnInstDate.ReadOnly = true;
                this.columnInstDate.MaxLength = 10;
                this.columnITypeID.AllowDBNull = false;
                this.columnColumn1.ReadOnly = true;
                this.columnRcvFrom.MaxLength = 50;
                this.columnReturnedTo.MaxLength = 300;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991InstrumentCopyDataTableRow Newf4991InstrumentCopyDataTableRow() {
                return ((f4991InstrumentCopyDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f4991InstrumentCopyDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f4991InstrumentCopyDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f4991InstrumentCopyDataTableRowChanged != null)) {
                    this.f4991InstrumentCopyDataTableRowChanged(this, new f4991InstrumentCopyDataTableRowChangeEvent(((f4991InstrumentCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f4991InstrumentCopyDataTableRowChanging != null)) {
                    this.f4991InstrumentCopyDataTableRowChanging(this, new f4991InstrumentCopyDataTableRowChangeEvent(((f4991InstrumentCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f4991InstrumentCopyDataTableRowDeleted != null)) {
                    this.f4991InstrumentCopyDataTableRowDeleted(this, new f4991InstrumentCopyDataTableRowChangeEvent(((f4991InstrumentCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f4991InstrumentCopyDataTableRowDeleting != null)) {
                    this.f4991InstrumentCopyDataTableRowDeleting(this, new f4991InstrumentCopyDataTableRowChangeEvent(((f4991InstrumentCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef4991InstrumentCopyDataTableRow(f4991InstrumentCopyDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f4991InstrumentCopyDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f4991GrantorCopyDataTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGrantorID;
            
            private global::System.Data.DataColumn columnGrantor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GrantorCopyDataTableDataTable() {
                this.TableName = "f4991GrantorCopyDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f4991GrantorCopyDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f4991GrantorCopyDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrantorIDColumn {
                get {
                    return this.columnGrantorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrantorColumn {
                get {
                    return this.columnGrantor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GrantorCopyDataTableRow this[int index] {
                get {
                    return ((f4991GrantorCopyDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f4991GrantorCopyDataTableRowChangeEventHandler f4991GrantorCopyDataTableRowChanging;
            
            public event f4991GrantorCopyDataTableRowChangeEventHandler f4991GrantorCopyDataTableRowChanged;
            
            public event f4991GrantorCopyDataTableRowChangeEventHandler f4991GrantorCopyDataTableRowDeleting;
            
            public event f4991GrantorCopyDataTableRowChangeEventHandler f4991GrantorCopyDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf4991GrantorCopyDataTableRow(f4991GrantorCopyDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GrantorCopyDataTableRow Addf4991GrantorCopyDataTableRow(string Grantor) {
                f4991GrantorCopyDataTableRow rowf4991GrantorCopyDataTableRow = ((f4991GrantorCopyDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Grantor};
                rowf4991GrantorCopyDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf4991GrantorCopyDataTableRow);
                return rowf4991GrantorCopyDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f4991GrantorCopyDataTableDataTable cln = ((f4991GrantorCopyDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f4991GrantorCopyDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGrantorID = base.Columns["GrantorID"];
                this.columnGrantor = base.Columns["Grantor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGrantorID = new global::System.Data.DataColumn("GrantorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrantorID);
                this.columnGrantor = new global::System.Data.DataColumn("Grantor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrantor);
                this.columnGrantorID.AutoIncrement = true;
                this.columnGrantorID.ReadOnly = true;
                this.columnGrantor.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GrantorCopyDataTableRow Newf4991GrantorCopyDataTableRow() {
                return ((f4991GrantorCopyDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f4991GrantorCopyDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f4991GrantorCopyDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f4991GrantorCopyDataTableRowChanged != null)) {
                    this.f4991GrantorCopyDataTableRowChanged(this, new f4991GrantorCopyDataTableRowChangeEvent(((f4991GrantorCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f4991GrantorCopyDataTableRowChanging != null)) {
                    this.f4991GrantorCopyDataTableRowChanging(this, new f4991GrantorCopyDataTableRowChangeEvent(((f4991GrantorCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f4991GrantorCopyDataTableRowDeleted != null)) {
                    this.f4991GrantorCopyDataTableRowDeleted(this, new f4991GrantorCopyDataTableRowChangeEvent(((f4991GrantorCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f4991GrantorCopyDataTableRowDeleting != null)) {
                    this.f4991GrantorCopyDataTableRowDeleting(this, new f4991GrantorCopyDataTableRowChangeEvent(((f4991GrantorCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef4991GrantorCopyDataTableRow(f4991GrantorCopyDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f4991GrantorCopyDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f4991GranteeCopyDataTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGranteeID;
            
            private global::System.Data.DataColumn columnGrantee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GranteeCopyDataTableDataTable() {
                this.TableName = "f4991GranteeCopyDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f4991GranteeCopyDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f4991GranteeCopyDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GranteeIDColumn {
                get {
                    return this.columnGranteeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GranteeColumn {
                get {
                    return this.columnGrantee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GranteeCopyDataTableRow this[int index] {
                get {
                    return ((f4991GranteeCopyDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f4991GranteeCopyDataTableRowChangeEventHandler f4991GranteeCopyDataTableRowChanging;
            
            public event f4991GranteeCopyDataTableRowChangeEventHandler f4991GranteeCopyDataTableRowChanged;
            
            public event f4991GranteeCopyDataTableRowChangeEventHandler f4991GranteeCopyDataTableRowDeleting;
            
            public event f4991GranteeCopyDataTableRowChangeEventHandler f4991GranteeCopyDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf4991GranteeCopyDataTableRow(f4991GranteeCopyDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GranteeCopyDataTableRow Addf4991GranteeCopyDataTableRow(string Grantee) {
                f4991GranteeCopyDataTableRow rowf4991GranteeCopyDataTableRow = ((f4991GranteeCopyDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Grantee};
                rowf4991GranteeCopyDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf4991GranteeCopyDataTableRow);
                return rowf4991GranteeCopyDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f4991GranteeCopyDataTableDataTable cln = ((f4991GranteeCopyDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f4991GranteeCopyDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGranteeID = base.Columns["GranteeID"];
                this.columnGrantee = base.Columns["Grantee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGranteeID = new global::System.Data.DataColumn("GranteeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGranteeID);
                this.columnGrantee = new global::System.Data.DataColumn("Grantee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrantee);
                this.columnGranteeID.AutoIncrement = true;
                this.columnGranteeID.ReadOnly = true;
                this.columnGrantee.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GranteeCopyDataTableRow Newf4991GranteeCopyDataTableRow() {
                return ((f4991GranteeCopyDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f4991GranteeCopyDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f4991GranteeCopyDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f4991GranteeCopyDataTableRowChanged != null)) {
                    this.f4991GranteeCopyDataTableRowChanged(this, new f4991GranteeCopyDataTableRowChangeEvent(((f4991GranteeCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f4991GranteeCopyDataTableRowChanging != null)) {
                    this.f4991GranteeCopyDataTableRowChanging(this, new f4991GranteeCopyDataTableRowChangeEvent(((f4991GranteeCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f4991GranteeCopyDataTableRowDeleted != null)) {
                    this.f4991GranteeCopyDataTableRowDeleted(this, new f4991GranteeCopyDataTableRowChangeEvent(((f4991GranteeCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f4991GranteeCopyDataTableRowDeleting != null)) {
                    this.f4991GranteeCopyDataTableRowDeleting(this, new f4991GranteeCopyDataTableRowChangeEvent(((f4991GranteeCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef4991GranteeCopyDataTableRow(f4991GranteeCopyDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f4991GranteeCopyDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f4991LegalCopyDataTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSubID;
            
            private global::System.Data.DataColumn columnSubName;
            
            private global::System.Data.DataColumn columnLot;
            
            private global::System.Data.DataColumn columnPLot;
            
            private global::System.Data.DataColumn columnBlock;
            
            private global::System.Data.DataColumn columnPBlock;
            
            private global::System.Data.DataColumn columnNENE;
            
            private global::System.Data.DataColumn columnNENW;
            
            private global::System.Data.DataColumn columnNESW;
            
            private global::System.Data.DataColumn columnNESE;
            
            private global::System.Data.DataColumn columnNWNE;
            
            private global::System.Data.DataColumn columnNWNW;
            
            private global::System.Data.DataColumn columnNWSW;
            
            private global::System.Data.DataColumn columnNWSE;
            
            private global::System.Data.DataColumn columnSWNE;
            
            private global::System.Data.DataColumn columnSWNW;
            
            private global::System.Data.DataColumn columnSWSW;
            
            private global::System.Data.DataColumn columnSWSE;
            
            private global::System.Data.DataColumn columnSENE;
            
            private global::System.Data.DataColumn columnSENW;
            
            private global::System.Data.DataColumn columnSESW;
            
            private global::System.Data.DataColumn columnSESE;
            
            private global::System.Data.DataColumn columnComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991LegalCopyDataTableDataTable() {
                this.TableName = "f4991LegalCopyDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f4991LegalCopyDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f4991LegalCopyDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubIDColumn {
                get {
                    return this.columnSubID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubNameColumn {
                get {
                    return this.columnSubName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LotColumn {
                get {
                    return this.columnLot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PLotColumn {
                get {
                    return this.columnPLot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockColumn {
                get {
                    return this.columnBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBlockColumn {
                get {
                    return this.columnPBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NENEColumn {
                get {
                    return this.columnNENE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NENWColumn {
                get {
                    return this.columnNENW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NESWColumn {
                get {
                    return this.columnNESW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NESEColumn {
                get {
                    return this.columnNESE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWNEColumn {
                get {
                    return this.columnNWNE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWNWColumn {
                get {
                    return this.columnNWNW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWSWColumn {
                get {
                    return this.columnNWSW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWSEColumn {
                get {
                    return this.columnNWSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWNEColumn {
                get {
                    return this.columnSWNE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWNWColumn {
                get {
                    return this.columnSWNW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWSWColumn {
                get {
                    return this.columnSWSW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWSEColumn {
                get {
                    return this.columnSWSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENEColumn {
                get {
                    return this.columnSENE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENWColumn {
                get {
                    return this.columnSENW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SESWColumn {
                get {
                    return this.columnSESW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SESEColumn {
                get {
                    return this.columnSESE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991LegalCopyDataTableRow this[int index] {
                get {
                    return ((f4991LegalCopyDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f4991LegalCopyDataTableRowChangeEventHandler f4991LegalCopyDataTableRowChanging;
            
            public event f4991LegalCopyDataTableRowChangeEventHandler f4991LegalCopyDataTableRowChanged;
            
            public event f4991LegalCopyDataTableRowChangeEventHandler f4991LegalCopyDataTableRowDeleting;
            
            public event f4991LegalCopyDataTableRowChangeEventHandler f4991LegalCopyDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf4991LegalCopyDataTableRow(f4991LegalCopyDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991LegalCopyDataTableRow Addf4991LegalCopyDataTableRow(
                        int SubID, 
                        string SubName, 
                        string Lot, 
                        bool PLot, 
                        string Block, 
                        bool PBlock, 
                        string NENE, 
                        string NENW, 
                        string NESW, 
                        string NESE, 
                        string NWNE, 
                        string NWNW, 
                        string NWSW, 
                        string NWSE, 
                        string SWNE, 
                        string SWNW, 
                        string SWSW, 
                        string SWSE, 
                        string SENE, 
                        string SENW, 
                        string SESW, 
                        string SESE, 
                        string Comments) {
                f4991LegalCopyDataTableRow rowf4991LegalCopyDataTableRow = ((f4991LegalCopyDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubID,
                        SubName,
                        Lot,
                        PLot,
                        Block,
                        PBlock,
                        NENE,
                        NENW,
                        NESW,
                        NESE,
                        NWNE,
                        NWNW,
                        NWSW,
                        NWSE,
                        SWNE,
                        SWNW,
                        SWSW,
                        SWSE,
                        SENE,
                        SENW,
                        SESW,
                        SESE,
                        Comments};
                rowf4991LegalCopyDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf4991LegalCopyDataTableRow);
                return rowf4991LegalCopyDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f4991LegalCopyDataTableDataTable cln = ((f4991LegalCopyDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f4991LegalCopyDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSubID = base.Columns["SubID"];
                this.columnSubName = base.Columns["SubName"];
                this.columnLot = base.Columns["Lot"];
                this.columnPLot = base.Columns["PLot"];
                this.columnBlock = base.Columns["Block"];
                this.columnPBlock = base.Columns["PBlock"];
                this.columnNENE = base.Columns["NENE"];
                this.columnNENW = base.Columns["NENW"];
                this.columnNESW = base.Columns["NESW"];
                this.columnNESE = base.Columns["NESE"];
                this.columnNWNE = base.Columns["NWNE"];
                this.columnNWNW = base.Columns["NWNW"];
                this.columnNWSW = base.Columns["NWSW"];
                this.columnNWSE = base.Columns["NWSE"];
                this.columnSWNE = base.Columns["SWNE"];
                this.columnSWNW = base.Columns["SWNW"];
                this.columnSWSW = base.Columns["SWSW"];
                this.columnSWSE = base.Columns["SWSE"];
                this.columnSENE = base.Columns["SENE"];
                this.columnSENW = base.Columns["SENW"];
                this.columnSESW = base.Columns["SESW"];
                this.columnSESE = base.Columns["SESE"];
                this.columnComments = base.Columns["Comments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSubID = new global::System.Data.DataColumn("SubID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubID);
                this.columnSubName = new global::System.Data.DataColumn("SubName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubName);
                this.columnLot = new global::System.Data.DataColumn("Lot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLot);
                this.columnPLot = new global::System.Data.DataColumn("PLot", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLot);
                this.columnBlock = new global::System.Data.DataColumn("Block", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlock);
                this.columnPBlock = new global::System.Data.DataColumn("PBlock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBlock);
                this.columnNENE = new global::System.Data.DataColumn("NENE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNENE);
                this.columnNENW = new global::System.Data.DataColumn("NENW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNENW);
                this.columnNESW = new global::System.Data.DataColumn("NESW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNESW);
                this.columnNESE = new global::System.Data.DataColumn("NESE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNESE);
                this.columnNWNE = new global::System.Data.DataColumn("NWNE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWNE);
                this.columnNWNW = new global::System.Data.DataColumn("NWNW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWNW);
                this.columnNWSW = new global::System.Data.DataColumn("NWSW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWSW);
                this.columnNWSE = new global::System.Data.DataColumn("NWSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWSE);
                this.columnSWNE = new global::System.Data.DataColumn("SWNE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWNE);
                this.columnSWNW = new global::System.Data.DataColumn("SWNW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWNW);
                this.columnSWSW = new global::System.Data.DataColumn("SWSW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWSW);
                this.columnSWSE = new global::System.Data.DataColumn("SWSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWSE);
                this.columnSENE = new global::System.Data.DataColumn("SENE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENE);
                this.columnSENW = new global::System.Data.DataColumn("SENW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENW);
                this.columnSESW = new global::System.Data.DataColumn("SESW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESW);
                this.columnSESE = new global::System.Data.DataColumn("SESE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESE);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnSubID.AllowDBNull = false;
                this.columnSubName.AllowDBNull = false;
                this.columnSubName.MaxLength = 80;
                this.columnLot.MaxLength = 50;
                this.columnBlock.MaxLength = 10;
                this.columnNENE.MaxLength = 2;
                this.columnNENW.MaxLength = 2;
                this.columnNESW.MaxLength = 2;
                this.columnNESE.MaxLength = 2;
                this.columnNWNE.MaxLength = 2;
                this.columnNWNW.MaxLength = 2;
                this.columnNWSW.MaxLength = 2;
                this.columnNWSE.MaxLength = 2;
                this.columnSWNE.MaxLength = 2;
                this.columnSWNW.MaxLength = 2;
                this.columnSWSW.MaxLength = 2;
                this.columnSWSE.MaxLength = 2;
                this.columnSENE.MaxLength = 2;
                this.columnSENW.MaxLength = 2;
                this.columnSESW.MaxLength = 2;
                this.columnSESE.MaxLength = 2;
                this.columnComments.MaxLength = 225;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991LegalCopyDataTableRow Newf4991LegalCopyDataTableRow() {
                return ((f4991LegalCopyDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f4991LegalCopyDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f4991LegalCopyDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f4991LegalCopyDataTableRowChanged != null)) {
                    this.f4991LegalCopyDataTableRowChanged(this, new f4991LegalCopyDataTableRowChangeEvent(((f4991LegalCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f4991LegalCopyDataTableRowChanging != null)) {
                    this.f4991LegalCopyDataTableRowChanging(this, new f4991LegalCopyDataTableRowChangeEvent(((f4991LegalCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f4991LegalCopyDataTableRowDeleted != null)) {
                    this.f4991LegalCopyDataTableRowDeleted(this, new f4991LegalCopyDataTableRowChangeEvent(((f4991LegalCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f4991LegalCopyDataTableRowDeleting != null)) {
                    this.f4991LegalCopyDataTableRowDeleting(this, new f4991LegalCopyDataTableRowChangeEvent(((f4991LegalCopyDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef4991LegalCopyDataTableRow(f4991LegalCopyDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f4991LegalCopyDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f49910_pclst_CustomerValueDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_CustomerValueDataTable() {
                this.TableName = "f49910_pclst_CustomerValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910_pclst_CustomerValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f49910_pclst_CustomerValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_CustomerValueRow this[int index] {
                get {
                    return ((f49910_pclst_CustomerValueRow)(this.Rows[index]));
                }
            }
            
            public event f49910_pclst_CustomerValueRowChangeEventHandler f49910_pclst_CustomerValueRowChanging;
            
            public event f49910_pclst_CustomerValueRowChangeEventHandler f49910_pclst_CustomerValueRowChanged;
            
            public event f49910_pclst_CustomerValueRowChangeEventHandler f49910_pclst_CustomerValueRowDeleting;
            
            public event f49910_pclst_CustomerValueRowChangeEventHandler f49910_pclst_CustomerValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf49910_pclst_CustomerValueRow(f49910_pclst_CustomerValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_CustomerValueRow Addf49910_pclst_CustomerValueRow(string Name) {
                f49910_pclst_CustomerValueRow rowf49910_pclst_CustomerValueRow = ((f49910_pclst_CustomerValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name};
                rowf49910_pclst_CustomerValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf49910_pclst_CustomerValueRow);
                return rowf49910_pclst_CustomerValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f49910_pclst_CustomerValueDataTable cln = ((f49910_pclst_CustomerValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f49910_pclst_CustomerValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnCustomerID.AutoIncrement = true;
                this.columnCustomerID.AllowDBNull = false;
                this.columnCustomerID.ReadOnly = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_CustomerValueRow Newf49910_pclst_CustomerValueRow() {
                return ((f49910_pclst_CustomerValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f49910_pclst_CustomerValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f49910_pclst_CustomerValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f49910_pclst_CustomerValueRowChanged != null)) {
                    this.f49910_pclst_CustomerValueRowChanged(this, new f49910_pclst_CustomerValueRowChangeEvent(((f49910_pclst_CustomerValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f49910_pclst_CustomerValueRowChanging != null)) {
                    this.f49910_pclst_CustomerValueRowChanging(this, new f49910_pclst_CustomerValueRowChangeEvent(((f49910_pclst_CustomerValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f49910_pclst_CustomerValueRowDeleted != null)) {
                    this.f49910_pclst_CustomerValueRowDeleted(this, new f49910_pclst_CustomerValueRowChangeEvent(((f49910_pclst_CustomerValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f49910_pclst_CustomerValueRowDeleting != null)) {
                    this.f49910_pclst_CustomerValueRowDeleting(this, new f49910_pclst_CustomerValueRowChangeEvent(((f49910_pclst_CustomerValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef49910_pclst_CustomerValueRow(f49910_pclst_CustomerValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f49910_pclst_CustomerValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f49910InstrumentTypeDataTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnITypeID;
            
            private global::System.Data.DataColumn columnInstrumentType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910InstrumentTypeDataTableDataTable() {
                this.TableName = "f49910InstrumentTypeDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910InstrumentTypeDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f49910InstrumentTypeDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITypeIDColumn {
                get {
                    return this.columnITypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstrumentTypeColumn {
                get {
                    return this.columnInstrumentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910InstrumentTypeDataTableRow this[int index] {
                get {
                    return ((f49910InstrumentTypeDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f49910InstrumentTypeDataTableRowChangeEventHandler f49910InstrumentTypeDataTableRowChanging;
            
            public event f49910InstrumentTypeDataTableRowChangeEventHandler f49910InstrumentTypeDataTableRowChanged;
            
            public event f49910InstrumentTypeDataTableRowChangeEventHandler f49910InstrumentTypeDataTableRowDeleting;
            
            public event f49910InstrumentTypeDataTableRowChangeEventHandler f49910InstrumentTypeDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf49910InstrumentTypeDataTableRow(f49910InstrumentTypeDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910InstrumentTypeDataTableRow Addf49910InstrumentTypeDataTableRow(string InstrumentType) {
                f49910InstrumentTypeDataTableRow rowf49910InstrumentTypeDataTableRow = ((f49910InstrumentTypeDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        InstrumentType};
                rowf49910InstrumentTypeDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf49910InstrumentTypeDataTableRow);
                return rowf49910InstrumentTypeDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f49910InstrumentTypeDataTableDataTable cln = ((f49910InstrumentTypeDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f49910InstrumentTypeDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnITypeID = base.Columns["ITypeID"];
                this.columnInstrumentType = base.Columns["InstrumentType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnITypeID = new global::System.Data.DataColumn("ITypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITypeID);
                this.columnInstrumentType = new global::System.Data.DataColumn("InstrumentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstrumentType);
                this.columnITypeID.AutoIncrement = true;
                this.columnITypeID.AllowDBNull = false;
                this.columnITypeID.ReadOnly = true;
                this.columnInstrumentType.AllowDBNull = false;
                this.columnInstrumentType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910InstrumentTypeDataTableRow Newf49910InstrumentTypeDataTableRow() {
                return ((f49910InstrumentTypeDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f49910InstrumentTypeDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f49910InstrumentTypeDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f49910InstrumentTypeDataTableRowChanged != null)) {
                    this.f49910InstrumentTypeDataTableRowChanged(this, new f49910InstrumentTypeDataTableRowChangeEvent(((f49910InstrumentTypeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f49910InstrumentTypeDataTableRowChanging != null)) {
                    this.f49910InstrumentTypeDataTableRowChanging(this, new f49910InstrumentTypeDataTableRowChangeEvent(((f49910InstrumentTypeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f49910InstrumentTypeDataTableRowDeleted != null)) {
                    this.f49910InstrumentTypeDataTableRowDeleted(this, new f49910InstrumentTypeDataTableRowChangeEvent(((f49910InstrumentTypeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f49910InstrumentTypeDataTableRowDeleting != null)) {
                    this.f49910InstrumentTypeDataTableRowDeleting(this, new f49910InstrumentTypeDataTableRowChangeEvent(((f49910InstrumentTypeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef49910InstrumentTypeDataTableRow(f49910InstrumentTypeDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f49910InstrumentTypeDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f49910_pclst_TenderTypeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTenderTypeID;
            
            private global::System.Data.DataColumn columnTenderType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_TenderTypeDataTable() {
                this.TableName = "f49910_pclst_TenderType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910_pclst_TenderTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f49910_pclst_TenderTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenderTypeIDColumn {
                get {
                    return this.columnTenderTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenderTypeColumn {
                get {
                    return this.columnTenderType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_TenderTypeRow this[int index] {
                get {
                    return ((f49910_pclst_TenderTypeRow)(this.Rows[index]));
                }
            }
            
            public event f49910_pclst_TenderTypeRowChangeEventHandler f49910_pclst_TenderTypeRowChanging;
            
            public event f49910_pclst_TenderTypeRowChangeEventHandler f49910_pclst_TenderTypeRowChanged;
            
            public event f49910_pclst_TenderTypeRowChangeEventHandler f49910_pclst_TenderTypeRowDeleting;
            
            public event f49910_pclst_TenderTypeRowChangeEventHandler f49910_pclst_TenderTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf49910_pclst_TenderTypeRow(f49910_pclst_TenderTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_TenderTypeRow Addf49910_pclst_TenderTypeRow(string TenderType) {
                f49910_pclst_TenderTypeRow rowf49910_pclst_TenderTypeRow = ((f49910_pclst_TenderTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TenderType};
                rowf49910_pclst_TenderTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf49910_pclst_TenderTypeRow);
                return rowf49910_pclst_TenderTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f49910_pclst_TenderTypeDataTable cln = ((f49910_pclst_TenderTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f49910_pclst_TenderTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTenderTypeID = base.Columns["TenderTypeID"];
                this.columnTenderType = base.Columns["TenderType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTenderTypeID = new global::System.Data.DataColumn("TenderTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderTypeID);
                this.columnTenderType = new global::System.Data.DataColumn("TenderType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderType);
                this.columnTenderTypeID.AutoIncrement = true;
                this.columnTenderTypeID.AllowDBNull = false;
                this.columnTenderTypeID.ReadOnly = true;
                this.columnTenderType.AllowDBNull = false;
                this.columnTenderType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_TenderTypeRow Newf49910_pclst_TenderTypeRow() {
                return ((f49910_pclst_TenderTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f49910_pclst_TenderTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f49910_pclst_TenderTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f49910_pclst_TenderTypeRowChanged != null)) {
                    this.f49910_pclst_TenderTypeRowChanged(this, new f49910_pclst_TenderTypeRowChangeEvent(((f49910_pclst_TenderTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f49910_pclst_TenderTypeRowChanging != null)) {
                    this.f49910_pclst_TenderTypeRowChanging(this, new f49910_pclst_TenderTypeRowChangeEvent(((f49910_pclst_TenderTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f49910_pclst_TenderTypeRowDeleted != null)) {
                    this.f49910_pclst_TenderTypeRowDeleted(this, new f49910_pclst_TenderTypeRowChangeEvent(((f49910_pclst_TenderTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f49910_pclst_TenderTypeRowDeleting != null)) {
                    this.f49910_pclst_TenderTypeRowDeleting(this, new f49910_pclst_TenderTypeRowChangeEvent(((f49910_pclst_TenderTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef49910_pclst_TenderTypeRow(f49910_pclst_TenderTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f49910_pclst_TenderTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f49910_pclst_GrantListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGrantID;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_GrantListDataTable() {
                this.TableName = "f49910_pclst_GrantList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910_pclst_GrantListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f49910_pclst_GrantListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrantIDColumn {
                get {
                    return this.columnGrantID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_GrantListRow this[int index] {
                get {
                    return ((f49910_pclst_GrantListRow)(this.Rows[index]));
                }
            }
            
            public event f49910_pclst_GrantListRowChangeEventHandler f49910_pclst_GrantListRowChanging;
            
            public event f49910_pclst_GrantListRowChangeEventHandler f49910_pclst_GrantListRowChanged;
            
            public event f49910_pclst_GrantListRowChangeEventHandler f49910_pclst_GrantListRowDeleting;
            
            public event f49910_pclst_GrantListRowChangeEventHandler f49910_pclst_GrantListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf49910_pclst_GrantListRow(f49910_pclst_GrantListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_GrantListRow Addf49910_pclst_GrantListRow(int GrantID, string Name) {
                f49910_pclst_GrantListRow rowf49910_pclst_GrantListRow = ((f49910_pclst_GrantListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GrantID,
                        Name};
                rowf49910_pclst_GrantListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf49910_pclst_GrantListRow);
                return rowf49910_pclst_GrantListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f49910_pclst_GrantListDataTable cln = ((f49910_pclst_GrantListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f49910_pclst_GrantListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGrantID = base.Columns["GrantID"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGrantID = new global::System.Data.DataColumn("GrantID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrantID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnGrantID.ReadOnly = true;
                this.columnName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_GrantListRow Newf49910_pclst_GrantListRow() {
                return ((f49910_pclst_GrantListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f49910_pclst_GrantListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f49910_pclst_GrantListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f49910_pclst_GrantListRowChanged != null)) {
                    this.f49910_pclst_GrantListRowChanged(this, new f49910_pclst_GrantListRowChangeEvent(((f49910_pclst_GrantListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f49910_pclst_GrantListRowChanging != null)) {
                    this.f49910_pclst_GrantListRowChanging(this, new f49910_pclst_GrantListRowChangeEvent(((f49910_pclst_GrantListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f49910_pclst_GrantListRowDeleted != null)) {
                    this.f49910_pclst_GrantListRowDeleted(this, new f49910_pclst_GrantListRowChangeEvent(((f49910_pclst_GrantListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f49910_pclst_GrantListRowDeleting != null)) {
                    this.f49910_pclst_GrantListRowDeleting(this, new f49910_pclst_GrantListRowChangeEvent(((f49910_pclst_GrantListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef49910_pclst_GrantListRow(f49910_pclst_GrantListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f49910_pclst_GrantListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f49910_pclst_ExemptionTypeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnETypeID;
            
            private global::System.Data.DataColumn columnExemptionType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_ExemptionTypeDataTable() {
                this.TableName = "f49910_pclst_ExemptionType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910_pclst_ExemptionTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f49910_pclst_ExemptionTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETypeIDColumn {
                get {
                    return this.columnETypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionTypeColumn {
                get {
                    return this.columnExemptionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_ExemptionTypeRow this[int index] {
                get {
                    return ((f49910_pclst_ExemptionTypeRow)(this.Rows[index]));
                }
            }
            
            public event f49910_pclst_ExemptionTypeRowChangeEventHandler f49910_pclst_ExemptionTypeRowChanging;
            
            public event f49910_pclst_ExemptionTypeRowChangeEventHandler f49910_pclst_ExemptionTypeRowChanged;
            
            public event f49910_pclst_ExemptionTypeRowChangeEventHandler f49910_pclst_ExemptionTypeRowDeleting;
            
            public event f49910_pclst_ExemptionTypeRowChangeEventHandler f49910_pclst_ExemptionTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf49910_pclst_ExemptionTypeRow(f49910_pclst_ExemptionTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_ExemptionTypeRow Addf49910_pclst_ExemptionTypeRow(string ExemptionType) {
                f49910_pclst_ExemptionTypeRow rowf49910_pclst_ExemptionTypeRow = ((f49910_pclst_ExemptionTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ExemptionType};
                rowf49910_pclst_ExemptionTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf49910_pclst_ExemptionTypeRow);
                return rowf49910_pclst_ExemptionTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f49910_pclst_ExemptionTypeDataTable cln = ((f49910_pclst_ExemptionTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f49910_pclst_ExemptionTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnETypeID = base.Columns["ETypeID"];
                this.columnExemptionType = base.Columns["ExemptionType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnETypeID = new global::System.Data.DataColumn("ETypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETypeID);
                this.columnExemptionType = new global::System.Data.DataColumn("ExemptionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionType);
                this.columnETypeID.AutoIncrement = true;
                this.columnETypeID.AllowDBNull = false;
                this.columnETypeID.ReadOnly = true;
                this.columnExemptionType.AllowDBNull = false;
                this.columnExemptionType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_ExemptionTypeRow Newf49910_pclst_ExemptionTypeRow() {
                return ((f49910_pclst_ExemptionTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f49910_pclst_ExemptionTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f49910_pclst_ExemptionTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f49910_pclst_ExemptionTypeRowChanged != null)) {
                    this.f49910_pclst_ExemptionTypeRowChanged(this, new f49910_pclst_ExemptionTypeRowChangeEvent(((f49910_pclst_ExemptionTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f49910_pclst_ExemptionTypeRowChanging != null)) {
                    this.f49910_pclst_ExemptionTypeRowChanging(this, new f49910_pclst_ExemptionTypeRowChangeEvent(((f49910_pclst_ExemptionTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f49910_pclst_ExemptionTypeRowDeleted != null)) {
                    this.f49910_pclst_ExemptionTypeRowDeleted(this, new f49910_pclst_ExemptionTypeRowChangeEvent(((f49910_pclst_ExemptionTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f49910_pclst_ExemptionTypeRowDeleting != null)) {
                    this.f49910_pclst_ExemptionTypeRowDeleting(this, new f49910_pclst_ExemptionTypeRowChangeEvent(((f49910_pclst_ExemptionTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef49910_pclst_ExemptionTypeRow(f49910_pclst_ExemptionTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f49910_pclst_ExemptionTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F49911GrantorDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCount;
            
            private global::System.Data.DataColumn columnInstID;
            
            private global::System.Data.DataColumn columnGrantorID;
            
            private global::System.Data.DataColumn columnGrantor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GrantorDetailsDataTable() {
                this.TableName = "F49911GrantorDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F49911GrantorDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F49911GrantorDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountColumn {
                get {
                    return this.columnCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstIDColumn {
                get {
                    return this.columnInstID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrantorIDColumn {
                get {
                    return this.columnGrantorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrantorColumn {
                get {
                    return this.columnGrantor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GrantorDetailsRow this[int index] {
                get {
                    return ((F49911GrantorDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F49911GrantorDetailsRowChangeEventHandler F49911GrantorDetailsRowChanging;
            
            public event F49911GrantorDetailsRowChangeEventHandler F49911GrantorDetailsRowChanged;
            
            public event F49911GrantorDetailsRowChangeEventHandler F49911GrantorDetailsRowDeleting;
            
            public event F49911GrantorDetailsRowChangeEventHandler F49911GrantorDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF49911GrantorDetailsRow(F49911GrantorDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GrantorDetailsRow AddF49911GrantorDetailsRow(int Count, int InstID, int GrantorID, string Grantor) {
                F49911GrantorDetailsRow rowF49911GrantorDetailsRow = ((F49911GrantorDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Count,
                        InstID,
                        GrantorID,
                        Grantor};
                rowF49911GrantorDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF49911GrantorDetailsRow);
                return rowF49911GrantorDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F49911GrantorDetailsDataTable cln = ((F49911GrantorDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F49911GrantorDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCount = base.Columns["Count"];
                this.columnInstID = base.Columns["InstID"];
                this.columnGrantorID = base.Columns["GrantorID"];
                this.columnGrantor = base.Columns["Grantor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCount = new global::System.Data.DataColumn("Count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCount);
                this.columnInstID = new global::System.Data.DataColumn("InstID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstID);
                this.columnGrantorID = new global::System.Data.DataColumn("GrantorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrantorID);
                this.columnGrantor = new global::System.Data.DataColumn("Grantor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrantor);
                this.columnCount.ReadOnly = true;
                this.columnGrantor.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GrantorDetailsRow NewF49911GrantorDetailsRow() {
                return ((F49911GrantorDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F49911GrantorDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F49911GrantorDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F49911GrantorDetailsRowChanged != null)) {
                    this.F49911GrantorDetailsRowChanged(this, new F49911GrantorDetailsRowChangeEvent(((F49911GrantorDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F49911GrantorDetailsRowChanging != null)) {
                    this.F49911GrantorDetailsRowChanging(this, new F49911GrantorDetailsRowChangeEvent(((F49911GrantorDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F49911GrantorDetailsRowDeleted != null)) {
                    this.F49911GrantorDetailsRowDeleted(this, new F49911GrantorDetailsRowChangeEvent(((F49911GrantorDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F49911GrantorDetailsRowDeleting != null)) {
                    this.F49911GrantorDetailsRowDeleting(this, new F49911GrantorDetailsRowChangeEvent(((F49911GrantorDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF49911GrantorDetailsRow(F49911GrantorDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F49911GrantorDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F49911GranteeDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCount;
            
            private global::System.Data.DataColumn columnInstID;
            
            private global::System.Data.DataColumn columnGranteeID;
            
            private global::System.Data.DataColumn columnGrantee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GranteeDetailsDataTable() {
                this.TableName = "F49911GranteeDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F49911GranteeDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F49911GranteeDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountColumn {
                get {
                    return this.columnCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstIDColumn {
                get {
                    return this.columnInstID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GranteeIDColumn {
                get {
                    return this.columnGranteeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GranteeColumn {
                get {
                    return this.columnGrantee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GranteeDetailsRow this[int index] {
                get {
                    return ((F49911GranteeDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F49911GranteeDetailsRowChangeEventHandler F49911GranteeDetailsRowChanging;
            
            public event F49911GranteeDetailsRowChangeEventHandler F49911GranteeDetailsRowChanged;
            
            public event F49911GranteeDetailsRowChangeEventHandler F49911GranteeDetailsRowDeleting;
            
            public event F49911GranteeDetailsRowChangeEventHandler F49911GranteeDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF49911GranteeDetailsRow(F49911GranteeDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GranteeDetailsRow AddF49911GranteeDetailsRow(int Count, int InstID, int GranteeID, string Grantee) {
                F49911GranteeDetailsRow rowF49911GranteeDetailsRow = ((F49911GranteeDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Count,
                        InstID,
                        GranteeID,
                        Grantee};
                rowF49911GranteeDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF49911GranteeDetailsRow);
                return rowF49911GranteeDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F49911GranteeDetailsDataTable cln = ((F49911GranteeDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F49911GranteeDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCount = base.Columns["Count"];
                this.columnInstID = base.Columns["InstID"];
                this.columnGranteeID = base.Columns["GranteeID"];
                this.columnGrantee = base.Columns["Grantee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCount = new global::System.Data.DataColumn("Count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCount);
                this.columnInstID = new global::System.Data.DataColumn("InstID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstID);
                this.columnGranteeID = new global::System.Data.DataColumn("GranteeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGranteeID);
                this.columnGrantee = new global::System.Data.DataColumn("Grantee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrantee);
                this.columnCount.ReadOnly = true;
                this.columnGrantee.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GranteeDetailsRow NewF49911GranteeDetailsRow() {
                return ((F49911GranteeDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F49911GranteeDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F49911GranteeDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F49911GranteeDetailsRowChanged != null)) {
                    this.F49911GranteeDetailsRowChanged(this, new F49911GranteeDetailsRowChangeEvent(((F49911GranteeDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F49911GranteeDetailsRowChanging != null)) {
                    this.F49911GranteeDetailsRowChanging(this, new F49911GranteeDetailsRowChangeEvent(((F49911GranteeDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F49911GranteeDetailsRowDeleted != null)) {
                    this.F49911GranteeDetailsRowDeleted(this, new F49911GranteeDetailsRowChangeEvent(((F49911GranteeDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F49911GranteeDetailsRowDeleting != null)) {
                    this.F49911GranteeDetailsRowDeleting(this, new F49911GranteeDetailsRowChangeEvent(((F49911GranteeDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF49911GranteeDetailsRow(F49911GranteeDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F49911GranteeDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F49912LegalFieldListingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLglID;
            
            private global::System.Data.DataColumn columnInstID;
            
            private global::System.Data.DataColumn columnSubID;
            
            private global::System.Data.DataColumn columnSubName;
            
            private global::System.Data.DataColumn columnLot;
            
            private global::System.Data.DataColumn columnPLot;
            
            private global::System.Data.DataColumn columnBlock;
            
            private global::System.Data.DataColumn columnPBlock;
            
            private global::System.Data.DataColumn columnNENE;
            
            private global::System.Data.DataColumn columnNENW;
            
            private global::System.Data.DataColumn columnNESW;
            
            private global::System.Data.DataColumn columnNESE;
            
            private global::System.Data.DataColumn columnNWNE;
            
            private global::System.Data.DataColumn columnNWNW;
            
            private global::System.Data.DataColumn columnNWSW;
            
            private global::System.Data.DataColumn columnNWSE;
            
            private global::System.Data.DataColumn columnSWNE;
            
            private global::System.Data.DataColumn columnSWNW;
            
            private global::System.Data.DataColumn columnSWSW;
            
            private global::System.Data.DataColumn columnSWSE;
            
            private global::System.Data.DataColumn columnSENE;
            
            private global::System.Data.DataColumn columnSENW;
            
            private global::System.Data.DataColumn columnSESW;
            
            private global::System.Data.DataColumn columnSESE;
            
            private global::System.Data.DataColumn columnComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912LegalFieldListingDataTable() {
                this.TableName = "F49912LegalFieldListing";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F49912LegalFieldListingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F49912LegalFieldListingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LglIDColumn {
                get {
                    return this.columnLglID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstIDColumn {
                get {
                    return this.columnInstID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubIDColumn {
                get {
                    return this.columnSubID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubNameColumn {
                get {
                    return this.columnSubName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LotColumn {
                get {
                    return this.columnLot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PLotColumn {
                get {
                    return this.columnPLot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockColumn {
                get {
                    return this.columnBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBlockColumn {
                get {
                    return this.columnPBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NENEColumn {
                get {
                    return this.columnNENE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NENWColumn {
                get {
                    return this.columnNENW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NESWColumn {
                get {
                    return this.columnNESW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NESEColumn {
                get {
                    return this.columnNESE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWNEColumn {
                get {
                    return this.columnNWNE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWNWColumn {
                get {
                    return this.columnNWNW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWSWColumn {
                get {
                    return this.columnNWSW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWSEColumn {
                get {
                    return this.columnNWSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWNEColumn {
                get {
                    return this.columnSWNE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWNWColumn {
                get {
                    return this.columnSWNW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWSWColumn {
                get {
                    return this.columnSWSW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWSEColumn {
                get {
                    return this.columnSWSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENEColumn {
                get {
                    return this.columnSENE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENWColumn {
                get {
                    return this.columnSENW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SESWColumn {
                get {
                    return this.columnSESW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SESEColumn {
                get {
                    return this.columnSESE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912LegalFieldListingRow this[int index] {
                get {
                    return ((F49912LegalFieldListingRow)(this.Rows[index]));
                }
            }
            
            public event F49912LegalFieldListingRowChangeEventHandler F49912LegalFieldListingRowChanging;
            
            public event F49912LegalFieldListingRowChangeEventHandler F49912LegalFieldListingRowChanged;
            
            public event F49912LegalFieldListingRowChangeEventHandler F49912LegalFieldListingRowDeleting;
            
            public event F49912LegalFieldListingRowChangeEventHandler F49912LegalFieldListingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF49912LegalFieldListingRow(F49912LegalFieldListingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912LegalFieldListingRow AddF49912LegalFieldListingRow(
                        int InstID, 
                        int SubID, 
                        string SubName, 
                        string Lot, 
                        bool PLot, 
                        string Block, 
                        bool PBlock, 
                        string NENE, 
                        string NENW, 
                        string NESW, 
                        string NESE, 
                        string NWNE, 
                        string NWNW, 
                        string NWSW, 
                        string NWSE, 
                        string SWNE, 
                        string SWNW, 
                        string SWSW, 
                        string SWSE, 
                        string SENE, 
                        string SENW, 
                        string SESW, 
                        string SESE, 
                        string Comments) {
                F49912LegalFieldListingRow rowF49912LegalFieldListingRow = ((F49912LegalFieldListingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        InstID,
                        SubID,
                        SubName,
                        Lot,
                        PLot,
                        Block,
                        PBlock,
                        NENE,
                        NENW,
                        NESW,
                        NESE,
                        NWNE,
                        NWNW,
                        NWSW,
                        NWSE,
                        SWNE,
                        SWNW,
                        SWSW,
                        SWSE,
                        SENE,
                        SENW,
                        SESW,
                        SESE,
                        Comments};
                rowF49912LegalFieldListingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF49912LegalFieldListingRow);
                return rowF49912LegalFieldListingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F49912LegalFieldListingDataTable cln = ((F49912LegalFieldListingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F49912LegalFieldListingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLglID = base.Columns["LglID"];
                this.columnInstID = base.Columns["InstID"];
                this.columnSubID = base.Columns["SubID"];
                this.columnSubName = base.Columns["SubName"];
                this.columnLot = base.Columns["Lot"];
                this.columnPLot = base.Columns["PLot"];
                this.columnBlock = base.Columns["Block"];
                this.columnPBlock = base.Columns["PBlock"];
                this.columnNENE = base.Columns["NENE"];
                this.columnNENW = base.Columns["NENW"];
                this.columnNESW = base.Columns["NESW"];
                this.columnNESE = base.Columns["NESE"];
                this.columnNWNE = base.Columns["NWNE"];
                this.columnNWNW = base.Columns["NWNW"];
                this.columnNWSW = base.Columns["NWSW"];
                this.columnNWSE = base.Columns["NWSE"];
                this.columnSWNE = base.Columns["SWNE"];
                this.columnSWNW = base.Columns["SWNW"];
                this.columnSWSW = base.Columns["SWSW"];
                this.columnSWSE = base.Columns["SWSE"];
                this.columnSENE = base.Columns["SENE"];
                this.columnSENW = base.Columns["SENW"];
                this.columnSESW = base.Columns["SESW"];
                this.columnSESE = base.Columns["SESE"];
                this.columnComments = base.Columns["Comments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLglID = new global::System.Data.DataColumn("LglID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLglID);
                this.columnInstID = new global::System.Data.DataColumn("InstID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstID);
                this.columnSubID = new global::System.Data.DataColumn("SubID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubID);
                this.columnSubName = new global::System.Data.DataColumn("SubName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubName);
                this.columnLot = new global::System.Data.DataColumn("Lot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLot);
                this.columnPLot = new global::System.Data.DataColumn("PLot", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLot);
                this.columnBlock = new global::System.Data.DataColumn("Block", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlock);
                this.columnPBlock = new global::System.Data.DataColumn("PBlock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBlock);
                this.columnNENE = new global::System.Data.DataColumn("NENE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNENE);
                this.columnNENW = new global::System.Data.DataColumn("NENW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNENW);
                this.columnNESW = new global::System.Data.DataColumn("NESW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNESW);
                this.columnNESE = new global::System.Data.DataColumn("NESE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNESE);
                this.columnNWNE = new global::System.Data.DataColumn("NWNE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWNE);
                this.columnNWNW = new global::System.Data.DataColumn("NWNW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWNW);
                this.columnNWSW = new global::System.Data.DataColumn("NWSW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWSW);
                this.columnNWSE = new global::System.Data.DataColumn("NWSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWSE);
                this.columnSWNE = new global::System.Data.DataColumn("SWNE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWNE);
                this.columnSWNW = new global::System.Data.DataColumn("SWNW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWNW);
                this.columnSWSW = new global::System.Data.DataColumn("SWSW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWSW);
                this.columnSWSE = new global::System.Data.DataColumn("SWSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWSE);
                this.columnSENE = new global::System.Data.DataColumn("SENE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENE);
                this.columnSENW = new global::System.Data.DataColumn("SENW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENW);
                this.columnSESW = new global::System.Data.DataColumn("SESW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESW);
                this.columnSESE = new global::System.Data.DataColumn("SESE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESE);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnLglID.AutoIncrement = true;
                this.columnLglID.AllowDBNull = false;
                this.columnLglID.ReadOnly = true;
                this.columnInstID.AllowDBNull = false;
                this.columnSubID.AllowDBNull = false;
                this.columnSubName.AllowDBNull = false;
                this.columnSubName.MaxLength = 80;
                this.columnLot.ReadOnly = true;
                this.columnLot.MaxLength = 50;
                this.columnBlock.ReadOnly = true;
                this.columnBlock.MaxLength = 10;
                this.columnNENE.ReadOnly = true;
                this.columnNENE.MaxLength = 2;
                this.columnNENW.ReadOnly = true;
                this.columnNENW.MaxLength = 2;
                this.columnNESW.ReadOnly = true;
                this.columnNESW.MaxLength = 2;
                this.columnNESE.ReadOnly = true;
                this.columnNESE.MaxLength = 2;
                this.columnNWNE.ReadOnly = true;
                this.columnNWNE.MaxLength = 2;
                this.columnNWNW.ReadOnly = true;
                this.columnNWNW.MaxLength = 2;
                this.columnNWSW.ReadOnly = true;
                this.columnNWSW.MaxLength = 2;
                this.columnNWSE.ReadOnly = true;
                this.columnNWSE.MaxLength = 2;
                this.columnSWNE.ReadOnly = true;
                this.columnSWNE.MaxLength = 2;
                this.columnSWNW.ReadOnly = true;
                this.columnSWNW.MaxLength = 2;
                this.columnSWSW.ReadOnly = true;
                this.columnSWSW.MaxLength = 2;
                this.columnSWSE.ReadOnly = true;
                this.columnSWSE.MaxLength = 2;
                this.columnSENE.ReadOnly = true;
                this.columnSENE.MaxLength = 2;
                this.columnSENW.ReadOnly = true;
                this.columnSENW.MaxLength = 2;
                this.columnSESW.ReadOnly = true;
                this.columnSESW.MaxLength = 2;
                this.columnSESE.ReadOnly = true;
                this.columnSESE.MaxLength = 2;
                this.columnComments.ReadOnly = true;
                this.columnComments.MaxLength = 225;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912LegalFieldListingRow NewF49912LegalFieldListingRow() {
                return ((F49912LegalFieldListingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F49912LegalFieldListingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F49912LegalFieldListingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F49912LegalFieldListingRowChanged != null)) {
                    this.F49912LegalFieldListingRowChanged(this, new F49912LegalFieldListingRowChangeEvent(((F49912LegalFieldListingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F49912LegalFieldListingRowChanging != null)) {
                    this.F49912LegalFieldListingRowChanging(this, new F49912LegalFieldListingRowChangeEvent(((F49912LegalFieldListingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F49912LegalFieldListingRowDeleted != null)) {
                    this.F49912LegalFieldListingRowDeleted(this, new F49912LegalFieldListingRowChangeEvent(((F49912LegalFieldListingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F49912LegalFieldListingRowDeleting != null)) {
                    this.F49912LegalFieldListingRowDeleting(this, new F49912LegalFieldListingRowChangeEvent(((F49912LegalFieldListingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF49912LegalFieldListingRow(F49912LegalFieldListingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F49912LegalFieldListingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F49912ListLegalSubDivisionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSubID;
            
            private global::System.Data.DataColumn columnSubName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912ListLegalSubDivisionDataTable() {
                this.TableName = "F49912ListLegalSubDivision";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F49912ListLegalSubDivisionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F49912ListLegalSubDivisionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubIDColumn {
                get {
                    return this.columnSubID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubNameColumn {
                get {
                    return this.columnSubName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912ListLegalSubDivisionRow this[int index] {
                get {
                    return ((F49912ListLegalSubDivisionRow)(this.Rows[index]));
                }
            }
            
            public event F49912ListLegalSubDivisionRowChangeEventHandler F49912ListLegalSubDivisionRowChanging;
            
            public event F49912ListLegalSubDivisionRowChangeEventHandler F49912ListLegalSubDivisionRowChanged;
            
            public event F49912ListLegalSubDivisionRowChangeEventHandler F49912ListLegalSubDivisionRowDeleting;
            
            public event F49912ListLegalSubDivisionRowChangeEventHandler F49912ListLegalSubDivisionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF49912ListLegalSubDivisionRow(F49912ListLegalSubDivisionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912ListLegalSubDivisionRow AddF49912ListLegalSubDivisionRow(string SubName) {
                F49912ListLegalSubDivisionRow rowF49912ListLegalSubDivisionRow = ((F49912ListLegalSubDivisionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SubName};
                rowF49912ListLegalSubDivisionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF49912ListLegalSubDivisionRow);
                return rowF49912ListLegalSubDivisionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F49912ListLegalSubDivisionDataTable cln = ((F49912ListLegalSubDivisionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F49912ListLegalSubDivisionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSubID = base.Columns["SubID"];
                this.columnSubName = base.Columns["SubName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSubID = new global::System.Data.DataColumn("SubID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubID);
                this.columnSubName = new global::System.Data.DataColumn("SubName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubName);
                this.columnSubID.AutoIncrement = true;
                this.columnSubID.AllowDBNull = false;
                this.columnSubID.ReadOnly = true;
                this.columnSubName.AllowDBNull = false;
                this.columnSubName.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912ListLegalSubDivisionRow NewF49912ListLegalSubDivisionRow() {
                return ((F49912ListLegalSubDivisionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F49912ListLegalSubDivisionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F49912ListLegalSubDivisionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F49912ListLegalSubDivisionRowChanged != null)) {
                    this.F49912ListLegalSubDivisionRowChanged(this, new F49912ListLegalSubDivisionRowChangeEvent(((F49912ListLegalSubDivisionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F49912ListLegalSubDivisionRowChanging != null)) {
                    this.F49912ListLegalSubDivisionRowChanging(this, new F49912ListLegalSubDivisionRowChangeEvent(((F49912ListLegalSubDivisionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F49912ListLegalSubDivisionRowDeleted != null)) {
                    this.F49912ListLegalSubDivisionRowDeleted(this, new F49912ListLegalSubDivisionRowChangeEvent(((F49912ListLegalSubDivisionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F49912ListLegalSubDivisionRowDeleting != null)) {
                    this.F49912ListLegalSubDivisionRowDeleting(this, new F49912ListLegalSubDivisionRowChangeEvent(((F49912ListLegalSubDivisionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF49912ListLegalSubDivisionRow(F49912ListLegalSubDivisionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F49912ListLegalSubDivisionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListPartiesFieldDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGrantID;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPartiesFieldDataTable() {
                this.TableName = "ListPartiesField";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListPartiesFieldDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListPartiesFieldDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrantIDColumn {
                get {
                    return this.columnGrantID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPartiesFieldRow this[int index] {
                get {
                    return ((ListPartiesFieldRow)(this.Rows[index]));
                }
            }
            
            public event ListPartiesFieldRowChangeEventHandler ListPartiesFieldRowChanging;
            
            public event ListPartiesFieldRowChangeEventHandler ListPartiesFieldRowChanged;
            
            public event ListPartiesFieldRowChangeEventHandler ListPartiesFieldRowDeleting;
            
            public event ListPartiesFieldRowChangeEventHandler ListPartiesFieldRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListPartiesFieldRow(ListPartiesFieldRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPartiesFieldRow AddListPartiesFieldRow(string GrantID, string Name) {
                ListPartiesFieldRow rowListPartiesFieldRow = ((ListPartiesFieldRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GrantID,
                        Name};
                rowListPartiesFieldRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListPartiesFieldRow);
                return rowListPartiesFieldRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListPartiesFieldDataTable cln = ((ListPartiesFieldDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListPartiesFieldDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGrantID = base.Columns["GrantID"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGrantID = new global::System.Data.DataColumn("GrantID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrantID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPartiesFieldRow NewListPartiesFieldRow() {
                return ((ListPartiesFieldRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListPartiesFieldRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListPartiesFieldRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListPartiesFieldRowChanged != null)) {
                    this.ListPartiesFieldRowChanged(this, new ListPartiesFieldRowChangeEvent(((ListPartiesFieldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListPartiesFieldRowChanging != null)) {
                    this.ListPartiesFieldRowChanging(this, new ListPartiesFieldRowChangeEvent(((ListPartiesFieldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListPartiesFieldRowDeleted != null)) {
                    this.ListPartiesFieldRowDeleted(this, new ListPartiesFieldRowChangeEvent(((ListPartiesFieldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListPartiesFieldRowDeleting != null)) {
                    this.ListPartiesFieldRowDeleting(this, new ListPartiesFieldRowChangeEvent(((ListPartiesFieldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListPartiesFieldRow(ListPartiesFieldRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListPartiesFieldDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f49910SaveInstrumentHeaderDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBookPage;
            
            private global::System.Data.DataColumn columnFileDate;
            
            private global::System.Data.DataColumn columnFileTime;
            
            private global::System.Data.DataColumn columnInstDate;
            
            private global::System.Data.DataColumn columnIsReviewed;
            
            private global::System.Data.DataColumn columnITypeID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnRcvFrom;
            
            private global::System.Data.DataColumn columnReturnedTo;
            
            private global::System.Data.DataColumn columnETypeID;
            
            private global::System.Data.DataColumn columnSerialNum;
            
            private global::System.Data.DataColumn columnV03;
            
            private global::System.Data.DataColumn columnV02;
            
            private global::System.Data.DataColumn columnV01;
            
            private global::System.Data.DataColumn columnWOL;
            
            private global::System.Data.DataColumn columnFee;
            
            private global::System.Data.DataColumn columnV06;
            
            private global::System.Data.DataColumn columnV05;
            
            private global::System.Data.DataColumn columnV04;
            
            private global::System.Data.DataColumn columnInstNum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910SaveInstrumentHeaderDataTable() {
                this.TableName = "f49910SaveInstrumentHeader";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910SaveInstrumentHeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f49910SaveInstrumentHeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookPageColumn {
                get {
                    return this.columnBookPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileDateColumn {
                get {
                    return this.columnFileDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileTimeColumn {
                get {
                    return this.columnFileTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstDateColumn {
                get {
                    return this.columnInstDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsReviewedColumn {
                get {
                    return this.columnIsReviewed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITypeIDColumn {
                get {
                    return this.columnITypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RcvFromColumn {
                get {
                    return this.columnRcvFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedToColumn {
                get {
                    return this.columnReturnedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETypeIDColumn {
                get {
                    return this.columnETypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNumColumn {
                get {
                    return this.columnSerialNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V03Column {
                get {
                    return this.columnV03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V02Column {
                get {
                    return this.columnV02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V01Column {
                get {
                    return this.columnV01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WOLColumn {
                get {
                    return this.columnWOL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeeColumn {
                get {
                    return this.columnFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V06Column {
                get {
                    return this.columnV06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V05Column {
                get {
                    return this.columnV05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V04Column {
                get {
                    return this.columnV04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstNumColumn {
                get {
                    return this.columnInstNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910SaveInstrumentHeaderRow this[int index] {
                get {
                    return ((f49910SaveInstrumentHeaderRow)(this.Rows[index]));
                }
            }
            
            public event f49910SaveInstrumentHeaderRowChangeEventHandler f49910SaveInstrumentHeaderRowChanging;
            
            public event f49910SaveInstrumentHeaderRowChangeEventHandler f49910SaveInstrumentHeaderRowChanged;
            
            public event f49910SaveInstrumentHeaderRowChangeEventHandler f49910SaveInstrumentHeaderRowDeleting;
            
            public event f49910SaveInstrumentHeaderRowChangeEventHandler f49910SaveInstrumentHeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf49910SaveInstrumentHeaderRow(f49910SaveInstrumentHeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910SaveInstrumentHeaderRow Addf49910SaveInstrumentHeaderRow(
                        string BookPage, 
                        string FileDate, 
                        string FileTime, 
                        string InstDate, 
                        short IsReviewed, 
                        int ITypeID, 
                        int CustomerID, 
                        string RcvFrom, 
                        string ReturnedTo, 
                        int ETypeID, 
                        string SerialNum, 
                        decimal V03, 
                        decimal V02, 
                        decimal V01, 
                        short WOL, 
                        decimal Fee, 
                        decimal V06, 
                        decimal V05, 
                        decimal V04, 
                        string InstNum) {
                f49910SaveInstrumentHeaderRow rowf49910SaveInstrumentHeaderRow = ((f49910SaveInstrumentHeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BookPage,
                        FileDate,
                        FileTime,
                        InstDate,
                        IsReviewed,
                        ITypeID,
                        CustomerID,
                        RcvFrom,
                        ReturnedTo,
                        ETypeID,
                        SerialNum,
                        V03,
                        V02,
                        V01,
                        WOL,
                        Fee,
                        V06,
                        V05,
                        V04,
                        InstNum};
                rowf49910SaveInstrumentHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf49910SaveInstrumentHeaderRow);
                return rowf49910SaveInstrumentHeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f49910SaveInstrumentHeaderDataTable cln = ((f49910SaveInstrumentHeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f49910SaveInstrumentHeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBookPage = base.Columns["BookPage"];
                this.columnFileDate = base.Columns["FileDate"];
                this.columnFileTime = base.Columns["FileTime"];
                this.columnInstDate = base.Columns["InstDate"];
                this.columnIsReviewed = base.Columns["IsReviewed"];
                this.columnITypeID = base.Columns["ITypeID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnRcvFrom = base.Columns["RcvFrom"];
                this.columnReturnedTo = base.Columns["ReturnedTo"];
                this.columnETypeID = base.Columns["ETypeID"];
                this.columnSerialNum = base.Columns["SerialNum"];
                this.columnV03 = base.Columns["V03"];
                this.columnV02 = base.Columns["V02"];
                this.columnV01 = base.Columns["V01"];
                this.columnWOL = base.Columns["WOL"];
                this.columnFee = base.Columns["Fee"];
                this.columnV06 = base.Columns["V06"];
                this.columnV05 = base.Columns["V05"];
                this.columnV04 = base.Columns["V04"];
                this.columnInstNum = base.Columns["InstNum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBookPage = new global::System.Data.DataColumn("BookPage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookPage);
                this.columnFileDate = new global::System.Data.DataColumn("FileDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileDate);
                this.columnFileTime = new global::System.Data.DataColumn("FileTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileTime);
                this.columnInstDate = new global::System.Data.DataColumn("InstDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstDate);
                this.columnIsReviewed = new global::System.Data.DataColumn("IsReviewed", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsReviewed);
                this.columnITypeID = new global::System.Data.DataColumn("ITypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITypeID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnRcvFrom = new global::System.Data.DataColumn("RcvFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRcvFrom);
                this.columnReturnedTo = new global::System.Data.DataColumn("ReturnedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedTo);
                this.columnETypeID = new global::System.Data.DataColumn("ETypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETypeID);
                this.columnSerialNum = new global::System.Data.DataColumn("SerialNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNum);
                this.columnV03 = new global::System.Data.DataColumn("V03", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV03);
                this.columnV02 = new global::System.Data.DataColumn("V02", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV02);
                this.columnV01 = new global::System.Data.DataColumn("V01", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV01);
                this.columnWOL = new global::System.Data.DataColumn("WOL", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWOL);
                this.columnFee = new global::System.Data.DataColumn("Fee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFee);
                this.columnV06 = new global::System.Data.DataColumn("V06", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV06);
                this.columnV05 = new global::System.Data.DataColumn("V05", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV05);
                this.columnV04 = new global::System.Data.DataColumn("V04", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV04);
                this.columnInstNum = new global::System.Data.DataColumn("InstNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstNum);
                this.columnBookPage.MaxLength = 50;
                this.columnFileDate.MaxLength = 10;
                this.columnFileTime.MaxLength = 10;
                this.columnInstDate.MaxLength = 10;
                this.columnRcvFrom.MaxLength = 100;
                this.columnReturnedTo.MaxLength = 300;
                this.columnSerialNum.MaxLength = 50;
                this.columnInstNum.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910SaveInstrumentHeaderRow Newf49910SaveInstrumentHeaderRow() {
                return ((f49910SaveInstrumentHeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f49910SaveInstrumentHeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f49910SaveInstrumentHeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f49910SaveInstrumentHeaderRowChanged != null)) {
                    this.f49910SaveInstrumentHeaderRowChanged(this, new f49910SaveInstrumentHeaderRowChangeEvent(((f49910SaveInstrumentHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f49910SaveInstrumentHeaderRowChanging != null)) {
                    this.f49910SaveInstrumentHeaderRowChanging(this, new f49910SaveInstrumentHeaderRowChangeEvent(((f49910SaveInstrumentHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f49910SaveInstrumentHeaderRowDeleted != null)) {
                    this.f49910SaveInstrumentHeaderRowDeleted(this, new f49910SaveInstrumentHeaderRowChangeEvent(((f49910SaveInstrumentHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f49910SaveInstrumentHeaderRowDeleting != null)) {
                    this.f49910SaveInstrumentHeaderRowDeleting(this, new f49910SaveInstrumentHeaderRowChangeEvent(((f49910SaveInstrumentHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef49910SaveInstrumentHeaderRow(f49910SaveInstrumentHeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f49910SaveInstrumentHeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f49910GrantListValuesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAddr1;
            
            private global::System.Data.DataColumn columnAddr2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910GrantListValuesDataTable() {
                this.TableName = "f49910GrantListValues";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910GrantListValuesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f49910GrantListValuesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Addr1Column {
                get {
                    return this.columnAddr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Addr2Column {
                get {
                    return this.columnAddr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910GrantListValuesRow this[int index] {
                get {
                    return ((f49910GrantListValuesRow)(this.Rows[index]));
                }
            }
            
            public event f49910GrantListValuesRowChangeEventHandler f49910GrantListValuesRowChanging;
            
            public event f49910GrantListValuesRowChangeEventHandler f49910GrantListValuesRowChanged;
            
            public event f49910GrantListValuesRowChangeEventHandler f49910GrantListValuesRowDeleting;
            
            public event f49910GrantListValuesRowChangeEventHandler f49910GrantListValuesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf49910GrantListValuesRow(f49910GrantListValuesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910GrantListValuesRow Addf49910GrantListValuesRow(string Name, string Addr1, string Addr2, string City, string State, string Zip) {
                f49910GrantListValuesRow rowf49910GrantListValuesRow = ((f49910GrantListValuesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        Addr1,
                        Addr2,
                        City,
                        State,
                        Zip};
                rowf49910GrantListValuesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf49910GrantListValuesRow);
                return rowf49910GrantListValuesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f49910GrantListValuesDataTable cln = ((f49910GrantListValuesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f49910GrantListValuesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnAddr1 = base.Columns["Addr1"];
                this.columnAddr2 = base.Columns["Addr2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAddr1 = new global::System.Data.DataColumn("Addr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddr1);
                this.columnAddr2 = new global::System.Data.DataColumn("Addr2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddr2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 100;
                this.columnAddr1.ReadOnly = true;
                this.columnAddr1.MaxLength = 60;
                this.columnAddr2.ReadOnly = true;
                this.columnAddr2.MaxLength = 60;
                this.columnCity.ReadOnly = true;
                this.columnCity.MaxLength = 50;
                this.columnState.ReadOnly = true;
                this.columnState.MaxLength = 2;
                this.columnZip.ReadOnly = true;
                this.columnZip.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910GrantListValuesRow Newf49910GrantListValuesRow() {
                return ((f49910GrantListValuesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f49910GrantListValuesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f49910GrantListValuesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f49910GrantListValuesRowChanged != null)) {
                    this.f49910GrantListValuesRowChanged(this, new f49910GrantListValuesRowChangeEvent(((f49910GrantListValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f49910GrantListValuesRowChanging != null)) {
                    this.f49910GrantListValuesRowChanging(this, new f49910GrantListValuesRowChangeEvent(((f49910GrantListValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f49910GrantListValuesRowDeleted != null)) {
                    this.f49910GrantListValuesRowDeleted(this, new f49910GrantListValuesRowChangeEvent(((f49910GrantListValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f49910GrantListValuesRowDeleting != null)) {
                    this.f49910GrantListValuesRowDeleting(this, new f49910GrantListValuesRowChangeEvent(((f49910GrantListValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef49910GrantListValuesRow(f49910GrantListValuesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f49910GrantListValuesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f49901RecorderDetailsDataTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnInstID;
            
            private global::System.Data.DataColumn columnInstNum;
            
            private global::System.Data.DataColumn columnBookPage;
            
            private global::System.Data.DataColumn columnFileDate;
            
            private global::System.Data.DataColumn columnFileTime;
            
            private global::System.Data.DataColumn columnInstrumentDate;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnName_Display;
            
            private global::System.Data.DataColumn columnIsReviewed;
            
            private global::System.Data.DataColumn columnITypeID;
            
            private global::System.Data.DataColumn columnInstrumentType;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnRcvFrom;
            
            private global::System.Data.DataColumn columnReturnedTo;
            
            private global::System.Data.DataColumn columnETypeID;
            
            private global::System.Data.DataColumn columnExemptionType;
            
            private global::System.Data.DataColumn columnSerialNum;
            
            private global::System.Data.DataColumn columnWOL;
            
            private global::System.Data.DataColumn columnL01;
            
            private global::System.Data.DataColumn columnL02;
            
            private global::System.Data.DataColumn columnL03;
            
            private global::System.Data.DataColumn columnL04;
            
            private global::System.Data.DataColumn columnL05;
            
            private global::System.Data.DataColumn columnL06;
            
            private global::System.Data.DataColumn columnD01;
            
            private global::System.Data.DataColumn columnD02;
            
            private global::System.Data.DataColumn columnD03;
            
            private global::System.Data.DataColumn columnD04;
            
            private global::System.Data.DataColumn columnD05;
            
            private global::System.Data.DataColumn columnD06;
            
            private global::System.Data.DataColumn columnF01;
            
            private global::System.Data.DataColumn columnF02;
            
            private global::System.Data.DataColumn columnF03;
            
            private global::System.Data.DataColumn columnF04;
            
            private global::System.Data.DataColumn columnF05;
            
            private global::System.Data.DataColumn columnF06;
            
            private global::System.Data.DataColumn columnV01;
            
            private global::System.Data.DataColumn columnV02;
            
            private global::System.Data.DataColumn columnV03;
            
            private global::System.Data.DataColumn columnV04;
            
            private global::System.Data.DataColumn columnV05;
            
            private global::System.Data.DataColumn columnV06;
            
            private global::System.Data.DataColumn columnVFormula;
            
            private global::System.Data.DataColumn columnFee;
            
            private global::System.Data.DataColumn columnStampTax;
            
            private global::System.Data.DataColumn columnPreservation;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnChecked;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901RecorderDetailsDataTableDataTable() {
                this.TableName = "f49901RecorderDetailsDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49901RecorderDetailsDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f49901RecorderDetailsDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstIDColumn {
                get {
                    return this.columnInstID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstNumColumn {
                get {
                    return this.columnInstNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookPageColumn {
                get {
                    return this.columnBookPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileDateColumn {
                get {
                    return this.columnFileDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileTimeColumn {
                get {
                    return this.columnFileTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstrumentDateColumn {
                get {
                    return this.columnInstrumentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name_DisplayColumn {
                get {
                    return this.columnName_Display;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsReviewedColumn {
                get {
                    return this.columnIsReviewed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITypeIDColumn {
                get {
                    return this.columnITypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstrumentTypeColumn {
                get {
                    return this.columnInstrumentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RcvFromColumn {
                get {
                    return this.columnRcvFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedToColumn {
                get {
                    return this.columnReturnedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETypeIDColumn {
                get {
                    return this.columnETypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionTypeColumn {
                get {
                    return this.columnExemptionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNumColumn {
                get {
                    return this.columnSerialNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WOLColumn {
                get {
                    return this.columnWOL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L01Column {
                get {
                    return this.columnL01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L02Column {
                get {
                    return this.columnL02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L03Column {
                get {
                    return this.columnL03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L04Column {
                get {
                    return this.columnL04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L05Column {
                get {
                    return this.columnL05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L06Column {
                get {
                    return this.columnL06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D01Column {
                get {
                    return this.columnD01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D02Column {
                get {
                    return this.columnD02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D03Column {
                get {
                    return this.columnD03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D04Column {
                get {
                    return this.columnD04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D05Column {
                get {
                    return this.columnD05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D06Column {
                get {
                    return this.columnD06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F01Column {
                get {
                    return this.columnF01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F02Column {
                get {
                    return this.columnF02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F03Column {
                get {
                    return this.columnF03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F04Column {
                get {
                    return this.columnF04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F05Column {
                get {
                    return this.columnF05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F06Column {
                get {
                    return this.columnF06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V01Column {
                get {
                    return this.columnV01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V02Column {
                get {
                    return this.columnV02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V03Column {
                get {
                    return this.columnV03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V04Column {
                get {
                    return this.columnV04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V05Column {
                get {
                    return this.columnV05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V06Column {
                get {
                    return this.columnV06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VFormulaColumn {
                get {
                    return this.columnVFormula;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeeColumn {
                get {
                    return this.columnFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StampTaxColumn {
                get {
                    return this.columnStampTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreservationColumn {
                get {
                    return this.columnPreservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckedColumn {
                get {
                    return this.columnChecked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901RecorderDetailsDataTableRow this[int index] {
                get {
                    return ((f49901RecorderDetailsDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f49901RecorderDetailsDataTableRowChangeEventHandler f49901RecorderDetailsDataTableRowChanging;
            
            public event f49901RecorderDetailsDataTableRowChangeEventHandler f49901RecorderDetailsDataTableRowChanged;
            
            public event f49901RecorderDetailsDataTableRowChangeEventHandler f49901RecorderDetailsDataTableRowDeleting;
            
            public event f49901RecorderDetailsDataTableRowChangeEventHandler f49901RecorderDetailsDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf49901RecorderDetailsDataTableRow(f49901RecorderDetailsDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901RecorderDetailsDataTableRow Addf49901RecorderDetailsDataTableRow(
                        string InstNum, 
                        string BookPage, 
                        string FileDate, 
                        string FileTime, 
                        string InstrumentDate, 
                        int UserID, 
                        string Name_Display, 
                        bool IsReviewed, 
                        int ITypeID, 
                        string InstrumentType, 
                        int CustomerID, 
                        string Customer, 
                        string RcvFrom, 
                        string ReturnedTo, 
                        int ETypeID, 
                        string ExemptionType, 
                        string SerialNum, 
                        bool WOL, 
                        string L01, 
                        string L02, 
                        string L03, 
                        string L04, 
                        string L05, 
                        string L06, 
                        byte D01, 
                        byte D02, 
                        byte D03, 
                        byte D04, 
                        byte D05, 
                        byte D06, 
                        string F01, 
                        string F02, 
                        string F03, 
                        string F04, 
                        string F05, 
                        string F06, 
                        decimal V01, 
                        decimal V02, 
                        decimal V03, 
                        decimal V04, 
                        decimal V05, 
                        decimal V06, 
                        string VFormula, 
                        decimal Fee, 
                        decimal StampTax, 
                        decimal Preservation, 
                        string Comment, 
                        bool Checked) {
                f49901RecorderDetailsDataTableRow rowf49901RecorderDetailsDataTableRow = ((f49901RecorderDetailsDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        InstNum,
                        BookPage,
                        FileDate,
                        FileTime,
                        InstrumentDate,
                        UserID,
                        Name_Display,
                        IsReviewed,
                        ITypeID,
                        InstrumentType,
                        CustomerID,
                        Customer,
                        RcvFrom,
                        ReturnedTo,
                        ETypeID,
                        ExemptionType,
                        SerialNum,
                        WOL,
                        L01,
                        L02,
                        L03,
                        L04,
                        L05,
                        L06,
                        D01,
                        D02,
                        D03,
                        D04,
                        D05,
                        D06,
                        F01,
                        F02,
                        F03,
                        F04,
                        F05,
                        F06,
                        V01,
                        V02,
                        V03,
                        V04,
                        V05,
                        V06,
                        VFormula,
                        Fee,
                        StampTax,
                        Preservation,
                        Comment,
                        Checked};
                rowf49901RecorderDetailsDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf49901RecorderDetailsDataTableRow);
                return rowf49901RecorderDetailsDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f49901RecorderDetailsDataTableDataTable cln = ((f49901RecorderDetailsDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f49901RecorderDetailsDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInstID = base.Columns["InstID"];
                this.columnInstNum = base.Columns["InstNum"];
                this.columnBookPage = base.Columns["BookPage"];
                this.columnFileDate = base.Columns["FileDate"];
                this.columnFileTime = base.Columns["FileTime"];
                this.columnInstrumentDate = base.Columns["InstrumentDate"];
                this.columnUserID = base.Columns["UserID"];
                this.columnName_Display = base.Columns["Name_Display"];
                this.columnIsReviewed = base.Columns["IsReviewed"];
                this.columnITypeID = base.Columns["ITypeID"];
                this.columnInstrumentType = base.Columns["InstrumentType"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnRcvFrom = base.Columns["RcvFrom"];
                this.columnReturnedTo = base.Columns["ReturnedTo"];
                this.columnETypeID = base.Columns["ETypeID"];
                this.columnExemptionType = base.Columns["ExemptionType"];
                this.columnSerialNum = base.Columns["SerialNum"];
                this.columnWOL = base.Columns["WOL"];
                this.columnL01 = base.Columns["L01"];
                this.columnL02 = base.Columns["L02"];
                this.columnL03 = base.Columns["L03"];
                this.columnL04 = base.Columns["L04"];
                this.columnL05 = base.Columns["L05"];
                this.columnL06 = base.Columns["L06"];
                this.columnD01 = base.Columns["D01"];
                this.columnD02 = base.Columns["D02"];
                this.columnD03 = base.Columns["D03"];
                this.columnD04 = base.Columns["D04"];
                this.columnD05 = base.Columns["D05"];
                this.columnD06 = base.Columns["D06"];
                this.columnF01 = base.Columns["F01"];
                this.columnF02 = base.Columns["F02"];
                this.columnF03 = base.Columns["F03"];
                this.columnF04 = base.Columns["F04"];
                this.columnF05 = base.Columns["F05"];
                this.columnF06 = base.Columns["F06"];
                this.columnV01 = base.Columns["V01"];
                this.columnV02 = base.Columns["V02"];
                this.columnV03 = base.Columns["V03"];
                this.columnV04 = base.Columns["V04"];
                this.columnV05 = base.Columns["V05"];
                this.columnV06 = base.Columns["V06"];
                this.columnVFormula = base.Columns["VFormula"];
                this.columnFee = base.Columns["Fee"];
                this.columnStampTax = base.Columns["StampTax"];
                this.columnPreservation = base.Columns["Preservation"];
                this.columnComment = base.Columns["Comment"];
                this.columnChecked = base.Columns["Checked"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInstID = new global::System.Data.DataColumn("InstID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstID);
                this.columnInstNum = new global::System.Data.DataColumn("InstNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstNum);
                this.columnBookPage = new global::System.Data.DataColumn("BookPage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookPage);
                this.columnFileDate = new global::System.Data.DataColumn("FileDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileDate);
                this.columnFileTime = new global::System.Data.DataColumn("FileTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileTime);
                this.columnInstrumentDate = new global::System.Data.DataColumn("InstrumentDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstrumentDate);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnName_Display = new global::System.Data.DataColumn("Name_Display", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName_Display);
                this.columnIsReviewed = new global::System.Data.DataColumn("IsReviewed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsReviewed);
                this.columnITypeID = new global::System.Data.DataColumn("ITypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITypeID);
                this.columnInstrumentType = new global::System.Data.DataColumn("InstrumentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstrumentType);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnRcvFrom = new global::System.Data.DataColumn("RcvFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRcvFrom);
                this.columnReturnedTo = new global::System.Data.DataColumn("ReturnedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedTo);
                this.columnETypeID = new global::System.Data.DataColumn("ETypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETypeID);
                this.columnExemptionType = new global::System.Data.DataColumn("ExemptionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionType);
                this.columnSerialNum = new global::System.Data.DataColumn("SerialNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNum);
                this.columnWOL = new global::System.Data.DataColumn("WOL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWOL);
                this.columnL01 = new global::System.Data.DataColumn("L01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL01);
                this.columnL02 = new global::System.Data.DataColumn("L02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL02);
                this.columnL03 = new global::System.Data.DataColumn("L03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL03);
                this.columnL04 = new global::System.Data.DataColumn("L04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL04);
                this.columnL05 = new global::System.Data.DataColumn("L05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL05);
                this.columnL06 = new global::System.Data.DataColumn("L06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL06);
                this.columnD01 = new global::System.Data.DataColumn("D01", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD01);
                this.columnD02 = new global::System.Data.DataColumn("D02", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD02);
                this.columnD03 = new global::System.Data.DataColumn("D03", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD03);
                this.columnD04 = new global::System.Data.DataColumn("D04", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD04);
                this.columnD05 = new global::System.Data.DataColumn("D05", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD05);
                this.columnD06 = new global::System.Data.DataColumn("D06", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD06);
                this.columnF01 = new global::System.Data.DataColumn("F01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF01);
                this.columnF02 = new global::System.Data.DataColumn("F02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF02);
                this.columnF03 = new global::System.Data.DataColumn("F03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF03);
                this.columnF04 = new global::System.Data.DataColumn("F04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF04);
                this.columnF05 = new global::System.Data.DataColumn("F05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF05);
                this.columnF06 = new global::System.Data.DataColumn("F06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF06);
                this.columnV01 = new global::System.Data.DataColumn("V01", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV01);
                this.columnV02 = new global::System.Data.DataColumn("V02", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV02);
                this.columnV03 = new global::System.Data.DataColumn("V03", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV03);
                this.columnV04 = new global::System.Data.DataColumn("V04", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV04);
                this.columnV05 = new global::System.Data.DataColumn("V05", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV05);
                this.columnV06 = new global::System.Data.DataColumn("V06", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV06);
                this.columnVFormula = new global::System.Data.DataColumn("VFormula", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVFormula);
                this.columnFee = new global::System.Data.DataColumn("Fee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFee);
                this.columnStampTax = new global::System.Data.DataColumn("StampTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStampTax);
                this.columnPreservation = new global::System.Data.DataColumn("Preservation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreservation);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnChecked = new global::System.Data.DataColumn("Checked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChecked);
                this.columnInstID.AutoIncrement = true;
                this.columnInstID.AllowDBNull = false;
                this.columnInstID.ReadOnly = true;
                this.columnInstNum.AllowDBNull = false;
                this.columnInstNum.MaxLength = 50;
                this.columnBookPage.ReadOnly = true;
                this.columnBookPage.MaxLength = 50;
                this.columnFileDate.ReadOnly = true;
                this.columnFileDate.MaxLength = 10;
                this.columnFileTime.ReadOnly = true;
                this.columnFileTime.MaxLength = 10;
                this.columnInstrumentDate.ReadOnly = true;
                this.columnInstrumentDate.MaxLength = 10;
                this.columnUserID.AllowDBNull = false;
                this.columnName_Display.MaxLength = 50;
                this.columnITypeID.AllowDBNull = false;
                this.columnInstrumentType.AllowDBNull = false;
                this.columnInstrumentType.MaxLength = 50;
                this.columnCustomerID.ReadOnly = true;
                this.columnCustomer.ReadOnly = true;
                this.columnCustomer.MaxLength = 80;
                this.columnRcvFrom.ReadOnly = true;
                this.columnRcvFrom.MaxLength = 50;
                this.columnReturnedTo.ReadOnly = true;
                this.columnReturnedTo.MaxLength = 300;
                this.columnETypeID.ReadOnly = true;
                this.columnExemptionType.ReadOnly = true;
                this.columnExemptionType.MaxLength = 50;
                this.columnSerialNum.ReadOnly = true;
                this.columnSerialNum.MaxLength = 50;
                this.columnL01.ReadOnly = true;
                this.columnL01.MaxLength = 12;
                this.columnL02.ReadOnly = true;
                this.columnL02.MaxLength = 12;
                this.columnL03.ReadOnly = true;
                this.columnL03.MaxLength = 12;
                this.columnL04.ReadOnly = true;
                this.columnL04.MaxLength = 12;
                this.columnL05.ReadOnly = true;
                this.columnL05.MaxLength = 12;
                this.columnL06.ReadOnly = true;
                this.columnL06.MaxLength = 12;
                this.columnD01.ReadOnly = true;
                this.columnD02.ReadOnly = true;
                this.columnD03.ReadOnly = true;
                this.columnD04.ReadOnly = true;
                this.columnD05.ReadOnly = true;
                this.columnD06.ReadOnly = true;
                this.columnF01.ReadOnly = true;
                this.columnF01.MaxLength = 500;
                this.columnF02.ReadOnly = true;
                this.columnF02.MaxLength = 500;
                this.columnF03.ReadOnly = true;
                this.columnF03.MaxLength = 500;
                this.columnF04.ReadOnly = true;
                this.columnF04.MaxLength = 500;
                this.columnF05.ReadOnly = true;
                this.columnF05.MaxLength = 500;
                this.columnF06.ReadOnly = true;
                this.columnF06.MaxLength = 500;
                this.columnVFormula.ReadOnly = true;
                this.columnVFormula.MaxLength = 500;
                this.columnFee.ReadOnly = true;
                this.columnStampTax.ReadOnly = true;
                this.columnPreservation.ReadOnly = true;
                this.columnComment.ReadOnly = true;
                this.columnComment.MaxLength = 800;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901RecorderDetailsDataTableRow Newf49901RecorderDetailsDataTableRow() {
                return ((f49901RecorderDetailsDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f49901RecorderDetailsDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f49901RecorderDetailsDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f49901RecorderDetailsDataTableRowChanged != null)) {
                    this.f49901RecorderDetailsDataTableRowChanged(this, new f49901RecorderDetailsDataTableRowChangeEvent(((f49901RecorderDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f49901RecorderDetailsDataTableRowChanging != null)) {
                    this.f49901RecorderDetailsDataTableRowChanging(this, new f49901RecorderDetailsDataTableRowChangeEvent(((f49901RecorderDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f49901RecorderDetailsDataTableRowDeleted != null)) {
                    this.f49901RecorderDetailsDataTableRowDeleted(this, new f49901RecorderDetailsDataTableRowChangeEvent(((f49901RecorderDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f49901RecorderDetailsDataTableRowDeleting != null)) {
                    this.f49901RecorderDetailsDataTableRowDeleting(this, new f49901RecorderDetailsDataTableRowChangeEvent(((f49901RecorderDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef49901RecorderDetailsDataTableRow(f49901RecorderDetailsDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f49901RecorderDetailsDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f49910feeDetailsTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnITypeID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnTaxLien;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnVFormula;
            
            private global::System.Data.DataColumn columnL01;
            
            private global::System.Data.DataColumn columnD01;
            
            private global::System.Data.DataColumn columnF01;
            
            private global::System.Data.DataColumn columnL02;
            
            private global::System.Data.DataColumn columnD02;
            
            private global::System.Data.DataColumn columnF02;
            
            private global::System.Data.DataColumn columnL03;
            
            private global::System.Data.DataColumn columnD03;
            
            private global::System.Data.DataColumn columnF03;
            
            private global::System.Data.DataColumn columnL04;
            
            private global::System.Data.DataColumn columnD04;
            
            private global::System.Data.DataColumn columnF04;
            
            private global::System.Data.DataColumn columnL05;
            
            private global::System.Data.DataColumn columnD05;
            
            private global::System.Data.DataColumn columnF05;
            
            private global::System.Data.DataColumn columnL06;
            
            private global::System.Data.DataColumn columnD06;
            
            private global::System.Data.DataColumn columnF06;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910feeDetailsTableDataTable() {
                this.TableName = "f49910feeDetailsTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910feeDetailsTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f49910feeDetailsTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITypeIDColumn {
                get {
                    return this.columnITypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxLienColumn {
                get {
                    return this.columnTaxLien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VFormulaColumn {
                get {
                    return this.columnVFormula;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L01Column {
                get {
                    return this.columnL01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D01Column {
                get {
                    return this.columnD01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F01Column {
                get {
                    return this.columnF01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L02Column {
                get {
                    return this.columnL02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D02Column {
                get {
                    return this.columnD02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F02Column {
                get {
                    return this.columnF02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L03Column {
                get {
                    return this.columnL03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D03Column {
                get {
                    return this.columnD03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F03Column {
                get {
                    return this.columnF03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L04Column {
                get {
                    return this.columnL04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D04Column {
                get {
                    return this.columnD04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F04Column {
                get {
                    return this.columnF04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L05Column {
                get {
                    return this.columnL05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D05Column {
                get {
                    return this.columnD05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F05Column {
                get {
                    return this.columnF05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L06Column {
                get {
                    return this.columnL06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D06Column {
                get {
                    return this.columnD06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F06Column {
                get {
                    return this.columnF06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910feeDetailsTableRow this[int index] {
                get {
                    return ((f49910feeDetailsTableRow)(this.Rows[index]));
                }
            }
            
            public event f49910feeDetailsTableRowChangeEventHandler f49910feeDetailsTableRowChanging;
            
            public event f49910feeDetailsTableRowChangeEventHandler f49910feeDetailsTableRowChanged;
            
            public event f49910feeDetailsTableRowChangeEventHandler f49910feeDetailsTableRowDeleting;
            
            public event f49910feeDetailsTableRowChangeEventHandler f49910feeDetailsTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf49910feeDetailsTableRow(f49910feeDetailsTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910feeDetailsTableRow Addf49910feeDetailsTableRow(
                        string Name, 
                        string TaxLien, 
                        string Type, 
                        string VFormula, 
                        string L01, 
                        byte D01, 
                        string F01, 
                        string L02, 
                        byte D02, 
                        string F02, 
                        string L03, 
                        byte D03, 
                        string F03, 
                        string L04, 
                        byte D04, 
                        string F04, 
                        string L05, 
                        byte D05, 
                        string F05, 
                        string L06, 
                        byte D06, 
                        string F06) {
                f49910feeDetailsTableRow rowf49910feeDetailsTableRow = ((f49910feeDetailsTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        TaxLien,
                        Type,
                        VFormula,
                        L01,
                        D01,
                        F01,
                        L02,
                        D02,
                        F02,
                        L03,
                        D03,
                        F03,
                        L04,
                        D04,
                        F04,
                        L05,
                        D05,
                        F05,
                        L06,
                        D06,
                        F06};
                rowf49910feeDetailsTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf49910feeDetailsTableRow);
                return rowf49910feeDetailsTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f49910feeDetailsTableDataTable cln = ((f49910feeDetailsTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f49910feeDetailsTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnITypeID = base.Columns["ITypeID"];
                this.columnName = base.Columns["Name"];
                this.columnTaxLien = base.Columns["TaxLien"];
                this.columnType = base.Columns["Type"];
                this.columnVFormula = base.Columns["VFormula"];
                this.columnL01 = base.Columns["L01"];
                this.columnD01 = base.Columns["D01"];
                this.columnF01 = base.Columns["F01"];
                this.columnL02 = base.Columns["L02"];
                this.columnD02 = base.Columns["D02"];
                this.columnF02 = base.Columns["F02"];
                this.columnL03 = base.Columns["L03"];
                this.columnD03 = base.Columns["D03"];
                this.columnF03 = base.Columns["F03"];
                this.columnL04 = base.Columns["L04"];
                this.columnD04 = base.Columns["D04"];
                this.columnF04 = base.Columns["F04"];
                this.columnL05 = base.Columns["L05"];
                this.columnD05 = base.Columns["D05"];
                this.columnF05 = base.Columns["F05"];
                this.columnL06 = base.Columns["L06"];
                this.columnD06 = base.Columns["D06"];
                this.columnF06 = base.Columns["F06"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnITypeID = new global::System.Data.DataColumn("ITypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITypeID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTaxLien = new global::System.Data.DataColumn("TaxLien", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxLien);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnVFormula = new global::System.Data.DataColumn("VFormula", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVFormula);
                this.columnL01 = new global::System.Data.DataColumn("L01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL01);
                this.columnD01 = new global::System.Data.DataColumn("D01", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD01);
                this.columnF01 = new global::System.Data.DataColumn("F01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF01);
                this.columnL02 = new global::System.Data.DataColumn("L02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL02);
                this.columnD02 = new global::System.Data.DataColumn("D02", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD02);
                this.columnF02 = new global::System.Data.DataColumn("F02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF02);
                this.columnL03 = new global::System.Data.DataColumn("L03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL03);
                this.columnD03 = new global::System.Data.DataColumn("D03", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD03);
                this.columnF03 = new global::System.Data.DataColumn("F03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF03);
                this.columnL04 = new global::System.Data.DataColumn("L04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL04);
                this.columnD04 = new global::System.Data.DataColumn("D04", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD04);
                this.columnF04 = new global::System.Data.DataColumn("F04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF04);
                this.columnL05 = new global::System.Data.DataColumn("L05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL05);
                this.columnD05 = new global::System.Data.DataColumn("D05", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD05);
                this.columnF05 = new global::System.Data.DataColumn("F05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF05);
                this.columnL06 = new global::System.Data.DataColumn("L06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL06);
                this.columnD06 = new global::System.Data.DataColumn("D06", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD06);
                this.columnF06 = new global::System.Data.DataColumn("F06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF06);
                this.columnITypeID.AutoIncrement = true;
                this.columnITypeID.AllowDBNull = false;
                this.columnITypeID.ReadOnly = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnTaxLien.MaxLength = 5;
                this.columnType.MaxLength = 2;
                this.columnVFormula.AllowDBNull = false;
                this.columnVFormula.MaxLength = 500;
                this.columnL01.MaxLength = 12;
                this.columnF01.MaxLength = 500;
                this.columnL02.MaxLength = 12;
                this.columnF02.MaxLength = 500;
                this.columnL03.MaxLength = 12;
                this.columnF03.MaxLength = 500;
                this.columnL04.MaxLength = 12;
                this.columnF04.MaxLength = 500;
                this.columnL05.MaxLength = 12;
                this.columnF05.MaxLength = 500;
                this.columnL06.MaxLength = 12;
                this.columnF06.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910feeDetailsTableRow Newf49910feeDetailsTableRow() {
                return ((f49910feeDetailsTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f49910feeDetailsTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f49910feeDetailsTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f49910feeDetailsTableRowChanged != null)) {
                    this.f49910feeDetailsTableRowChanged(this, new f49910feeDetailsTableRowChangeEvent(((f49910feeDetailsTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f49910feeDetailsTableRowChanging != null)) {
                    this.f49910feeDetailsTableRowChanging(this, new f49910feeDetailsTableRowChangeEvent(((f49910feeDetailsTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f49910feeDetailsTableRowDeleted != null)) {
                    this.f49910feeDetailsTableRowDeleted(this, new f49910feeDetailsTableRowChangeEvent(((f49910feeDetailsTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f49910feeDetailsTableRowDeleting != null)) {
                    this.f49910feeDetailsTableRowDeleting(this, new f49910feeDetailsTableRowChangeEvent(((f49910feeDetailsTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef49910feeDetailsTableRow(f49910feeDetailsTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F49910InstrumentHeaderDataSet ds = new F49910InstrumentHeaderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f49910feeDetailsTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f49901PaymentDetailsDataTableRow : global::System.Data.DataRow {
            
            private f49901PaymentDetailsDataTableDataTable tablef49901PaymentDetailsDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49901PaymentDetailsDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef49901PaymentDetailsDataTable = ((f49901PaymentDetailsDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InstID {
                get {
                    return ((int)(this[this.tablef49901PaymentDetailsDataTable.InstIDColumn]));
                }
                set {
                    this[this.tablef49901PaymentDetailsDataTable.InstIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PaymentID {
                get {
                    return ((int)(this[this.tablef49901PaymentDetailsDataTable.PaymentIDColumn]));
                }
                set {
                    this[this.tablef49901PaymentDetailsDataTable.PaymentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TenderTypeID {
                get {
                    return ((int)(this[this.tablef49901PaymentDetailsDataTable.TenderTypeIDColumn]));
                }
                set {
                    this[this.tablef49901PaymentDetailsDataTable.TenderTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenderType {
                get {
                    return ((string)(this[this.tablef49901PaymentDetailsDataTable.TenderTypeColumn]));
                }
                set {
                    this[this.tablef49901PaymentDetailsDataTable.TenderTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidBy {
                get {
                    try {
                        return ((string)(this[this.tablef49901PaymentDetailsDataTable.PaidByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidBy\' in table \'f49901PaymentDetailsDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef49901PaymentDetailsDataTable.PaidByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CheckNumber {
                get {
                    try {
                        return ((string)(this[this.tablef49901PaymentDetailsDataTable.CheckNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CheckNumber\' in table \'f49901PaymentDetailsDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef49901PaymentDetailsDataTable.CheckNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablef49901PaymentDetailsDataTable.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'f49901PaymentDetailsDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef49901PaymentDetailsDataTable.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidByNull() {
                return this.IsNull(this.tablef49901PaymentDetailsDataTable.PaidByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidByNull() {
                this[this.tablef49901PaymentDetailsDataTable.PaidByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckNumberNull() {
                return this.IsNull(this.tablef49901PaymentDetailsDataTable.CheckNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckNumberNull() {
                this[this.tablef49901PaymentDetailsDataTable.CheckNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablef49901PaymentDetailsDataTable.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablef49901PaymentDetailsDataTable.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f4991InstrumentCopyDataTableRow : global::System.Data.DataRow {
            
            private f4991InstrumentCopyDataTableDataTable tablef4991InstrumentCopyDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f4991InstrumentCopyDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef4991InstrumentCopyDataTable = ((f4991InstrumentCopyDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstNum {
                get {
                    return ((string)(this[this.tablef4991InstrumentCopyDataTable.InstNumColumn]));
                }
                set {
                    this[this.tablef4991InstrumentCopyDataTable.InstNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FileDate {
                get {
                    try {
                        return ((string)(this[this.tablef4991InstrumentCopyDataTable.FileDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileDate\' in table \'f4991InstrumentCopyDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef4991InstrumentCopyDataTable.FileDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FileTime {
                get {
                    try {
                        return ((string)(this[this.tablef4991InstrumentCopyDataTable.FileTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileTime\' in table \'f4991InstrumentCopyDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef4991InstrumentCopyDataTable.FileTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstDate {
                get {
                    try {
                        return ((string)(this[this.tablef4991InstrumentCopyDataTable.InstDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstDate\' in table \'f4991InstrumentCopyDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef4991InstrumentCopyDataTable.InstDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITypeID {
                get {
                    return ((int)(this[this.tablef4991InstrumentCopyDataTable.ITypeIDColumn]));
                }
                set {
                    this[this.tablef4991InstrumentCopyDataTable.ITypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Column1 {
                get {
                    try {
                        return ((int)(this[this.tablef4991InstrumentCopyDataTable.Column1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column1\' in table \'f4991InstrumentCopyDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef4991InstrumentCopyDataTable.Column1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RcvFrom {
                get {
                    try {
                        return ((string)(this[this.tablef4991InstrumentCopyDataTable.RcvFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RcvFrom\' in table \'f4991InstrumentCopyDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef4991InstrumentCopyDataTable.RcvFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnedTo {
                get {
                    try {
                        return ((string)(this[this.tablef4991InstrumentCopyDataTable.ReturnedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedTo\' in table \'f4991InstrumentCopyDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef4991InstrumentCopyDataTable.ReturnedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileDateNull() {
                return this.IsNull(this.tablef4991InstrumentCopyDataTable.FileDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileDateNull() {
                this[this.tablef4991InstrumentCopyDataTable.FileDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileTimeNull() {
                return this.IsNull(this.tablef4991InstrumentCopyDataTable.FileTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileTimeNull() {
                this[this.tablef4991InstrumentCopyDataTable.FileTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstDateNull() {
                return this.IsNull(this.tablef4991InstrumentCopyDataTable.InstDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstDateNull() {
                this[this.tablef4991InstrumentCopyDataTable.InstDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumn1Null() {
                return this.IsNull(this.tablef4991InstrumentCopyDataTable.Column1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumn1Null() {
                this[this.tablef4991InstrumentCopyDataTable.Column1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRcvFromNull() {
                return this.IsNull(this.tablef4991InstrumentCopyDataTable.RcvFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRcvFromNull() {
                this[this.tablef4991InstrumentCopyDataTable.RcvFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedToNull() {
                return this.IsNull(this.tablef4991InstrumentCopyDataTable.ReturnedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedToNull() {
                this[this.tablef4991InstrumentCopyDataTable.ReturnedToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f4991GrantorCopyDataTableRow : global::System.Data.DataRow {
            
            private f4991GrantorCopyDataTableDataTable tablef4991GrantorCopyDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f4991GrantorCopyDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef4991GrantorCopyDataTable = ((f4991GrantorCopyDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GrantorID {
                get {
                    try {
                        return ((int)(this[this.tablef4991GrantorCopyDataTable.GrantorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrantorID\' in table \'f4991GrantorCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991GrantorCopyDataTable.GrantorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grantor {
                get {
                    try {
                        return ((string)(this[this.tablef4991GrantorCopyDataTable.GrantorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grantor\' in table \'f4991GrantorCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991GrantorCopyDataTable.GrantorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrantorIDNull() {
                return this.IsNull(this.tablef4991GrantorCopyDataTable.GrantorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrantorIDNull() {
                this[this.tablef4991GrantorCopyDataTable.GrantorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrantorNull() {
                return this.IsNull(this.tablef4991GrantorCopyDataTable.GrantorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrantorNull() {
                this[this.tablef4991GrantorCopyDataTable.GrantorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f4991GranteeCopyDataTableRow : global::System.Data.DataRow {
            
            private f4991GranteeCopyDataTableDataTable tablef4991GranteeCopyDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f4991GranteeCopyDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef4991GranteeCopyDataTable = ((f4991GranteeCopyDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GranteeID {
                get {
                    try {
                        return ((int)(this[this.tablef4991GranteeCopyDataTable.GranteeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GranteeID\' in table \'f4991GranteeCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991GranteeCopyDataTable.GranteeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grantee {
                get {
                    try {
                        return ((string)(this[this.tablef4991GranteeCopyDataTable.GranteeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grantee\' in table \'f4991GranteeCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991GranteeCopyDataTable.GranteeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGranteeIDNull() {
                return this.IsNull(this.tablef4991GranteeCopyDataTable.GranteeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGranteeIDNull() {
                this[this.tablef4991GranteeCopyDataTable.GranteeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGranteeNull() {
                return this.IsNull(this.tablef4991GranteeCopyDataTable.GranteeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGranteeNull() {
                this[this.tablef4991GranteeCopyDataTable.GranteeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f4991LegalCopyDataTableRow : global::System.Data.DataRow {
            
            private f4991LegalCopyDataTableDataTable tablef4991LegalCopyDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f4991LegalCopyDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef4991LegalCopyDataTable = ((f4991LegalCopyDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubID {
                get {
                    return ((int)(this[this.tablef4991LegalCopyDataTable.SubIDColumn]));
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.SubIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubName {
                get {
                    return ((string)(this[this.tablef4991LegalCopyDataTable.SubNameColumn]));
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.SubNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lot {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.LotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lot\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.LotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PLot {
                get {
                    try {
                        return ((bool)(this[this.tablef4991LegalCopyDataTable.PLotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLot\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.PLotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Block {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.BlockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Block\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.BlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PBlock {
                get {
                    try {
                        return ((bool)(this[this.tablef4991LegalCopyDataTable.PBlockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PBlock\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.PBlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NENE {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.NENEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NENE\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.NENEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NENW {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.NENWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NENW\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.NENWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NESW {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.NESWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NESW\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.NESWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NESE {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.NESEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NESE\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.NESEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NWNE {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.NWNEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWNE\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.NWNEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NWNW {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.NWNWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWNW\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.NWNWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NWSW {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.NWSWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWSW\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.NWSWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NWSE {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.NWSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWSE\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.NWSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SWNE {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.SWNEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWNE\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.SWNEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SWNW {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.SWNWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWNW\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.SWNWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SWSW {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.SWSWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWSW\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.SWSWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SWSE {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.SWSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWSE\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.SWSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENE {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.SENEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SENE\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.SENEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENW {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.SENWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SENW\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.SENWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SESW {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.SESWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SESW\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.SESWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SESE {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.SESEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SESE\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.SESEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tablef4991LegalCopyDataTable.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'f4991LegalCopyDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef4991LegalCopyDataTable.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLotNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.LotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLotNull() {
                this[this.tablef4991LegalCopyDataTable.LotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPLotNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.PLotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPLotNull() {
                this[this.tablef4991LegalCopyDataTable.PLotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.BlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockNull() {
                this[this.tablef4991LegalCopyDataTable.BlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPBlockNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.PBlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPBlockNull() {
                this[this.tablef4991LegalCopyDataTable.PBlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNENENull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.NENEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNENENull() {
                this[this.tablef4991LegalCopyDataTable.NENEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNENWNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.NENWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNENWNull() {
                this[this.tablef4991LegalCopyDataTable.NENWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNESWNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.NESWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNESWNull() {
                this[this.tablef4991LegalCopyDataTable.NESWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNESENull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.NESEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNESENull() {
                this[this.tablef4991LegalCopyDataTable.NESEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWNENull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.NWNEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWNENull() {
                this[this.tablef4991LegalCopyDataTable.NWNEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWNWNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.NWNWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWNWNull() {
                this[this.tablef4991LegalCopyDataTable.NWNWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWSWNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.NWSWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWSWNull() {
                this[this.tablef4991LegalCopyDataTable.NWSWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWSENull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.NWSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWSENull() {
                this[this.tablef4991LegalCopyDataTable.NWSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWNENull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.SWNEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWNENull() {
                this[this.tablef4991LegalCopyDataTable.SWNEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWNWNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.SWNWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWNWNull() {
                this[this.tablef4991LegalCopyDataTable.SWNWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWSWNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.SWSWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWSWNull() {
                this[this.tablef4991LegalCopyDataTable.SWSWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWSENull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.SWSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWSENull() {
                this[this.tablef4991LegalCopyDataTable.SWSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENENull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.SENEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENENull() {
                this[this.tablef4991LegalCopyDataTable.SENEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENWNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.SENWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENWNull() {
                this[this.tablef4991LegalCopyDataTable.SENWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSESWNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.SESWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSESWNull() {
                this[this.tablef4991LegalCopyDataTable.SESWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSESENull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.SESEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSESENull() {
                this[this.tablef4991LegalCopyDataTable.SESEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tablef4991LegalCopyDataTable.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tablef4991LegalCopyDataTable.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f49910_pclst_CustomerValueRow : global::System.Data.DataRow {
            
            private f49910_pclst_CustomerValueDataTable tablef49910_pclst_CustomerValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910_pclst_CustomerValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef49910_pclst_CustomerValue = ((f49910_pclst_CustomerValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    return ((int)(this[this.tablef49910_pclst_CustomerValue.CustomerIDColumn]));
                }
                set {
                    this[this.tablef49910_pclst_CustomerValue.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tablef49910_pclst_CustomerValue.NameColumn]));
                }
                set {
                    this[this.tablef49910_pclst_CustomerValue.NameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f49910InstrumentTypeDataTableRow : global::System.Data.DataRow {
            
            private f49910InstrumentTypeDataTableDataTable tablef49910InstrumentTypeDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910InstrumentTypeDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef49910InstrumentTypeDataTable = ((f49910InstrumentTypeDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITypeID {
                get {
                    return ((int)(this[this.tablef49910InstrumentTypeDataTable.ITypeIDColumn]));
                }
                set {
                    this[this.tablef49910InstrumentTypeDataTable.ITypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstrumentType {
                get {
                    return ((string)(this[this.tablef49910InstrumentTypeDataTable.InstrumentTypeColumn]));
                }
                set {
                    this[this.tablef49910InstrumentTypeDataTable.InstrumentTypeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f49910_pclst_TenderTypeRow : global::System.Data.DataRow {
            
            private f49910_pclst_TenderTypeDataTable tablef49910_pclst_TenderType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910_pclst_TenderTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef49910_pclst_TenderType = ((f49910_pclst_TenderTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TenderTypeID {
                get {
                    return ((int)(this[this.tablef49910_pclst_TenderType.TenderTypeIDColumn]));
                }
                set {
                    this[this.tablef49910_pclst_TenderType.TenderTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenderType {
                get {
                    return ((string)(this[this.tablef49910_pclst_TenderType.TenderTypeColumn]));
                }
                set {
                    this[this.tablef49910_pclst_TenderType.TenderTypeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f49910_pclst_GrantListRow : global::System.Data.DataRow {
            
            private f49910_pclst_GrantListDataTable tablef49910_pclst_GrantList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910_pclst_GrantListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef49910_pclst_GrantList = ((f49910_pclst_GrantListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GrantID {
                get {
                    try {
                        return ((int)(this[this.tablef49910_pclst_GrantList.GrantIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrantID\' in table \'f49910_pclst_GrantList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910_pclst_GrantList.GrantIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablef49910_pclst_GrantList.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'f49910_pclst_GrantList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910_pclst_GrantList.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrantIDNull() {
                return this.IsNull(this.tablef49910_pclst_GrantList.GrantIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrantIDNull() {
                this[this.tablef49910_pclst_GrantList.GrantIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tablef49910_pclst_GrantList.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tablef49910_pclst_GrantList.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f49910_pclst_ExemptionTypeRow : global::System.Data.DataRow {
            
            private f49910_pclst_ExemptionTypeDataTable tablef49910_pclst_ExemptionType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910_pclst_ExemptionTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef49910_pclst_ExemptionType = ((f49910_pclst_ExemptionTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ETypeID {
                get {
                    return ((int)(this[this.tablef49910_pclst_ExemptionType.ETypeIDColumn]));
                }
                set {
                    this[this.tablef49910_pclst_ExemptionType.ETypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExemptionType {
                get {
                    return ((string)(this[this.tablef49910_pclst_ExemptionType.ExemptionTypeColumn]));
                }
                set {
                    this[this.tablef49910_pclst_ExemptionType.ExemptionTypeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F49911GrantorDetailsRow : global::System.Data.DataRow {
            
            private F49911GrantorDetailsDataTable tableF49911GrantorDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F49911GrantorDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF49911GrantorDetails = ((F49911GrantorDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    try {
                        return ((int)(this[this.tableF49911GrantorDetails.CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Count\' in table \'F49911GrantorDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49911GrantorDetails.CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InstID {
                get {
                    try {
                        return ((int)(this[this.tableF49911GrantorDetails.InstIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstID\' in table \'F49911GrantorDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49911GrantorDetails.InstIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GrantorID {
                get {
                    try {
                        return ((int)(this[this.tableF49911GrantorDetails.GrantorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrantorID\' in table \'F49911GrantorDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49911GrantorDetails.GrantorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grantor {
                get {
                    try {
                        return ((string)(this[this.tableF49911GrantorDetails.GrantorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grantor\' in table \'F49911GrantorDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49911GrantorDetails.GrantorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountNull() {
                return this.IsNull(this.tableF49911GrantorDetails.CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountNull() {
                this[this.tableF49911GrantorDetails.CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstIDNull() {
                return this.IsNull(this.tableF49911GrantorDetails.InstIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstIDNull() {
                this[this.tableF49911GrantorDetails.InstIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrantorIDNull() {
                return this.IsNull(this.tableF49911GrantorDetails.GrantorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrantorIDNull() {
                this[this.tableF49911GrantorDetails.GrantorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrantorNull() {
                return this.IsNull(this.tableF49911GrantorDetails.GrantorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrantorNull() {
                this[this.tableF49911GrantorDetails.GrantorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F49911GranteeDetailsRow : global::System.Data.DataRow {
            
            private F49911GranteeDetailsDataTable tableF49911GranteeDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F49911GranteeDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF49911GranteeDetails = ((F49911GranteeDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    try {
                        return ((int)(this[this.tableF49911GranteeDetails.CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Count\' in table \'F49911GranteeDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49911GranteeDetails.CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InstID {
                get {
                    try {
                        return ((int)(this[this.tableF49911GranteeDetails.InstIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstID\' in table \'F49911GranteeDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49911GranteeDetails.InstIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GranteeID {
                get {
                    try {
                        return ((int)(this[this.tableF49911GranteeDetails.GranteeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GranteeID\' in table \'F49911GranteeDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49911GranteeDetails.GranteeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grantee {
                get {
                    try {
                        return ((string)(this[this.tableF49911GranteeDetails.GranteeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grantee\' in table \'F49911GranteeDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49911GranteeDetails.GranteeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountNull() {
                return this.IsNull(this.tableF49911GranteeDetails.CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountNull() {
                this[this.tableF49911GranteeDetails.CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstIDNull() {
                return this.IsNull(this.tableF49911GranteeDetails.InstIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstIDNull() {
                this[this.tableF49911GranteeDetails.InstIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGranteeIDNull() {
                return this.IsNull(this.tableF49911GranteeDetails.GranteeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGranteeIDNull() {
                this[this.tableF49911GranteeDetails.GranteeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGranteeNull() {
                return this.IsNull(this.tableF49911GranteeDetails.GranteeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGranteeNull() {
                this[this.tableF49911GranteeDetails.GranteeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F49912LegalFieldListingRow : global::System.Data.DataRow {
            
            private F49912LegalFieldListingDataTable tableF49912LegalFieldListing;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F49912LegalFieldListingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF49912LegalFieldListing = ((F49912LegalFieldListingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LglID {
                get {
                    return ((int)(this[this.tableF49912LegalFieldListing.LglIDColumn]));
                }
                set {
                    this[this.tableF49912LegalFieldListing.LglIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InstID {
                get {
                    return ((int)(this[this.tableF49912LegalFieldListing.InstIDColumn]));
                }
                set {
                    this[this.tableF49912LegalFieldListing.InstIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubID {
                get {
                    return ((int)(this[this.tableF49912LegalFieldListing.SubIDColumn]));
                }
                set {
                    this[this.tableF49912LegalFieldListing.SubIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubName {
                get {
                    return ((string)(this[this.tableF49912LegalFieldListing.SubNameColumn]));
                }
                set {
                    this[this.tableF49912LegalFieldListing.SubNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lot {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.LotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lot\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.LotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PLot {
                get {
                    try {
                        return ((bool)(this[this.tableF49912LegalFieldListing.PLotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLot\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.PLotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Block {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.BlockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Block\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.BlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PBlock {
                get {
                    try {
                        return ((bool)(this[this.tableF49912LegalFieldListing.PBlockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PBlock\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.PBlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NENE {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.NENEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NENE\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.NENEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NENW {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.NENWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NENW\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.NENWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NESW {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.NESWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NESW\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.NESWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NESE {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.NESEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NESE\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.NESEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NWNE {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.NWNEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWNE\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.NWNEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NWNW {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.NWNWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWNW\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.NWNWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NWSW {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.NWSWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWSW\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.NWSWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NWSE {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.NWSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWSE\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.NWSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SWNE {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.SWNEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWNE\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.SWNEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SWNW {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.SWNWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWNW\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.SWNWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SWSW {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.SWSWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWSW\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.SWSWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SWSE {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.SWSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWSE\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.SWSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENE {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.SENEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SENE\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.SENEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENW {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.SENWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SENW\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.SENWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SESW {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.SESWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SESW\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.SESWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SESE {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.SESEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SESE\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.SESEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableF49912LegalFieldListing.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'F49912LegalFieldListing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF49912LegalFieldListing.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLotNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.LotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLotNull() {
                this[this.tableF49912LegalFieldListing.LotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPLotNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.PLotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPLotNull() {
                this[this.tableF49912LegalFieldListing.PLotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.BlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockNull() {
                this[this.tableF49912LegalFieldListing.BlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPBlockNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.PBlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPBlockNull() {
                this[this.tableF49912LegalFieldListing.PBlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNENENull() {
                return this.IsNull(this.tableF49912LegalFieldListing.NENEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNENENull() {
                this[this.tableF49912LegalFieldListing.NENEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNENWNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.NENWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNENWNull() {
                this[this.tableF49912LegalFieldListing.NENWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNESWNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.NESWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNESWNull() {
                this[this.tableF49912LegalFieldListing.NESWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNESENull() {
                return this.IsNull(this.tableF49912LegalFieldListing.NESEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNESENull() {
                this[this.tableF49912LegalFieldListing.NESEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWNENull() {
                return this.IsNull(this.tableF49912LegalFieldListing.NWNEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWNENull() {
                this[this.tableF49912LegalFieldListing.NWNEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWNWNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.NWNWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWNWNull() {
                this[this.tableF49912LegalFieldListing.NWNWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWSWNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.NWSWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWSWNull() {
                this[this.tableF49912LegalFieldListing.NWSWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWSENull() {
                return this.IsNull(this.tableF49912LegalFieldListing.NWSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWSENull() {
                this[this.tableF49912LegalFieldListing.NWSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWNENull() {
                return this.IsNull(this.tableF49912LegalFieldListing.SWNEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWNENull() {
                this[this.tableF49912LegalFieldListing.SWNEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWNWNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.SWNWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWNWNull() {
                this[this.tableF49912LegalFieldListing.SWNWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWSWNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.SWSWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWSWNull() {
                this[this.tableF49912LegalFieldListing.SWSWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWSENull() {
                return this.IsNull(this.tableF49912LegalFieldListing.SWSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWSENull() {
                this[this.tableF49912LegalFieldListing.SWSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENENull() {
                return this.IsNull(this.tableF49912LegalFieldListing.SENEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENENull() {
                this[this.tableF49912LegalFieldListing.SENEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENWNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.SENWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENWNull() {
                this[this.tableF49912LegalFieldListing.SENWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSESWNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.SESWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSESWNull() {
                this[this.tableF49912LegalFieldListing.SESWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSESENull() {
                return this.IsNull(this.tableF49912LegalFieldListing.SESEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSESENull() {
                this[this.tableF49912LegalFieldListing.SESEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableF49912LegalFieldListing.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableF49912LegalFieldListing.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F49912ListLegalSubDivisionRow : global::System.Data.DataRow {
            
            private F49912ListLegalSubDivisionDataTable tableF49912ListLegalSubDivision;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F49912ListLegalSubDivisionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF49912ListLegalSubDivision = ((F49912ListLegalSubDivisionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubID {
                get {
                    return ((int)(this[this.tableF49912ListLegalSubDivision.SubIDColumn]));
                }
                set {
                    this[this.tableF49912ListLegalSubDivision.SubIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubName {
                get {
                    return ((string)(this[this.tableF49912ListLegalSubDivision.SubNameColumn]));
                }
                set {
                    this[this.tableF49912ListLegalSubDivision.SubNameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListPartiesFieldRow : global::System.Data.DataRow {
            
            private ListPartiesFieldDataTable tableListPartiesField;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListPartiesFieldRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListPartiesField = ((ListPartiesFieldDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GrantID {
                get {
                    try {
                        return ((string)(this[this.tableListPartiesField.GrantIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrantID\' in table \'ListPartiesField\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListPartiesField.GrantIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableListPartiesField.NameColumn]));
                }
                set {
                    this[this.tableListPartiesField.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrantIDNull() {
                return this.IsNull(this.tableListPartiesField.GrantIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrantIDNull() {
                this[this.tableListPartiesField.GrantIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f49910SaveInstrumentHeaderRow : global::System.Data.DataRow {
            
            private f49910SaveInstrumentHeaderDataTable tablef49910SaveInstrumentHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910SaveInstrumentHeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef49910SaveInstrumentHeader = ((f49910SaveInstrumentHeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookPage {
                get {
                    try {
                        return ((string)(this[this.tablef49910SaveInstrumentHeader.BookPageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookPage\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.BookPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FileDate {
                get {
                    try {
                        return ((string)(this[this.tablef49910SaveInstrumentHeader.FileDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileDate\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.FileDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FileTime {
                get {
                    try {
                        return ((string)(this[this.tablef49910SaveInstrumentHeader.FileTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileTime\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.FileTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstDate {
                get {
                    try {
                        return ((string)(this[this.tablef49910SaveInstrumentHeader.InstDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstDate\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.InstDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short IsReviewed {
                get {
                    try {
                        return ((short)(this[this.tablef49910SaveInstrumentHeader.IsReviewedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsReviewed\' in table \'f49910SaveInstrumentHeader\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.IsReviewedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITypeID {
                get {
                    try {
                        return ((int)(this[this.tablef49910SaveInstrumentHeader.ITypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITypeID\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.ITypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tablef49910SaveInstrumentHeader.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'f49910SaveInstrumentHeader\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RcvFrom {
                get {
                    try {
                        return ((string)(this[this.tablef49910SaveInstrumentHeader.RcvFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RcvFrom\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.RcvFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnedTo {
                get {
                    try {
                        return ((string)(this[this.tablef49910SaveInstrumentHeader.ReturnedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedTo\' in table \'f49910SaveInstrumentHeader\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.ReturnedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ETypeID {
                get {
                    try {
                        return ((int)(this[this.tablef49910SaveInstrumentHeader.ETypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ETypeID\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.ETypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SerialNum {
                get {
                    try {
                        return ((string)(this[this.tablef49910SaveInstrumentHeader.SerialNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNum\' in table \'f49910SaveInstrumentHeader\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.SerialNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V03 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49910SaveInstrumentHeader.V03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V03\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.V03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V02 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49910SaveInstrumentHeader.V02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V02\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.V02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V01 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49910SaveInstrumentHeader.V01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V01\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.V01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short WOL {
                get {
                    try {
                        return ((short)(this[this.tablef49910SaveInstrumentHeader.WOLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WOL\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.WOLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Fee {
                get {
                    try {
                        return ((decimal)(this[this.tablef49910SaveInstrumentHeader.FeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fee\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.FeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V06 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49910SaveInstrumentHeader.V06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V06\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.V06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V05 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49910SaveInstrumentHeader.V05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V05\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.V05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V04 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49910SaveInstrumentHeader.V04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V04\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.V04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstNum {
                get {
                    try {
                        return ((string)(this[this.tablef49910SaveInstrumentHeader.InstNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstNum\' in table \'f49910SaveInstrumentHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910SaveInstrumentHeader.InstNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookPageNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.BookPageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookPageNull() {
                this[this.tablef49910SaveInstrumentHeader.BookPageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileDateNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.FileDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileDateNull() {
                this[this.tablef49910SaveInstrumentHeader.FileDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileTimeNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.FileTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileTimeNull() {
                this[this.tablef49910SaveInstrumentHeader.FileTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstDateNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.InstDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstDateNull() {
                this[this.tablef49910SaveInstrumentHeader.InstDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsReviewedNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.IsReviewedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsReviewedNull() {
                this[this.tablef49910SaveInstrumentHeader.IsReviewedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITypeIDNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.ITypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITypeIDNull() {
                this[this.tablef49910SaveInstrumentHeader.ITypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tablef49910SaveInstrumentHeader.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRcvFromNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.RcvFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRcvFromNull() {
                this[this.tablef49910SaveInstrumentHeader.RcvFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedToNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.ReturnedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedToNull() {
                this[this.tablef49910SaveInstrumentHeader.ReturnedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETypeIDNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.ETypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETypeIDNull() {
                this[this.tablef49910SaveInstrumentHeader.ETypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialNumNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.SerialNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialNumNull() {
                this[this.tablef49910SaveInstrumentHeader.SerialNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV03Null() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.V03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV03Null() {
                this[this.tablef49910SaveInstrumentHeader.V03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV02Null() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.V02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV02Null() {
                this[this.tablef49910SaveInstrumentHeader.V02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV01Null() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.V01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV01Null() {
                this[this.tablef49910SaveInstrumentHeader.V01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWOLNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.WOLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWOLNull() {
                this[this.tablef49910SaveInstrumentHeader.WOLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeeNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.FeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeeNull() {
                this[this.tablef49910SaveInstrumentHeader.FeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV06Null() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.V06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV06Null() {
                this[this.tablef49910SaveInstrumentHeader.V06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV05Null() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.V05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV05Null() {
                this[this.tablef49910SaveInstrumentHeader.V05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV04Null() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.V04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV04Null() {
                this[this.tablef49910SaveInstrumentHeader.V04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstNumNull() {
                return this.IsNull(this.tablef49910SaveInstrumentHeader.InstNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstNumNull() {
                this[this.tablef49910SaveInstrumentHeader.InstNumColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f49910GrantListValuesRow : global::System.Data.DataRow {
            
            private f49910GrantListValuesDataTable tablef49910GrantListValues;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910GrantListValuesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef49910GrantListValues = ((f49910GrantListValuesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tablef49910GrantListValues.NameColumn]));
                }
                set {
                    this[this.tablef49910GrantListValues.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Addr1 {
                get {
                    try {
                        return ((string)(this[this.tablef49910GrantListValues.Addr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addr1\' in table \'f49910GrantListValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910GrantListValues.Addr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Addr2 {
                get {
                    try {
                        return ((string)(this[this.tablef49910GrantListValues.Addr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addr2\' in table \'f49910GrantListValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910GrantListValues.Addr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tablef49910GrantListValues.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'f49910GrantListValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910GrantListValues.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tablef49910GrantListValues.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'f49910GrantListValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910GrantListValues.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tablef49910GrantListValues.ZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zip\' in table \'f49910GrantListValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910GrantListValues.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddr1Null() {
                return this.IsNull(this.tablef49910GrantListValues.Addr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddr1Null() {
                this[this.tablef49910GrantListValues.Addr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddr2Null() {
                return this.IsNull(this.tablef49910GrantListValues.Addr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddr2Null() {
                this[this.tablef49910GrantListValues.Addr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tablef49910GrantListValues.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tablef49910GrantListValues.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tablef49910GrantListValues.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tablef49910GrantListValues.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipNull() {
                return this.IsNull(this.tablef49910GrantListValues.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipNull() {
                this[this.tablef49910GrantListValues.ZipColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f49901RecorderDetailsDataTableRow : global::System.Data.DataRow {
            
            private f49901RecorderDetailsDataTableDataTable tablef49901RecorderDetailsDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49901RecorderDetailsDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef49901RecorderDetailsDataTable = ((f49901RecorderDetailsDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InstID {
                get {
                    return ((int)(this[this.tablef49901RecorderDetailsDataTable.InstIDColumn]));
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.InstIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstNum {
                get {
                    return ((string)(this[this.tablef49901RecorderDetailsDataTable.InstNumColumn]));
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.InstNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookPage {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.BookPageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookPage\' in table \'f49901RecorderDetailsDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.BookPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FileDate {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.FileDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileDate\' in table \'f49901RecorderDetailsDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.FileDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FileTime {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.FileTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileTime\' in table \'f49901RecorderDetailsDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.FileTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstrumentDate {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.InstrumentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstrumentDate\' in table \'f49901RecorderDetailsDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.InstrumentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tablef49901RecorderDetailsDataTable.UserIDColumn]));
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name_Display {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.Name_DisplayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name_Display\' in table \'f49901RecorderDetailsDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.Name_DisplayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewed {
                get {
                    try {
                        return ((bool)(this[this.tablef49901RecorderDetailsDataTable.IsReviewedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsReviewed\' in table \'f49901RecorderDetailsDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.IsReviewedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITypeID {
                get {
                    return ((int)(this[this.tablef49901RecorderDetailsDataTable.ITypeIDColumn]));
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.ITypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstrumentType {
                get {
                    return ((string)(this[this.tablef49901RecorderDetailsDataTable.InstrumentTypeColumn]));
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.InstrumentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tablef49901RecorderDetailsDataTable.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'f49901RecorderDetailsDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'f49901RecorderDetailsDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RcvFrom {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.RcvFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RcvFrom\' in table \'f49901RecorderDetailsDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.RcvFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnedTo {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.ReturnedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedTo\' in table \'f49901RecorderDetailsDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.ReturnedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ETypeID {
                get {
                    try {
                        return ((int)(this[this.tablef49901RecorderDetailsDataTable.ETypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ETypeID\' in table \'f49901RecorderDetailsDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.ETypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExemptionType {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.ExemptionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExemptionType\' in table \'f49901RecorderDetailsDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.ExemptionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SerialNum {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.SerialNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNum\' in table \'f49901RecorderDetailsDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.SerialNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WOL {
                get {
                    try {
                        return ((bool)(this[this.tablef49901RecorderDetailsDataTable.WOLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WOL\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.WOLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L01 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.L01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L01\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.L01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L02 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.L02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L02\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.L02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L03 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.L03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L03\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.L03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L04 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.L04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L04\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.L04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L05 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.L05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L05\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.L05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L06 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.L06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L06\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.L06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D01 {
                get {
                    try {
                        return ((byte)(this[this.tablef49901RecorderDetailsDataTable.D01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D01\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.D01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D02 {
                get {
                    try {
                        return ((byte)(this[this.tablef49901RecorderDetailsDataTable.D02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D02\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.D02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D03 {
                get {
                    try {
                        return ((byte)(this[this.tablef49901RecorderDetailsDataTable.D03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D03\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.D03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D04 {
                get {
                    try {
                        return ((byte)(this[this.tablef49901RecorderDetailsDataTable.D04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D04\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.D04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D05 {
                get {
                    try {
                        return ((byte)(this[this.tablef49901RecorderDetailsDataTable.D05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D05\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.D05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D06 {
                get {
                    try {
                        return ((byte)(this[this.tablef49901RecorderDetailsDataTable.D06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D06\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.D06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F01 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.F01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F01\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.F01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F02 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.F02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F02\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.F02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F03 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.F03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F03\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.F03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F04 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.F04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F04\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.F04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F05 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.F05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F05\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.F05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F06 {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.F06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F06\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.F06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V01 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49901RecorderDetailsDataTable.V01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V01\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.V01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V02 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49901RecorderDetailsDataTable.V02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V02\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.V02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V03 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49901RecorderDetailsDataTable.V03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V03\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.V03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V04 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49901RecorderDetailsDataTable.V04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V04\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.V04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V05 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49901RecorderDetailsDataTable.V05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V05\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.V05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V06 {
                get {
                    try {
                        return ((decimal)(this[this.tablef49901RecorderDetailsDataTable.V06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V06\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.V06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VFormula {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.VFormulaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VFormula\' in table \'f49901RecorderDetailsDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.VFormulaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Fee {
                get {
                    try {
                        return ((decimal)(this[this.tablef49901RecorderDetailsDataTable.FeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fee\' in table \'f49901RecorderDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.FeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal StampTax {
                get {
                    try {
                        return ((decimal)(this[this.tablef49901RecorderDetailsDataTable.StampTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StampTax\' in table \'f49901RecorderDetailsDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.StampTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Preservation {
                get {
                    try {
                        return ((decimal)(this[this.tablef49901RecorderDetailsDataTable.PreservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Preservation\' in table \'f49901RecorderDetailsDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.PreservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tablef49901RecorderDetailsDataTable.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'f49901RecorderDetailsDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Checked {
                get {
                    try {
                        return ((bool)(this[this.tablef49901RecorderDetailsDataTable.CheckedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Checked\' in table \'f49901RecorderDetailsDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablef49901RecorderDetailsDataTable.CheckedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookPageNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.BookPageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookPageNull() {
                this[this.tablef49901RecorderDetailsDataTable.BookPageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileDateNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.FileDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileDateNull() {
                this[this.tablef49901RecorderDetailsDataTable.FileDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileTimeNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.FileTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileTimeNull() {
                this[this.tablef49901RecorderDetailsDataTable.FileTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstrumentDateNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.InstrumentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstrumentDateNull() {
                this[this.tablef49901RecorderDetailsDataTable.InstrumentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName_DisplayNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.Name_DisplayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName_DisplayNull() {
                this[this.tablef49901RecorderDetailsDataTable.Name_DisplayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsReviewedNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.IsReviewedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsReviewedNull() {
                this[this.tablef49901RecorderDetailsDataTable.IsReviewedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tablef49901RecorderDetailsDataTable.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tablef49901RecorderDetailsDataTable.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRcvFromNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.RcvFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRcvFromNull() {
                this[this.tablef49901RecorderDetailsDataTable.RcvFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedToNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.ReturnedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedToNull() {
                this[this.tablef49901RecorderDetailsDataTable.ReturnedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETypeIDNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.ETypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETypeIDNull() {
                this[this.tablef49901RecorderDetailsDataTable.ETypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptionTypeNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.ExemptionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptionTypeNull() {
                this[this.tablef49901RecorderDetailsDataTable.ExemptionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialNumNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.SerialNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialNumNull() {
                this[this.tablef49901RecorderDetailsDataTable.SerialNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWOLNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.WOLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWOLNull() {
                this[this.tablef49901RecorderDetailsDataTable.WOLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL01Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.L01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL01Null() {
                this[this.tablef49901RecorderDetailsDataTable.L01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL02Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.L02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL02Null() {
                this[this.tablef49901RecorderDetailsDataTable.L02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL03Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.L03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL03Null() {
                this[this.tablef49901RecorderDetailsDataTable.L03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL04Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.L04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL04Null() {
                this[this.tablef49901RecorderDetailsDataTable.L04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL05Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.L05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL05Null() {
                this[this.tablef49901RecorderDetailsDataTable.L05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL06Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.L06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL06Null() {
                this[this.tablef49901RecorderDetailsDataTable.L06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD01Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.D01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD01Null() {
                this[this.tablef49901RecorderDetailsDataTable.D01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD02Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.D02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD02Null() {
                this[this.tablef49901RecorderDetailsDataTable.D02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD03Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.D03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD03Null() {
                this[this.tablef49901RecorderDetailsDataTable.D03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD04Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.D04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD04Null() {
                this[this.tablef49901RecorderDetailsDataTable.D04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD05Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.D05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD05Null() {
                this[this.tablef49901RecorderDetailsDataTable.D05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD06Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.D06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD06Null() {
                this[this.tablef49901RecorderDetailsDataTable.D06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF01Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.F01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF01Null() {
                this[this.tablef49901RecorderDetailsDataTable.F01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF02Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.F02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF02Null() {
                this[this.tablef49901RecorderDetailsDataTable.F02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF03Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.F03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF03Null() {
                this[this.tablef49901RecorderDetailsDataTable.F03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF04Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.F04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF04Null() {
                this[this.tablef49901RecorderDetailsDataTable.F04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF05Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.F05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF05Null() {
                this[this.tablef49901RecorderDetailsDataTable.F05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF06Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.F06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF06Null() {
                this[this.tablef49901RecorderDetailsDataTable.F06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV01Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.V01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV01Null() {
                this[this.tablef49901RecorderDetailsDataTable.V01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV02Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.V02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV02Null() {
                this[this.tablef49901RecorderDetailsDataTable.V02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV03Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.V03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV03Null() {
                this[this.tablef49901RecorderDetailsDataTable.V03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV04Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.V04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV04Null() {
                this[this.tablef49901RecorderDetailsDataTable.V04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV05Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.V05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV05Null() {
                this[this.tablef49901RecorderDetailsDataTable.V05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV06Null() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.V06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV06Null() {
                this[this.tablef49901RecorderDetailsDataTable.V06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVFormulaNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.VFormulaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVFormulaNull() {
                this[this.tablef49901RecorderDetailsDataTable.VFormulaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeeNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.FeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeeNull() {
                this[this.tablef49901RecorderDetailsDataTable.FeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStampTaxNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.StampTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStampTaxNull() {
                this[this.tablef49901RecorderDetailsDataTable.StampTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreservationNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.PreservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreservationNull() {
                this[this.tablef49901RecorderDetailsDataTable.PreservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tablef49901RecorderDetailsDataTable.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckedNull() {
                return this.IsNull(this.tablef49901RecorderDetailsDataTable.CheckedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckedNull() {
                this[this.tablef49901RecorderDetailsDataTable.CheckedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f49910feeDetailsTableRow : global::System.Data.DataRow {
            
            private f49910feeDetailsTableDataTable tablef49910feeDetailsTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f49910feeDetailsTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef49910feeDetailsTable = ((f49910feeDetailsTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITypeID {
                get {
                    return ((int)(this[this.tablef49910feeDetailsTable.ITypeIDColumn]));
                }
                set {
                    this[this.tablef49910feeDetailsTable.ITypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tablef49910feeDetailsTable.NameColumn]));
                }
                set {
                    this[this.tablef49910feeDetailsTable.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxLien {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.TaxLienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxLien\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.TaxLienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VFormula {
                get {
                    return ((string)(this[this.tablef49910feeDetailsTable.VFormulaColumn]));
                }
                set {
                    this[this.tablef49910feeDetailsTable.VFormulaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L01 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.L01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L01\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.L01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D01 {
                get {
                    try {
                        return ((byte)(this[this.tablef49910feeDetailsTable.D01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D01\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.D01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F01 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.F01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F01\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.F01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L02 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.L02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L02\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.L02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D02 {
                get {
                    try {
                        return ((byte)(this[this.tablef49910feeDetailsTable.D02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D02\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.D02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F02 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.F02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F02\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.F02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L03 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.L03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L03\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.L03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D03 {
                get {
                    try {
                        return ((byte)(this[this.tablef49910feeDetailsTable.D03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D03\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.D03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F03 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.F03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F03\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.F03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L04 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.L04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L04\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.L04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D04 {
                get {
                    try {
                        return ((byte)(this[this.tablef49910feeDetailsTable.D04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D04\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.D04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F04 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.F04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F04\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.F04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L05 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.L05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L05\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.L05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D05 {
                get {
                    try {
                        return ((byte)(this[this.tablef49910feeDetailsTable.D05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D05\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.D05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F05 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.F05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F05\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.F05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L06 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.L06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L06\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.L06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D06 {
                get {
                    try {
                        return ((byte)(this[this.tablef49910feeDetailsTable.D06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D06\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.D06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F06 {
                get {
                    try {
                        return ((string)(this[this.tablef49910feeDetailsTable.F06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F06\' in table \'f49910feeDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef49910feeDetailsTable.F06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxLienNull() {
                return this.IsNull(this.tablef49910feeDetailsTable.TaxLienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxLienNull() {
                this[this.tablef49910feeDetailsTable.TaxLienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tablef49910feeDetailsTable.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tablef49910feeDetailsTable.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL01Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.L01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL01Null() {
                this[this.tablef49910feeDetailsTable.L01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD01Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.D01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD01Null() {
                this[this.tablef49910feeDetailsTable.D01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF01Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.F01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF01Null() {
                this[this.tablef49910feeDetailsTable.F01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL02Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.L02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL02Null() {
                this[this.tablef49910feeDetailsTable.L02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD02Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.D02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD02Null() {
                this[this.tablef49910feeDetailsTable.D02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF02Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.F02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF02Null() {
                this[this.tablef49910feeDetailsTable.F02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL03Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.L03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL03Null() {
                this[this.tablef49910feeDetailsTable.L03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD03Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.D03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD03Null() {
                this[this.tablef49910feeDetailsTable.D03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF03Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.F03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF03Null() {
                this[this.tablef49910feeDetailsTable.F03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL04Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.L04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL04Null() {
                this[this.tablef49910feeDetailsTable.L04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD04Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.D04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD04Null() {
                this[this.tablef49910feeDetailsTable.D04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF04Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.F04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF04Null() {
                this[this.tablef49910feeDetailsTable.F04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL05Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.L05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL05Null() {
                this[this.tablef49910feeDetailsTable.L05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD05Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.D05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD05Null() {
                this[this.tablef49910feeDetailsTable.D05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF05Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.F05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF05Null() {
                this[this.tablef49910feeDetailsTable.F05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL06Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.L06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL06Null() {
                this[this.tablef49910feeDetailsTable.L06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD06Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.D06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD06Null() {
                this[this.tablef49910feeDetailsTable.D06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF06Null() {
                return this.IsNull(this.tablef49910feeDetailsTable.F06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF06Null() {
                this[this.tablef49910feeDetailsTable.F06Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f49901PaymentDetailsDataTableRowChangeEvent : global::System.EventArgs {
            
            private f49901PaymentDetailsDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901PaymentDetailsDataTableRowChangeEvent(f49901PaymentDetailsDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901PaymentDetailsDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f4991InstrumentCopyDataTableRowChangeEvent : global::System.EventArgs {
            
            private f4991InstrumentCopyDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991InstrumentCopyDataTableRowChangeEvent(f4991InstrumentCopyDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991InstrumentCopyDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f4991GrantorCopyDataTableRowChangeEvent : global::System.EventArgs {
            
            private f4991GrantorCopyDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GrantorCopyDataTableRowChangeEvent(f4991GrantorCopyDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GrantorCopyDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f4991GranteeCopyDataTableRowChangeEvent : global::System.EventArgs {
            
            private f4991GranteeCopyDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GranteeCopyDataTableRowChangeEvent(f4991GranteeCopyDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991GranteeCopyDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f4991LegalCopyDataTableRowChangeEvent : global::System.EventArgs {
            
            private f4991LegalCopyDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991LegalCopyDataTableRowChangeEvent(f4991LegalCopyDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f4991LegalCopyDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f49910_pclst_CustomerValueRowChangeEvent : global::System.EventArgs {
            
            private f49910_pclst_CustomerValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_CustomerValueRowChangeEvent(f49910_pclst_CustomerValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_CustomerValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f49910InstrumentTypeDataTableRowChangeEvent : global::System.EventArgs {
            
            private f49910InstrumentTypeDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910InstrumentTypeDataTableRowChangeEvent(f49910InstrumentTypeDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910InstrumentTypeDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f49910_pclst_TenderTypeRowChangeEvent : global::System.EventArgs {
            
            private f49910_pclst_TenderTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_TenderTypeRowChangeEvent(f49910_pclst_TenderTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_TenderTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f49910_pclst_GrantListRowChangeEvent : global::System.EventArgs {
            
            private f49910_pclst_GrantListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_GrantListRowChangeEvent(f49910_pclst_GrantListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_GrantListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f49910_pclst_ExemptionTypeRowChangeEvent : global::System.EventArgs {
            
            private f49910_pclst_ExemptionTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_ExemptionTypeRowChangeEvent(f49910_pclst_ExemptionTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910_pclst_ExemptionTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F49911GrantorDetailsRowChangeEvent : global::System.EventArgs {
            
            private F49911GrantorDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GrantorDetailsRowChangeEvent(F49911GrantorDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GrantorDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F49911GranteeDetailsRowChangeEvent : global::System.EventArgs {
            
            private F49911GranteeDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GranteeDetailsRowChangeEvent(F49911GranteeDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49911GranteeDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F49912LegalFieldListingRowChangeEvent : global::System.EventArgs {
            
            private F49912LegalFieldListingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912LegalFieldListingRowChangeEvent(F49912LegalFieldListingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912LegalFieldListingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F49912ListLegalSubDivisionRowChangeEvent : global::System.EventArgs {
            
            private F49912ListLegalSubDivisionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912ListLegalSubDivisionRowChangeEvent(F49912ListLegalSubDivisionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F49912ListLegalSubDivisionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListPartiesFieldRowChangeEvent : global::System.EventArgs {
            
            private ListPartiesFieldRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPartiesFieldRowChangeEvent(ListPartiesFieldRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPartiesFieldRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f49910SaveInstrumentHeaderRowChangeEvent : global::System.EventArgs {
            
            private f49910SaveInstrumentHeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910SaveInstrumentHeaderRowChangeEvent(f49910SaveInstrumentHeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910SaveInstrumentHeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f49910GrantListValuesRowChangeEvent : global::System.EventArgs {
            
            private f49910GrantListValuesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910GrantListValuesRowChangeEvent(f49910GrantListValuesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910GrantListValuesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f49901RecorderDetailsDataTableRowChangeEvent : global::System.EventArgs {
            
            private f49901RecorderDetailsDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901RecorderDetailsDataTableRowChangeEvent(f49901RecorderDetailsDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49901RecorderDetailsDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f49910feeDetailsTableRowChangeEvent : global::System.EventArgs {
            
            private f49910feeDetailsTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910feeDetailsTableRowChangeEvent(f49910feeDetailsTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f49910feeDetailsTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591