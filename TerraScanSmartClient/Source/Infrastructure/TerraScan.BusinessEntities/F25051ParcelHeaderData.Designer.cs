//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F25051ParcelHeaderData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F25051ParcelHeaderData : global::System.Data.DataSet {
        
        private f25051ParcelHeaderDataTable tablef25051ParcelHeader;
        
        private f25051ParcelDetailsDataTableDataTable tablef25051ParcelDetailsDataTable;
        
        private F25051OwnerOccupiedDataTable tableF25051OwnerOccupied;
        
        private F25051ParcelClassTypesDataTable tableF25051ParcelClassTypes;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F25051ParcelHeaderData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F25051ParcelHeaderData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f25051ParcelHeader"] != null)) {
                    base.Tables.Add(new f25051ParcelHeaderDataTable(ds.Tables["f25051ParcelHeader"]));
                }
                if ((ds.Tables["f25051ParcelDetailsDataTable"] != null)) {
                    base.Tables.Add(new f25051ParcelDetailsDataTableDataTable(ds.Tables["f25051ParcelDetailsDataTable"]));
                }
                if ((ds.Tables["F25051OwnerOccupied"] != null)) {
                    base.Tables.Add(new F25051OwnerOccupiedDataTable(ds.Tables["F25051OwnerOccupied"]));
                }
                if ((ds.Tables["F25051ParcelClassTypes"] != null)) {
                    base.Tables.Add(new F25051ParcelClassTypesDataTable(ds.Tables["F25051ParcelClassTypes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f25051ParcelHeaderDataTable f25051ParcelHeader {
            get {
                return this.tablef25051ParcelHeader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f25051ParcelDetailsDataTableDataTable f25051ParcelDetailsDataTable {
            get {
                return this.tablef25051ParcelDetailsDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F25051OwnerOccupiedDataTable F25051OwnerOccupied {
            get {
                return this.tableF25051OwnerOccupied;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F25051ParcelClassTypesDataTable F25051ParcelClassTypes {
            get {
                return this.tableF25051ParcelClassTypes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F25051ParcelHeaderData cln = ((F25051ParcelHeaderData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f25051ParcelHeader"] != null)) {
                    base.Tables.Add(new f25051ParcelHeaderDataTable(ds.Tables["f25051ParcelHeader"]));
                }
                if ((ds.Tables["f25051ParcelDetailsDataTable"] != null)) {
                    base.Tables.Add(new f25051ParcelDetailsDataTableDataTable(ds.Tables["f25051ParcelDetailsDataTable"]));
                }
                if ((ds.Tables["F25051OwnerOccupied"] != null)) {
                    base.Tables.Add(new F25051OwnerOccupiedDataTable(ds.Tables["F25051OwnerOccupied"]));
                }
                if ((ds.Tables["F25051ParcelClassTypes"] != null)) {
                    base.Tables.Add(new F25051ParcelClassTypesDataTable(ds.Tables["F25051ParcelClassTypes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef25051ParcelHeader = ((f25051ParcelHeaderDataTable)(base.Tables["f25051ParcelHeader"]));
            if ((initTable == true)) {
                if ((this.tablef25051ParcelHeader != null)) {
                    this.tablef25051ParcelHeader.InitVars();
                }
            }
            this.tablef25051ParcelDetailsDataTable = ((f25051ParcelDetailsDataTableDataTable)(base.Tables["f25051ParcelDetailsDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef25051ParcelDetailsDataTable != null)) {
                    this.tablef25051ParcelDetailsDataTable.InitVars();
                }
            }
            this.tableF25051OwnerOccupied = ((F25051OwnerOccupiedDataTable)(base.Tables["F25051OwnerOccupied"]));
            if ((initTable == true)) {
                if ((this.tableF25051OwnerOccupied != null)) {
                    this.tableF25051OwnerOccupied.InitVars();
                }
            }
            this.tableF25051ParcelClassTypes = ((F25051ParcelClassTypesDataTable)(base.Tables["F25051ParcelClassTypes"]));
            if ((initTable == true)) {
                if ((this.tableF25051ParcelClassTypes != null)) {
                    this.tableF25051ParcelClassTypes.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F25051ParcelHeaderData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F25051ParcelHeaderData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef25051ParcelHeader = new f25051ParcelHeaderDataTable();
            base.Tables.Add(this.tablef25051ParcelHeader);
            this.tablef25051ParcelDetailsDataTable = new f25051ParcelDetailsDataTableDataTable();
            base.Tables.Add(this.tablef25051ParcelDetailsDataTable);
            this.tableF25051OwnerOccupied = new F25051OwnerOccupiedDataTable();
            base.Tables.Add(this.tableF25051OwnerOccupied);
            this.tableF25051ParcelClassTypes = new F25051ParcelClassTypesDataTable();
            base.Tables.Add(this.tableF25051ParcelClassTypes);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef25051ParcelHeader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef25051ParcelDetailsDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF25051OwnerOccupied() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF25051ParcelClassTypes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F25051ParcelHeaderData ds = new F25051ParcelHeaderData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f25051ParcelHeaderRowChangeEventHandler(object sender, f25051ParcelHeaderRowChangeEvent e);
        
        public delegate void f25051ParcelDetailsDataTableRowChangeEventHandler(object sender, f25051ParcelDetailsDataTableRowChangeEvent e);
        
        public delegate void F25051OwnerOccupiedRowChangeEventHandler(object sender, F25051OwnerOccupiedRowChangeEvent e);
        
        public delegate void F25051ParcelClassTypesRowChangeEventHandler(object sender, F25051ParcelClassTypesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f25051ParcelHeaderDataTable : global::System.Data.TypedTableBase<f25051ParcelHeaderRow> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnParcelTypeID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnAssessmentTypeID;
            
            private global::System.Data.DataColumn columnAssessmentType;
            
            private global::System.Data.DataColumn columnRetired;
            
            private global::System.Data.DataColumn columnExempt;
            
            private global::System.Data.DataColumn columnLockAdminBy;
            
            private global::System.Data.DataColumn columnLockAppraisalBy;
            
            private global::System.Data.DataColumn columnLockValueBy;
            
            private global::System.Data.DataColumn columnEvents;
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnImprovementID;
            
            private global::System.Data.DataColumn columnImprovement;
            
            private global::System.Data.DataColumn columnLandTypeID;
            
            private global::System.Data.DataColumn columnLandType;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPrimaryOwner;
            
            private global::System.Data.DataColumn columnSitus;
            
            private global::System.Data.DataColumn columnLegal;
            
            private global::System.Data.DataColumn columnClassAgLandID;
            
            private global::System.Data.DataColumn columnClassNonAgLandID;
            
            private global::System.Data.DataColumn columnClassAgImprovementID;
            
            private global::System.Data.DataColumn columnClassNonAgImprovementID;
            
            private global::System.Data.DataColumn columnClassNonAgResidentialID;
            
            private global::System.Data.DataColumn columnOwnerOccupiedID;
            
            private global::System.Data.DataColumn columnMID1;
            
            private global::System.Data.DataColumn columnMID2;
            
            private global::System.Data.DataColumn columnMID3;
            
            private global::System.Data.DataColumn columnMID4;
            
            private global::System.Data.DataColumn columnMID5;
            
            private global::System.Data.DataColumn columnMID6;
            
            private global::System.Data.DataColumn columnMID7;
            
            private global::System.Data.DataColumn columnLabel;
            
            private global::System.Data.DataColumn columnLabe2;
            
            private global::System.Data.DataColumn columnLabe3;
            
            private global::System.Data.DataColumn columnLabe4;
            
            private global::System.Data.DataColumn columnLabe5;
            
            private global::System.Data.DataColumn columnLabe6;
            
            private global::System.Data.DataColumn columnLabe7;
            
            private global::System.Data.DataColumn columnMask1;
            
            private global::System.Data.DataColumn columnMask2;
            
            private global::System.Data.DataColumn columnMask3;
            
            private global::System.Data.DataColumn columnMask4;
            
            private global::System.Data.DataColumn columnMask5;
            
            private global::System.Data.DataColumn columnMask6;
            
            private global::System.Data.DataColumn columnMask7;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnNeighborhoodGroup;
            
            private global::System.Data.DataColumn columnTaxDistrictID;
            
            private global::System.Data.DataColumn columnNBHDID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelHeaderDataTable() {
                this.TableName = "f25051ParcelHeader";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f25051ParcelHeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f25051ParcelHeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelTypeIDColumn {
                get {
                    return this.columnParcelTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessmentTypeIDColumn {
                get {
                    return this.columnAssessmentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessmentTypeColumn {
                get {
                    return this.columnAssessmentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RetiredColumn {
                get {
                    return this.columnRetired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptColumn {
                get {
                    return this.columnExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAdminByColumn {
                get {
                    return this.columnLockAdminBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAppraisalByColumn {
                get {
                    return this.columnLockAppraisalBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockValueByColumn {
                get {
                    return this.columnLockValueBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventsColumn {
                get {
                    return this.columnEvents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImprovementIDColumn {
                get {
                    return this.columnImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImprovementColumn {
                get {
                    return this.columnImprovement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeIDColumn {
                get {
                    return this.columnLandTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeColumn {
                get {
                    return this.columnLandType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimaryOwnerColumn {
                get {
                    return this.columnPrimaryOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SitusColumn {
                get {
                    return this.columnSitus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LegalColumn {
                get {
                    return this.columnLegal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassAgLandIDColumn {
                get {
                    return this.columnClassAgLandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAgLandIDColumn {
                get {
                    return this.columnClassNonAgLandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassAgImprovementIDColumn {
                get {
                    return this.columnClassAgImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAgImprovementIDColumn {
                get {
                    return this.columnClassNonAgImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAgResidentialIDColumn {
                get {
                    return this.columnClassNonAgResidentialID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerOccupiedIDColumn {
                get {
                    return this.columnOwnerOccupiedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID1Column {
                get {
                    return this.columnMID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID2Column {
                get {
                    return this.columnMID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID3Column {
                get {
                    return this.columnMID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID4Column {
                get {
                    return this.columnMID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID5Column {
                get {
                    return this.columnMID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID6Column {
                get {
                    return this.columnMID6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID7Column {
                get {
                    return this.columnMID7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelColumn {
                get {
                    return this.columnLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe2Column {
                get {
                    return this.columnLabe2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe3Column {
                get {
                    return this.columnLabe3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe4Column {
                get {
                    return this.columnLabe4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe5Column {
                get {
                    return this.columnLabe5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe6Column {
                get {
                    return this.columnLabe6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe7Column {
                get {
                    return this.columnLabe7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask1Column {
                get {
                    return this.columnMask1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask2Column {
                get {
                    return this.columnMask2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask3Column {
                get {
                    return this.columnMask3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask4Column {
                get {
                    return this.columnMask4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask5Column {
                get {
                    return this.columnMask5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask6Column {
                get {
                    return this.columnMask6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask7Column {
                get {
                    return this.columnMask7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeighborhoodGroupColumn {
                get {
                    return this.columnNeighborhoodGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxDistrictIDColumn {
                get {
                    return this.columnTaxDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelHeaderRow this[int index] {
                get {
                    return ((f25051ParcelHeaderRow)(this.Rows[index]));
                }
            }
            
            public event f25051ParcelHeaderRowChangeEventHandler f25051ParcelHeaderRowChanging;
            
            public event f25051ParcelHeaderRowChangeEventHandler f25051ParcelHeaderRowChanged;
            
            public event f25051ParcelHeaderRowChangeEventHandler f25051ParcelHeaderRowDeleting;
            
            public event f25051ParcelHeaderRowChangeEventHandler f25051ParcelHeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf25051ParcelHeaderRow(f25051ParcelHeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelHeaderRow Addf25051ParcelHeaderRow(
                        string ParcelNumber, 
                        short RollYear, 
                        byte ParcelTypeID, 
                        string Type, 
                        short AssessmentTypeID, 
                        string AssessmentType, 
                        string Retired, 
                        string Exempt, 
                        int LockAdminBy, 
                        int LockAppraisalBy, 
                        int LockValueBy, 
                        string Events, 
                        int EventID, 
                        int ImprovementID, 
                        string Improvement, 
                        int LandTypeID, 
                        string LandType, 
                        string Description, 
                        string PrimaryOwner, 
                        string Situs, 
                        string Legal, 
                        int ClassAgLandID, 
                        int ClassNonAgLandID, 
                        int ClassAgImprovementID, 
                        int ClassNonAgImprovementID, 
                        int ClassNonAgResidentialID, 
                        int OwnerOccupiedID, 
                        string MID1, 
                        string MID2, 
                        string MID3, 
                        string MID4, 
                        string MID5, 
                        string MID6, 
                        string MID7, 
                        string Label, 
                        string Labe2, 
                        string Labe3, 
                        string Labe4, 
                        string Labe5, 
                        string Labe6, 
                        string Labe7, 
                        string Mask1, 
                        string Mask2, 
                        string Mask3, 
                        string Mask4, 
                        string Mask5, 
                        string Mask6, 
                        string Mask7, 
                        string District, 
                        string NeighborhoodGroup, 
                        int TaxDistrictID, 
                        int NBHDID) {
                f25051ParcelHeaderRow rowf25051ParcelHeaderRow = ((f25051ParcelHeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ParcelNumber,
                        RollYear,
                        ParcelTypeID,
                        Type,
                        AssessmentTypeID,
                        AssessmentType,
                        Retired,
                        Exempt,
                        LockAdminBy,
                        LockAppraisalBy,
                        LockValueBy,
                        Events,
                        EventID,
                        ImprovementID,
                        Improvement,
                        LandTypeID,
                        LandType,
                        Description,
                        PrimaryOwner,
                        Situs,
                        Legal,
                        ClassAgLandID,
                        ClassNonAgLandID,
                        ClassAgImprovementID,
                        ClassNonAgImprovementID,
                        ClassNonAgResidentialID,
                        OwnerOccupiedID,
                        MID1,
                        MID2,
                        MID3,
                        MID4,
                        MID5,
                        MID6,
                        MID7,
                        Label,
                        Labe2,
                        Labe3,
                        Labe4,
                        Labe5,
                        Labe6,
                        Labe7,
                        Mask1,
                        Mask2,
                        Mask3,
                        Mask4,
                        Mask5,
                        Mask6,
                        Mask7,
                        District,
                        NeighborhoodGroup,
                        TaxDistrictID,
                        NBHDID};
                rowf25051ParcelHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf25051ParcelHeaderRow);
                return rowf25051ParcelHeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f25051ParcelHeaderDataTable cln = ((f25051ParcelHeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f25051ParcelHeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnParcelTypeID = base.Columns["ParcelTypeID"];
                this.columnType = base.Columns["Type"];
                this.columnAssessmentTypeID = base.Columns["AssessmentTypeID"];
                this.columnAssessmentType = base.Columns["AssessmentType"];
                this.columnRetired = base.Columns["Retired"];
                this.columnExempt = base.Columns["Exempt"];
                this.columnLockAdminBy = base.Columns["LockAdminBy"];
                this.columnLockAppraisalBy = base.Columns["LockAppraisalBy"];
                this.columnLockValueBy = base.Columns["LockValueBy"];
                this.columnEvents = base.Columns["Events"];
                this.columnEventID = base.Columns["EventID"];
                this.columnImprovementID = base.Columns["ImprovementID"];
                this.columnImprovement = base.Columns["Improvement"];
                this.columnLandTypeID = base.Columns["LandTypeID"];
                this.columnLandType = base.Columns["LandType"];
                this.columnDescription = base.Columns["Description"];
                this.columnPrimaryOwner = base.Columns["PrimaryOwner"];
                this.columnSitus = base.Columns["Situs"];
                this.columnLegal = base.Columns["Legal"];
                this.columnClassAgLandID = base.Columns["ClassAgLandID"];
                this.columnClassNonAgLandID = base.Columns["ClassNonAgLandID"];
                this.columnClassAgImprovementID = base.Columns["ClassAgImprovementID"];
                this.columnClassNonAgImprovementID = base.Columns["ClassNonAgImprovementID"];
                this.columnClassNonAgResidentialID = base.Columns["ClassNonAgResidentialID"];
                this.columnOwnerOccupiedID = base.Columns["OwnerOccupiedID"];
                this.columnMID1 = base.Columns["MID1"];
                this.columnMID2 = base.Columns["MID2"];
                this.columnMID3 = base.Columns["MID3"];
                this.columnMID4 = base.Columns["MID4"];
                this.columnMID5 = base.Columns["MID5"];
                this.columnMID6 = base.Columns["MID6"];
                this.columnMID7 = base.Columns["MID7"];
                this.columnLabel = base.Columns["Label"];
                this.columnLabe2 = base.Columns["Labe2"];
                this.columnLabe3 = base.Columns["Labe3"];
                this.columnLabe4 = base.Columns["Labe4"];
                this.columnLabe5 = base.Columns["Labe5"];
                this.columnLabe6 = base.Columns["Labe6"];
                this.columnLabe7 = base.Columns["Labe7"];
                this.columnMask1 = base.Columns["Mask1"];
                this.columnMask2 = base.Columns["Mask2"];
                this.columnMask3 = base.Columns["Mask3"];
                this.columnMask4 = base.Columns["Mask4"];
                this.columnMask5 = base.Columns["Mask5"];
                this.columnMask6 = base.Columns["Mask6"];
                this.columnMask7 = base.Columns["Mask7"];
                this.columnDistrict = base.Columns["District"];
                this.columnNeighborhoodGroup = base.Columns["NeighborhoodGroup"];
                this.columnTaxDistrictID = base.Columns["TaxDistrictID"];
                this.columnNBHDID = base.Columns["NBHDID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnParcelTypeID = new global::System.Data.DataColumn("ParcelTypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelTypeID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnAssessmentTypeID = new global::System.Data.DataColumn("AssessmentTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessmentTypeID);
                this.columnAssessmentType = new global::System.Data.DataColumn("AssessmentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessmentType);
                this.columnRetired = new global::System.Data.DataColumn("Retired", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetired);
                this.columnExempt = new global::System.Data.DataColumn("Exempt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExempt);
                this.columnLockAdminBy = new global::System.Data.DataColumn("LockAdminBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAdminBy);
                this.columnLockAppraisalBy = new global::System.Data.DataColumn("LockAppraisalBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAppraisalBy);
                this.columnLockValueBy = new global::System.Data.DataColumn("LockValueBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockValueBy);
                this.columnEvents = new global::System.Data.DataColumn("Events", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvents);
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnImprovementID = new global::System.Data.DataColumn("ImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImprovementID);
                this.columnImprovement = new global::System.Data.DataColumn("Improvement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImprovement);
                this.columnLandTypeID = new global::System.Data.DataColumn("LandTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID);
                this.columnLandType = new global::System.Data.DataColumn("LandType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPrimaryOwner = new global::System.Data.DataColumn("PrimaryOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryOwner);
                this.columnSitus = new global::System.Data.DataColumn("Situs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSitus);
                this.columnLegal = new global::System.Data.DataColumn("Legal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLegal);
                this.columnClassAgLandID = new global::System.Data.DataColumn("ClassAgLandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassAgLandID);
                this.columnClassNonAgLandID = new global::System.Data.DataColumn("ClassNonAgLandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAgLandID);
                this.columnClassAgImprovementID = new global::System.Data.DataColumn("ClassAgImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassAgImprovementID);
                this.columnClassNonAgImprovementID = new global::System.Data.DataColumn("ClassNonAgImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAgImprovementID);
                this.columnClassNonAgResidentialID = new global::System.Data.DataColumn("ClassNonAgResidentialID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAgResidentialID);
                this.columnOwnerOccupiedID = new global::System.Data.DataColumn("OwnerOccupiedID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerOccupiedID);
                this.columnMID1 = new global::System.Data.DataColumn("MID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID1);
                this.columnMID2 = new global::System.Data.DataColumn("MID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID2);
                this.columnMID3 = new global::System.Data.DataColumn("MID3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID3);
                this.columnMID4 = new global::System.Data.DataColumn("MID4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID4);
                this.columnMID5 = new global::System.Data.DataColumn("MID5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID5);
                this.columnMID6 = new global::System.Data.DataColumn("MID6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID6);
                this.columnMID7 = new global::System.Data.DataColumn("MID7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID7);
                this.columnLabel = new global::System.Data.DataColumn("Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabel);
                this.columnLabe2 = new global::System.Data.DataColumn("Labe2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe2);
                this.columnLabe3 = new global::System.Data.DataColumn("Labe3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe3);
                this.columnLabe4 = new global::System.Data.DataColumn("Labe4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe4);
                this.columnLabe5 = new global::System.Data.DataColumn("Labe5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe5);
                this.columnLabe6 = new global::System.Data.DataColumn("Labe6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe6);
                this.columnLabe7 = new global::System.Data.DataColumn("Labe7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe7);
                this.columnMask1 = new global::System.Data.DataColumn("Mask1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask1);
                this.columnMask2 = new global::System.Data.DataColumn("Mask2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask2);
                this.columnMask3 = new global::System.Data.DataColumn("Mask3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask3);
                this.columnMask4 = new global::System.Data.DataColumn("Mask4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask4);
                this.columnMask5 = new global::System.Data.DataColumn("Mask5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask5);
                this.columnMask6 = new global::System.Data.DataColumn("Mask6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask6);
                this.columnMask7 = new global::System.Data.DataColumn("Mask7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask7);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnNeighborhoodGroup = new global::System.Data.DataColumn("NeighborhoodGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhoodGroup);
                this.columnTaxDistrictID = new global::System.Data.DataColumn("TaxDistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxDistrictID);
                this.columnNBHDID = new global::System.Data.DataColumn("NBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnParcelID.AutoIncrement = true;
                this.columnParcelID.ReadOnly = true;
                this.columnParcelNumber.MaxLength = 50;
                this.columnType.MaxLength = 50;
                this.columnAssessmentType.MaxLength = 50;
                this.columnRetired.ReadOnly = true;
                this.columnRetired.MaxLength = 7;
                this.columnExempt.ReadOnly = true;
                this.columnExempt.MaxLength = 6;
                this.columnImprovement.MaxLength = 50;
                this.columnLandType.MaxLength = 50;
                this.columnDescription.MaxLength = 50;
                this.columnPrimaryOwner.ReadOnly = true;
                this.columnPrimaryOwner.MaxLength = 102;
                this.columnSitus.ReadOnly = true;
                this.columnSitus.MaxLength = 500;
                this.columnLegal.ReadOnly = true;
                this.columnLegal.MaxLength = 1000;
                this.columnMID1.MaxLength = 50;
                this.columnMID2.MaxLength = 50;
                this.columnMID3.MaxLength = 50;
                this.columnMID4.MaxLength = 50;
                this.columnMID5.MaxLength = 50;
                this.columnMID6.MaxLength = 50;
                this.columnMID7.MaxLength = 50;
                this.columnLabel.ReadOnly = true;
                this.columnLabel.MaxLength = 1000;
                this.columnLabe2.ReadOnly = true;
                this.columnLabe2.MaxLength = 1000;
                this.columnLabe3.ReadOnly = true;
                this.columnLabe3.MaxLength = 1000;
                this.columnLabe4.ReadOnly = true;
                this.columnLabe4.MaxLength = 1000;
                this.columnLabe5.ReadOnly = true;
                this.columnLabe5.MaxLength = 1000;
                this.columnLabe6.ReadOnly = true;
                this.columnLabe6.MaxLength = 1000;
                this.columnLabe7.ReadOnly = true;
                this.columnLabe7.MaxLength = 1000;
                this.columnMask1.ReadOnly = true;
                this.columnMask2.ReadOnly = true;
                this.columnMask3.ReadOnly = true;
                this.columnMask4.ReadOnly = true;
                this.columnMask5.ReadOnly = true;
                this.columnMask6.ReadOnly = true;
                this.columnMask7.ReadOnly = true;
                this.columnDistrict.ReadOnly = true;
                this.columnDistrict.MaxLength = 103;
                this.columnNeighborhoodGroup.ReadOnly = true;
                this.columnNeighborhoodGroup.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelHeaderRow Newf25051ParcelHeaderRow() {
                return ((f25051ParcelHeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f25051ParcelHeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f25051ParcelHeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f25051ParcelHeaderRowChanged != null)) {
                    this.f25051ParcelHeaderRowChanged(this, new f25051ParcelHeaderRowChangeEvent(((f25051ParcelHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f25051ParcelHeaderRowChanging != null)) {
                    this.f25051ParcelHeaderRowChanging(this, new f25051ParcelHeaderRowChangeEvent(((f25051ParcelHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f25051ParcelHeaderRowDeleted != null)) {
                    this.f25051ParcelHeaderRowDeleted(this, new f25051ParcelHeaderRowChangeEvent(((f25051ParcelHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f25051ParcelHeaderRowDeleting != null)) {
                    this.f25051ParcelHeaderRowDeleting(this, new f25051ParcelHeaderRowChangeEvent(((f25051ParcelHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef25051ParcelHeaderRow(f25051ParcelHeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F25051ParcelHeaderData ds = new F25051ParcelHeaderData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f25051ParcelHeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f25051ParcelDetailsDataTableDataTable : global::System.Data.TypedTableBase<f25051ParcelDetailsDataTableRow> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnTaxDistrictID;
            
            private global::System.Data.DataColumn columnNBHDID;
            
            private global::System.Data.DataColumn columnImprovementID;
            
            private global::System.Data.DataColumn columnLandTypeID;
            
            private global::System.Data.DataColumn columnMID1;
            
            private global::System.Data.DataColumn columnMID2;
            
            private global::System.Data.DataColumn columnMID3;
            
            private global::System.Data.DataColumn columnMID4;
            
            private global::System.Data.DataColumn columnMID5;
            
            private global::System.Data.DataColumn columnMID6;
            
            private global::System.Data.DataColumn columnMID7;
            
            private global::System.Data.DataColumn columnClassAglandID;
            
            private global::System.Data.DataColumn columnClassNonAglandID;
            
            private global::System.Data.DataColumn columnClassAgImprovementID;
            
            private global::System.Data.DataColumn columnClassNonAgImprovementID;
            
            private global::System.Data.DataColumn columnClassNonResidentialID;
            
            private global::System.Data.DataColumn columnOwnerOccupiedID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelDetailsDataTableDataTable() {
                this.TableName = "f25051ParcelDetailsDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f25051ParcelDetailsDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f25051ParcelDetailsDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxDistrictIDColumn {
                get {
                    return this.columnTaxDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImprovementIDColumn {
                get {
                    return this.columnImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeIDColumn {
                get {
                    return this.columnLandTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID1Column {
                get {
                    return this.columnMID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID2Column {
                get {
                    return this.columnMID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID3Column {
                get {
                    return this.columnMID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID4Column {
                get {
                    return this.columnMID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID5Column {
                get {
                    return this.columnMID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID6Column {
                get {
                    return this.columnMID6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID7Column {
                get {
                    return this.columnMID7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassAglandIDColumn {
                get {
                    return this.columnClassAglandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAglandIDColumn {
                get {
                    return this.columnClassNonAglandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassAgImprovementIDColumn {
                get {
                    return this.columnClassAgImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAgImprovementIDColumn {
                get {
                    return this.columnClassNonAgImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonResidentialIDColumn {
                get {
                    return this.columnClassNonResidentialID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerOccupiedIDColumn {
                get {
                    return this.columnOwnerOccupiedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelDetailsDataTableRow this[int index] {
                get {
                    return ((f25051ParcelDetailsDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f25051ParcelDetailsDataTableRowChangeEventHandler f25051ParcelDetailsDataTableRowChanging;
            
            public event f25051ParcelDetailsDataTableRowChangeEventHandler f25051ParcelDetailsDataTableRowChanged;
            
            public event f25051ParcelDetailsDataTableRowChangeEventHandler f25051ParcelDetailsDataTableRowDeleting;
            
            public event f25051ParcelDetailsDataTableRowChangeEventHandler f25051ParcelDetailsDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf25051ParcelDetailsDataTableRow(f25051ParcelDetailsDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelDetailsDataTableRow Addf25051ParcelDetailsDataTableRow(
                        string ParcelID, 
                        int TaxDistrictID, 
                        int NBHDID, 
                        int ImprovementID, 
                        int LandTypeID, 
                        string MID1, 
                        string MID2, 
                        string MID3, 
                        string MID4, 
                        string MID5, 
                        string MID6, 
                        string MID7, 
                        int ClassAglandID, 
                        int ClassNonAglandID, 
                        int ClassAgImprovementID, 
                        int ClassNonAgImprovementID, 
                        int ClassNonResidentialID, 
                        int OwnerOccupiedID) {
                f25051ParcelDetailsDataTableRow rowf25051ParcelDetailsDataTableRow = ((f25051ParcelDetailsDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        TaxDistrictID,
                        NBHDID,
                        ImprovementID,
                        LandTypeID,
                        MID1,
                        MID2,
                        MID3,
                        MID4,
                        MID5,
                        MID6,
                        MID7,
                        ClassAglandID,
                        ClassNonAglandID,
                        ClassAgImprovementID,
                        ClassNonAgImprovementID,
                        ClassNonResidentialID,
                        OwnerOccupiedID};
                rowf25051ParcelDetailsDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf25051ParcelDetailsDataTableRow);
                return rowf25051ParcelDetailsDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f25051ParcelDetailsDataTableDataTable cln = ((f25051ParcelDetailsDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f25051ParcelDetailsDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnTaxDistrictID = base.Columns["TaxDistrictID"];
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnImprovementID = base.Columns["ImprovementID"];
                this.columnLandTypeID = base.Columns["LandTypeID"];
                this.columnMID1 = base.Columns["MID1"];
                this.columnMID2 = base.Columns["MID2"];
                this.columnMID3 = base.Columns["MID3"];
                this.columnMID4 = base.Columns["MID4"];
                this.columnMID5 = base.Columns["MID5"];
                this.columnMID6 = base.Columns["MID6"];
                this.columnMID7 = base.Columns["MID7"];
                this.columnClassAglandID = base.Columns["ClassAglandID"];
                this.columnClassNonAglandID = base.Columns["ClassNonAglandID"];
                this.columnClassAgImprovementID = base.Columns["ClassAgImprovementID"];
                this.columnClassNonAgImprovementID = base.Columns["ClassNonAgImprovementID"];
                this.columnClassNonResidentialID = base.Columns["ClassNonResidentialID"];
                this.columnOwnerOccupiedID = base.Columns["OwnerOccupiedID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnTaxDistrictID = new global::System.Data.DataColumn("TaxDistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxDistrictID);
                this.columnNBHDID = new global::System.Data.DataColumn("NBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnImprovementID = new global::System.Data.DataColumn("ImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImprovementID);
                this.columnLandTypeID = new global::System.Data.DataColumn("LandTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID);
                this.columnMID1 = new global::System.Data.DataColumn("MID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID1);
                this.columnMID2 = new global::System.Data.DataColumn("MID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID2);
                this.columnMID3 = new global::System.Data.DataColumn("MID3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID3);
                this.columnMID4 = new global::System.Data.DataColumn("MID4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID4);
                this.columnMID5 = new global::System.Data.DataColumn("MID5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID5);
                this.columnMID6 = new global::System.Data.DataColumn("MID6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID6);
                this.columnMID7 = new global::System.Data.DataColumn("MID7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID7);
                this.columnClassAglandID = new global::System.Data.DataColumn("ClassAglandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassAglandID);
                this.columnClassNonAglandID = new global::System.Data.DataColumn("ClassNonAglandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAglandID);
                this.columnClassAgImprovementID = new global::System.Data.DataColumn("ClassAgImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassAgImprovementID);
                this.columnClassNonAgImprovementID = new global::System.Data.DataColumn("ClassNonAgImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAgImprovementID);
                this.columnClassNonResidentialID = new global::System.Data.DataColumn("ClassNonResidentialID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonResidentialID);
                this.columnOwnerOccupiedID = new global::System.Data.DataColumn("OwnerOccupiedID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerOccupiedID);
                this.columnMID1.MaxLength = 50;
                this.columnMID2.MaxLength = 50;
                this.columnMID3.MaxLength = 50;
                this.columnMID4.MaxLength = 50;
                this.columnMID5.MaxLength = 50;
                this.columnMID6.MaxLength = 50;
                this.columnMID7.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelDetailsDataTableRow Newf25051ParcelDetailsDataTableRow() {
                return ((f25051ParcelDetailsDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f25051ParcelDetailsDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f25051ParcelDetailsDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f25051ParcelDetailsDataTableRowChanged != null)) {
                    this.f25051ParcelDetailsDataTableRowChanged(this, new f25051ParcelDetailsDataTableRowChangeEvent(((f25051ParcelDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f25051ParcelDetailsDataTableRowChanging != null)) {
                    this.f25051ParcelDetailsDataTableRowChanging(this, new f25051ParcelDetailsDataTableRowChangeEvent(((f25051ParcelDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f25051ParcelDetailsDataTableRowDeleted != null)) {
                    this.f25051ParcelDetailsDataTableRowDeleted(this, new f25051ParcelDetailsDataTableRowChangeEvent(((f25051ParcelDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f25051ParcelDetailsDataTableRowDeleting != null)) {
                    this.f25051ParcelDetailsDataTableRowDeleting(this, new f25051ParcelDetailsDataTableRowChangeEvent(((f25051ParcelDetailsDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef25051ParcelDetailsDataTableRow(f25051ParcelDetailsDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F25051ParcelHeaderData ds = new F25051ParcelHeaderData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f25051ParcelDetailsDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F25051OwnerOccupiedDataTable : global::System.Data.TypedTableBase<F25051OwnerOccupiedRow> {
            
            private global::System.Data.DataColumn columnOwnerOccupiedID;
            
            private global::System.Data.DataColumn columnOwnerOccupied;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051OwnerOccupiedDataTable() {
                this.TableName = "F25051OwnerOccupied";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F25051OwnerOccupiedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F25051OwnerOccupiedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerOccupiedIDColumn {
                get {
                    return this.columnOwnerOccupiedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerOccupiedColumn {
                get {
                    return this.columnOwnerOccupied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051OwnerOccupiedRow this[int index] {
                get {
                    return ((F25051OwnerOccupiedRow)(this.Rows[index]));
                }
            }
            
            public event F25051OwnerOccupiedRowChangeEventHandler F25051OwnerOccupiedRowChanging;
            
            public event F25051OwnerOccupiedRowChangeEventHandler F25051OwnerOccupiedRowChanged;
            
            public event F25051OwnerOccupiedRowChangeEventHandler F25051OwnerOccupiedRowDeleting;
            
            public event F25051OwnerOccupiedRowChangeEventHandler F25051OwnerOccupiedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF25051OwnerOccupiedRow(F25051OwnerOccupiedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051OwnerOccupiedRow AddF25051OwnerOccupiedRow(int OwnerOccupiedID, string OwnerOccupied, string Description) {
                F25051OwnerOccupiedRow rowF25051OwnerOccupiedRow = ((F25051OwnerOccupiedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OwnerOccupiedID,
                        OwnerOccupied,
                        Description};
                rowF25051OwnerOccupiedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF25051OwnerOccupiedRow);
                return rowF25051OwnerOccupiedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F25051OwnerOccupiedDataTable cln = ((F25051OwnerOccupiedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F25051OwnerOccupiedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOwnerOccupiedID = base.Columns["OwnerOccupiedID"];
                this.columnOwnerOccupied = base.Columns["OwnerOccupied"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOwnerOccupiedID = new global::System.Data.DataColumn("OwnerOccupiedID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerOccupiedID);
                this.columnOwnerOccupied = new global::System.Data.DataColumn("OwnerOccupied", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerOccupied);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnOwnerOccupied.MaxLength = 50;
                this.columnDescription.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051OwnerOccupiedRow NewF25051OwnerOccupiedRow() {
                return ((F25051OwnerOccupiedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F25051OwnerOccupiedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F25051OwnerOccupiedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F25051OwnerOccupiedRowChanged != null)) {
                    this.F25051OwnerOccupiedRowChanged(this, new F25051OwnerOccupiedRowChangeEvent(((F25051OwnerOccupiedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F25051OwnerOccupiedRowChanging != null)) {
                    this.F25051OwnerOccupiedRowChanging(this, new F25051OwnerOccupiedRowChangeEvent(((F25051OwnerOccupiedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F25051OwnerOccupiedRowDeleted != null)) {
                    this.F25051OwnerOccupiedRowDeleted(this, new F25051OwnerOccupiedRowChangeEvent(((F25051OwnerOccupiedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F25051OwnerOccupiedRowDeleting != null)) {
                    this.F25051OwnerOccupiedRowDeleting(this, new F25051OwnerOccupiedRowChangeEvent(((F25051OwnerOccupiedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF25051OwnerOccupiedRow(F25051OwnerOccupiedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F25051ParcelHeaderData ds = new F25051ParcelHeaderData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F25051OwnerOccupiedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F25051ParcelClassTypesDataTable : global::System.Data.TypedTableBase<F25051ParcelClassTypesRow> {
            
            private global::System.Data.DataColumn columnClassID;
            
            private global::System.Data.DataColumn columnClass;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051ParcelClassTypesDataTable() {
                this.TableName = "F25051ParcelClassTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F25051ParcelClassTypesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F25051ParcelClassTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassIDColumn {
                get {
                    return this.columnClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn {
                get {
                    return this.columnClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051ParcelClassTypesRow this[int index] {
                get {
                    return ((F25051ParcelClassTypesRow)(this.Rows[index]));
                }
            }
            
            public event F25051ParcelClassTypesRowChangeEventHandler F25051ParcelClassTypesRowChanging;
            
            public event F25051ParcelClassTypesRowChangeEventHandler F25051ParcelClassTypesRowChanged;
            
            public event F25051ParcelClassTypesRowChangeEventHandler F25051ParcelClassTypesRowDeleting;
            
            public event F25051ParcelClassTypesRowChangeEventHandler F25051ParcelClassTypesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF25051ParcelClassTypesRow(F25051ParcelClassTypesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051ParcelClassTypesRow AddF25051ParcelClassTypesRow(string Class, string Description) {
                F25051ParcelClassTypesRow rowF25051ParcelClassTypesRow = ((F25051ParcelClassTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Class,
                        Description};
                rowF25051ParcelClassTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF25051ParcelClassTypesRow);
                return rowF25051ParcelClassTypesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F25051ParcelClassTypesDataTable cln = ((F25051ParcelClassTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F25051ParcelClassTypesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnClassID = base.Columns["ClassID"];
                this.columnClass = base.Columns["Class"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnClassID = new global::System.Data.DataColumn("ClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassID);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnClassID.AutoIncrement = true;
                this.columnClassID.ReadOnly = true;
                this.columnClass.MaxLength = 50;
                this.columnDescription.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051ParcelClassTypesRow NewF25051ParcelClassTypesRow() {
                return ((F25051ParcelClassTypesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F25051ParcelClassTypesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F25051ParcelClassTypesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F25051ParcelClassTypesRowChanged != null)) {
                    this.F25051ParcelClassTypesRowChanged(this, new F25051ParcelClassTypesRowChangeEvent(((F25051ParcelClassTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F25051ParcelClassTypesRowChanging != null)) {
                    this.F25051ParcelClassTypesRowChanging(this, new F25051ParcelClassTypesRowChangeEvent(((F25051ParcelClassTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F25051ParcelClassTypesRowDeleted != null)) {
                    this.F25051ParcelClassTypesRowDeleted(this, new F25051ParcelClassTypesRowChangeEvent(((F25051ParcelClassTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F25051ParcelClassTypesRowDeleting != null)) {
                    this.F25051ParcelClassTypesRowDeleting(this, new F25051ParcelClassTypesRowChangeEvent(((F25051ParcelClassTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF25051ParcelClassTypesRow(F25051ParcelClassTypesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F25051ParcelHeaderData ds = new F25051ParcelHeaderData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F25051ParcelClassTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f25051ParcelHeaderRow : global::System.Data.DataRow {
            
            private f25051ParcelHeaderDataTable tablef25051ParcelHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f25051ParcelHeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef25051ParcelHeader = ((f25051ParcelHeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.ParcelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tablef25051ParcelHeader.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ParcelTypeID {
                get {
                    try {
                        return ((byte)(this[this.tablef25051ParcelHeader.ParcelTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelTypeID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ParcelTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AssessmentTypeID {
                get {
                    try {
                        return ((short)(this[this.tablef25051ParcelHeader.AssessmentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessmentTypeID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.AssessmentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssessmentType {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.AssessmentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessmentType\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.AssessmentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Retired {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.RetiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Retired\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.RetiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Exempt {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.ExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Exempt\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAdminBy {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.LockAdminByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAdminBy\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.LockAdminByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAppraisalBy {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.LockAppraisalByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAppraisalBy\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.LockAppraisalByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockValueBy {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.LockValueByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockValueBy\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.LockValueByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Events {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.EventsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Events\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.EventsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.EventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ImprovementID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.ImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImprovementID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Improvement {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.ImprovementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Improvement\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ImprovementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.LandTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.LandTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandType {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.LandTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandType\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.LandTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrimaryOwner {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.PrimaryOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrimaryOwner\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.PrimaryOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Situs {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.SitusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Situs\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.SitusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Legal {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.LegalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Legal\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.LegalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassAgLandID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.ClassAgLandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassAgLandID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ClassAgLandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAgLandID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.ClassNonAgLandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAgLandID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ClassNonAgLandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassAgImprovementID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.ClassAgImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassAgImprovementID\' in table \'f25051ParcelHeader\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ClassAgImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAgImprovementID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.ClassNonAgImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAgImprovementID\' in table \'f25051ParcelHeader\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ClassNonAgImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAgResidentialID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.ClassNonAgResidentialIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAgResidentialID\' in table \'f25051ParcelHeader\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.ClassNonAgResidentialIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerOccupiedID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.OwnerOccupiedIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerOccupiedID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.OwnerOccupiedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID1 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.MID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID1\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.MID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID2 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.MID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID2\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.MID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID3 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.MID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID3\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.MID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID4 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.MID4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID4\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.MID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID5 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.MID5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID5\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.MID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID6 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.MID6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID6\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.MID6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID7 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.MID7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID7\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.MID7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Label {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Label\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe2 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.Labe2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe2\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Labe2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe3 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.Labe3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe3\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Labe3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe4 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.Labe4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe4\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Labe4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe5 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.Labe5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe5\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Labe5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe6 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.Labe6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe6\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Labe6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe7 {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.Labe7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe7\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Labe7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask1 {
                get {
                    if (this.IsMask1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelHeader.Mask1Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Mask1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask2 {
                get {
                    if (this.IsMask2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelHeader.Mask2Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Mask2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask3 {
                get {
                    if (this.IsMask3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelHeader.Mask3Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Mask3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask4 {
                get {
                    if (this.IsMask4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelHeader.Mask4Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Mask4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask5 {
                get {
                    if (this.IsMask5Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelHeader.Mask5Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Mask5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask6 {
                get {
                    if (this.IsMask6Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelHeader.Mask6Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Mask6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask7 {
                get {
                    if (this.IsMask7Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelHeader.Mask7Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.Mask7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NeighborhoodGroup {
                get {
                    try {
                        return ((string)(this[this.tablef25051ParcelHeader.NeighborhoodGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NeighborhoodGroup\' in table \'f25051ParcelHeader\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.NeighborhoodGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TaxDistrictID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.TaxDistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxDistrictID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.TaxDistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelHeader.NBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'f25051ParcelHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelHeader.NBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tablef25051ParcelHeader.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tablef25051ParcelHeader.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tablef25051ParcelHeader.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tablef25051ParcelHeader.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelTypeIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ParcelTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelTypeIDNull() {
                this[this.tablef25051ParcelHeader.ParcelTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tablef25051ParcelHeader.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tablef25051ParcelHeader.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessmentTypeIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.AssessmentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessmentTypeIDNull() {
                this[this.tablef25051ParcelHeader.AssessmentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessmentTypeNull() {
                return this.IsNull(this.tablef25051ParcelHeader.AssessmentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessmentTypeNull() {
                this[this.tablef25051ParcelHeader.AssessmentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetiredNull() {
                return this.IsNull(this.tablef25051ParcelHeader.RetiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetiredNull() {
                this[this.tablef25051ParcelHeader.RetiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptNull() {
                this[this.tablef25051ParcelHeader.ExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAdminByNull() {
                return this.IsNull(this.tablef25051ParcelHeader.LockAdminByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAdminByNull() {
                this[this.tablef25051ParcelHeader.LockAdminByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAppraisalByNull() {
                return this.IsNull(this.tablef25051ParcelHeader.LockAppraisalByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAppraisalByNull() {
                this[this.tablef25051ParcelHeader.LockAppraisalByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockValueByNull() {
                return this.IsNull(this.tablef25051ParcelHeader.LockValueByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockValueByNull() {
                this[this.tablef25051ParcelHeader.LockValueByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventsNull() {
                return this.IsNull(this.tablef25051ParcelHeader.EventsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventsNull() {
                this[this.tablef25051ParcelHeader.EventsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.EventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventIDNull() {
                this[this.tablef25051ParcelHeader.EventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImprovementIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImprovementIDNull() {
                this[this.tablef25051ParcelHeader.ImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImprovementNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ImprovementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImprovementNull() {
                this[this.tablef25051ParcelHeader.ImprovementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.LandTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeIDNull() {
                this[this.tablef25051ParcelHeader.LandTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeNull() {
                return this.IsNull(this.tablef25051ParcelHeader.LandTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeNull() {
                this[this.tablef25051ParcelHeader.LandTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablef25051ParcelHeader.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablef25051ParcelHeader.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimaryOwnerNull() {
                return this.IsNull(this.tablef25051ParcelHeader.PrimaryOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimaryOwnerNull() {
                this[this.tablef25051ParcelHeader.PrimaryOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSitusNull() {
                return this.IsNull(this.tablef25051ParcelHeader.SitusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSitusNull() {
                this[this.tablef25051ParcelHeader.SitusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLegalNull() {
                return this.IsNull(this.tablef25051ParcelHeader.LegalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLegalNull() {
                this[this.tablef25051ParcelHeader.LegalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassAgLandIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ClassAgLandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassAgLandIDNull() {
                this[this.tablef25051ParcelHeader.ClassAgLandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAgLandIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ClassNonAgLandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAgLandIDNull() {
                this[this.tablef25051ParcelHeader.ClassNonAgLandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassAgImprovementIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ClassAgImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassAgImprovementIDNull() {
                this[this.tablef25051ParcelHeader.ClassAgImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAgImprovementIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ClassNonAgImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAgImprovementIDNull() {
                this[this.tablef25051ParcelHeader.ClassNonAgImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAgResidentialIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.ClassNonAgResidentialIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAgResidentialIDNull() {
                this[this.tablef25051ParcelHeader.ClassNonAgResidentialIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerOccupiedIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.OwnerOccupiedIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerOccupiedIDNull() {
                this[this.tablef25051ParcelHeader.OwnerOccupiedIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID1Null() {
                return this.IsNull(this.tablef25051ParcelHeader.MID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID1Null() {
                this[this.tablef25051ParcelHeader.MID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID2Null() {
                return this.IsNull(this.tablef25051ParcelHeader.MID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID2Null() {
                this[this.tablef25051ParcelHeader.MID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID3Null() {
                return this.IsNull(this.tablef25051ParcelHeader.MID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID3Null() {
                this[this.tablef25051ParcelHeader.MID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID4Null() {
                return this.IsNull(this.tablef25051ParcelHeader.MID4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID4Null() {
                this[this.tablef25051ParcelHeader.MID4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID5Null() {
                return this.IsNull(this.tablef25051ParcelHeader.MID5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID5Null() {
                this[this.tablef25051ParcelHeader.MID5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID6Null() {
                return this.IsNull(this.tablef25051ParcelHeader.MID6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID6Null() {
                this[this.tablef25051ParcelHeader.MID6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID7Null() {
                return this.IsNull(this.tablef25051ParcelHeader.MID7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID7Null() {
                this[this.tablef25051ParcelHeader.MID7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelNull() {
                return this.IsNull(this.tablef25051ParcelHeader.LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelNull() {
                this[this.tablef25051ParcelHeader.LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe2Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Labe2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe2Null() {
                this[this.tablef25051ParcelHeader.Labe2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe3Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Labe3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe3Null() {
                this[this.tablef25051ParcelHeader.Labe3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe4Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Labe4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe4Null() {
                this[this.tablef25051ParcelHeader.Labe4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe5Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Labe5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe5Null() {
                this[this.tablef25051ParcelHeader.Labe5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe6Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Labe6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe6Null() {
                this[this.tablef25051ParcelHeader.Labe6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe7Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Labe7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe7Null() {
                this[this.tablef25051ParcelHeader.Labe7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask1Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Mask1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask1Null() {
                this[this.tablef25051ParcelHeader.Mask1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask2Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Mask2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask2Null() {
                this[this.tablef25051ParcelHeader.Mask2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask3Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Mask3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask3Null() {
                this[this.tablef25051ParcelHeader.Mask3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask4Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Mask4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask4Null() {
                this[this.tablef25051ParcelHeader.Mask4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask5Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Mask5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask5Null() {
                this[this.tablef25051ParcelHeader.Mask5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask6Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Mask6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask6Null() {
                this[this.tablef25051ParcelHeader.Mask6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask7Null() {
                return this.IsNull(this.tablef25051ParcelHeader.Mask7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask7Null() {
                this[this.tablef25051ParcelHeader.Mask7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tablef25051ParcelHeader.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tablef25051ParcelHeader.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodGroupNull() {
                return this.IsNull(this.tablef25051ParcelHeader.NeighborhoodGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodGroupNull() {
                this[this.tablef25051ParcelHeader.NeighborhoodGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxDistrictIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.TaxDistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxDistrictIDNull() {
                this[this.tablef25051ParcelHeader.TaxDistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tablef25051ParcelHeader.NBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tablef25051ParcelHeader.NBHDIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f25051ParcelDetailsDataTableRow : global::System.Data.DataRow {
            
            private f25051ParcelDetailsDataTableDataTable tablef25051ParcelDetailsDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f25051ParcelDetailsDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef25051ParcelDetailsDataTable = ((f25051ParcelDetailsDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelID {
                get {
                    if (this.IsParcelIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelDetailsDataTable.ParcelIDColumn]));
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TaxDistrictID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelDetailsDataTable.TaxDistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxDistrictID\' in table \'f25051ParcelDetailsDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.TaxDistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelDetailsDataTable.NBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'f25051ParcelDetailsDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.NBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ImprovementID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelDetailsDataTable.ImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImprovementID\' in table \'f25051ParcelDetailsDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.ImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelDetailsDataTable.LandTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID\' in table \'f25051ParcelDetailsDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.LandTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID1 {
                get {
                    if (this.IsMID1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelDetailsDataTable.MID1Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.MID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID2 {
                get {
                    if (this.IsMID2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelDetailsDataTable.MID2Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.MID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID3 {
                get {
                    if (this.IsMID3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelDetailsDataTable.MID3Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.MID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID4 {
                get {
                    if (this.IsMID4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelDetailsDataTable.MID4Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.MID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID5 {
                get {
                    if (this.IsMID5Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelDetailsDataTable.MID5Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.MID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID6 {
                get {
                    if (this.IsMID6Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelDetailsDataTable.MID6Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.MID6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID7 {
                get {
                    if (this.IsMID7Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef25051ParcelDetailsDataTable.MID7Column]));
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.MID7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassAglandID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelDetailsDataTable.ClassAglandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassAglandID\' in table \'f25051ParcelDetailsDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.ClassAglandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAglandID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelDetailsDataTable.ClassNonAglandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAglandID\' in table \'f25051ParcelDetailsDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.ClassNonAglandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassAgImprovementID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelDetailsDataTable.ClassAgImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassAgImprovementID\' in table \'f25051ParcelDetailsDataTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.ClassAgImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAgImprovementID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelDetailsDataTable.ClassNonAgImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAgImprovementID\' in table \'f25051ParcelDetailsDataT" +
                                "able\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.ClassNonAgImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonResidentialID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelDetailsDataTable.ClassNonResidentialIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonResidentialID\' in table \'f25051ParcelDetailsDataTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.ClassNonResidentialIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerOccupiedID {
                get {
                    try {
                        return ((int)(this[this.tablef25051ParcelDetailsDataTable.OwnerOccupiedIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerOccupiedID\' in table \'f25051ParcelDetailsDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef25051ParcelDetailsDataTable.OwnerOccupiedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxDistrictIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.TaxDistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxDistrictIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.TaxDistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.NBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.NBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImprovementIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.ImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImprovementIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.ImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.LandTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.LandTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID1Null() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.MID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID1Null() {
                this[this.tablef25051ParcelDetailsDataTable.MID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID2Null() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.MID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID2Null() {
                this[this.tablef25051ParcelDetailsDataTable.MID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID3Null() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.MID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID3Null() {
                this[this.tablef25051ParcelDetailsDataTable.MID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID4Null() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.MID4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID4Null() {
                this[this.tablef25051ParcelDetailsDataTable.MID4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID5Null() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.MID5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID5Null() {
                this[this.tablef25051ParcelDetailsDataTable.MID5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID6Null() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.MID6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID6Null() {
                this[this.tablef25051ParcelDetailsDataTable.MID6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID7Null() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.MID7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID7Null() {
                this[this.tablef25051ParcelDetailsDataTable.MID7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassAglandIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.ClassAglandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassAglandIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.ClassAglandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAglandIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.ClassNonAglandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAglandIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.ClassNonAglandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassAgImprovementIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.ClassAgImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassAgImprovementIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.ClassAgImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAgImprovementIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.ClassNonAgImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAgImprovementIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.ClassNonAgImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonResidentialIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.ClassNonResidentialIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonResidentialIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.ClassNonResidentialIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerOccupiedIDNull() {
                return this.IsNull(this.tablef25051ParcelDetailsDataTable.OwnerOccupiedIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerOccupiedIDNull() {
                this[this.tablef25051ParcelDetailsDataTable.OwnerOccupiedIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F25051OwnerOccupiedRow : global::System.Data.DataRow {
            
            private F25051OwnerOccupiedDataTable tableF25051OwnerOccupied;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F25051OwnerOccupiedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF25051OwnerOccupied = ((F25051OwnerOccupiedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerOccupiedID {
                get {
                    try {
                        return ((int)(this[this.tableF25051OwnerOccupied.OwnerOccupiedIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerOccupiedID\' in table \'F25051OwnerOccupied\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF25051OwnerOccupied.OwnerOccupiedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerOccupied {
                get {
                    try {
                        return ((string)(this[this.tableF25051OwnerOccupied.OwnerOccupiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerOccupied\' in table \'F25051OwnerOccupied\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF25051OwnerOccupied.OwnerOccupiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableF25051OwnerOccupied.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'F25051OwnerOccupied\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF25051OwnerOccupied.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerOccupiedIDNull() {
                return this.IsNull(this.tableF25051OwnerOccupied.OwnerOccupiedIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerOccupiedIDNull() {
                this[this.tableF25051OwnerOccupied.OwnerOccupiedIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerOccupiedNull() {
                return this.IsNull(this.tableF25051OwnerOccupied.OwnerOccupiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerOccupiedNull() {
                this[this.tableF25051OwnerOccupied.OwnerOccupiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableF25051OwnerOccupied.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableF25051OwnerOccupied.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F25051ParcelClassTypesRow : global::System.Data.DataRow {
            
            private F25051ParcelClassTypesDataTable tableF25051ParcelClassTypes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F25051ParcelClassTypesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF25051ParcelClassTypes = ((F25051ParcelClassTypesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassID {
                get {
                    try {
                        return ((int)(this[this.tableF25051ParcelClassTypes.ClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassID\' in table \'F25051ParcelClassTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF25051ParcelClassTypes.ClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class {
                get {
                    try {
                        return ((string)(this[this.tableF25051ParcelClassTypes.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'F25051ParcelClassTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF25051ParcelClassTypes.ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableF25051ParcelClassTypes.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'F25051ParcelClassTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF25051ParcelClassTypes.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassIDNull() {
                return this.IsNull(this.tableF25051ParcelClassTypes.ClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassIDNull() {
                this[this.tableF25051ParcelClassTypes.ClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull() {
                return this.IsNull(this.tableF25051ParcelClassTypes.ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull() {
                this[this.tableF25051ParcelClassTypes.ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableF25051ParcelClassTypes.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableF25051ParcelClassTypes.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f25051ParcelHeaderRowChangeEvent : global::System.EventArgs {
            
            private f25051ParcelHeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelHeaderRowChangeEvent(f25051ParcelHeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelHeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f25051ParcelDetailsDataTableRowChangeEvent : global::System.EventArgs {
            
            private f25051ParcelDetailsDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelDetailsDataTableRowChangeEvent(f25051ParcelDetailsDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f25051ParcelDetailsDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F25051OwnerOccupiedRowChangeEvent : global::System.EventArgs {
            
            private F25051OwnerOccupiedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051OwnerOccupiedRowChangeEvent(F25051OwnerOccupiedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051OwnerOccupiedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F25051ParcelClassTypesRowChangeEvent : global::System.EventArgs {
            
            private F25051ParcelClassTypesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051ParcelClassTypesRowChangeEvent(F25051ParcelClassTypesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F25051ParcelClassTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591