//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F2409ReviewStatusData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F2409ReviewStatusData : global::System.Data.DataSet {
        
        private F2409_ListInspectedByUserDataTable tableF2409_ListInspectedByUser;
        
        private F2409_InspectedTypeDataTable tableF2409_InspectedType;
        
        private F2409_ListReviewStatusDataTable tableF2409_ListReviewStatus;
        
        private F2409_ReviewStatusDataTable tableF2409_ReviewStatus;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F2409ReviewStatusData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F2409ReviewStatusData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["F2409_ListInspectedByUser"] != null)) {
                    base.Tables.Add(new F2409_ListInspectedByUserDataTable(ds.Tables["F2409_ListInspectedByUser"]));
                }
                if ((ds.Tables["F2409_InspectedType"] != null)) {
                    base.Tables.Add(new F2409_InspectedTypeDataTable(ds.Tables["F2409_InspectedType"]));
                }
                if ((ds.Tables["F2409_ListReviewStatus"] != null)) {
                    base.Tables.Add(new F2409_ListReviewStatusDataTable(ds.Tables["F2409_ListReviewStatus"]));
                }
                if ((ds.Tables["F2409_ReviewStatus"] != null)) {
                    base.Tables.Add(new F2409_ReviewStatusDataTable(ds.Tables["F2409_ReviewStatus"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F2409_ListInspectedByUserDataTable F2409_ListInspectedByUser {
            get {
                return this.tableF2409_ListInspectedByUser;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F2409_InspectedTypeDataTable F2409_InspectedType {
            get {
                return this.tableF2409_InspectedType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F2409_ListReviewStatusDataTable F2409_ListReviewStatus {
            get {
                return this.tableF2409_ListReviewStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F2409_ReviewStatusDataTable F2409_ReviewStatus {
            get {
                return this.tableF2409_ReviewStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F2409ReviewStatusData cln = ((F2409ReviewStatusData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["F2409_ListInspectedByUser"] != null)) {
                    base.Tables.Add(new F2409_ListInspectedByUserDataTable(ds.Tables["F2409_ListInspectedByUser"]));
                }
                if ((ds.Tables["F2409_InspectedType"] != null)) {
                    base.Tables.Add(new F2409_InspectedTypeDataTable(ds.Tables["F2409_InspectedType"]));
                }
                if ((ds.Tables["F2409_ListReviewStatus"] != null)) {
                    base.Tables.Add(new F2409_ListReviewStatusDataTable(ds.Tables["F2409_ListReviewStatus"]));
                }
                if ((ds.Tables["F2409_ReviewStatus"] != null)) {
                    base.Tables.Add(new F2409_ReviewStatusDataTable(ds.Tables["F2409_ReviewStatus"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableF2409_ListInspectedByUser = ((F2409_ListInspectedByUserDataTable)(base.Tables["F2409_ListInspectedByUser"]));
            if ((initTable == true)) {
                if ((this.tableF2409_ListInspectedByUser != null)) {
                    this.tableF2409_ListInspectedByUser.InitVars();
                }
            }
            this.tableF2409_InspectedType = ((F2409_InspectedTypeDataTable)(base.Tables["F2409_InspectedType"]));
            if ((initTable == true)) {
                if ((this.tableF2409_InspectedType != null)) {
                    this.tableF2409_InspectedType.InitVars();
                }
            }
            this.tableF2409_ListReviewStatus = ((F2409_ListReviewStatusDataTable)(base.Tables["F2409_ListReviewStatus"]));
            if ((initTable == true)) {
                if ((this.tableF2409_ListReviewStatus != null)) {
                    this.tableF2409_ListReviewStatus.InitVars();
                }
            }
            this.tableF2409_ReviewStatus = ((F2409_ReviewStatusDataTable)(base.Tables["F2409_ReviewStatus"]));
            if ((initTable == true)) {
                if ((this.tableF2409_ReviewStatus != null)) {
                    this.tableF2409_ReviewStatus.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F2409ReviewStatusData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F2409ReviewStatusData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableF2409_ListInspectedByUser = new F2409_ListInspectedByUserDataTable();
            base.Tables.Add(this.tableF2409_ListInspectedByUser);
            this.tableF2409_InspectedType = new F2409_InspectedTypeDataTable();
            base.Tables.Add(this.tableF2409_InspectedType);
            this.tableF2409_ListReviewStatus = new F2409_ListReviewStatusDataTable();
            base.Tables.Add(this.tableF2409_ListReviewStatus);
            this.tableF2409_ReviewStatus = new F2409_ReviewStatusDataTable();
            base.Tables.Add(this.tableF2409_ReviewStatus);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF2409_ListInspectedByUser() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF2409_InspectedType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF2409_ListReviewStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF2409_ReviewStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F2409ReviewStatusData ds = new F2409ReviewStatusData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void F2409_ListInspectedByUserRowChangeEventHandler(object sender, F2409_ListInspectedByUserRowChangeEvent e);
        
        public delegate void F2409_InspectedTypeRowChangeEventHandler(object sender, F2409_InspectedTypeRowChangeEvent e);
        
        public delegate void F2409_ListReviewStatusRowChangeEventHandler(object sender, F2409_ListReviewStatusRowChangeEvent e);
        
        public delegate void F2409_ReviewStatusRowChangeEventHandler(object sender, F2409_ReviewStatusRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F2409_ListInspectedByUserDataTable : global::System.Data.TypedTableBase<F2409_ListInspectedByUserRow> {
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnName_DIsplay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListInspectedByUserDataTable() {
                this.TableName = "F2409_ListInspectedByUser";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F2409_ListInspectedByUserDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F2409_ListInspectedByUserDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name_DIsplayColumn {
                get {
                    return this.columnName_DIsplay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListInspectedByUserRow this[int index] {
                get {
                    return ((F2409_ListInspectedByUserRow)(this.Rows[index]));
                }
            }
            
            public event F2409_ListInspectedByUserRowChangeEventHandler F2409_ListInspectedByUserRowChanging;
            
            public event F2409_ListInspectedByUserRowChangeEventHandler F2409_ListInspectedByUserRowChanged;
            
            public event F2409_ListInspectedByUserRowChangeEventHandler F2409_ListInspectedByUserRowDeleting;
            
            public event F2409_ListInspectedByUserRowChangeEventHandler F2409_ListInspectedByUserRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF2409_ListInspectedByUserRow(F2409_ListInspectedByUserRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListInspectedByUserRow AddF2409_ListInspectedByUserRow(string UserID, string Name_DIsplay) {
                F2409_ListInspectedByUserRow rowF2409_ListInspectedByUserRow = ((F2409_ListInspectedByUserRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UserID,
                        Name_DIsplay};
                rowF2409_ListInspectedByUserRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF2409_ListInspectedByUserRow);
                return rowF2409_ListInspectedByUserRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F2409_ListInspectedByUserDataTable cln = ((F2409_ListInspectedByUserDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F2409_ListInspectedByUserDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserID = base.Columns["UserID"];
                this.columnName_DIsplay = base.Columns["Name_DIsplay"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnName_DIsplay = new global::System.Data.DataColumn("Name_DIsplay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName_DIsplay);
                this.columnUserID.ReadOnly = true;
                this.columnName_DIsplay.AutoIncrementSeed = -1;
                this.columnName_DIsplay.AutoIncrementStep = -1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListInspectedByUserRow NewF2409_ListInspectedByUserRow() {
                return ((F2409_ListInspectedByUserRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F2409_ListInspectedByUserRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F2409_ListInspectedByUserRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F2409_ListInspectedByUserRowChanged != null)) {
                    this.F2409_ListInspectedByUserRowChanged(this, new F2409_ListInspectedByUserRowChangeEvent(((F2409_ListInspectedByUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F2409_ListInspectedByUserRowChanging != null)) {
                    this.F2409_ListInspectedByUserRowChanging(this, new F2409_ListInspectedByUserRowChangeEvent(((F2409_ListInspectedByUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F2409_ListInspectedByUserRowDeleted != null)) {
                    this.F2409_ListInspectedByUserRowDeleted(this, new F2409_ListInspectedByUserRowChangeEvent(((F2409_ListInspectedByUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F2409_ListInspectedByUserRowDeleting != null)) {
                    this.F2409_ListInspectedByUserRowDeleting(this, new F2409_ListInspectedByUserRowChangeEvent(((F2409_ListInspectedByUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF2409_ListInspectedByUserRow(F2409_ListInspectedByUserRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F2409ReviewStatusData ds = new F2409ReviewStatusData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F2409_ListInspectedByUserDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F2409_InspectedTypeDataTable : global::System.Data.TypedTableBase<F2409_InspectedTypeRow> {
            
            private global::System.Data.DataColumn columnInspectionTypeID;
            
            private global::System.Data.DataColumn columnInspectionType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_InspectedTypeDataTable() {
                this.TableName = "F2409_InspectedType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F2409_InspectedTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F2409_InspectedTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectionTypeIDColumn {
                get {
                    return this.columnInspectionTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectionTypeColumn {
                get {
                    return this.columnInspectionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_InspectedTypeRow this[int index] {
                get {
                    return ((F2409_InspectedTypeRow)(this.Rows[index]));
                }
            }
            
            public event F2409_InspectedTypeRowChangeEventHandler F2409_InspectedTypeRowChanging;
            
            public event F2409_InspectedTypeRowChangeEventHandler F2409_InspectedTypeRowChanged;
            
            public event F2409_InspectedTypeRowChangeEventHandler F2409_InspectedTypeRowDeleting;
            
            public event F2409_InspectedTypeRowChangeEventHandler F2409_InspectedTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF2409_InspectedTypeRow(F2409_InspectedTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_InspectedTypeRow AddF2409_InspectedTypeRow(string InspectionTypeID, string InspectionType) {
                F2409_InspectedTypeRow rowF2409_InspectedTypeRow = ((F2409_InspectedTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InspectionTypeID,
                        InspectionType};
                rowF2409_InspectedTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF2409_InspectedTypeRow);
                return rowF2409_InspectedTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F2409_InspectedTypeDataTable cln = ((F2409_InspectedTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F2409_InspectedTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInspectionTypeID = base.Columns["InspectionTypeID"];
                this.columnInspectionType = base.Columns["InspectionType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInspectionTypeID = new global::System.Data.DataColumn("InspectionTypeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionTypeID);
                this.columnInspectionType = new global::System.Data.DataColumn("InspectionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionType);
                this.columnInspectionTypeID.ReadOnly = true;
                this.columnInspectionType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_InspectedTypeRow NewF2409_InspectedTypeRow() {
                return ((F2409_InspectedTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F2409_InspectedTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F2409_InspectedTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F2409_InspectedTypeRowChanged != null)) {
                    this.F2409_InspectedTypeRowChanged(this, new F2409_InspectedTypeRowChangeEvent(((F2409_InspectedTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F2409_InspectedTypeRowChanging != null)) {
                    this.F2409_InspectedTypeRowChanging(this, new F2409_InspectedTypeRowChangeEvent(((F2409_InspectedTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F2409_InspectedTypeRowDeleted != null)) {
                    this.F2409_InspectedTypeRowDeleted(this, new F2409_InspectedTypeRowChangeEvent(((F2409_InspectedTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F2409_InspectedTypeRowDeleting != null)) {
                    this.F2409_InspectedTypeRowDeleting(this, new F2409_InspectedTypeRowChangeEvent(((F2409_InspectedTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF2409_InspectedTypeRow(F2409_InspectedTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F2409ReviewStatusData ds = new F2409ReviewStatusData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F2409_InspectedTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F2409_ListReviewStatusDataTable : global::System.Data.TypedTableBase<F2409_ListReviewStatusRow> {
            
            private global::System.Data.DataColumn columnInspectedByUserID;
            
            private global::System.Data.DataColumn columnInspectionUser;
            
            private global::System.Data.DataColumn columnDateInspected;
            
            private global::System.Data.DataColumn columnInspectionTypeID;
            
            private global::System.Data.DataColumn columnInspectionType;
            
            private global::System.Data.DataColumn columnReviewedByUserID;
            
            private global::System.Data.DataColumn columnReviewUser;
            
            private global::System.Data.DataColumn columnReviewDate;
            
            private global::System.Data.DataColumn columnReviewStatusID;
            
            private global::System.Data.DataColumn columnEnteredByUser;
            
            private global::System.Data.DataColumn columnEnteredByUserID;
            
            private global::System.Data.DataColumn columnEnteredByDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListReviewStatusDataTable() {
                this.TableName = "F2409_ListReviewStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F2409_ListReviewStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F2409_ListReviewStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectedByUserIDColumn {
                get {
                    return this.columnInspectedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectionUserColumn {
                get {
                    return this.columnInspectionUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateInspectedColumn {
                get {
                    return this.columnDateInspected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectionTypeIDColumn {
                get {
                    return this.columnInspectionTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectionTypeColumn {
                get {
                    return this.columnInspectionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewedByUserIDColumn {
                get {
                    return this.columnReviewedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewUserColumn {
                get {
                    return this.columnReviewUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewDateColumn {
                get {
                    return this.columnReviewDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewStatusIDColumn {
                get {
                    return this.columnReviewStatusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnteredByUserColumn {
                get {
                    return this.columnEnteredByUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnteredByUserIDColumn {
                get {
                    return this.columnEnteredByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnteredByDateColumn {
                get {
                    return this.columnEnteredByDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListReviewStatusRow this[int index] {
                get {
                    return ((F2409_ListReviewStatusRow)(this.Rows[index]));
                }
            }
            
            public event F2409_ListReviewStatusRowChangeEventHandler F2409_ListReviewStatusRowChanging;
            
            public event F2409_ListReviewStatusRowChangeEventHandler F2409_ListReviewStatusRowChanged;
            
            public event F2409_ListReviewStatusRowChangeEventHandler F2409_ListReviewStatusRowDeleting;
            
            public event F2409_ListReviewStatusRowChangeEventHandler F2409_ListReviewStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF2409_ListReviewStatusRow(F2409_ListReviewStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListReviewStatusRow AddF2409_ListReviewStatusRow(string InspectedByUserID, string InspectionUser, string DateInspected, string InspectionTypeID, string InspectionType, string ReviewedByUserID, string ReviewUser, string ReviewDate, string ReviewStatusID, string EnteredByUser, string EnteredByUserID, string EnteredByDate) {
                F2409_ListReviewStatusRow rowF2409_ListReviewStatusRow = ((F2409_ListReviewStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InspectedByUserID,
                        InspectionUser,
                        DateInspected,
                        InspectionTypeID,
                        InspectionType,
                        ReviewedByUserID,
                        ReviewUser,
                        ReviewDate,
                        ReviewStatusID,
                        EnteredByUser,
                        EnteredByUserID,
                        EnteredByDate};
                rowF2409_ListReviewStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF2409_ListReviewStatusRow);
                return rowF2409_ListReviewStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F2409_ListReviewStatusDataTable cln = ((F2409_ListReviewStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F2409_ListReviewStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInspectedByUserID = base.Columns["InspectedByUserID"];
                this.columnInspectionUser = base.Columns["InspectionUser"];
                this.columnDateInspected = base.Columns["DateInspected"];
                this.columnInspectionTypeID = base.Columns["InspectionTypeID"];
                this.columnInspectionType = base.Columns["InspectionType"];
                this.columnReviewedByUserID = base.Columns["ReviewedByUserID"];
                this.columnReviewUser = base.Columns["ReviewUser"];
                this.columnReviewDate = base.Columns["ReviewDate"];
                this.columnReviewStatusID = base.Columns["ReviewStatusID"];
                this.columnEnteredByUser = base.Columns["EnteredByUser"];
                this.columnEnteredByUserID = base.Columns["EnteredByUserID"];
                this.columnEnteredByDate = base.Columns["EnteredByDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInspectedByUserID = new global::System.Data.DataColumn("InspectedByUserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectedByUserID);
                this.columnInspectionUser = new global::System.Data.DataColumn("InspectionUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionUser);
                this.columnDateInspected = new global::System.Data.DataColumn("DateInspected", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateInspected);
                this.columnInspectionTypeID = new global::System.Data.DataColumn("InspectionTypeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionTypeID);
                this.columnInspectionType = new global::System.Data.DataColumn("InspectionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionType);
                this.columnReviewedByUserID = new global::System.Data.DataColumn("ReviewedByUserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewedByUserID);
                this.columnReviewUser = new global::System.Data.DataColumn("ReviewUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewUser);
                this.columnReviewDate = new global::System.Data.DataColumn("ReviewDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewDate);
                this.columnReviewStatusID = new global::System.Data.DataColumn("ReviewStatusID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewStatusID);
                this.columnEnteredByUser = new global::System.Data.DataColumn("EnteredByUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnteredByUser);
                this.columnEnteredByUserID = new global::System.Data.DataColumn("EnteredByUserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnteredByUserID);
                this.columnEnteredByDate = new global::System.Data.DataColumn("EnteredByDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnteredByDate);
                this.columnInspectedByUserID.ReadOnly = true;
                this.columnInspectionUser.MaxLength = 50;
                this.columnDateInspected.ReadOnly = true;
                this.columnDateInspected.MaxLength = 10;
                this.columnInspectionTypeID.ReadOnly = true;
                this.columnInspectionType.MaxLength = 50;
                this.columnReviewedByUserID.ReadOnly = true;
                this.columnReviewUser.MaxLength = 50;
                this.columnReviewDate.ReadOnly = true;
                this.columnReviewDate.MaxLength = 10;
                this.columnReviewStatusID.ReadOnly = true;
                this.columnEnteredByUser.MaxLength = 50;
                this.columnEnteredByUserID.ReadOnly = true;
                this.columnEnteredByDate.ReadOnly = true;
                this.columnEnteredByDate.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListReviewStatusRow NewF2409_ListReviewStatusRow() {
                return ((F2409_ListReviewStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F2409_ListReviewStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F2409_ListReviewStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F2409_ListReviewStatusRowChanged != null)) {
                    this.F2409_ListReviewStatusRowChanged(this, new F2409_ListReviewStatusRowChangeEvent(((F2409_ListReviewStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F2409_ListReviewStatusRowChanging != null)) {
                    this.F2409_ListReviewStatusRowChanging(this, new F2409_ListReviewStatusRowChangeEvent(((F2409_ListReviewStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F2409_ListReviewStatusRowDeleted != null)) {
                    this.F2409_ListReviewStatusRowDeleted(this, new F2409_ListReviewStatusRowChangeEvent(((F2409_ListReviewStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F2409_ListReviewStatusRowDeleting != null)) {
                    this.F2409_ListReviewStatusRowDeleting(this, new F2409_ListReviewStatusRowChangeEvent(((F2409_ListReviewStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF2409_ListReviewStatusRow(F2409_ListReviewStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F2409ReviewStatusData ds = new F2409ReviewStatusData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F2409_ListReviewStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F2409_ReviewStatusDataTable : global::System.Data.TypedTableBase<F2409_ReviewStatusRow> {
            
            private global::System.Data.DataColumn columnReviewStatusID;
            
            private global::System.Data.DataColumn columnReviewStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ReviewStatusDataTable() {
                this.TableName = "F2409_ReviewStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F2409_ReviewStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F2409_ReviewStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewStatusIDColumn {
                get {
                    return this.columnReviewStatusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewStatusColumn {
                get {
                    return this.columnReviewStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ReviewStatusRow this[int index] {
                get {
                    return ((F2409_ReviewStatusRow)(this.Rows[index]));
                }
            }
            
            public event F2409_ReviewStatusRowChangeEventHandler F2409_ReviewStatusRowChanging;
            
            public event F2409_ReviewStatusRowChangeEventHandler F2409_ReviewStatusRowChanged;
            
            public event F2409_ReviewStatusRowChangeEventHandler F2409_ReviewStatusRowDeleting;
            
            public event F2409_ReviewStatusRowChangeEventHandler F2409_ReviewStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF2409_ReviewStatusRow(F2409_ReviewStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ReviewStatusRow AddF2409_ReviewStatusRow(int ReviewStatusID, string ReviewStatus) {
                F2409_ReviewStatusRow rowF2409_ReviewStatusRow = ((F2409_ReviewStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReviewStatusID,
                        ReviewStatus};
                rowF2409_ReviewStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF2409_ReviewStatusRow);
                return rowF2409_ReviewStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F2409_ReviewStatusDataTable cln = ((F2409_ReviewStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F2409_ReviewStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReviewStatusID = base.Columns["ReviewStatusID"];
                this.columnReviewStatus = base.Columns["ReviewStatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReviewStatusID = new global::System.Data.DataColumn("ReviewStatusID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewStatusID);
                this.columnReviewStatus = new global::System.Data.DataColumn("ReviewStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewStatus);
                this.columnReviewStatusID.ReadOnly = true;
                this.columnReviewStatus.ReadOnly = true;
                this.columnReviewStatus.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ReviewStatusRow NewF2409_ReviewStatusRow() {
                return ((F2409_ReviewStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F2409_ReviewStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F2409_ReviewStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F2409_ReviewStatusRowChanged != null)) {
                    this.F2409_ReviewStatusRowChanged(this, new F2409_ReviewStatusRowChangeEvent(((F2409_ReviewStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F2409_ReviewStatusRowChanging != null)) {
                    this.F2409_ReviewStatusRowChanging(this, new F2409_ReviewStatusRowChangeEvent(((F2409_ReviewStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F2409_ReviewStatusRowDeleted != null)) {
                    this.F2409_ReviewStatusRowDeleted(this, new F2409_ReviewStatusRowChangeEvent(((F2409_ReviewStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F2409_ReviewStatusRowDeleting != null)) {
                    this.F2409_ReviewStatusRowDeleting(this, new F2409_ReviewStatusRowChangeEvent(((F2409_ReviewStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF2409_ReviewStatusRow(F2409_ReviewStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F2409ReviewStatusData ds = new F2409ReviewStatusData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F2409_ReviewStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F2409_ListInspectedByUserRow : global::System.Data.DataRow {
            
            private F2409_ListInspectedByUserDataTable tableF2409_ListInspectedByUser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F2409_ListInspectedByUserRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF2409_ListInspectedByUser = ((F2409_ListInspectedByUserDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableF2409_ListInspectedByUser.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'F2409_ListInspectedByUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF2409_ListInspectedByUser.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name_DIsplay {
                get {
                    if (this.IsName_DIsplayNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListInspectedByUser.Name_DIsplayColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListInspectedByUser.Name_DIsplayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableF2409_ListInspectedByUser.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableF2409_ListInspectedByUser.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName_DIsplayNull() {
                return this.IsNull(this.tableF2409_ListInspectedByUser.Name_DIsplayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName_DIsplayNull() {
                this[this.tableF2409_ListInspectedByUser.Name_DIsplayColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F2409_InspectedTypeRow : global::System.Data.DataRow {
            
            private F2409_InspectedTypeDataTable tableF2409_InspectedType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F2409_InspectedTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF2409_InspectedType = ((F2409_InspectedTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InspectionTypeID {
                get {
                    try {
                        return ((string)(this[this.tableF2409_InspectedType.InspectionTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InspectionTypeID\' in table \'F2409_InspectedType\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableF2409_InspectedType.InspectionTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InspectionType {
                get {
                    if (this.IsInspectionTypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_InspectedType.InspectionTypeColumn]));
                    }
                }
                set {
                    this[this.tableF2409_InspectedType.InspectionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectionTypeIDNull() {
                return this.IsNull(this.tableF2409_InspectedType.InspectionTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectionTypeIDNull() {
                this[this.tableF2409_InspectedType.InspectionTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectionTypeNull() {
                return this.IsNull(this.tableF2409_InspectedType.InspectionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectionTypeNull() {
                this[this.tableF2409_InspectedType.InspectionTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F2409_ListReviewStatusRow : global::System.Data.DataRow {
            
            private F2409_ListReviewStatusDataTable tableF2409_ListReviewStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F2409_ListReviewStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF2409_ListReviewStatus = ((F2409_ListReviewStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InspectedByUserID {
                get {
                    if (this.IsInspectedByUserIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.InspectedByUserIDColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.InspectedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InspectionUser {
                get {
                    if (this.IsInspectionUserNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.InspectionUserColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.InspectionUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateInspected {
                get {
                    if (this.IsDateInspectedNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.DateInspectedColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.DateInspectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InspectionTypeID {
                get {
                    if (this.IsInspectionTypeIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.InspectionTypeIDColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.InspectionTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InspectionType {
                get {
                    if (this.IsInspectionTypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.InspectionTypeColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.InspectionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewedByUserID {
                get {
                    if (this.IsReviewedByUserIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.ReviewedByUserIDColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.ReviewedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewUser {
                get {
                    if (this.IsReviewUserNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.ReviewUserColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.ReviewUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewDate {
                get {
                    if (this.IsReviewDateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.ReviewDateColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.ReviewDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewStatusID {
                get {
                    if (this.IsReviewStatusIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.ReviewStatusIDColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.ReviewStatusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnteredByUser {
                get {
                    if (this.IsEnteredByUserNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.EnteredByUserColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.EnteredByUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnteredByUserID {
                get {
                    if (this.IsEnteredByUserIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.EnteredByUserIDColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.EnteredByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnteredByDate {
                get {
                    if (this.IsEnteredByDateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF2409_ListReviewStatus.EnteredByDateColumn]));
                    }
                }
                set {
                    this[this.tableF2409_ListReviewStatus.EnteredByDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectedByUserIDNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.InspectedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectedByUserIDNull() {
                this[this.tableF2409_ListReviewStatus.InspectedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectionUserNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.InspectionUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectionUserNull() {
                this[this.tableF2409_ListReviewStatus.InspectionUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateInspectedNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.DateInspectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateInspectedNull() {
                this[this.tableF2409_ListReviewStatus.DateInspectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectionTypeIDNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.InspectionTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectionTypeIDNull() {
                this[this.tableF2409_ListReviewStatus.InspectionTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectionTypeNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.InspectionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectionTypeNull() {
                this[this.tableF2409_ListReviewStatus.InspectionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewedByUserIDNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.ReviewedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewedByUserIDNull() {
                this[this.tableF2409_ListReviewStatus.ReviewedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewUserNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.ReviewUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewUserNull() {
                this[this.tableF2409_ListReviewStatus.ReviewUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewDateNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.ReviewDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewDateNull() {
                this[this.tableF2409_ListReviewStatus.ReviewDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewStatusIDNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.ReviewStatusIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewStatusIDNull() {
                this[this.tableF2409_ListReviewStatus.ReviewStatusIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnteredByUserNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.EnteredByUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnteredByUserNull() {
                this[this.tableF2409_ListReviewStatus.EnteredByUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnteredByUserIDNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.EnteredByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnteredByUserIDNull() {
                this[this.tableF2409_ListReviewStatus.EnteredByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnteredByDateNull() {
                return this.IsNull(this.tableF2409_ListReviewStatus.EnteredByDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnteredByDateNull() {
                this[this.tableF2409_ListReviewStatus.EnteredByDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F2409_ReviewStatusRow : global::System.Data.DataRow {
            
            private F2409_ReviewStatusDataTable tableF2409_ReviewStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F2409_ReviewStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF2409_ReviewStatus = ((F2409_ReviewStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReviewStatusID {
                get {
                    try {
                        return ((int)(this[this.tableF2409_ReviewStatus.ReviewStatusIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewStatusID\' in table \'F2409_ReviewStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF2409_ReviewStatus.ReviewStatusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewStatus {
                get {
                    try {
                        return ((string)(this[this.tableF2409_ReviewStatus.ReviewStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewStatus\' in table \'F2409_ReviewStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF2409_ReviewStatus.ReviewStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewStatusIDNull() {
                return this.IsNull(this.tableF2409_ReviewStatus.ReviewStatusIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewStatusIDNull() {
                this[this.tableF2409_ReviewStatus.ReviewStatusIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewStatusNull() {
                return this.IsNull(this.tableF2409_ReviewStatus.ReviewStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewStatusNull() {
                this[this.tableF2409_ReviewStatus.ReviewStatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F2409_ListInspectedByUserRowChangeEvent : global::System.EventArgs {
            
            private F2409_ListInspectedByUserRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListInspectedByUserRowChangeEvent(F2409_ListInspectedByUserRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListInspectedByUserRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F2409_InspectedTypeRowChangeEvent : global::System.EventArgs {
            
            private F2409_InspectedTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_InspectedTypeRowChangeEvent(F2409_InspectedTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_InspectedTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F2409_ListReviewStatusRowChangeEvent : global::System.EventArgs {
            
            private F2409_ListReviewStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListReviewStatusRowChangeEvent(F2409_ListReviewStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ListReviewStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F2409_ReviewStatusRowChangeEvent : global::System.EventArgs {
            
            private F2409_ReviewStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ReviewStatusRowChangeEvent(F2409_ReviewStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F2409_ReviewStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591