//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F25008ParcelMiscellaneousData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F25008ParcelMiscellaneousData : global::System.Data.DataSet {
        
        private GetParcelMiscellaneousDataTable tableGetParcelMiscellaneous;
        
        private GetParcelMiscellaneousConfigurationDataTable tableGetParcelMiscellaneousConfiguration;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F25008ParcelMiscellaneousData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F25008ParcelMiscellaneousData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GetParcelMiscellaneous"] != null)) {
                    base.Tables.Add(new GetParcelMiscellaneousDataTable(ds.Tables["GetParcelMiscellaneous"]));
                }
                if ((ds.Tables["GetParcelMiscellaneousConfiguration"] != null)) {
                    base.Tables.Add(new GetParcelMiscellaneousConfigurationDataTable(ds.Tables["GetParcelMiscellaneousConfiguration"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetParcelMiscellaneousDataTable GetParcelMiscellaneous {
            get {
                return this.tableGetParcelMiscellaneous;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetParcelMiscellaneousConfigurationDataTable GetParcelMiscellaneousConfiguration {
            get {
                return this.tableGetParcelMiscellaneousConfiguration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F25008ParcelMiscellaneousData cln = ((F25008ParcelMiscellaneousData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GetParcelMiscellaneous"] != null)) {
                    base.Tables.Add(new GetParcelMiscellaneousDataTable(ds.Tables["GetParcelMiscellaneous"]));
                }
                if ((ds.Tables["GetParcelMiscellaneousConfiguration"] != null)) {
                    base.Tables.Add(new GetParcelMiscellaneousConfigurationDataTable(ds.Tables["GetParcelMiscellaneousConfiguration"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGetParcelMiscellaneous = ((GetParcelMiscellaneousDataTable)(base.Tables["GetParcelMiscellaneous"]));
            if ((initTable == true)) {
                if ((this.tableGetParcelMiscellaneous != null)) {
                    this.tableGetParcelMiscellaneous.InitVars();
                }
            }
            this.tableGetParcelMiscellaneousConfiguration = ((GetParcelMiscellaneousConfigurationDataTable)(base.Tables["GetParcelMiscellaneousConfiguration"]));
            if ((initTable == true)) {
                if ((this.tableGetParcelMiscellaneousConfiguration != null)) {
                    this.tableGetParcelMiscellaneousConfiguration.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F25008ParcelMiscellaneousData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F25008ParcelMiscellaneousData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGetParcelMiscellaneous = new GetParcelMiscellaneousDataTable();
            base.Tables.Add(this.tableGetParcelMiscellaneous);
            this.tableGetParcelMiscellaneousConfiguration = new GetParcelMiscellaneousConfigurationDataTable();
            base.Tables.Add(this.tableGetParcelMiscellaneousConfiguration);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetParcelMiscellaneous() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetParcelMiscellaneousConfiguration() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F25008ParcelMiscellaneousData ds = new F25008ParcelMiscellaneousData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GetParcelMiscellaneousRowChangeEventHandler(object sender, GetParcelMiscellaneousRowChangeEvent e);
        
        public delegate void GetParcelMiscellaneousConfigurationRowChangeEventHandler(object sender, GetParcelMiscellaneousConfigurationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetParcelMiscellaneousDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMID1;
            
            private global::System.Data.DataColumn columnMID2;
            
            private global::System.Data.DataColumn columnMID3;
            
            private global::System.Data.DataColumn columnMID4;
            
            private global::System.Data.DataColumn columnMID5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousDataTable() {
                this.TableName = "GetParcelMiscellaneous";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetParcelMiscellaneousDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetParcelMiscellaneousDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID1Column {
                get {
                    return this.columnMID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID2Column {
                get {
                    return this.columnMID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID3Column {
                get {
                    return this.columnMID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID4Column {
                get {
                    return this.columnMID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID5Column {
                get {
                    return this.columnMID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousRow this[int index] {
                get {
                    return ((GetParcelMiscellaneousRow)(this.Rows[index]));
                }
            }
            
            public event GetParcelMiscellaneousRowChangeEventHandler GetParcelMiscellaneousRowChanging;
            
            public event GetParcelMiscellaneousRowChangeEventHandler GetParcelMiscellaneousRowChanged;
            
            public event GetParcelMiscellaneousRowChangeEventHandler GetParcelMiscellaneousRowDeleting;
            
            public event GetParcelMiscellaneousRowChangeEventHandler GetParcelMiscellaneousRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetParcelMiscellaneousRow(GetParcelMiscellaneousRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousRow AddGetParcelMiscellaneousRow(int ParcelID, string MID1, string MID2, string MID3, string MID4, string MID5) {
                GetParcelMiscellaneousRow rowGetParcelMiscellaneousRow = ((GetParcelMiscellaneousRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MID1,
                        MID2,
                        MID3,
                        MID4,
                        MID5};
                rowGetParcelMiscellaneousRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetParcelMiscellaneousRow);
                return rowGetParcelMiscellaneousRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetParcelMiscellaneousDataTable cln = ((GetParcelMiscellaneousDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetParcelMiscellaneousDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMID1 = base.Columns["MID1"];
                this.columnMID2 = base.Columns["MID2"];
                this.columnMID3 = base.Columns["MID3"];
                this.columnMID4 = base.Columns["MID4"];
                this.columnMID5 = base.Columns["MID5"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMID1 = new global::System.Data.DataColumn("MID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID1);
                this.columnMID2 = new global::System.Data.DataColumn("MID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID2);
                this.columnMID3 = new global::System.Data.DataColumn("MID3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID3);
                this.columnMID4 = new global::System.Data.DataColumn("MID4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID4);
                this.columnMID5 = new global::System.Data.DataColumn("MID5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID5);
                this.columnParcelID.ReadOnly = true;
                this.columnMID1.MaxLength = 50;
                this.columnMID2.MaxLength = 50;
                this.columnMID3.MaxLength = 50;
                this.columnMID4.MaxLength = 50;
                this.columnMID5.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousRow NewGetParcelMiscellaneousRow() {
                return ((GetParcelMiscellaneousRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetParcelMiscellaneousRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetParcelMiscellaneousRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetParcelMiscellaneousRowChanged != null)) {
                    this.GetParcelMiscellaneousRowChanged(this, new GetParcelMiscellaneousRowChangeEvent(((GetParcelMiscellaneousRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetParcelMiscellaneousRowChanging != null)) {
                    this.GetParcelMiscellaneousRowChanging(this, new GetParcelMiscellaneousRowChangeEvent(((GetParcelMiscellaneousRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetParcelMiscellaneousRowDeleted != null)) {
                    this.GetParcelMiscellaneousRowDeleted(this, new GetParcelMiscellaneousRowChangeEvent(((GetParcelMiscellaneousRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetParcelMiscellaneousRowDeleting != null)) {
                    this.GetParcelMiscellaneousRowDeleting(this, new GetParcelMiscellaneousRowChangeEvent(((GetParcelMiscellaneousRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetParcelMiscellaneousRow(GetParcelMiscellaneousRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F25008ParcelMiscellaneousData ds = new F25008ParcelMiscellaneousData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetParcelMiscellaneousDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetParcelMiscellaneousConfigurationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAA_ID1Label;
            
            private global::System.Data.DataColumn columnAA_ID2Label;
            
            private global::System.Data.DataColumn columnAA_ID3Label;
            
            private global::System.Data.DataColumn columnAA_ID4Label;
            
            private global::System.Data.DataColumn columnAA_ID5Label;
            
            private global::System.Data.DataColumn columnAA_ID1Mask;
            
            private global::System.Data.DataColumn columnAA_ID2Mask;
            
            private global::System.Data.DataColumn columnAA_ID3Mask;
            
            private global::System.Data.DataColumn columnAA_ID4Mask;
            
            private global::System.Data.DataColumn columnAA_ID5Mask;
            
            private global::System.Data.DataColumn columnAA_ID1Description;
            
            private global::System.Data.DataColumn columnAA_ID2Description;
            
            private global::System.Data.DataColumn columnAA_ID3Description;
            
            private global::System.Data.DataColumn columnAA_ID4Description;
            
            private global::System.Data.DataColumn columnAA_ID5Description;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousConfigurationDataTable() {
                this.TableName = "GetParcelMiscellaneousConfiguration";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetParcelMiscellaneousConfigurationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetParcelMiscellaneousConfigurationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID1LabelColumn {
                get {
                    return this.columnAA_ID1Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID2LabelColumn {
                get {
                    return this.columnAA_ID2Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID3LabelColumn {
                get {
                    return this.columnAA_ID3Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID4LabelColumn {
                get {
                    return this.columnAA_ID4Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID5LabelColumn {
                get {
                    return this.columnAA_ID5Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID1MaskColumn {
                get {
                    return this.columnAA_ID1Mask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID2MaskColumn {
                get {
                    return this.columnAA_ID2Mask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID3MaskColumn {
                get {
                    return this.columnAA_ID3Mask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID4MaskColumn {
                get {
                    return this.columnAA_ID4Mask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID5MaskColumn {
                get {
                    return this.columnAA_ID5Mask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID1DescriptionColumn {
                get {
                    return this.columnAA_ID1Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID2DescriptionColumn {
                get {
                    return this.columnAA_ID2Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID3DescriptionColumn {
                get {
                    return this.columnAA_ID3Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID4DescriptionColumn {
                get {
                    return this.columnAA_ID4Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AA_ID5DescriptionColumn {
                get {
                    return this.columnAA_ID5Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousConfigurationRow this[int index] {
                get {
                    return ((GetParcelMiscellaneousConfigurationRow)(this.Rows[index]));
                }
            }
            
            public event GetParcelMiscellaneousConfigurationRowChangeEventHandler GetParcelMiscellaneousConfigurationRowChanging;
            
            public event GetParcelMiscellaneousConfigurationRowChangeEventHandler GetParcelMiscellaneousConfigurationRowChanged;
            
            public event GetParcelMiscellaneousConfigurationRowChangeEventHandler GetParcelMiscellaneousConfigurationRowDeleting;
            
            public event GetParcelMiscellaneousConfigurationRowChangeEventHandler GetParcelMiscellaneousConfigurationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetParcelMiscellaneousConfigurationRow(GetParcelMiscellaneousConfigurationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousConfigurationRow AddGetParcelMiscellaneousConfigurationRow(string AA_ID1Label, string AA_ID2Label, string AA_ID3Label, string AA_ID4Label, string AA_ID5Label, string AA_ID1Mask, string AA_ID2Mask, string AA_ID3Mask, string AA_ID4Mask, string AA_ID5Mask, string AA_ID1Description, string AA_ID2Description, string AA_ID3Description, string AA_ID4Description, string AA_ID5Description) {
                GetParcelMiscellaneousConfigurationRow rowGetParcelMiscellaneousConfigurationRow = ((GetParcelMiscellaneousConfigurationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AA_ID1Label,
                        AA_ID2Label,
                        AA_ID3Label,
                        AA_ID4Label,
                        AA_ID5Label,
                        AA_ID1Mask,
                        AA_ID2Mask,
                        AA_ID3Mask,
                        AA_ID4Mask,
                        AA_ID5Mask,
                        AA_ID1Description,
                        AA_ID2Description,
                        AA_ID3Description,
                        AA_ID4Description,
                        AA_ID5Description};
                rowGetParcelMiscellaneousConfigurationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetParcelMiscellaneousConfigurationRow);
                return rowGetParcelMiscellaneousConfigurationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetParcelMiscellaneousConfigurationDataTable cln = ((GetParcelMiscellaneousConfigurationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetParcelMiscellaneousConfigurationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAA_ID1Label = base.Columns["AA_ID1Label"];
                this.columnAA_ID2Label = base.Columns["AA_ID2Label"];
                this.columnAA_ID3Label = base.Columns["AA_ID3Label"];
                this.columnAA_ID4Label = base.Columns["AA_ID4Label"];
                this.columnAA_ID5Label = base.Columns["AA_ID5Label"];
                this.columnAA_ID1Mask = base.Columns["AA_ID1Mask"];
                this.columnAA_ID2Mask = base.Columns["AA_ID2Mask"];
                this.columnAA_ID3Mask = base.Columns["AA_ID3Mask"];
                this.columnAA_ID4Mask = base.Columns["AA_ID4Mask"];
                this.columnAA_ID5Mask = base.Columns["AA_ID5Mask"];
                this.columnAA_ID1Description = base.Columns["AA_ID1Description"];
                this.columnAA_ID2Description = base.Columns["AA_ID2Description"];
                this.columnAA_ID3Description = base.Columns["AA_ID3Description"];
                this.columnAA_ID4Description = base.Columns["AA_ID4Description"];
                this.columnAA_ID5Description = base.Columns["AA_ID5Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAA_ID1Label = new global::System.Data.DataColumn("AA_ID1Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID1Label);
                this.columnAA_ID2Label = new global::System.Data.DataColumn("AA_ID2Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID2Label);
                this.columnAA_ID3Label = new global::System.Data.DataColumn("AA_ID3Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID3Label);
                this.columnAA_ID4Label = new global::System.Data.DataColumn("AA_ID4Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID4Label);
                this.columnAA_ID5Label = new global::System.Data.DataColumn("AA_ID5Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID5Label);
                this.columnAA_ID1Mask = new global::System.Data.DataColumn("AA_ID1Mask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID1Mask);
                this.columnAA_ID2Mask = new global::System.Data.DataColumn("AA_ID2Mask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID2Mask);
                this.columnAA_ID3Mask = new global::System.Data.DataColumn("AA_ID3Mask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID3Mask);
                this.columnAA_ID4Mask = new global::System.Data.DataColumn("AA_ID4Mask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID4Mask);
                this.columnAA_ID5Mask = new global::System.Data.DataColumn("AA_ID5Mask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID5Mask);
                this.columnAA_ID1Description = new global::System.Data.DataColumn("AA_ID1Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID1Description);
                this.columnAA_ID2Description = new global::System.Data.DataColumn("AA_ID2Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID2Description);
                this.columnAA_ID3Description = new global::System.Data.DataColumn("AA_ID3Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID3Description);
                this.columnAA_ID4Description = new global::System.Data.DataColumn("AA_ID4Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID4Description);
                this.columnAA_ID5Description = new global::System.Data.DataColumn("AA_ID5Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA_ID5Description);
                this.columnAA_ID1Label.ReadOnly = true;
                this.columnAA_ID1Label.MaxLength = 1000;
                this.columnAA_ID2Label.ReadOnly = true;
                this.columnAA_ID2Label.MaxLength = 1000;
                this.columnAA_ID3Label.ReadOnly = true;
                this.columnAA_ID3Label.MaxLength = 1000;
                this.columnAA_ID4Label.ReadOnly = true;
                this.columnAA_ID4Label.MaxLength = 1000;
                this.columnAA_ID5Label.ReadOnly = true;
                this.columnAA_ID5Label.MaxLength = 1000;
                this.columnAA_ID1Mask.ReadOnly = true;
                this.columnAA_ID1Mask.MaxLength = 1000;
                this.columnAA_ID2Mask.ReadOnly = true;
                this.columnAA_ID2Mask.MaxLength = 1000;
                this.columnAA_ID3Mask.ReadOnly = true;
                this.columnAA_ID3Mask.MaxLength = 1000;
                this.columnAA_ID4Mask.ReadOnly = true;
                this.columnAA_ID4Mask.MaxLength = 1000;
                this.columnAA_ID5Mask.ReadOnly = true;
                this.columnAA_ID5Mask.MaxLength = 1000;
                this.columnAA_ID1Description.ReadOnly = true;
                this.columnAA_ID1Description.MaxLength = 1000;
                this.columnAA_ID2Description.ReadOnly = true;
                this.columnAA_ID2Description.MaxLength = 1000;
                this.columnAA_ID3Description.ReadOnly = true;
                this.columnAA_ID3Description.MaxLength = 1000;
                this.columnAA_ID4Description.ReadOnly = true;
                this.columnAA_ID4Description.MaxLength = 1000;
                this.columnAA_ID5Description.ReadOnly = true;
                this.columnAA_ID5Description.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousConfigurationRow NewGetParcelMiscellaneousConfigurationRow() {
                return ((GetParcelMiscellaneousConfigurationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetParcelMiscellaneousConfigurationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetParcelMiscellaneousConfigurationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetParcelMiscellaneousConfigurationRowChanged != null)) {
                    this.GetParcelMiscellaneousConfigurationRowChanged(this, new GetParcelMiscellaneousConfigurationRowChangeEvent(((GetParcelMiscellaneousConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetParcelMiscellaneousConfigurationRowChanging != null)) {
                    this.GetParcelMiscellaneousConfigurationRowChanging(this, new GetParcelMiscellaneousConfigurationRowChangeEvent(((GetParcelMiscellaneousConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetParcelMiscellaneousConfigurationRowDeleted != null)) {
                    this.GetParcelMiscellaneousConfigurationRowDeleted(this, new GetParcelMiscellaneousConfigurationRowChangeEvent(((GetParcelMiscellaneousConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetParcelMiscellaneousConfigurationRowDeleting != null)) {
                    this.GetParcelMiscellaneousConfigurationRowDeleting(this, new GetParcelMiscellaneousConfigurationRowChangeEvent(((GetParcelMiscellaneousConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetParcelMiscellaneousConfigurationRow(GetParcelMiscellaneousConfigurationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F25008ParcelMiscellaneousData ds = new F25008ParcelMiscellaneousData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetParcelMiscellaneousConfigurationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetParcelMiscellaneousRow : global::System.Data.DataRow {
            
            private GetParcelMiscellaneousDataTable tableGetParcelMiscellaneous;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetParcelMiscellaneousRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetParcelMiscellaneous = ((GetParcelMiscellaneousDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tableGetParcelMiscellaneous.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'GetParcelMiscellaneous\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneous.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID1 {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneous.MID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID1\' in table \'GetParcelMiscellaneous\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneous.MID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID2 {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneous.MID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID2\' in table \'GetParcelMiscellaneous\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneous.MID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID3 {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneous.MID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID3\' in table \'GetParcelMiscellaneous\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneous.MID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID4 {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneous.MID4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID4\' in table \'GetParcelMiscellaneous\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneous.MID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID5 {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneous.MID5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID5\' in table \'GetParcelMiscellaneous\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneous.MID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tableGetParcelMiscellaneous.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tableGetParcelMiscellaneous.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID1Null() {
                return this.IsNull(this.tableGetParcelMiscellaneous.MID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID1Null() {
                this[this.tableGetParcelMiscellaneous.MID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID2Null() {
                return this.IsNull(this.tableGetParcelMiscellaneous.MID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID2Null() {
                this[this.tableGetParcelMiscellaneous.MID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID3Null() {
                return this.IsNull(this.tableGetParcelMiscellaneous.MID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID3Null() {
                this[this.tableGetParcelMiscellaneous.MID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID4Null() {
                return this.IsNull(this.tableGetParcelMiscellaneous.MID4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID4Null() {
                this[this.tableGetParcelMiscellaneous.MID4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID5Null() {
                return this.IsNull(this.tableGetParcelMiscellaneous.MID5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID5Null() {
                this[this.tableGetParcelMiscellaneous.MID5Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetParcelMiscellaneousConfigurationRow : global::System.Data.DataRow {
            
            private GetParcelMiscellaneousConfigurationDataTable tableGetParcelMiscellaneousConfiguration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetParcelMiscellaneousConfigurationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetParcelMiscellaneousConfiguration = ((GetParcelMiscellaneousConfigurationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID1Label {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID1LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID1Label\' in table \'GetParcelMiscellaneousConfiguration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID1LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID2Label {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID2LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID2Label\' in table \'GetParcelMiscellaneousConfiguration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID2LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID3Label {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID3LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID3Label\' in table \'GetParcelMiscellaneousConfiguration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID3LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID4Label {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID4LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID4Label\' in table \'GetParcelMiscellaneousConfiguration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID4LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID5Label {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID5LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID5Label\' in table \'GetParcelMiscellaneousConfiguration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID5LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID1Mask {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID1MaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID1Mask\' in table \'GetParcelMiscellaneousConfiguration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID1MaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID2Mask {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID2MaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID2Mask\' in table \'GetParcelMiscellaneousConfiguration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID2MaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID3Mask {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID3MaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID3Mask\' in table \'GetParcelMiscellaneousConfiguration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID3MaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID4Mask {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID4MaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID4Mask\' in table \'GetParcelMiscellaneousConfiguration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID4MaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID5Mask {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID5MaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID5Mask\' in table \'GetParcelMiscellaneousConfiguration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID5MaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID1Description {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID1DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID1Description\' in table \'GetParcelMiscellaneousConfigur" +
                                "ation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID1DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID2Description {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID2DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID2Description\' in table \'GetParcelMiscellaneousConfigur" +
                                "ation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID2DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID3Description {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID3DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID3Description\' in table \'GetParcelMiscellaneousConfigur" +
                                "ation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID3DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID4Description {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID4DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID4Description\' in table \'GetParcelMiscellaneousConfigur" +
                                "ation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID4DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AA_ID5Description {
                get {
                    try {
                        return ((string)(this[this.tableGetParcelMiscellaneousConfiguration.AA_ID5DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AA_ID5Description\' in table \'GetParcelMiscellaneousConfigur" +
                                "ation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetParcelMiscellaneousConfiguration.AA_ID5DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID1LabelNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID1LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID1LabelNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID1LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID2LabelNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID2LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID2LabelNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID2LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID3LabelNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID3LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID3LabelNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID3LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID4LabelNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID4LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID4LabelNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID4LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID5LabelNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID5LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID5LabelNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID5LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID1MaskNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID1MaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID1MaskNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID1MaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID2MaskNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID2MaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID2MaskNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID2MaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID3MaskNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID3MaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID3MaskNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID3MaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID4MaskNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID4MaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID4MaskNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID4MaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID5MaskNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID5MaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID5MaskNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID5MaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID1DescriptionNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID1DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID1DescriptionNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID1DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID2DescriptionNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID2DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID2DescriptionNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID2DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID3DescriptionNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID3DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID3DescriptionNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID3DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID4DescriptionNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID4DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID4DescriptionNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID4DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAA_ID5DescriptionNull() {
                return this.IsNull(this.tableGetParcelMiscellaneousConfiguration.AA_ID5DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAA_ID5DescriptionNull() {
                this[this.tableGetParcelMiscellaneousConfiguration.AA_ID5DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetParcelMiscellaneousRowChangeEvent : global::System.EventArgs {
            
            private GetParcelMiscellaneousRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousRowChangeEvent(GetParcelMiscellaneousRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetParcelMiscellaneousConfigurationRowChangeEvent : global::System.EventArgs {
            
            private GetParcelMiscellaneousConfigurationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousConfigurationRowChangeEvent(GetParcelMiscellaneousConfigurationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetParcelMiscellaneousConfigurationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591