//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8689
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F36091IncomeApproachData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F36091IncomeApproachData : global::System.Data.DataSet {
        
        private IncomeSourcesDataTable tableIncomeSources;
        
        private IncomeApproachDataTable tableIncomeApproach;
        
        private IncomeApproachDetailsDataTable tableIncomeApproachDetails;
        
        private IncomeSourceTypesDataTable tableIncomeSourceTypes;
        
        private IncomeApproachItemValuesDataTable tableIncomeApproachItemValues;
        
        private GetIncomeApproachValuesDataTable tableGetIncomeApproachValues;
        
        private CalculatedIncomeApproachValuesDataTable tableCalculatedIncomeApproachValues;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F36091IncomeApproachData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F36091IncomeApproachData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["IncomeSources"] != null)) {
                    base.Tables.Add(new IncomeSourcesDataTable(ds.Tables["IncomeSources"]));
                }
                if ((ds.Tables["IncomeApproach"] != null)) {
                    base.Tables.Add(new IncomeApproachDataTable(ds.Tables["IncomeApproach"]));
                }
                if ((ds.Tables["IncomeApproachDetails"] != null)) {
                    base.Tables.Add(new IncomeApproachDetailsDataTable(ds.Tables["IncomeApproachDetails"]));
                }
                if ((ds.Tables["IncomeSourceTypes"] != null)) {
                    base.Tables.Add(new IncomeSourceTypesDataTable(ds.Tables["IncomeSourceTypes"]));
                }
                if ((ds.Tables["IncomeApproachItemValues"] != null)) {
                    base.Tables.Add(new IncomeApproachItemValuesDataTable(ds.Tables["IncomeApproachItemValues"]));
                }
                if ((ds.Tables["GetIncomeApproachValues"] != null)) {
                    base.Tables.Add(new GetIncomeApproachValuesDataTable(ds.Tables["GetIncomeApproachValues"]));
                }
                if ((ds.Tables["CalculatedIncomeApproachValues"] != null)) {
                    base.Tables.Add(new CalculatedIncomeApproachValuesDataTable(ds.Tables["CalculatedIncomeApproachValues"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IncomeSourcesDataTable IncomeSources {
            get {
                return this.tableIncomeSources;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IncomeApproachDataTable IncomeApproach {
            get {
                return this.tableIncomeApproach;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IncomeApproachDetailsDataTable IncomeApproachDetails {
            get {
                return this.tableIncomeApproachDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IncomeSourceTypesDataTable IncomeSourceTypes {
            get {
                return this.tableIncomeSourceTypes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IncomeApproachItemValuesDataTable IncomeApproachItemValues {
            get {
                return this.tableIncomeApproachItemValues;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetIncomeApproachValuesDataTable GetIncomeApproachValues {
            get {
                return this.tableGetIncomeApproachValues;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CalculatedIncomeApproachValuesDataTable CalculatedIncomeApproachValues {
            get {
                return this.tableCalculatedIncomeApproachValues;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F36091IncomeApproachData cln = ((F36091IncomeApproachData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["IncomeSources"] != null)) {
                    base.Tables.Add(new IncomeSourcesDataTable(ds.Tables["IncomeSources"]));
                }
                if ((ds.Tables["IncomeApproach"] != null)) {
                    base.Tables.Add(new IncomeApproachDataTable(ds.Tables["IncomeApproach"]));
                }
                if ((ds.Tables["IncomeApproachDetails"] != null)) {
                    base.Tables.Add(new IncomeApproachDetailsDataTable(ds.Tables["IncomeApproachDetails"]));
                }
                if ((ds.Tables["IncomeSourceTypes"] != null)) {
                    base.Tables.Add(new IncomeSourceTypesDataTable(ds.Tables["IncomeSourceTypes"]));
                }
                if ((ds.Tables["IncomeApproachItemValues"] != null)) {
                    base.Tables.Add(new IncomeApproachItemValuesDataTable(ds.Tables["IncomeApproachItemValues"]));
                }
                if ((ds.Tables["GetIncomeApproachValues"] != null)) {
                    base.Tables.Add(new GetIncomeApproachValuesDataTable(ds.Tables["GetIncomeApproachValues"]));
                }
                if ((ds.Tables["CalculatedIncomeApproachValues"] != null)) {
                    base.Tables.Add(new CalculatedIncomeApproachValuesDataTable(ds.Tables["CalculatedIncomeApproachValues"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableIncomeSources = ((IncomeSourcesDataTable)(base.Tables["IncomeSources"]));
            if ((initTable == true)) {
                if ((this.tableIncomeSources != null)) {
                    this.tableIncomeSources.InitVars();
                }
            }
            this.tableIncomeApproach = ((IncomeApproachDataTable)(base.Tables["IncomeApproach"]));
            if ((initTable == true)) {
                if ((this.tableIncomeApproach != null)) {
                    this.tableIncomeApproach.InitVars();
                }
            }
            this.tableIncomeApproachDetails = ((IncomeApproachDetailsDataTable)(base.Tables["IncomeApproachDetails"]));
            if ((initTable == true)) {
                if ((this.tableIncomeApproachDetails != null)) {
                    this.tableIncomeApproachDetails.InitVars();
                }
            }
            this.tableIncomeSourceTypes = ((IncomeSourceTypesDataTable)(base.Tables["IncomeSourceTypes"]));
            if ((initTable == true)) {
                if ((this.tableIncomeSourceTypes != null)) {
                    this.tableIncomeSourceTypes.InitVars();
                }
            }
            this.tableIncomeApproachItemValues = ((IncomeApproachItemValuesDataTable)(base.Tables["IncomeApproachItemValues"]));
            if ((initTable == true)) {
                if ((this.tableIncomeApproachItemValues != null)) {
                    this.tableIncomeApproachItemValues.InitVars();
                }
            }
            this.tableGetIncomeApproachValues = ((GetIncomeApproachValuesDataTable)(base.Tables["GetIncomeApproachValues"]));
            if ((initTable == true)) {
                if ((this.tableGetIncomeApproachValues != null)) {
                    this.tableGetIncomeApproachValues.InitVars();
                }
            }
            this.tableCalculatedIncomeApproachValues = ((CalculatedIncomeApproachValuesDataTable)(base.Tables["CalculatedIncomeApproachValues"]));
            if ((initTable == true)) {
                if ((this.tableCalculatedIncomeApproachValues != null)) {
                    this.tableCalculatedIncomeApproachValues.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F36091IncomeApproachData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F36091IncomeApproachData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableIncomeSources = new IncomeSourcesDataTable();
            base.Tables.Add(this.tableIncomeSources);
            this.tableIncomeApproach = new IncomeApproachDataTable();
            base.Tables.Add(this.tableIncomeApproach);
            this.tableIncomeApproachDetails = new IncomeApproachDetailsDataTable();
            base.Tables.Add(this.tableIncomeApproachDetails);
            this.tableIncomeSourceTypes = new IncomeSourceTypesDataTable();
            base.Tables.Add(this.tableIncomeSourceTypes);
            this.tableIncomeApproachItemValues = new IncomeApproachItemValuesDataTable();
            base.Tables.Add(this.tableIncomeApproachItemValues);
            this.tableGetIncomeApproachValues = new GetIncomeApproachValuesDataTable();
            base.Tables.Add(this.tableGetIncomeApproachValues);
            this.tableCalculatedIncomeApproachValues = new CalculatedIncomeApproachValuesDataTable();
            base.Tables.Add(this.tableCalculatedIncomeApproachValues);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIncomeSources() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIncomeApproach() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIncomeApproachDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIncomeSourceTypes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIncomeApproachItemValues() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetIncomeApproachValues() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCalculatedIncomeApproachValues() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F36091IncomeApproachData ds = new F36091IncomeApproachData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void IncomeSourcesRowChangeEventHandler(object sender, IncomeSourcesRowChangeEvent e);
        
        public delegate void IncomeApproachRowChangeEventHandler(object sender, IncomeApproachRowChangeEvent e);
        
        public delegate void IncomeApproachDetailsRowChangeEventHandler(object sender, IncomeApproachDetailsRowChangeEvent e);
        
        public delegate void IncomeSourceTypesRowChangeEventHandler(object sender, IncomeSourceTypesRowChangeEvent e);
        
        public delegate void IncomeApproachItemValuesRowChangeEventHandler(object sender, IncomeApproachItemValuesRowChangeEvent e);
        
        public delegate void GetIncomeApproachValuesRowChangeEventHandler(object sender, GetIncomeApproachValuesRowChangeEvent e);
        
        public delegate void CalculatedIncomeApproachValuesRowChangeEventHandler(object sender, CalculatedIncomeApproachValuesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IncomeSourcesDataTable : global::System.Data.TypedTableBase<IncomeSourcesRow> {
            
            private global::System.Data.DataColumn columnIncomeApproachItemID;
            
            private global::System.Data.DataColumn columnIncomeSourceID;
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUnits;
            
            private global::System.Data.DataColumn columnContractPerUnit;
            
            private global::System.Data.DataColumn columnMarketPerUnit;
            
            private global::System.Data.DataColumn columnMarket;
            
            private global::System.Data.DataColumn columnContract;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourcesDataTable() {
                this.TableName = "IncomeSources";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncomeSourcesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IncomeSourcesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeApproachItemIDColumn {
                get {
                    return this.columnIncomeApproachItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeSourceIDColumn {
                get {
                    return this.columnIncomeSourceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitsColumn {
                get {
                    return this.columnUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractPerUnitColumn {
                get {
                    return this.columnContractPerUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketPerUnitColumn {
                get {
                    return this.columnMarketPerUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketColumn {
                get {
                    return this.columnMarket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractColumn {
                get {
                    return this.columnContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourcesRow this[int index] {
                get {
                    return ((IncomeSourcesRow)(this.Rows[index]));
                }
            }
            
            public event IncomeSourcesRowChangeEventHandler IncomeSourcesRowChanging;
            
            public event IncomeSourcesRowChangeEventHandler IncomeSourcesRowChanged;
            
            public event IncomeSourcesRowChangeEventHandler IncomeSourcesRowDeleting;
            
            public event IncomeSourcesRowChangeEventHandler IncomeSourcesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIncomeSourcesRow(IncomeSourcesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourcesRow AddIncomeSourcesRow(int IncomeApproachItemID, int IncomeSourceID, string Source, string Description, decimal Units, decimal ContractPerUnit, decimal MarketPerUnit, double Market, double Contract) {
                IncomeSourcesRow rowIncomeSourcesRow = ((IncomeSourcesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IncomeApproachItemID,
                        IncomeSourceID,
                        Source,
                        Description,
                        Units,
                        ContractPerUnit,
                        MarketPerUnit,
                        Market,
                        Contract};
                rowIncomeSourcesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIncomeSourcesRow);
                return rowIncomeSourcesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IncomeSourcesDataTable cln = ((IncomeSourcesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IncomeSourcesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIncomeApproachItemID = base.Columns["IncomeApproachItemID"];
                this.columnIncomeSourceID = base.Columns["IncomeSourceID"];
                this.columnSource = base.Columns["Source"];
                this.columnDescription = base.Columns["Description"];
                this.columnUnits = base.Columns["Units"];
                this.columnContractPerUnit = base.Columns["ContractPerUnit"];
                this.columnMarketPerUnit = base.Columns["MarketPerUnit"];
                this.columnMarket = base.Columns["Market"];
                this.columnContract = base.Columns["Contract"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIncomeApproachItemID = new global::System.Data.DataColumn("IncomeApproachItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeApproachItemID);
                this.columnIncomeSourceID = new global::System.Data.DataColumn("IncomeSourceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeSourceID);
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUnits = new global::System.Data.DataColumn("Units", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnits);
                this.columnContractPerUnit = new global::System.Data.DataColumn("ContractPerUnit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractPerUnit);
                this.columnMarketPerUnit = new global::System.Data.DataColumn("MarketPerUnit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketPerUnit);
                this.columnMarket = new global::System.Data.DataColumn("Market", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarket);
                this.columnContract = new global::System.Data.DataColumn("Contract", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourcesRow NewIncomeSourcesRow() {
                return ((IncomeSourcesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IncomeSourcesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IncomeSourcesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IncomeSourcesRowChanged != null)) {
                    this.IncomeSourcesRowChanged(this, new IncomeSourcesRowChangeEvent(((IncomeSourcesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IncomeSourcesRowChanging != null)) {
                    this.IncomeSourcesRowChanging(this, new IncomeSourcesRowChangeEvent(((IncomeSourcesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IncomeSourcesRowDeleted != null)) {
                    this.IncomeSourcesRowDeleted(this, new IncomeSourcesRowChangeEvent(((IncomeSourcesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IncomeSourcesRowDeleting != null)) {
                    this.IncomeSourcesRowDeleting(this, new IncomeSourcesRowChangeEvent(((IncomeSourcesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIncomeSourcesRow(IncomeSourcesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36091IncomeApproachData ds = new F36091IncomeApproachData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IncomeSourcesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IncomeApproachDataTable : global::System.Data.TypedTableBase<IncomeApproachRow> {
            
            private global::System.Data.DataColumn columnVacAndCollContractValue;
            
            private global::System.Data.DataColumn columnVacAndCollMarketPercent;
            
            private global::System.Data.DataColumn columnInsuranceContractValue;
            
            private global::System.Data.DataColumn columnInsuranceMarketPercent;
            
            private global::System.Data.DataColumn columnManAndPayContractValue;
            
            private global::System.Data.DataColumn columnManAndPayMarketPercent;
            
            private global::System.Data.DataColumn columnUtilitiesContractValue;
            
            private global::System.Data.DataColumn columnUtilitiesMarketPercent;
            
            private global::System.Data.DataColumn columnMaintAndRepContractValue;
            
            private global::System.Data.DataColumn columnMaintAndRepMarketPercent;
            
            private global::System.Data.DataColumn columnResReplaceContractValue;
            
            private global::System.Data.DataColumn columnResReplaceMarketPercent;
            
            private global::System.Data.DataColumn columnCapitalizationRate;
            
            private global::System.Data.DataColumn columnIsUseContract;
            
            private global::System.Data.DataColumn columnIncomeApproach;
            
            private global::System.Data.DataColumn columnSuppliesContractValue;
            
            private global::System.Data.DataColumn columnSuppliesMarketPercent;
            
            private global::System.Data.DataColumn columnOtherExpensesContractValue;
            
            private global::System.Data.DataColumn columnOtherExpensesMarketPercent;
            
            private global::System.Data.DataColumn columnMiscIncomeContractValue;
            
            private global::System.Data.DataColumn columnMiscIncomeMarketPercent;
            
            private global::System.Data.DataColumn columnPersonalProperty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachDataTable() {
                this.TableName = "IncomeApproach";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncomeApproachDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IncomeApproachDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollContractValueColumn {
                get {
                    return this.columnVacAndCollContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollMarketPercentColumn {
                get {
                    return this.columnVacAndCollMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceContractValueColumn {
                get {
                    return this.columnInsuranceContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceMarketPercentColumn {
                get {
                    return this.columnInsuranceMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayContractValueColumn {
                get {
                    return this.columnManAndPayContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayMarketPercentColumn {
                get {
                    return this.columnManAndPayMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesContractValueColumn {
                get {
                    return this.columnUtilitiesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesMarketPercentColumn {
                get {
                    return this.columnUtilitiesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepContractValueColumn {
                get {
                    return this.columnMaintAndRepContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepMarketPercentColumn {
                get {
                    return this.columnMaintAndRepMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceContractValueColumn {
                get {
                    return this.columnResReplaceContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceMarketPercentColumn {
                get {
                    return this.columnResReplaceMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CapitalizationRateColumn {
                get {
                    return this.columnCapitalizationRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsUseContractColumn {
                get {
                    return this.columnIsUseContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeApproachColumn {
                get {
                    return this.columnIncomeApproach;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesContractValueColumn {
                get {
                    return this.columnSuppliesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesMarketPercentColumn {
                get {
                    return this.columnSuppliesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesContractValueColumn {
                get {
                    return this.columnOtherExpensesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesMarketPercentColumn {
                get {
                    return this.columnOtherExpensesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeContractValueColumn {
                get {
                    return this.columnMiscIncomeContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeMarketPercentColumn {
                get {
                    return this.columnMiscIncomeMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalPropertyColumn {
                get {
                    return this.columnPersonalProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachRow this[int index] {
                get {
                    return ((IncomeApproachRow)(this.Rows[index]));
                }
            }
            
            public event IncomeApproachRowChangeEventHandler IncomeApproachRowChanging;
            
            public event IncomeApproachRowChangeEventHandler IncomeApproachRowChanged;
            
            public event IncomeApproachRowChangeEventHandler IncomeApproachRowDeleting;
            
            public event IncomeApproachRowChangeEventHandler IncomeApproachRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIncomeApproachRow(IncomeApproachRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachRow AddIncomeApproachRow(
                        decimal VacAndCollContractValue, 
                        decimal VacAndCollMarketPercent, 
                        decimal InsuranceContractValue, 
                        decimal InsuranceMarketPercent, 
                        decimal ManAndPayContractValue, 
                        decimal ManAndPayMarketPercent, 
                        decimal UtilitiesContractValue, 
                        decimal UtilitiesMarketPercent, 
                        decimal MaintAndRepContractValue, 
                        decimal MaintAndRepMarketPercent, 
                        decimal ResReplaceContractValue, 
                        decimal ResReplaceMarketPercent, 
                        decimal CapitalizationRate, 
                        bool IsUseContract, 
                        decimal IncomeApproach, 
                        decimal SuppliesContractValue, 
                        decimal SuppliesMarketPercent, 
                        decimal OtherExpensesContractValue, 
                        decimal OtherExpensesMarketPercent, 
                        decimal MiscIncomeContractValue, 
                        decimal MiscIncomeMarketPercent, 
                        decimal PersonalProperty) {
                IncomeApproachRow rowIncomeApproachRow = ((IncomeApproachRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VacAndCollContractValue,
                        VacAndCollMarketPercent,
                        InsuranceContractValue,
                        InsuranceMarketPercent,
                        ManAndPayContractValue,
                        ManAndPayMarketPercent,
                        UtilitiesContractValue,
                        UtilitiesMarketPercent,
                        MaintAndRepContractValue,
                        MaintAndRepMarketPercent,
                        ResReplaceContractValue,
                        ResReplaceMarketPercent,
                        CapitalizationRate,
                        IsUseContract,
                        IncomeApproach,
                        SuppliesContractValue,
                        SuppliesMarketPercent,
                        OtherExpensesContractValue,
                        OtherExpensesMarketPercent,
                        MiscIncomeContractValue,
                        MiscIncomeMarketPercent,
                        PersonalProperty};
                rowIncomeApproachRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIncomeApproachRow);
                return rowIncomeApproachRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IncomeApproachDataTable cln = ((IncomeApproachDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IncomeApproachDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVacAndCollContractValue = base.Columns["VacAndCollContractValue"];
                this.columnVacAndCollMarketPercent = base.Columns["VacAndCollMarketPercent"];
                this.columnInsuranceContractValue = base.Columns["InsuranceContractValue"];
                this.columnInsuranceMarketPercent = base.Columns["InsuranceMarketPercent"];
                this.columnManAndPayContractValue = base.Columns["ManAndPayContractValue"];
                this.columnManAndPayMarketPercent = base.Columns["ManAndPayMarketPercent"];
                this.columnUtilitiesContractValue = base.Columns["UtilitiesContractValue"];
                this.columnUtilitiesMarketPercent = base.Columns["UtilitiesMarketPercent"];
                this.columnMaintAndRepContractValue = base.Columns["MaintAndRepContractValue"];
                this.columnMaintAndRepMarketPercent = base.Columns["MaintAndRepMarketPercent"];
                this.columnResReplaceContractValue = base.Columns["ResReplaceContractValue"];
                this.columnResReplaceMarketPercent = base.Columns["ResReplaceMarketPercent"];
                this.columnCapitalizationRate = base.Columns["CapitalizationRate"];
                this.columnIsUseContract = base.Columns["IsUseContract"];
                this.columnIncomeApproach = base.Columns["IncomeApproach"];
                this.columnSuppliesContractValue = base.Columns["SuppliesContractValue"];
                this.columnSuppliesMarketPercent = base.Columns["SuppliesMarketPercent"];
                this.columnOtherExpensesContractValue = base.Columns["OtherExpensesContractValue"];
                this.columnOtherExpensesMarketPercent = base.Columns["OtherExpensesMarketPercent"];
                this.columnMiscIncomeContractValue = base.Columns["MiscIncomeContractValue"];
                this.columnMiscIncomeMarketPercent = base.Columns["MiscIncomeMarketPercent"];
                this.columnPersonalProperty = base.Columns["PersonalProperty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVacAndCollContractValue = new global::System.Data.DataColumn("VacAndCollContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollContractValue);
                this.columnVacAndCollMarketPercent = new global::System.Data.DataColumn("VacAndCollMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollMarketPercent);
                this.columnInsuranceContractValue = new global::System.Data.DataColumn("InsuranceContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceContractValue);
                this.columnInsuranceMarketPercent = new global::System.Data.DataColumn("InsuranceMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceMarketPercent);
                this.columnManAndPayContractValue = new global::System.Data.DataColumn("ManAndPayContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayContractValue);
                this.columnManAndPayMarketPercent = new global::System.Data.DataColumn("ManAndPayMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayMarketPercent);
                this.columnUtilitiesContractValue = new global::System.Data.DataColumn("UtilitiesContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesContractValue);
                this.columnUtilitiesMarketPercent = new global::System.Data.DataColumn("UtilitiesMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesMarketPercent);
                this.columnMaintAndRepContractValue = new global::System.Data.DataColumn("MaintAndRepContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepContractValue);
                this.columnMaintAndRepMarketPercent = new global::System.Data.DataColumn("MaintAndRepMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepMarketPercent);
                this.columnResReplaceContractValue = new global::System.Data.DataColumn("ResReplaceContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceContractValue);
                this.columnResReplaceMarketPercent = new global::System.Data.DataColumn("ResReplaceMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceMarketPercent);
                this.columnCapitalizationRate = new global::System.Data.DataColumn("CapitalizationRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapitalizationRate);
                this.columnIsUseContract = new global::System.Data.DataColumn("IsUseContract", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUseContract);
                this.columnIncomeApproach = new global::System.Data.DataColumn("IncomeApproach", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeApproach);
                this.columnSuppliesContractValue = new global::System.Data.DataColumn("SuppliesContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesContractValue);
                this.columnSuppliesMarketPercent = new global::System.Data.DataColumn("SuppliesMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesMarketPercent);
                this.columnOtherExpensesContractValue = new global::System.Data.DataColumn("OtherExpensesContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesContractValue);
                this.columnOtherExpensesMarketPercent = new global::System.Data.DataColumn("OtherExpensesMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesMarketPercent);
                this.columnMiscIncomeContractValue = new global::System.Data.DataColumn("MiscIncomeContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeContractValue);
                this.columnMiscIncomeMarketPercent = new global::System.Data.DataColumn("MiscIncomeMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeMarketPercent);
                this.columnPersonalProperty = new global::System.Data.DataColumn("PersonalProperty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalProperty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachRow NewIncomeApproachRow() {
                return ((IncomeApproachRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IncomeApproachRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IncomeApproachRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IncomeApproachRowChanged != null)) {
                    this.IncomeApproachRowChanged(this, new IncomeApproachRowChangeEvent(((IncomeApproachRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IncomeApproachRowChanging != null)) {
                    this.IncomeApproachRowChanging(this, new IncomeApproachRowChangeEvent(((IncomeApproachRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IncomeApproachRowDeleted != null)) {
                    this.IncomeApproachRowDeleted(this, new IncomeApproachRowChangeEvent(((IncomeApproachRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IncomeApproachRowDeleting != null)) {
                    this.IncomeApproachRowDeleting(this, new IncomeApproachRowChangeEvent(((IncomeApproachRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIncomeApproachRow(IncomeApproachRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36091IncomeApproachData ds = new F36091IncomeApproachData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IncomeApproachDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IncomeApproachDetailsDataTable : global::System.Data.TypedTableBase<IncomeApproachDetailsRow> {
            
            private global::System.Data.DataColumn columnValueSliceID;
            
            private global::System.Data.DataColumn columnIncomeApproachID;
            
            private global::System.Data.DataColumn columnPotGrossIncomeContractValue;
            
            private global::System.Data.DataColumn columnPotGrossIncomeMarketValue;
            
            private global::System.Data.DataColumn columnVacAndCollContractPercent;
            
            private global::System.Data.DataColumn columnVacAndCollContractValue;
            
            private global::System.Data.DataColumn columnVacAndCollMarketPercent;
            
            private global::System.Data.DataColumn columnVacAndCollMarketValue;
            
            private global::System.Data.DataColumn columnEffGrossIncomeContractValue;
            
            private global::System.Data.DataColumn columnEffGrossIncomeMarketValue;
            
            private global::System.Data.DataColumn columnInsuranceContractPercent;
            
            private global::System.Data.DataColumn columnInsuranceContractValue;
            
            private global::System.Data.DataColumn columnInsuranceMarketPercent;
            
            private global::System.Data.DataColumn columnInsuranceMarketValue;
            
            private global::System.Data.DataColumn columnManAndPayContractPercent;
            
            private global::System.Data.DataColumn columnManAndPayContractValue;
            
            private global::System.Data.DataColumn columnManAndPayMarketPercent;
            
            private global::System.Data.DataColumn columnManAndPayMarketValue;
            
            private global::System.Data.DataColumn columnUtilitiesContractPercent;
            
            private global::System.Data.DataColumn columnUtilitiesContractValue;
            
            private global::System.Data.DataColumn columnUtilitiesMarketPercent;
            
            private global::System.Data.DataColumn columnUtilitiesMarketValue;
            
            private global::System.Data.DataColumn columnMaintAndRepContractPercent;
            
            private global::System.Data.DataColumn columnMaintAndRepMarketPercent;
            
            private global::System.Data.DataColumn columnMaintAndRepMarketValue;
            
            private global::System.Data.DataColumn columnResReplaceContractPercent;
            
            private global::System.Data.DataColumn columnResReplaceContractValue;
            
            private global::System.Data.DataColumn columnResReplaceMarketPercent;
            
            private global::System.Data.DataColumn columnResReplaceMarketValue;
            
            private global::System.Data.DataColumn columnTotalExpensesContractPercent;
            
            private global::System.Data.DataColumn columnTotalExpensesContractValue;
            
            private global::System.Data.DataColumn columnTotalExpensesMarketPercent;
            
            private global::System.Data.DataColumn columnTotalExpensesMarketValue;
            
            private global::System.Data.DataColumn columnNetOpIncContractValue;
            
            private global::System.Data.DataColumn columnNetOpIncMarketValue;
            
            private global::System.Data.DataColumn columnCapitalizationRate;
            
            private global::System.Data.DataColumn columnIsUseContract;
            
            private global::System.Data.DataColumn columnIncomeApproach;
            
            private global::System.Data.DataColumn columnMaintAndRepContractValue;
            
            private global::System.Data.DataColumn columnSuppliesContractPercent;
            
            private global::System.Data.DataColumn columnSuppliesContractValue;
            
            private global::System.Data.DataColumn columnSuppliesMarketPercent;
            
            private global::System.Data.DataColumn columnSuppliesMarketValue;
            
            private global::System.Data.DataColumn columnOtherExpensesContractPercent;
            
            private global::System.Data.DataColumn columnOtherExpensesContractValue;
            
            private global::System.Data.DataColumn columnOtherExpensesMarketPercent;
            
            private global::System.Data.DataColumn columnOtherExpensesMarketValue;
            
            private global::System.Data.DataColumn columnMiscIncomeContractPercent;
            
            private global::System.Data.DataColumn columnMiscIncomeContractValue;
            
            private global::System.Data.DataColumn columnMiscIncomeMarketPercent;
            
            private global::System.Data.DataColumn columnMiscIncomeMarketValue;
            
            private global::System.Data.DataColumn columnPersonalProperty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachDetailsDataTable() {
                this.TableName = "IncomeApproachDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncomeApproachDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IncomeApproachDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueSliceIDColumn {
                get {
                    return this.columnValueSliceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeApproachIDColumn {
                get {
                    return this.columnIncomeApproachID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PotGrossIncomeContractValueColumn {
                get {
                    return this.columnPotGrossIncomeContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PotGrossIncomeMarketValueColumn {
                get {
                    return this.columnPotGrossIncomeMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollContractPercentColumn {
                get {
                    return this.columnVacAndCollContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollContractValueColumn {
                get {
                    return this.columnVacAndCollContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollMarketPercentColumn {
                get {
                    return this.columnVacAndCollMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollMarketValueColumn {
                get {
                    return this.columnVacAndCollMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffGrossIncomeContractValueColumn {
                get {
                    return this.columnEffGrossIncomeContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffGrossIncomeMarketValueColumn {
                get {
                    return this.columnEffGrossIncomeMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceContractPercentColumn {
                get {
                    return this.columnInsuranceContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceContractValueColumn {
                get {
                    return this.columnInsuranceContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceMarketPercentColumn {
                get {
                    return this.columnInsuranceMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceMarketValueColumn {
                get {
                    return this.columnInsuranceMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayContractPercentColumn {
                get {
                    return this.columnManAndPayContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayContractValueColumn {
                get {
                    return this.columnManAndPayContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayMarketPercentColumn {
                get {
                    return this.columnManAndPayMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayMarketValueColumn {
                get {
                    return this.columnManAndPayMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesContractPercentColumn {
                get {
                    return this.columnUtilitiesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesContractValueColumn {
                get {
                    return this.columnUtilitiesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesMarketPercentColumn {
                get {
                    return this.columnUtilitiesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesMarketValueColumn {
                get {
                    return this.columnUtilitiesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepContractPercentColumn {
                get {
                    return this.columnMaintAndRepContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepMarketPercentColumn {
                get {
                    return this.columnMaintAndRepMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepMarketValueColumn {
                get {
                    return this.columnMaintAndRepMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceContractPercentColumn {
                get {
                    return this.columnResReplaceContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceContractValueColumn {
                get {
                    return this.columnResReplaceContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceMarketPercentColumn {
                get {
                    return this.columnResReplaceMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceMarketValueColumn {
                get {
                    return this.columnResReplaceMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesContractPercentColumn {
                get {
                    return this.columnTotalExpensesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesContractValueColumn {
                get {
                    return this.columnTotalExpensesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesMarketPercentColumn {
                get {
                    return this.columnTotalExpensesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesMarketValueColumn {
                get {
                    return this.columnTotalExpensesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetOpIncContractValueColumn {
                get {
                    return this.columnNetOpIncContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetOpIncMarketValueColumn {
                get {
                    return this.columnNetOpIncMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CapitalizationRateColumn {
                get {
                    return this.columnCapitalizationRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsUseContractColumn {
                get {
                    return this.columnIsUseContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeApproachColumn {
                get {
                    return this.columnIncomeApproach;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepContractValueColumn {
                get {
                    return this.columnMaintAndRepContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesContractPercentColumn {
                get {
                    return this.columnSuppliesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesContractValueColumn {
                get {
                    return this.columnSuppliesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesMarketPercentColumn {
                get {
                    return this.columnSuppliesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesMarketValueColumn {
                get {
                    return this.columnSuppliesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesContractPercentColumn {
                get {
                    return this.columnOtherExpensesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesContractValueColumn {
                get {
                    return this.columnOtherExpensesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesMarketPercentColumn {
                get {
                    return this.columnOtherExpensesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesMarketValueColumn {
                get {
                    return this.columnOtherExpensesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeContractPercentColumn {
                get {
                    return this.columnMiscIncomeContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeContractValueColumn {
                get {
                    return this.columnMiscIncomeContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeMarketPercentColumn {
                get {
                    return this.columnMiscIncomeMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeMarketValueColumn {
                get {
                    return this.columnMiscIncomeMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalPropertyColumn {
                get {
                    return this.columnPersonalProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachDetailsRow this[int index] {
                get {
                    return ((IncomeApproachDetailsRow)(this.Rows[index]));
                }
            }
            
            public event IncomeApproachDetailsRowChangeEventHandler IncomeApproachDetailsRowChanging;
            
            public event IncomeApproachDetailsRowChangeEventHandler IncomeApproachDetailsRowChanged;
            
            public event IncomeApproachDetailsRowChangeEventHandler IncomeApproachDetailsRowDeleting;
            
            public event IncomeApproachDetailsRowChangeEventHandler IncomeApproachDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIncomeApproachDetailsRow(IncomeApproachDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachDetailsRow AddIncomeApproachDetailsRow(
                        string ValueSliceID, 
                        string IncomeApproachID, 
                        string PotGrossIncomeContractValue, 
                        string PotGrossIncomeMarketValue, 
                        string VacAndCollContractPercent, 
                        string VacAndCollContractValue, 
                        string VacAndCollMarketPercent, 
                        string VacAndCollMarketValue, 
                        string EffGrossIncomeContractValue, 
                        string EffGrossIncomeMarketValue, 
                        string InsuranceContractPercent, 
                        string InsuranceContractValue, 
                        string InsuranceMarketPercent, 
                        string InsuranceMarketValue, 
                        string ManAndPayContractPercent, 
                        string ManAndPayContractValue, 
                        string ManAndPayMarketPercent, 
                        string ManAndPayMarketValue, 
                        string UtilitiesContractPercent, 
                        string UtilitiesContractValue, 
                        string UtilitiesMarketPercent, 
                        string UtilitiesMarketValue, 
                        string MaintAndRepContractPercent, 
                        string MaintAndRepMarketPercent, 
                        string MaintAndRepMarketValue, 
                        string ResReplaceContractPercent, 
                        string ResReplaceContractValue, 
                        string ResReplaceMarketPercent, 
                        string ResReplaceMarketValue, 
                        string TotalExpensesContractPercent, 
                        string TotalExpensesContractValue, 
                        string TotalExpensesMarketPercent, 
                        string TotalExpensesMarketValue, 
                        string NetOpIncContractValue, 
                        string NetOpIncMarketValue, 
                        string CapitalizationRate, 
                        string IsUseContract, 
                        string IncomeApproach, 
                        decimal MaintAndRepContractValue, 
                        string SuppliesContractPercent, 
                        string SuppliesContractValue, 
                        string SuppliesMarketPercent, 
                        string SuppliesMarketValue, 
                        string OtherExpensesContractPercent, 
                        string OtherExpensesContractValue, 
                        string OtherExpensesMarketPercent, 
                        string OtherExpensesMarketValue, 
                        string MiscIncomeContractPercent, 
                        string MiscIncomeContractValue, 
                        string MiscIncomeMarketPercent, 
                        string MiscIncomeMarketValue, 
                        decimal PersonalProperty) {
                IncomeApproachDetailsRow rowIncomeApproachDetailsRow = ((IncomeApproachDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ValueSliceID,
                        IncomeApproachID,
                        PotGrossIncomeContractValue,
                        PotGrossIncomeMarketValue,
                        VacAndCollContractPercent,
                        VacAndCollContractValue,
                        VacAndCollMarketPercent,
                        VacAndCollMarketValue,
                        EffGrossIncomeContractValue,
                        EffGrossIncomeMarketValue,
                        InsuranceContractPercent,
                        InsuranceContractValue,
                        InsuranceMarketPercent,
                        InsuranceMarketValue,
                        ManAndPayContractPercent,
                        ManAndPayContractValue,
                        ManAndPayMarketPercent,
                        ManAndPayMarketValue,
                        UtilitiesContractPercent,
                        UtilitiesContractValue,
                        UtilitiesMarketPercent,
                        UtilitiesMarketValue,
                        MaintAndRepContractPercent,
                        MaintAndRepMarketPercent,
                        MaintAndRepMarketValue,
                        ResReplaceContractPercent,
                        ResReplaceContractValue,
                        ResReplaceMarketPercent,
                        ResReplaceMarketValue,
                        TotalExpensesContractPercent,
                        TotalExpensesContractValue,
                        TotalExpensesMarketPercent,
                        TotalExpensesMarketValue,
                        NetOpIncContractValue,
                        NetOpIncMarketValue,
                        CapitalizationRate,
                        IsUseContract,
                        IncomeApproach,
                        MaintAndRepContractValue,
                        SuppliesContractPercent,
                        SuppliesContractValue,
                        SuppliesMarketPercent,
                        SuppliesMarketValue,
                        OtherExpensesContractPercent,
                        OtherExpensesContractValue,
                        OtherExpensesMarketPercent,
                        OtherExpensesMarketValue,
                        MiscIncomeContractPercent,
                        MiscIncomeContractValue,
                        MiscIncomeMarketPercent,
                        MiscIncomeMarketValue,
                        PersonalProperty};
                rowIncomeApproachDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIncomeApproachDetailsRow);
                return rowIncomeApproachDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IncomeApproachDetailsDataTable cln = ((IncomeApproachDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IncomeApproachDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnValueSliceID = base.Columns["ValueSliceID"];
                this.columnIncomeApproachID = base.Columns["IncomeApproachID"];
                this.columnPotGrossIncomeContractValue = base.Columns["PotGrossIncomeContractValue"];
                this.columnPotGrossIncomeMarketValue = base.Columns["PotGrossIncomeMarketValue"];
                this.columnVacAndCollContractPercent = base.Columns["VacAndCollContractPercent"];
                this.columnVacAndCollContractValue = base.Columns["VacAndCollContractValue"];
                this.columnVacAndCollMarketPercent = base.Columns["VacAndCollMarketPercent"];
                this.columnVacAndCollMarketValue = base.Columns["VacAndCollMarketValue"];
                this.columnEffGrossIncomeContractValue = base.Columns["EffGrossIncomeContractValue"];
                this.columnEffGrossIncomeMarketValue = base.Columns["EffGrossIncomeMarketValue"];
                this.columnInsuranceContractPercent = base.Columns["InsuranceContractPercent"];
                this.columnInsuranceContractValue = base.Columns["InsuranceContractValue"];
                this.columnInsuranceMarketPercent = base.Columns["InsuranceMarketPercent"];
                this.columnInsuranceMarketValue = base.Columns["InsuranceMarketValue"];
                this.columnManAndPayContractPercent = base.Columns["ManAndPayContractPercent"];
                this.columnManAndPayContractValue = base.Columns["ManAndPayContractValue"];
                this.columnManAndPayMarketPercent = base.Columns["ManAndPayMarketPercent"];
                this.columnManAndPayMarketValue = base.Columns["ManAndPayMarketValue"];
                this.columnUtilitiesContractPercent = base.Columns["UtilitiesContractPercent"];
                this.columnUtilitiesContractValue = base.Columns["UtilitiesContractValue"];
                this.columnUtilitiesMarketPercent = base.Columns["UtilitiesMarketPercent"];
                this.columnUtilitiesMarketValue = base.Columns["UtilitiesMarketValue"];
                this.columnMaintAndRepContractPercent = base.Columns["MaintAndRepContractPercent"];
                this.columnMaintAndRepMarketPercent = base.Columns["MaintAndRepMarketPercent"];
                this.columnMaintAndRepMarketValue = base.Columns["MaintAndRepMarketValue"];
                this.columnResReplaceContractPercent = base.Columns["ResReplaceContractPercent"];
                this.columnResReplaceContractValue = base.Columns["ResReplaceContractValue"];
                this.columnResReplaceMarketPercent = base.Columns["ResReplaceMarketPercent"];
                this.columnResReplaceMarketValue = base.Columns["ResReplaceMarketValue"];
                this.columnTotalExpensesContractPercent = base.Columns["TotalExpensesContractPercent"];
                this.columnTotalExpensesContractValue = base.Columns["TotalExpensesContractValue"];
                this.columnTotalExpensesMarketPercent = base.Columns["TotalExpensesMarketPercent"];
                this.columnTotalExpensesMarketValue = base.Columns["TotalExpensesMarketValue"];
                this.columnNetOpIncContractValue = base.Columns["NetOpIncContractValue"];
                this.columnNetOpIncMarketValue = base.Columns["NetOpIncMarketValue"];
                this.columnCapitalizationRate = base.Columns["CapitalizationRate"];
                this.columnIsUseContract = base.Columns["IsUseContract"];
                this.columnIncomeApproach = base.Columns["IncomeApproach"];
                this.columnMaintAndRepContractValue = base.Columns["MaintAndRepContractValue"];
                this.columnSuppliesContractPercent = base.Columns["SuppliesContractPercent"];
                this.columnSuppliesContractValue = base.Columns["SuppliesContractValue"];
                this.columnSuppliesMarketPercent = base.Columns["SuppliesMarketPercent"];
                this.columnSuppliesMarketValue = base.Columns["SuppliesMarketValue"];
                this.columnOtherExpensesContractPercent = base.Columns["OtherExpensesContractPercent"];
                this.columnOtherExpensesContractValue = base.Columns["OtherExpensesContractValue"];
                this.columnOtherExpensesMarketPercent = base.Columns["OtherExpensesMarketPercent"];
                this.columnOtherExpensesMarketValue = base.Columns["OtherExpensesMarketValue"];
                this.columnMiscIncomeContractPercent = base.Columns["MiscIncomeContractPercent"];
                this.columnMiscIncomeContractValue = base.Columns["MiscIncomeContractValue"];
                this.columnMiscIncomeMarketPercent = base.Columns["MiscIncomeMarketPercent"];
                this.columnMiscIncomeMarketValue = base.Columns["MiscIncomeMarketValue"];
                this.columnPersonalProperty = base.Columns["PersonalProperty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnValueSliceID = new global::System.Data.DataColumn("ValueSliceID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueSliceID);
                this.columnIncomeApproachID = new global::System.Data.DataColumn("IncomeApproachID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeApproachID);
                this.columnPotGrossIncomeContractValue = new global::System.Data.DataColumn("PotGrossIncomeContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPotGrossIncomeContractValue);
                this.columnPotGrossIncomeMarketValue = new global::System.Data.DataColumn("PotGrossIncomeMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPotGrossIncomeMarketValue);
                this.columnVacAndCollContractPercent = new global::System.Data.DataColumn("VacAndCollContractPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollContractPercent);
                this.columnVacAndCollContractValue = new global::System.Data.DataColumn("VacAndCollContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollContractValue);
                this.columnVacAndCollMarketPercent = new global::System.Data.DataColumn("VacAndCollMarketPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollMarketPercent);
                this.columnVacAndCollMarketValue = new global::System.Data.DataColumn("VacAndCollMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollMarketValue);
                this.columnEffGrossIncomeContractValue = new global::System.Data.DataColumn("EffGrossIncomeContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffGrossIncomeContractValue);
                this.columnEffGrossIncomeMarketValue = new global::System.Data.DataColumn("EffGrossIncomeMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffGrossIncomeMarketValue);
                this.columnInsuranceContractPercent = new global::System.Data.DataColumn("InsuranceContractPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceContractPercent);
                this.columnInsuranceContractValue = new global::System.Data.DataColumn("InsuranceContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceContractValue);
                this.columnInsuranceMarketPercent = new global::System.Data.DataColumn("InsuranceMarketPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceMarketPercent);
                this.columnInsuranceMarketValue = new global::System.Data.DataColumn("InsuranceMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceMarketValue);
                this.columnManAndPayContractPercent = new global::System.Data.DataColumn("ManAndPayContractPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayContractPercent);
                this.columnManAndPayContractValue = new global::System.Data.DataColumn("ManAndPayContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayContractValue);
                this.columnManAndPayMarketPercent = new global::System.Data.DataColumn("ManAndPayMarketPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayMarketPercent);
                this.columnManAndPayMarketValue = new global::System.Data.DataColumn("ManAndPayMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayMarketValue);
                this.columnUtilitiesContractPercent = new global::System.Data.DataColumn("UtilitiesContractPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesContractPercent);
                this.columnUtilitiesContractValue = new global::System.Data.DataColumn("UtilitiesContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesContractValue);
                this.columnUtilitiesMarketPercent = new global::System.Data.DataColumn("UtilitiesMarketPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesMarketPercent);
                this.columnUtilitiesMarketValue = new global::System.Data.DataColumn("UtilitiesMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesMarketValue);
                this.columnMaintAndRepContractPercent = new global::System.Data.DataColumn("MaintAndRepContractPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepContractPercent);
                this.columnMaintAndRepMarketPercent = new global::System.Data.DataColumn("MaintAndRepMarketPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepMarketPercent);
                this.columnMaintAndRepMarketValue = new global::System.Data.DataColumn("MaintAndRepMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepMarketValue);
                this.columnResReplaceContractPercent = new global::System.Data.DataColumn("ResReplaceContractPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceContractPercent);
                this.columnResReplaceContractValue = new global::System.Data.DataColumn("ResReplaceContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceContractValue);
                this.columnResReplaceMarketPercent = new global::System.Data.DataColumn("ResReplaceMarketPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceMarketPercent);
                this.columnResReplaceMarketValue = new global::System.Data.DataColumn("ResReplaceMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceMarketValue);
                this.columnTotalExpensesContractPercent = new global::System.Data.DataColumn("TotalExpensesContractPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesContractPercent);
                this.columnTotalExpensesContractValue = new global::System.Data.DataColumn("TotalExpensesContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesContractValue);
                this.columnTotalExpensesMarketPercent = new global::System.Data.DataColumn("TotalExpensesMarketPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesMarketPercent);
                this.columnTotalExpensesMarketValue = new global::System.Data.DataColumn("TotalExpensesMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesMarketValue);
                this.columnNetOpIncContractValue = new global::System.Data.DataColumn("NetOpIncContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetOpIncContractValue);
                this.columnNetOpIncMarketValue = new global::System.Data.DataColumn("NetOpIncMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetOpIncMarketValue);
                this.columnCapitalizationRate = new global::System.Data.DataColumn("CapitalizationRate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapitalizationRate);
                this.columnIsUseContract = new global::System.Data.DataColumn("IsUseContract", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUseContract);
                this.columnIncomeApproach = new global::System.Data.DataColumn("IncomeApproach", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeApproach);
                this.columnMaintAndRepContractValue = new global::System.Data.DataColumn("MaintAndRepContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepContractValue);
                this.columnSuppliesContractPercent = new global::System.Data.DataColumn("SuppliesContractPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesContractPercent);
                this.columnSuppliesContractValue = new global::System.Data.DataColumn("SuppliesContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesContractValue);
                this.columnSuppliesMarketPercent = new global::System.Data.DataColumn("SuppliesMarketPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesMarketPercent);
                this.columnSuppliesMarketValue = new global::System.Data.DataColumn("SuppliesMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesMarketValue);
                this.columnOtherExpensesContractPercent = new global::System.Data.DataColumn("OtherExpensesContractPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesContractPercent);
                this.columnOtherExpensesContractValue = new global::System.Data.DataColumn("OtherExpensesContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesContractValue);
                this.columnOtherExpensesMarketPercent = new global::System.Data.DataColumn("OtherExpensesMarketPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesMarketPercent);
                this.columnOtherExpensesMarketValue = new global::System.Data.DataColumn("OtherExpensesMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesMarketValue);
                this.columnMiscIncomeContractPercent = new global::System.Data.DataColumn("MiscIncomeContractPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeContractPercent);
                this.columnMiscIncomeContractValue = new global::System.Data.DataColumn("MiscIncomeContractValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeContractValue);
                this.columnMiscIncomeMarketPercent = new global::System.Data.DataColumn("MiscIncomeMarketPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeMarketPercent);
                this.columnMiscIncomeMarketValue = new global::System.Data.DataColumn("MiscIncomeMarketValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeMarketValue);
                this.columnPersonalProperty = new global::System.Data.DataColumn("PersonalProperty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalProperty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachDetailsRow NewIncomeApproachDetailsRow() {
                return ((IncomeApproachDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IncomeApproachDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IncomeApproachDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IncomeApproachDetailsRowChanged != null)) {
                    this.IncomeApproachDetailsRowChanged(this, new IncomeApproachDetailsRowChangeEvent(((IncomeApproachDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IncomeApproachDetailsRowChanging != null)) {
                    this.IncomeApproachDetailsRowChanging(this, new IncomeApproachDetailsRowChangeEvent(((IncomeApproachDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IncomeApproachDetailsRowDeleted != null)) {
                    this.IncomeApproachDetailsRowDeleted(this, new IncomeApproachDetailsRowChangeEvent(((IncomeApproachDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IncomeApproachDetailsRowDeleting != null)) {
                    this.IncomeApproachDetailsRowDeleting(this, new IncomeApproachDetailsRowChangeEvent(((IncomeApproachDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIncomeApproachDetailsRow(IncomeApproachDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36091IncomeApproachData ds = new F36091IncomeApproachData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IncomeApproachDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IncomeSourceTypesDataTable : global::System.Data.TypedTableBase<IncomeSourceTypesRow> {
            
            private global::System.Data.DataColumn columnIncomeSourceID;
            
            private global::System.Data.DataColumn columnSourceCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourceTypesDataTable() {
                this.TableName = "IncomeSourceTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncomeSourceTypesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IncomeSourceTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeSourceIDColumn {
                get {
                    return this.columnIncomeSourceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SourceCodeColumn {
                get {
                    return this.columnSourceCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourceTypesRow this[int index] {
                get {
                    return ((IncomeSourceTypesRow)(this.Rows[index]));
                }
            }
            
            public event IncomeSourceTypesRowChangeEventHandler IncomeSourceTypesRowChanging;
            
            public event IncomeSourceTypesRowChangeEventHandler IncomeSourceTypesRowChanged;
            
            public event IncomeSourceTypesRowChangeEventHandler IncomeSourceTypesRowDeleting;
            
            public event IncomeSourceTypesRowChangeEventHandler IncomeSourceTypesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIncomeSourceTypesRow(IncomeSourceTypesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourceTypesRow AddIncomeSourceTypesRow(int IncomeSourceID, string SourceCode, string Description) {
                IncomeSourceTypesRow rowIncomeSourceTypesRow = ((IncomeSourceTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IncomeSourceID,
                        SourceCode,
                        Description};
                rowIncomeSourceTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIncomeSourceTypesRow);
                return rowIncomeSourceTypesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IncomeSourceTypesDataTable cln = ((IncomeSourceTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IncomeSourceTypesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIncomeSourceID = base.Columns["IncomeSourceID"];
                this.columnSourceCode = base.Columns["SourceCode"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIncomeSourceID = new global::System.Data.DataColumn("IncomeSourceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeSourceID);
                this.columnSourceCode = new global::System.Data.DataColumn("SourceCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourceTypesRow NewIncomeSourceTypesRow() {
                return ((IncomeSourceTypesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IncomeSourceTypesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IncomeSourceTypesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IncomeSourceTypesRowChanged != null)) {
                    this.IncomeSourceTypesRowChanged(this, new IncomeSourceTypesRowChangeEvent(((IncomeSourceTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IncomeSourceTypesRowChanging != null)) {
                    this.IncomeSourceTypesRowChanging(this, new IncomeSourceTypesRowChangeEvent(((IncomeSourceTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IncomeSourceTypesRowDeleted != null)) {
                    this.IncomeSourceTypesRowDeleted(this, new IncomeSourceTypesRowChangeEvent(((IncomeSourceTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IncomeSourceTypesRowDeleting != null)) {
                    this.IncomeSourceTypesRowDeleting(this, new IncomeSourceTypesRowChangeEvent(((IncomeSourceTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIncomeSourceTypesRow(IncomeSourceTypesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36091IncomeApproachData ds = new F36091IncomeApproachData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IncomeSourceTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IncomeApproachItemValuesDataTable : global::System.Data.TypedTableBase<IncomeApproachItemValuesRow> {
            
            private global::System.Data.DataColumn columnContract;
            
            private global::System.Data.DataColumn columnMarket;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachItemValuesDataTable() {
                this.TableName = "IncomeApproachItemValues";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncomeApproachItemValuesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IncomeApproachItemValuesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractColumn {
                get {
                    return this.columnContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketColumn {
                get {
                    return this.columnMarket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachItemValuesRow this[int index] {
                get {
                    return ((IncomeApproachItemValuesRow)(this.Rows[index]));
                }
            }
            
            public event IncomeApproachItemValuesRowChangeEventHandler IncomeApproachItemValuesRowChanging;
            
            public event IncomeApproachItemValuesRowChangeEventHandler IncomeApproachItemValuesRowChanged;
            
            public event IncomeApproachItemValuesRowChangeEventHandler IncomeApproachItemValuesRowDeleting;
            
            public event IncomeApproachItemValuesRowChangeEventHandler IncomeApproachItemValuesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIncomeApproachItemValuesRow(IncomeApproachItemValuesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachItemValuesRow AddIncomeApproachItemValuesRow(decimal Contract, decimal Market) {
                IncomeApproachItemValuesRow rowIncomeApproachItemValuesRow = ((IncomeApproachItemValuesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Contract,
                        Market};
                rowIncomeApproachItemValuesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIncomeApproachItemValuesRow);
                return rowIncomeApproachItemValuesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IncomeApproachItemValuesDataTable cln = ((IncomeApproachItemValuesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IncomeApproachItemValuesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnContract = base.Columns["Contract"];
                this.columnMarket = base.Columns["Market"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnContract = new global::System.Data.DataColumn("Contract", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract);
                this.columnMarket = new global::System.Data.DataColumn("Market", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarket);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachItemValuesRow NewIncomeApproachItemValuesRow() {
                return ((IncomeApproachItemValuesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IncomeApproachItemValuesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IncomeApproachItemValuesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IncomeApproachItemValuesRowChanged != null)) {
                    this.IncomeApproachItemValuesRowChanged(this, new IncomeApproachItemValuesRowChangeEvent(((IncomeApproachItemValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IncomeApproachItemValuesRowChanging != null)) {
                    this.IncomeApproachItemValuesRowChanging(this, new IncomeApproachItemValuesRowChangeEvent(((IncomeApproachItemValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IncomeApproachItemValuesRowDeleted != null)) {
                    this.IncomeApproachItemValuesRowDeleted(this, new IncomeApproachItemValuesRowChangeEvent(((IncomeApproachItemValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IncomeApproachItemValuesRowDeleting != null)) {
                    this.IncomeApproachItemValuesRowDeleting(this, new IncomeApproachItemValuesRowChangeEvent(((IncomeApproachItemValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIncomeApproachItemValuesRow(IncomeApproachItemValuesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36091IncomeApproachData ds = new F36091IncomeApproachData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IncomeApproachItemValuesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetIncomeApproachValuesDataTable : global::System.Data.TypedTableBase<GetIncomeApproachValuesRow> {
            
            private global::System.Data.DataColumn columnPotGrossIncomeContractValue;
            
            private global::System.Data.DataColumn columnPotGrossIncomeMarketValue;
            
            private global::System.Data.DataColumn columnVacAndCollContractPercent;
            
            private global::System.Data.DataColumn columnVacAndCollContractValue;
            
            private global::System.Data.DataColumn columnVacAndCollMarketPercent;
            
            private global::System.Data.DataColumn columnVacAndCollMarketValue;
            
            private global::System.Data.DataColumn columnEffGrossIncomeContractValue;
            
            private global::System.Data.DataColumn columnEffGrossIncomeMarketValue;
            
            private global::System.Data.DataColumn columnInsuranceContractPercent;
            
            private global::System.Data.DataColumn columnInsuranceContractValue;
            
            private global::System.Data.DataColumn columnInsuranceMarketPercent;
            
            private global::System.Data.DataColumn columnInsuranceMarketValue;
            
            private global::System.Data.DataColumn columnManAndPayContractPercent;
            
            private global::System.Data.DataColumn columnManAndPayContractValue;
            
            private global::System.Data.DataColumn columnManAndPayMarketPercent;
            
            private global::System.Data.DataColumn columnManAndPayMarketValue;
            
            private global::System.Data.DataColumn columnUtilitiesContractPercent;
            
            private global::System.Data.DataColumn columnUtilitiesContractValue;
            
            private global::System.Data.DataColumn columnUtilitiesMarketPercent;
            
            private global::System.Data.DataColumn columnUtilitiesMarketValue;
            
            private global::System.Data.DataColumn columnMaintAndRepContractPercent;
            
            private global::System.Data.DataColumn columnMaintAndRepContractValue;
            
            private global::System.Data.DataColumn columnMaintAndRepMarketPercent;
            
            private global::System.Data.DataColumn columnMaintAndRepMarketValue;
            
            private global::System.Data.DataColumn columnResReplaceContractPercent;
            
            private global::System.Data.DataColumn columnResReplaceContractValue;
            
            private global::System.Data.DataColumn columnResReplaceMarketPercent;
            
            private global::System.Data.DataColumn columnResReplaceMarketValue;
            
            private global::System.Data.DataColumn columnTotalExpensesContractPercent;
            
            private global::System.Data.DataColumn columnTotalExpensesContractValue;
            
            private global::System.Data.DataColumn columnTotalExpensesMarketPercent;
            
            private global::System.Data.DataColumn columnTotalExpensesMarketValue;
            
            private global::System.Data.DataColumn columnNetOpIncContractValue;
            
            private global::System.Data.DataColumn columnNetOpIncMarketValue;
            
            private global::System.Data.DataColumn columnCapitalizationRate;
            
            private global::System.Data.DataColumn columnIsUseContract;
            
            private global::System.Data.DataColumn columnIncomeApproach;
            
            private global::System.Data.DataColumn columnSuppliesContractPercent;
            
            private global::System.Data.DataColumn columnSuppliesContractValue;
            
            private global::System.Data.DataColumn columnSuppliesMarketPercent;
            
            private global::System.Data.DataColumn columnSuppliesMarketValue;
            
            private global::System.Data.DataColumn columnOtherExpensesContractPercent;
            
            private global::System.Data.DataColumn columnOtherExpensesContractValue;
            
            private global::System.Data.DataColumn columnOtherExpensesMarketPercent;
            
            private global::System.Data.DataColumn columnOtherExpensesMarketValue;
            
            private global::System.Data.DataColumn columnMiscIncomeContractPercent;
            
            private global::System.Data.DataColumn columnMiscIncomeContractValue;
            
            private global::System.Data.DataColumn columnMiscIncomeMarketPercent;
            
            private global::System.Data.DataColumn columnMiscIncomeMarketValue;
            
            private global::System.Data.DataColumn columnPersonalProperty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetIncomeApproachValuesDataTable() {
                this.TableName = "GetIncomeApproachValues";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetIncomeApproachValuesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetIncomeApproachValuesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PotGrossIncomeContractValueColumn {
                get {
                    return this.columnPotGrossIncomeContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PotGrossIncomeMarketValueColumn {
                get {
                    return this.columnPotGrossIncomeMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollContractPercentColumn {
                get {
                    return this.columnVacAndCollContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollContractValueColumn {
                get {
                    return this.columnVacAndCollContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollMarketPercentColumn {
                get {
                    return this.columnVacAndCollMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollMarketValueColumn {
                get {
                    return this.columnVacAndCollMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffGrossIncomeContractValueColumn {
                get {
                    return this.columnEffGrossIncomeContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffGrossIncomeMarketValueColumn {
                get {
                    return this.columnEffGrossIncomeMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceContractPercentColumn {
                get {
                    return this.columnInsuranceContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceContractValueColumn {
                get {
                    return this.columnInsuranceContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceMarketPercentColumn {
                get {
                    return this.columnInsuranceMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceMarketValueColumn {
                get {
                    return this.columnInsuranceMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayContractPercentColumn {
                get {
                    return this.columnManAndPayContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayContractValueColumn {
                get {
                    return this.columnManAndPayContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayMarketPercentColumn {
                get {
                    return this.columnManAndPayMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayMarketValueColumn {
                get {
                    return this.columnManAndPayMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesContractPercentColumn {
                get {
                    return this.columnUtilitiesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesContractValueColumn {
                get {
                    return this.columnUtilitiesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesMarketPercentColumn {
                get {
                    return this.columnUtilitiesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesMarketValueColumn {
                get {
                    return this.columnUtilitiesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepContractPercentColumn {
                get {
                    return this.columnMaintAndRepContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepContractValueColumn {
                get {
                    return this.columnMaintAndRepContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepMarketPercentColumn {
                get {
                    return this.columnMaintAndRepMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepMarketValueColumn {
                get {
                    return this.columnMaintAndRepMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceContractPercentColumn {
                get {
                    return this.columnResReplaceContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceContractValueColumn {
                get {
                    return this.columnResReplaceContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceMarketPercentColumn {
                get {
                    return this.columnResReplaceMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceMarketValueColumn {
                get {
                    return this.columnResReplaceMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesContractPercentColumn {
                get {
                    return this.columnTotalExpensesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesContractValueColumn {
                get {
                    return this.columnTotalExpensesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesMarketPercentColumn {
                get {
                    return this.columnTotalExpensesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesMarketValueColumn {
                get {
                    return this.columnTotalExpensesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetOpIncContractValueColumn {
                get {
                    return this.columnNetOpIncContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetOpIncMarketValueColumn {
                get {
                    return this.columnNetOpIncMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CapitalizationRateColumn {
                get {
                    return this.columnCapitalizationRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsUseContractColumn {
                get {
                    return this.columnIsUseContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeApproachColumn {
                get {
                    return this.columnIncomeApproach;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesContractPercentColumn {
                get {
                    return this.columnSuppliesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesContractValueColumn {
                get {
                    return this.columnSuppliesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesMarketPercentColumn {
                get {
                    return this.columnSuppliesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesMarketValueColumn {
                get {
                    return this.columnSuppliesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesContractPercentColumn {
                get {
                    return this.columnOtherExpensesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesContractValueColumn {
                get {
                    return this.columnOtherExpensesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesMarketPercentColumn {
                get {
                    return this.columnOtherExpensesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesMarketValueColumn {
                get {
                    return this.columnOtherExpensesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeContractPercentColumn {
                get {
                    return this.columnMiscIncomeContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeContractValueColumn {
                get {
                    return this.columnMiscIncomeContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeMarketPercentColumn {
                get {
                    return this.columnMiscIncomeMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeMarketValueColumn {
                get {
                    return this.columnMiscIncomeMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalPropertyColumn {
                get {
                    return this.columnPersonalProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetIncomeApproachValuesRow this[int index] {
                get {
                    return ((GetIncomeApproachValuesRow)(this.Rows[index]));
                }
            }
            
            public event GetIncomeApproachValuesRowChangeEventHandler GetIncomeApproachValuesRowChanging;
            
            public event GetIncomeApproachValuesRowChangeEventHandler GetIncomeApproachValuesRowChanged;
            
            public event GetIncomeApproachValuesRowChangeEventHandler GetIncomeApproachValuesRowDeleting;
            
            public event GetIncomeApproachValuesRowChangeEventHandler GetIncomeApproachValuesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetIncomeApproachValuesRow(GetIncomeApproachValuesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetIncomeApproachValuesRow AddGetIncomeApproachValuesRow(
                        decimal PotGrossIncomeContractValue, 
                        decimal PotGrossIncomeMarketValue, 
                        decimal VacAndCollContractPercent, 
                        decimal VacAndCollContractValue, 
                        decimal VacAndCollMarketPercent, 
                        decimal VacAndCollMarketValue, 
                        decimal EffGrossIncomeContractValue, 
                        decimal EffGrossIncomeMarketValue, 
                        decimal InsuranceContractPercent, 
                        decimal InsuranceContractValue, 
                        decimal InsuranceMarketPercent, 
                        decimal InsuranceMarketValue, 
                        decimal ManAndPayContractPercent, 
                        decimal ManAndPayContractValue, 
                        decimal ManAndPayMarketPercent, 
                        decimal ManAndPayMarketValue, 
                        decimal UtilitiesContractPercent, 
                        decimal UtilitiesContractValue, 
                        decimal UtilitiesMarketPercent, 
                        decimal UtilitiesMarketValue, 
                        decimal MaintAndRepContractPercent, 
                        decimal MaintAndRepContractValue, 
                        decimal MaintAndRepMarketPercent, 
                        decimal MaintAndRepMarketValue, 
                        decimal ResReplaceContractPercent, 
                        decimal ResReplaceContractValue, 
                        decimal ResReplaceMarketPercent, 
                        decimal ResReplaceMarketValue, 
                        decimal TotalExpensesContractPercent, 
                        decimal TotalExpensesContractValue, 
                        decimal TotalExpensesMarketPercent, 
                        decimal TotalExpensesMarketValue, 
                        decimal NetOpIncContractValue, 
                        decimal NetOpIncMarketValue, 
                        decimal CapitalizationRate, 
                        bool IsUseContract, 
                        decimal IncomeApproach, 
                        decimal SuppliesContractPercent, 
                        decimal SuppliesContractValue, 
                        decimal SuppliesMarketPercent, 
                        decimal SuppliesMarketValue, 
                        decimal OtherExpensesContractPercent, 
                        decimal OtherExpensesContractValue, 
                        decimal OtherExpensesMarketPercent, 
                        decimal OtherExpensesMarketValue, 
                        decimal MiscIncomeContractPercent, 
                        decimal MiscIncomeContractValue, 
                        decimal MiscIncomeMarketPercent, 
                        decimal MiscIncomeMarketValue, 
                        decimal PersonalProperty) {
                GetIncomeApproachValuesRow rowGetIncomeApproachValuesRow = ((GetIncomeApproachValuesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PotGrossIncomeContractValue,
                        PotGrossIncomeMarketValue,
                        VacAndCollContractPercent,
                        VacAndCollContractValue,
                        VacAndCollMarketPercent,
                        VacAndCollMarketValue,
                        EffGrossIncomeContractValue,
                        EffGrossIncomeMarketValue,
                        InsuranceContractPercent,
                        InsuranceContractValue,
                        InsuranceMarketPercent,
                        InsuranceMarketValue,
                        ManAndPayContractPercent,
                        ManAndPayContractValue,
                        ManAndPayMarketPercent,
                        ManAndPayMarketValue,
                        UtilitiesContractPercent,
                        UtilitiesContractValue,
                        UtilitiesMarketPercent,
                        UtilitiesMarketValue,
                        MaintAndRepContractPercent,
                        MaintAndRepContractValue,
                        MaintAndRepMarketPercent,
                        MaintAndRepMarketValue,
                        ResReplaceContractPercent,
                        ResReplaceContractValue,
                        ResReplaceMarketPercent,
                        ResReplaceMarketValue,
                        TotalExpensesContractPercent,
                        TotalExpensesContractValue,
                        TotalExpensesMarketPercent,
                        TotalExpensesMarketValue,
                        NetOpIncContractValue,
                        NetOpIncMarketValue,
                        CapitalizationRate,
                        IsUseContract,
                        IncomeApproach,
                        SuppliesContractPercent,
                        SuppliesContractValue,
                        SuppliesMarketPercent,
                        SuppliesMarketValue,
                        OtherExpensesContractPercent,
                        OtherExpensesContractValue,
                        OtherExpensesMarketPercent,
                        OtherExpensesMarketValue,
                        MiscIncomeContractPercent,
                        MiscIncomeContractValue,
                        MiscIncomeMarketPercent,
                        MiscIncomeMarketValue,
                        PersonalProperty};
                rowGetIncomeApproachValuesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetIncomeApproachValuesRow);
                return rowGetIncomeApproachValuesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetIncomeApproachValuesDataTable cln = ((GetIncomeApproachValuesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetIncomeApproachValuesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPotGrossIncomeContractValue = base.Columns["PotGrossIncomeContractValue"];
                this.columnPotGrossIncomeMarketValue = base.Columns["PotGrossIncomeMarketValue"];
                this.columnVacAndCollContractPercent = base.Columns["VacAndCollContractPercent"];
                this.columnVacAndCollContractValue = base.Columns["VacAndCollContractValue"];
                this.columnVacAndCollMarketPercent = base.Columns["VacAndCollMarketPercent"];
                this.columnVacAndCollMarketValue = base.Columns["VacAndCollMarketValue"];
                this.columnEffGrossIncomeContractValue = base.Columns["EffGrossIncomeContractValue"];
                this.columnEffGrossIncomeMarketValue = base.Columns["EffGrossIncomeMarketValue"];
                this.columnInsuranceContractPercent = base.Columns["InsuranceContractPercent"];
                this.columnInsuranceContractValue = base.Columns["InsuranceContractValue"];
                this.columnInsuranceMarketPercent = base.Columns["InsuranceMarketPercent"];
                this.columnInsuranceMarketValue = base.Columns["InsuranceMarketValue"];
                this.columnManAndPayContractPercent = base.Columns["ManAndPayContractPercent"];
                this.columnManAndPayContractValue = base.Columns["ManAndPayContractValue"];
                this.columnManAndPayMarketPercent = base.Columns["ManAndPayMarketPercent"];
                this.columnManAndPayMarketValue = base.Columns["ManAndPayMarketValue"];
                this.columnUtilitiesContractPercent = base.Columns["UtilitiesContractPercent"];
                this.columnUtilitiesContractValue = base.Columns["UtilitiesContractValue"];
                this.columnUtilitiesMarketPercent = base.Columns["UtilitiesMarketPercent"];
                this.columnUtilitiesMarketValue = base.Columns["UtilitiesMarketValue"];
                this.columnMaintAndRepContractPercent = base.Columns["MaintAndRepContractPercent"];
                this.columnMaintAndRepContractValue = base.Columns["MaintAndRepContractValue"];
                this.columnMaintAndRepMarketPercent = base.Columns["MaintAndRepMarketPercent"];
                this.columnMaintAndRepMarketValue = base.Columns["MaintAndRepMarketValue"];
                this.columnResReplaceContractPercent = base.Columns["ResReplaceContractPercent"];
                this.columnResReplaceContractValue = base.Columns["ResReplaceContractValue"];
                this.columnResReplaceMarketPercent = base.Columns["ResReplaceMarketPercent"];
                this.columnResReplaceMarketValue = base.Columns["ResReplaceMarketValue"];
                this.columnTotalExpensesContractPercent = base.Columns["TotalExpensesContractPercent"];
                this.columnTotalExpensesContractValue = base.Columns["TotalExpensesContractValue"];
                this.columnTotalExpensesMarketPercent = base.Columns["TotalExpensesMarketPercent"];
                this.columnTotalExpensesMarketValue = base.Columns["TotalExpensesMarketValue"];
                this.columnNetOpIncContractValue = base.Columns["NetOpIncContractValue"];
                this.columnNetOpIncMarketValue = base.Columns["NetOpIncMarketValue"];
                this.columnCapitalizationRate = base.Columns["CapitalizationRate"];
                this.columnIsUseContract = base.Columns["IsUseContract"];
                this.columnIncomeApproach = base.Columns["IncomeApproach"];
                this.columnSuppliesContractPercent = base.Columns["SuppliesContractPercent"];
                this.columnSuppliesContractValue = base.Columns["SuppliesContractValue"];
                this.columnSuppliesMarketPercent = base.Columns["SuppliesMarketPercent"];
                this.columnSuppliesMarketValue = base.Columns["SuppliesMarketValue"];
                this.columnOtherExpensesContractPercent = base.Columns["OtherExpensesContractPercent"];
                this.columnOtherExpensesContractValue = base.Columns["OtherExpensesContractValue"];
                this.columnOtherExpensesMarketPercent = base.Columns["OtherExpensesMarketPercent"];
                this.columnOtherExpensesMarketValue = base.Columns["OtherExpensesMarketValue"];
                this.columnMiscIncomeContractPercent = base.Columns["MiscIncomeContractPercent"];
                this.columnMiscIncomeContractValue = base.Columns["MiscIncomeContractValue"];
                this.columnMiscIncomeMarketPercent = base.Columns["MiscIncomeMarketPercent"];
                this.columnMiscIncomeMarketValue = base.Columns["MiscIncomeMarketValue"];
                this.columnPersonalProperty = base.Columns["PersonalProperty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPotGrossIncomeContractValue = new global::System.Data.DataColumn("PotGrossIncomeContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPotGrossIncomeContractValue);
                this.columnPotGrossIncomeMarketValue = new global::System.Data.DataColumn("PotGrossIncomeMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPotGrossIncomeMarketValue);
                this.columnVacAndCollContractPercent = new global::System.Data.DataColumn("VacAndCollContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollContractPercent);
                this.columnVacAndCollContractValue = new global::System.Data.DataColumn("VacAndCollContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollContractValue);
                this.columnVacAndCollMarketPercent = new global::System.Data.DataColumn("VacAndCollMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollMarketPercent);
                this.columnVacAndCollMarketValue = new global::System.Data.DataColumn("VacAndCollMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollMarketValue);
                this.columnEffGrossIncomeContractValue = new global::System.Data.DataColumn("EffGrossIncomeContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffGrossIncomeContractValue);
                this.columnEffGrossIncomeMarketValue = new global::System.Data.DataColumn("EffGrossIncomeMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffGrossIncomeMarketValue);
                this.columnInsuranceContractPercent = new global::System.Data.DataColumn("InsuranceContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceContractPercent);
                this.columnInsuranceContractValue = new global::System.Data.DataColumn("InsuranceContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceContractValue);
                this.columnInsuranceMarketPercent = new global::System.Data.DataColumn("InsuranceMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceMarketPercent);
                this.columnInsuranceMarketValue = new global::System.Data.DataColumn("InsuranceMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceMarketValue);
                this.columnManAndPayContractPercent = new global::System.Data.DataColumn("ManAndPayContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayContractPercent);
                this.columnManAndPayContractValue = new global::System.Data.DataColumn("ManAndPayContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayContractValue);
                this.columnManAndPayMarketPercent = new global::System.Data.DataColumn("ManAndPayMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayMarketPercent);
                this.columnManAndPayMarketValue = new global::System.Data.DataColumn("ManAndPayMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayMarketValue);
                this.columnUtilitiesContractPercent = new global::System.Data.DataColumn("UtilitiesContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesContractPercent);
                this.columnUtilitiesContractValue = new global::System.Data.DataColumn("UtilitiesContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesContractValue);
                this.columnUtilitiesMarketPercent = new global::System.Data.DataColumn("UtilitiesMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesMarketPercent);
                this.columnUtilitiesMarketValue = new global::System.Data.DataColumn("UtilitiesMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesMarketValue);
                this.columnMaintAndRepContractPercent = new global::System.Data.DataColumn("MaintAndRepContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepContractPercent);
                this.columnMaintAndRepContractValue = new global::System.Data.DataColumn("MaintAndRepContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepContractValue);
                this.columnMaintAndRepMarketPercent = new global::System.Data.DataColumn("MaintAndRepMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepMarketPercent);
                this.columnMaintAndRepMarketValue = new global::System.Data.DataColumn("MaintAndRepMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepMarketValue);
                this.columnResReplaceContractPercent = new global::System.Data.DataColumn("ResReplaceContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceContractPercent);
                this.columnResReplaceContractValue = new global::System.Data.DataColumn("ResReplaceContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceContractValue);
                this.columnResReplaceMarketPercent = new global::System.Data.DataColumn("ResReplaceMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceMarketPercent);
                this.columnResReplaceMarketValue = new global::System.Data.DataColumn("ResReplaceMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceMarketValue);
                this.columnTotalExpensesContractPercent = new global::System.Data.DataColumn("TotalExpensesContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesContractPercent);
                this.columnTotalExpensesContractValue = new global::System.Data.DataColumn("TotalExpensesContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesContractValue);
                this.columnTotalExpensesMarketPercent = new global::System.Data.DataColumn("TotalExpensesMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesMarketPercent);
                this.columnTotalExpensesMarketValue = new global::System.Data.DataColumn("TotalExpensesMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesMarketValue);
                this.columnNetOpIncContractValue = new global::System.Data.DataColumn("NetOpIncContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetOpIncContractValue);
                this.columnNetOpIncMarketValue = new global::System.Data.DataColumn("NetOpIncMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetOpIncMarketValue);
                this.columnCapitalizationRate = new global::System.Data.DataColumn("CapitalizationRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapitalizationRate);
                this.columnIsUseContract = new global::System.Data.DataColumn("IsUseContract", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUseContract);
                this.columnIncomeApproach = new global::System.Data.DataColumn("IncomeApproach", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeApproach);
                this.columnSuppliesContractPercent = new global::System.Data.DataColumn("SuppliesContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesContractPercent);
                this.columnSuppliesContractValue = new global::System.Data.DataColumn("SuppliesContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesContractValue);
                this.columnSuppliesMarketPercent = new global::System.Data.DataColumn("SuppliesMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesMarketPercent);
                this.columnSuppliesMarketValue = new global::System.Data.DataColumn("SuppliesMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesMarketValue);
                this.columnOtherExpensesContractPercent = new global::System.Data.DataColumn("OtherExpensesContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesContractPercent);
                this.columnOtherExpensesContractValue = new global::System.Data.DataColumn("OtherExpensesContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesContractValue);
                this.columnOtherExpensesMarketPercent = new global::System.Data.DataColumn("OtherExpensesMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesMarketPercent);
                this.columnOtherExpensesMarketValue = new global::System.Data.DataColumn("OtherExpensesMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesMarketValue);
                this.columnMiscIncomeContractPercent = new global::System.Data.DataColumn("MiscIncomeContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeContractPercent);
                this.columnMiscIncomeContractValue = new global::System.Data.DataColumn("MiscIncomeContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeContractValue);
                this.columnMiscIncomeMarketPercent = new global::System.Data.DataColumn("MiscIncomeMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeMarketPercent);
                this.columnMiscIncomeMarketValue = new global::System.Data.DataColumn("MiscIncomeMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeMarketValue);
                this.columnPersonalProperty = new global::System.Data.DataColumn("PersonalProperty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalProperty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetIncomeApproachValuesRow NewGetIncomeApproachValuesRow() {
                return ((GetIncomeApproachValuesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetIncomeApproachValuesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetIncomeApproachValuesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetIncomeApproachValuesRowChanged != null)) {
                    this.GetIncomeApproachValuesRowChanged(this, new GetIncomeApproachValuesRowChangeEvent(((GetIncomeApproachValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetIncomeApproachValuesRowChanging != null)) {
                    this.GetIncomeApproachValuesRowChanging(this, new GetIncomeApproachValuesRowChangeEvent(((GetIncomeApproachValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetIncomeApproachValuesRowDeleted != null)) {
                    this.GetIncomeApproachValuesRowDeleted(this, new GetIncomeApproachValuesRowChangeEvent(((GetIncomeApproachValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetIncomeApproachValuesRowDeleting != null)) {
                    this.GetIncomeApproachValuesRowDeleting(this, new GetIncomeApproachValuesRowChangeEvent(((GetIncomeApproachValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetIncomeApproachValuesRow(GetIncomeApproachValuesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36091IncomeApproachData ds = new F36091IncomeApproachData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetIncomeApproachValuesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CalculatedIncomeApproachValuesDataTable : global::System.Data.TypedTableBase<CalculatedIncomeApproachValuesRow> {
            
            private global::System.Data.DataColumn columnVacAndCollContractPercent;
            
            private global::System.Data.DataColumn columnVacAndCollMarketValue;
            
            private global::System.Data.DataColumn columnEffGrossIncomeContractValue;
            
            private global::System.Data.DataColumn columnEffGrossIncomeMarketValue;
            
            private global::System.Data.DataColumn columnInsuranceContractPercent;
            
            private global::System.Data.DataColumn columnInsuranceMarketValue;
            
            private global::System.Data.DataColumn columnManAndPayContractPercent;
            
            private global::System.Data.DataColumn columnManAndPayMarketValue;
            
            private global::System.Data.DataColumn columnUtilitiesContractPercent;
            
            private global::System.Data.DataColumn columnUtilitiesMarketValue;
            
            private global::System.Data.DataColumn columnMaintAndRepContractPercent;
            
            private global::System.Data.DataColumn columnMaintAndRepMarketValue;
            
            private global::System.Data.DataColumn columnResReplaceContractPercent;
            
            private global::System.Data.DataColumn columnResReplaceMarketValue;
            
            private global::System.Data.DataColumn columnTotalExpensesContractPercent;
            
            private global::System.Data.DataColumn columnTotalExpensesContractValue;
            
            private global::System.Data.DataColumn columnTotalExpensesMarketPercent;
            
            private global::System.Data.DataColumn columnTotalExpensesMarketValue;
            
            private global::System.Data.DataColumn columnNetOpIncContractValue;
            
            private global::System.Data.DataColumn columnNetOpIncMarketValue;
            
            private global::System.Data.DataColumn columnIncomeApproach;
            
            private global::System.Data.DataColumn columnSuppliesContractPercent;
            
            private global::System.Data.DataColumn columnSuppliesContractValue;
            
            private global::System.Data.DataColumn columnSuppliesMarketPercent;
            
            private global::System.Data.DataColumn columnSuppliesMarketValue;
            
            private global::System.Data.DataColumn columnOtherExpensesContractPercent;
            
            private global::System.Data.DataColumn columnOtherExpensesContractValue;
            
            private global::System.Data.DataColumn columnOtherExpensesMarketPercent;
            
            private global::System.Data.DataColumn columnOtherExpensesMarketValue;
            
            private global::System.Data.DataColumn columnMiscIncomeContractPercent;
            
            private global::System.Data.DataColumn columnMiscIncomeContractValue;
            
            private global::System.Data.DataColumn columnMiscIncomeMarketPercent;
            
            private global::System.Data.DataColumn columnMiscIncomeMarketValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CalculatedIncomeApproachValuesDataTable() {
                this.TableName = "CalculatedIncomeApproachValues";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CalculatedIncomeApproachValuesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CalculatedIncomeApproachValuesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollContractPercentColumn {
                get {
                    return this.columnVacAndCollContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VacAndCollMarketValueColumn {
                get {
                    return this.columnVacAndCollMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffGrossIncomeContractValueColumn {
                get {
                    return this.columnEffGrossIncomeContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffGrossIncomeMarketValueColumn {
                get {
                    return this.columnEffGrossIncomeMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceContractPercentColumn {
                get {
                    return this.columnInsuranceContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceMarketValueColumn {
                get {
                    return this.columnInsuranceMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayContractPercentColumn {
                get {
                    return this.columnManAndPayContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManAndPayMarketValueColumn {
                get {
                    return this.columnManAndPayMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesContractPercentColumn {
                get {
                    return this.columnUtilitiesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilitiesMarketValueColumn {
                get {
                    return this.columnUtilitiesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepContractPercentColumn {
                get {
                    return this.columnMaintAndRepContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintAndRepMarketValueColumn {
                get {
                    return this.columnMaintAndRepMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceContractPercentColumn {
                get {
                    return this.columnResReplaceContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResReplaceMarketValueColumn {
                get {
                    return this.columnResReplaceMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesContractPercentColumn {
                get {
                    return this.columnTotalExpensesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesContractValueColumn {
                get {
                    return this.columnTotalExpensesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesMarketPercentColumn {
                get {
                    return this.columnTotalExpensesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpensesMarketValueColumn {
                get {
                    return this.columnTotalExpensesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetOpIncContractValueColumn {
                get {
                    return this.columnNetOpIncContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetOpIncMarketValueColumn {
                get {
                    return this.columnNetOpIncMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeApproachColumn {
                get {
                    return this.columnIncomeApproach;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesContractPercentColumn {
                get {
                    return this.columnSuppliesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesContractValueColumn {
                get {
                    return this.columnSuppliesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesMarketPercentColumn {
                get {
                    return this.columnSuppliesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppliesMarketValueColumn {
                get {
                    return this.columnSuppliesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesContractPercentColumn {
                get {
                    return this.columnOtherExpensesContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesContractValueColumn {
                get {
                    return this.columnOtherExpensesContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesMarketPercentColumn {
                get {
                    return this.columnOtherExpensesMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherExpensesMarketValueColumn {
                get {
                    return this.columnOtherExpensesMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeContractPercentColumn {
                get {
                    return this.columnMiscIncomeContractPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeContractValueColumn {
                get {
                    return this.columnMiscIncomeContractValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeMarketPercentColumn {
                get {
                    return this.columnMiscIncomeMarketPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscIncomeMarketValueColumn {
                get {
                    return this.columnMiscIncomeMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CalculatedIncomeApproachValuesRow this[int index] {
                get {
                    return ((CalculatedIncomeApproachValuesRow)(this.Rows[index]));
                }
            }
            
            public event CalculatedIncomeApproachValuesRowChangeEventHandler CalculatedIncomeApproachValuesRowChanging;
            
            public event CalculatedIncomeApproachValuesRowChangeEventHandler CalculatedIncomeApproachValuesRowChanged;
            
            public event CalculatedIncomeApproachValuesRowChangeEventHandler CalculatedIncomeApproachValuesRowDeleting;
            
            public event CalculatedIncomeApproachValuesRowChangeEventHandler CalculatedIncomeApproachValuesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCalculatedIncomeApproachValuesRow(CalculatedIncomeApproachValuesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CalculatedIncomeApproachValuesRow AddCalculatedIncomeApproachValuesRow(
                        decimal VacAndCollContractPercent, 
                        decimal VacAndCollMarketValue, 
                        decimal EffGrossIncomeContractValue, 
                        decimal EffGrossIncomeMarketValue, 
                        decimal InsuranceContractPercent, 
                        decimal InsuranceMarketValue, 
                        decimal ManAndPayContractPercent, 
                        decimal ManAndPayMarketValue, 
                        decimal UtilitiesContractPercent, 
                        decimal UtilitiesMarketValue, 
                        decimal MaintAndRepContractPercent, 
                        decimal MaintAndRepMarketValue, 
                        decimal ResReplaceContractPercent, 
                        decimal ResReplaceMarketValue, 
                        decimal TotalExpensesContractPercent, 
                        decimal TotalExpensesContractValue, 
                        decimal TotalExpensesMarketPercent, 
                        decimal TotalExpensesMarketValue, 
                        decimal NetOpIncContractValue, 
                        decimal NetOpIncMarketValue, 
                        string IncomeApproach, 
                        decimal SuppliesContractPercent, 
                        decimal SuppliesContractValue, 
                        decimal SuppliesMarketPercent, 
                        decimal SuppliesMarketValue, 
                        decimal OtherExpensesContractPercent, 
                        decimal OtherExpensesContractValue, 
                        decimal OtherExpensesMarketPercent, 
                        decimal OtherExpensesMarketValue, 
                        decimal MiscIncomeContractPercent, 
                        decimal MiscIncomeContractValue, 
                        decimal MiscIncomeMarketPercent, 
                        decimal MiscIncomeMarketValue) {
                CalculatedIncomeApproachValuesRow rowCalculatedIncomeApproachValuesRow = ((CalculatedIncomeApproachValuesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VacAndCollContractPercent,
                        VacAndCollMarketValue,
                        EffGrossIncomeContractValue,
                        EffGrossIncomeMarketValue,
                        InsuranceContractPercent,
                        InsuranceMarketValue,
                        ManAndPayContractPercent,
                        ManAndPayMarketValue,
                        UtilitiesContractPercent,
                        UtilitiesMarketValue,
                        MaintAndRepContractPercent,
                        MaintAndRepMarketValue,
                        ResReplaceContractPercent,
                        ResReplaceMarketValue,
                        TotalExpensesContractPercent,
                        TotalExpensesContractValue,
                        TotalExpensesMarketPercent,
                        TotalExpensesMarketValue,
                        NetOpIncContractValue,
                        NetOpIncMarketValue,
                        IncomeApproach,
                        SuppliesContractPercent,
                        SuppliesContractValue,
                        SuppliesMarketPercent,
                        SuppliesMarketValue,
                        OtherExpensesContractPercent,
                        OtherExpensesContractValue,
                        OtherExpensesMarketPercent,
                        OtherExpensesMarketValue,
                        MiscIncomeContractPercent,
                        MiscIncomeContractValue,
                        MiscIncomeMarketPercent,
                        MiscIncomeMarketValue};
                rowCalculatedIncomeApproachValuesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCalculatedIncomeApproachValuesRow);
                return rowCalculatedIncomeApproachValuesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CalculatedIncomeApproachValuesDataTable cln = ((CalculatedIncomeApproachValuesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CalculatedIncomeApproachValuesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVacAndCollContractPercent = base.Columns["VacAndCollContractPercent"];
                this.columnVacAndCollMarketValue = base.Columns["VacAndCollMarketValue"];
                this.columnEffGrossIncomeContractValue = base.Columns["EffGrossIncomeContractValue"];
                this.columnEffGrossIncomeMarketValue = base.Columns["EffGrossIncomeMarketValue"];
                this.columnInsuranceContractPercent = base.Columns["InsuranceContractPercent"];
                this.columnInsuranceMarketValue = base.Columns["InsuranceMarketValue"];
                this.columnManAndPayContractPercent = base.Columns["ManAndPayContractPercent"];
                this.columnManAndPayMarketValue = base.Columns["ManAndPayMarketValue"];
                this.columnUtilitiesContractPercent = base.Columns["UtilitiesContractPercent"];
                this.columnUtilitiesMarketValue = base.Columns["UtilitiesMarketValue"];
                this.columnMaintAndRepContractPercent = base.Columns["MaintAndRepContractPercent"];
                this.columnMaintAndRepMarketValue = base.Columns["MaintAndRepMarketValue"];
                this.columnResReplaceContractPercent = base.Columns["ResReplaceContractPercent"];
                this.columnResReplaceMarketValue = base.Columns["ResReplaceMarketValue"];
                this.columnTotalExpensesContractPercent = base.Columns["TotalExpensesContractPercent"];
                this.columnTotalExpensesContractValue = base.Columns["TotalExpensesContractValue"];
                this.columnTotalExpensesMarketPercent = base.Columns["TotalExpensesMarketPercent"];
                this.columnTotalExpensesMarketValue = base.Columns["TotalExpensesMarketValue"];
                this.columnNetOpIncContractValue = base.Columns["NetOpIncContractValue"];
                this.columnNetOpIncMarketValue = base.Columns["NetOpIncMarketValue"];
                this.columnIncomeApproach = base.Columns["IncomeApproach"];
                this.columnSuppliesContractPercent = base.Columns["SuppliesContractPercent"];
                this.columnSuppliesContractValue = base.Columns["SuppliesContractValue"];
                this.columnSuppliesMarketPercent = base.Columns["SuppliesMarketPercent"];
                this.columnSuppliesMarketValue = base.Columns["SuppliesMarketValue"];
                this.columnOtherExpensesContractPercent = base.Columns["OtherExpensesContractPercent"];
                this.columnOtherExpensesContractValue = base.Columns["OtherExpensesContractValue"];
                this.columnOtherExpensesMarketPercent = base.Columns["OtherExpensesMarketPercent"];
                this.columnOtherExpensesMarketValue = base.Columns["OtherExpensesMarketValue"];
                this.columnMiscIncomeContractPercent = base.Columns["MiscIncomeContractPercent"];
                this.columnMiscIncomeContractValue = base.Columns["MiscIncomeContractValue"];
                this.columnMiscIncomeMarketPercent = base.Columns["MiscIncomeMarketPercent"];
                this.columnMiscIncomeMarketValue = base.Columns["MiscIncomeMarketValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVacAndCollContractPercent = new global::System.Data.DataColumn("VacAndCollContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollContractPercent);
                this.columnVacAndCollMarketValue = new global::System.Data.DataColumn("VacAndCollMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAndCollMarketValue);
                this.columnEffGrossIncomeContractValue = new global::System.Data.DataColumn("EffGrossIncomeContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffGrossIncomeContractValue);
                this.columnEffGrossIncomeMarketValue = new global::System.Data.DataColumn("EffGrossIncomeMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffGrossIncomeMarketValue);
                this.columnInsuranceContractPercent = new global::System.Data.DataColumn("InsuranceContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceContractPercent);
                this.columnInsuranceMarketValue = new global::System.Data.DataColumn("InsuranceMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceMarketValue);
                this.columnManAndPayContractPercent = new global::System.Data.DataColumn("ManAndPayContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayContractPercent);
                this.columnManAndPayMarketValue = new global::System.Data.DataColumn("ManAndPayMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManAndPayMarketValue);
                this.columnUtilitiesContractPercent = new global::System.Data.DataColumn("UtilitiesContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesContractPercent);
                this.columnUtilitiesMarketValue = new global::System.Data.DataColumn("UtilitiesMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilitiesMarketValue);
                this.columnMaintAndRepContractPercent = new global::System.Data.DataColumn("MaintAndRepContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepContractPercent);
                this.columnMaintAndRepMarketValue = new global::System.Data.DataColumn("MaintAndRepMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintAndRepMarketValue);
                this.columnResReplaceContractPercent = new global::System.Data.DataColumn("ResReplaceContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceContractPercent);
                this.columnResReplaceMarketValue = new global::System.Data.DataColumn("ResReplaceMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReplaceMarketValue);
                this.columnTotalExpensesContractPercent = new global::System.Data.DataColumn("TotalExpensesContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesContractPercent);
                this.columnTotalExpensesContractValue = new global::System.Data.DataColumn("TotalExpensesContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesContractValue);
                this.columnTotalExpensesMarketPercent = new global::System.Data.DataColumn("TotalExpensesMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesMarketPercent);
                this.columnTotalExpensesMarketValue = new global::System.Data.DataColumn("TotalExpensesMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpensesMarketValue);
                this.columnNetOpIncContractValue = new global::System.Data.DataColumn("NetOpIncContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetOpIncContractValue);
                this.columnNetOpIncMarketValue = new global::System.Data.DataColumn("NetOpIncMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetOpIncMarketValue);
                this.columnIncomeApproach = new global::System.Data.DataColumn("IncomeApproach", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeApproach);
                this.columnSuppliesContractPercent = new global::System.Data.DataColumn("SuppliesContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesContractPercent);
                this.columnSuppliesContractValue = new global::System.Data.DataColumn("SuppliesContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesContractValue);
                this.columnSuppliesMarketPercent = new global::System.Data.DataColumn("SuppliesMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesMarketPercent);
                this.columnSuppliesMarketValue = new global::System.Data.DataColumn("SuppliesMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppliesMarketValue);
                this.columnOtherExpensesContractPercent = new global::System.Data.DataColumn("OtherExpensesContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesContractPercent);
                this.columnOtherExpensesContractValue = new global::System.Data.DataColumn("OtherExpensesContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesContractValue);
                this.columnOtherExpensesMarketPercent = new global::System.Data.DataColumn("OtherExpensesMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesMarketPercent);
                this.columnOtherExpensesMarketValue = new global::System.Data.DataColumn("OtherExpensesMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherExpensesMarketValue);
                this.columnMiscIncomeContractPercent = new global::System.Data.DataColumn("MiscIncomeContractPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeContractPercent);
                this.columnMiscIncomeContractValue = new global::System.Data.DataColumn("MiscIncomeContractValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeContractValue);
                this.columnMiscIncomeMarketPercent = new global::System.Data.DataColumn("MiscIncomeMarketPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeMarketPercent);
                this.columnMiscIncomeMarketValue = new global::System.Data.DataColumn("MiscIncomeMarketValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscIncomeMarketValue);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CalculatedIncomeApproachValuesRow NewCalculatedIncomeApproachValuesRow() {
                return ((CalculatedIncomeApproachValuesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CalculatedIncomeApproachValuesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CalculatedIncomeApproachValuesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CalculatedIncomeApproachValuesRowChanged != null)) {
                    this.CalculatedIncomeApproachValuesRowChanged(this, new CalculatedIncomeApproachValuesRowChangeEvent(((CalculatedIncomeApproachValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CalculatedIncomeApproachValuesRowChanging != null)) {
                    this.CalculatedIncomeApproachValuesRowChanging(this, new CalculatedIncomeApproachValuesRowChangeEvent(((CalculatedIncomeApproachValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CalculatedIncomeApproachValuesRowDeleted != null)) {
                    this.CalculatedIncomeApproachValuesRowDeleted(this, new CalculatedIncomeApproachValuesRowChangeEvent(((CalculatedIncomeApproachValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CalculatedIncomeApproachValuesRowDeleting != null)) {
                    this.CalculatedIncomeApproachValuesRowDeleting(this, new CalculatedIncomeApproachValuesRowChangeEvent(((CalculatedIncomeApproachValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCalculatedIncomeApproachValuesRow(CalculatedIncomeApproachValuesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36091IncomeApproachData ds = new F36091IncomeApproachData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CalculatedIncomeApproachValuesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IncomeSourcesRow : global::System.Data.DataRow {
            
            private IncomeSourcesDataTable tableIncomeSources;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncomeSourcesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIncomeSources = ((IncomeSourcesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IncomeApproachItemID {
                get {
                    try {
                        return ((int)(this[this.tableIncomeSources.IncomeApproachItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeApproachItemID\' in table \'IncomeSources\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSources.IncomeApproachItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IncomeSourceID {
                get {
                    try {
                        return ((int)(this[this.tableIncomeSources.IncomeSourceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeSourceID\' in table \'IncomeSources\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSources.IncomeSourceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Source {
                get {
                    try {
                        return ((string)(this[this.tableIncomeSources.SourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Source\' in table \'IncomeSources\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSources.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableIncomeSources.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'IncomeSources\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSources.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Units {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeSources.UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Units\' in table \'IncomeSources\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSources.UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ContractPerUnit {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeSources.ContractPerUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractPerUnit\' in table \'IncomeSources\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSources.ContractPerUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MarketPerUnit {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeSources.MarketPerUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketPerUnit\' in table \'IncomeSources\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSources.MarketPerUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Market {
                get {
                    try {
                        return ((double)(this[this.tableIncomeSources.MarketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Market\' in table \'IncomeSources\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSources.MarketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Contract {
                get {
                    try {
                        return ((double)(this[this.tableIncomeSources.ContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contract\' in table \'IncomeSources\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSources.ContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeApproachItemIDNull() {
                return this.IsNull(this.tableIncomeSources.IncomeApproachItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeApproachItemIDNull() {
                this[this.tableIncomeSources.IncomeApproachItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeSourceIDNull() {
                return this.IsNull(this.tableIncomeSources.IncomeSourceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeSourceIDNull() {
                this[this.tableIncomeSources.IncomeSourceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceNull() {
                return this.IsNull(this.tableIncomeSources.SourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceNull() {
                this[this.tableIncomeSources.SourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableIncomeSources.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableIncomeSources.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsNull() {
                return this.IsNull(this.tableIncomeSources.UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsNull() {
                this[this.tableIncomeSources.UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractPerUnitNull() {
                return this.IsNull(this.tableIncomeSources.ContractPerUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractPerUnitNull() {
                this[this.tableIncomeSources.ContractPerUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketPerUnitNull() {
                return this.IsNull(this.tableIncomeSources.MarketPerUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketPerUnitNull() {
                this[this.tableIncomeSources.MarketPerUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketNull() {
                return this.IsNull(this.tableIncomeSources.MarketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketNull() {
                this[this.tableIncomeSources.MarketColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractNull() {
                return this.IsNull(this.tableIncomeSources.ContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractNull() {
                this[this.tableIncomeSources.ContractColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IncomeApproachRow : global::System.Data.DataRow {
            
            private IncomeApproachDataTable tableIncomeApproach;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncomeApproachRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIncomeApproach = ((IncomeApproachDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VacAndCollContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.VacAndCollContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollContractValue\' in table \'IncomeApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.VacAndCollContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VacAndCollMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.VacAndCollMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollMarketPercent\' in table \'IncomeApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.VacAndCollMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InsuranceContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.InsuranceContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceContractValue\' in table \'IncomeApproach\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.InsuranceContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InsuranceMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.InsuranceMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceMarketPercent\' in table \'IncomeApproach\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.InsuranceMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ManAndPayContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.ManAndPayContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayContractValue\' in table \'IncomeApproach\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.ManAndPayContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ManAndPayMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.ManAndPayMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayMarketPercent\' in table \'IncomeApproach\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.ManAndPayMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilitiesContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.UtilitiesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesContractValue\' in table \'IncomeApproach\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.UtilitiesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilitiesMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.UtilitiesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesMarketPercent\' in table \'IncomeApproach\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.UtilitiesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MaintAndRepContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.MaintAndRepContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepContractValue\' in table \'IncomeApproach\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.MaintAndRepContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MaintAndRepMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.MaintAndRepMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepMarketPercent\' in table \'IncomeApproach\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.MaintAndRepMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResReplaceContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.ResReplaceContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceContractValue\' in table \'IncomeApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.ResReplaceContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResReplaceMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.ResReplaceMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceMarketPercent\' in table \'IncomeApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.ResReplaceMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CapitalizationRate {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.CapitalizationRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapitalizationRate\' in table \'IncomeApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.CapitalizationRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseContract {
                get {
                    try {
                        return ((bool)(this[this.tableIncomeApproach.IsUseContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsUseContract\' in table \'IncomeApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.IsUseContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IncomeApproach {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.IncomeApproachColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeApproach\' in table \'IncomeApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.IncomeApproachColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SuppliesContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.SuppliesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesContractValue\' in table \'IncomeApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.SuppliesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SuppliesMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.SuppliesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesMarketPercent\' in table \'IncomeApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.SuppliesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExpensesContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.OtherExpensesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesContractValue\' in table \'IncomeApproach\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.OtherExpensesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExpensesMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.OtherExpensesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesMarketPercent\' in table \'IncomeApproach\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.OtherExpensesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscIncomeContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.MiscIncomeContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeContractValue\' in table \'IncomeApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.MiscIncomeContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscIncomeMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.MiscIncomeMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeMarketPercent\' in table \'IncomeApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.MiscIncomeMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PersonalProperty {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproach.PersonalPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalProperty\' in table \'IncomeApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproach.PersonalPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollContractValueNull() {
                return this.IsNull(this.tableIncomeApproach.VacAndCollContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollContractValueNull() {
                this[this.tableIncomeApproach.VacAndCollContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproach.VacAndCollMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollMarketPercentNull() {
                this[this.tableIncomeApproach.VacAndCollMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceContractValueNull() {
                return this.IsNull(this.tableIncomeApproach.InsuranceContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceContractValueNull() {
                this[this.tableIncomeApproach.InsuranceContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproach.InsuranceMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceMarketPercentNull() {
                this[this.tableIncomeApproach.InsuranceMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayContractValueNull() {
                return this.IsNull(this.tableIncomeApproach.ManAndPayContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayContractValueNull() {
                this[this.tableIncomeApproach.ManAndPayContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproach.ManAndPayMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayMarketPercentNull() {
                this[this.tableIncomeApproach.ManAndPayMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesContractValueNull() {
                return this.IsNull(this.tableIncomeApproach.UtilitiesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesContractValueNull() {
                this[this.tableIncomeApproach.UtilitiesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproach.UtilitiesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesMarketPercentNull() {
                this[this.tableIncomeApproach.UtilitiesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepContractValueNull() {
                return this.IsNull(this.tableIncomeApproach.MaintAndRepContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepContractValueNull() {
                this[this.tableIncomeApproach.MaintAndRepContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproach.MaintAndRepMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepMarketPercentNull() {
                this[this.tableIncomeApproach.MaintAndRepMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceContractValueNull() {
                return this.IsNull(this.tableIncomeApproach.ResReplaceContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceContractValueNull() {
                this[this.tableIncomeApproach.ResReplaceContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproach.ResReplaceMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceMarketPercentNull() {
                this[this.tableIncomeApproach.ResReplaceMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCapitalizationRateNull() {
                return this.IsNull(this.tableIncomeApproach.CapitalizationRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCapitalizationRateNull() {
                this[this.tableIncomeApproach.CapitalizationRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsUseContractNull() {
                return this.IsNull(this.tableIncomeApproach.IsUseContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsUseContractNull() {
                this[this.tableIncomeApproach.IsUseContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeApproachNull() {
                return this.IsNull(this.tableIncomeApproach.IncomeApproachColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeApproachNull() {
                this[this.tableIncomeApproach.IncomeApproachColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesContractValueNull() {
                return this.IsNull(this.tableIncomeApproach.SuppliesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesContractValueNull() {
                this[this.tableIncomeApproach.SuppliesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproach.SuppliesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesMarketPercentNull() {
                this[this.tableIncomeApproach.SuppliesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesContractValueNull() {
                return this.IsNull(this.tableIncomeApproach.OtherExpensesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesContractValueNull() {
                this[this.tableIncomeApproach.OtherExpensesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproach.OtherExpensesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesMarketPercentNull() {
                this[this.tableIncomeApproach.OtherExpensesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeContractValueNull() {
                return this.IsNull(this.tableIncomeApproach.MiscIncomeContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeContractValueNull() {
                this[this.tableIncomeApproach.MiscIncomeContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproach.MiscIncomeMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeMarketPercentNull() {
                this[this.tableIncomeApproach.MiscIncomeMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalPropertyNull() {
                return this.IsNull(this.tableIncomeApproach.PersonalPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalPropertyNull() {
                this[this.tableIncomeApproach.PersonalPropertyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IncomeApproachDetailsRow : global::System.Data.DataRow {
            
            private IncomeApproachDetailsDataTable tableIncomeApproachDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncomeApproachDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIncomeApproachDetails = ((IncomeApproachDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueSliceID {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.ValueSliceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueSliceID\' in table \'IncomeApproachDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.ValueSliceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IncomeApproachID {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.IncomeApproachIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeApproachID\' in table \'IncomeApproachDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.IncomeApproachIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PotGrossIncomeContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.PotGrossIncomeContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PotGrossIncomeContractValue\' in table \'IncomeApproachDetail" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.PotGrossIncomeContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PotGrossIncomeMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.PotGrossIncomeMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PotGrossIncomeMarketValue\' in table \'IncomeApproachDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.PotGrossIncomeMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VacAndCollContractPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.VacAndCollContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollContractPercent\' in table \'IncomeApproachDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.VacAndCollContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VacAndCollContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.VacAndCollContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollContractValue\' in table \'IncomeApproachDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.VacAndCollContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VacAndCollMarketPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.VacAndCollMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollMarketPercent\' in table \'IncomeApproachDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.VacAndCollMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VacAndCollMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.VacAndCollMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollMarketValue\' in table \'IncomeApproachDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.VacAndCollMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EffGrossIncomeContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.EffGrossIncomeContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffGrossIncomeContractValue\' in table \'IncomeApproachDetail" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.EffGrossIncomeContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EffGrossIncomeMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.EffGrossIncomeMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffGrossIncomeMarketValue\' in table \'IncomeApproachDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.EffGrossIncomeMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsuranceContractPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.InsuranceContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceContractPercent\' in table \'IncomeApproachDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.InsuranceContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsuranceContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.InsuranceContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceContractValue\' in table \'IncomeApproachDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.InsuranceContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsuranceMarketPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.InsuranceMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceMarketPercent\' in table \'IncomeApproachDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.InsuranceMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsuranceMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.InsuranceMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceMarketValue\' in table \'IncomeApproachDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.InsuranceMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManAndPayContractPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.ManAndPayContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayContractPercent\' in table \'IncomeApproachDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.ManAndPayContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManAndPayContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.ManAndPayContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayContractValue\' in table \'IncomeApproachDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.ManAndPayContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManAndPayMarketPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.ManAndPayMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayMarketPercent\' in table \'IncomeApproachDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.ManAndPayMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManAndPayMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.ManAndPayMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayMarketValue\' in table \'IncomeApproachDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.ManAndPayMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UtilitiesContractPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.UtilitiesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesContractPercent\' in table \'IncomeApproachDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.UtilitiesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UtilitiesContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.UtilitiesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesContractValue\' in table \'IncomeApproachDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.UtilitiesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UtilitiesMarketPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.UtilitiesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesMarketPercent\' in table \'IncomeApproachDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.UtilitiesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UtilitiesMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.UtilitiesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesMarketValue\' in table \'IncomeApproachDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.UtilitiesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaintAndRepContractPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.MaintAndRepContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepContractPercent\' in table \'IncomeApproachDetails" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.MaintAndRepContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaintAndRepMarketPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.MaintAndRepMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepMarketPercent\' in table \'IncomeApproachDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.MaintAndRepMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaintAndRepMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.MaintAndRepMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepMarketValue\' in table \'IncomeApproachDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.MaintAndRepMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResReplaceContractPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.ResReplaceContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceContractPercent\' in table \'IncomeApproachDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.ResReplaceContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResReplaceContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.ResReplaceContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceContractValue\' in table \'IncomeApproachDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.ResReplaceContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResReplaceMarketPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.ResReplaceMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceMarketPercent\' in table \'IncomeApproachDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.ResReplaceMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResReplaceMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.ResReplaceMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceMarketValue\' in table \'IncomeApproachDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.ResReplaceMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalExpensesContractPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.TotalExpensesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesContractPercent\' in table \'IncomeApproachDetai" +
                                "ls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.TotalExpensesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalExpensesContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.TotalExpensesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesContractValue\' in table \'IncomeApproachDetails" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.TotalExpensesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalExpensesMarketPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.TotalExpensesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesMarketPercent\' in table \'IncomeApproachDetails" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.TotalExpensesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalExpensesMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.TotalExpensesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesMarketValue\' in table \'IncomeApproachDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.TotalExpensesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetOpIncContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.NetOpIncContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetOpIncContractValue\' in table \'IncomeApproachDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.NetOpIncContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetOpIncMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.NetOpIncMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetOpIncMarketValue\' in table \'IncomeApproachDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.NetOpIncMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CapitalizationRate {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.CapitalizationRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapitalizationRate\' in table \'IncomeApproachDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.CapitalizationRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsUseContract {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.IsUseContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsUseContract\' in table \'IncomeApproachDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.IsUseContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IncomeApproach {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.IncomeApproachColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeApproach\' in table \'IncomeApproachDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.IncomeApproachColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MaintAndRepContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproachDetails.MaintAndRepContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepContractValue\' in table \'IncomeApproachDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.MaintAndRepContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SuppliesContractPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.SuppliesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesContractPercent\' in table \'IncomeApproachDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.SuppliesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SuppliesContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.SuppliesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesContractValue\' in table \'IncomeApproachDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.SuppliesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SuppliesMarketPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.SuppliesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesMarketPercent\' in table \'IncomeApproachDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.SuppliesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SuppliesMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.SuppliesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesMarketValue\' in table \'IncomeApproachDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.SuppliesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherExpensesContractPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.OtherExpensesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesContractPercent\' in table \'IncomeApproachDetai" +
                                "ls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.OtherExpensesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherExpensesContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.OtherExpensesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesContractValue\' in table \'IncomeApproachDetails" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.OtherExpensesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherExpensesMarketPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.OtherExpensesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesMarketPercent\' in table \'IncomeApproachDetails" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.OtherExpensesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherExpensesMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.OtherExpensesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesMarketValue\' in table \'IncomeApproachDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.OtherExpensesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiscIncomeContractPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.MiscIncomeContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeContractPercent\' in table \'IncomeApproachDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.MiscIncomeContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiscIncomeContractValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.MiscIncomeContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeContractValue\' in table \'IncomeApproachDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.MiscIncomeContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiscIncomeMarketPercent {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.MiscIncomeMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeMarketPercent\' in table \'IncomeApproachDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.MiscIncomeMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiscIncomeMarketValue {
                get {
                    try {
                        return ((string)(this[this.tableIncomeApproachDetails.MiscIncomeMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeMarketValue\' in table \'IncomeApproachDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.MiscIncomeMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PersonalProperty {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproachDetails.PersonalPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalProperty\' in table \'IncomeApproachDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachDetails.PersonalPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueSliceIDNull() {
                return this.IsNull(this.tableIncomeApproachDetails.ValueSliceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueSliceIDNull() {
                this[this.tableIncomeApproachDetails.ValueSliceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeApproachIDNull() {
                return this.IsNull(this.tableIncomeApproachDetails.IncomeApproachIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeApproachIDNull() {
                this[this.tableIncomeApproachDetails.IncomeApproachIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPotGrossIncomeContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.PotGrossIncomeContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPotGrossIncomeContractValueNull() {
                this[this.tableIncomeApproachDetails.PotGrossIncomeContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPotGrossIncomeMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.PotGrossIncomeMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPotGrossIncomeMarketValueNull() {
                this[this.tableIncomeApproachDetails.PotGrossIncomeMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollContractPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.VacAndCollContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollContractPercentNull() {
                this[this.tableIncomeApproachDetails.VacAndCollContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.VacAndCollContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollContractValueNull() {
                this[this.tableIncomeApproachDetails.VacAndCollContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.VacAndCollMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollMarketPercentNull() {
                this[this.tableIncomeApproachDetails.VacAndCollMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.VacAndCollMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollMarketValueNull() {
                this[this.tableIncomeApproachDetails.VacAndCollMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffGrossIncomeContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.EffGrossIncomeContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffGrossIncomeContractValueNull() {
                this[this.tableIncomeApproachDetails.EffGrossIncomeContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffGrossIncomeMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.EffGrossIncomeMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffGrossIncomeMarketValueNull() {
                this[this.tableIncomeApproachDetails.EffGrossIncomeMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceContractPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.InsuranceContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceContractPercentNull() {
                this[this.tableIncomeApproachDetails.InsuranceContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.InsuranceContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceContractValueNull() {
                this[this.tableIncomeApproachDetails.InsuranceContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.InsuranceMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceMarketPercentNull() {
                this[this.tableIncomeApproachDetails.InsuranceMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.InsuranceMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceMarketValueNull() {
                this[this.tableIncomeApproachDetails.InsuranceMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayContractPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.ManAndPayContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayContractPercentNull() {
                this[this.tableIncomeApproachDetails.ManAndPayContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.ManAndPayContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayContractValueNull() {
                this[this.tableIncomeApproachDetails.ManAndPayContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.ManAndPayMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayMarketPercentNull() {
                this[this.tableIncomeApproachDetails.ManAndPayMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.ManAndPayMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayMarketValueNull() {
                this[this.tableIncomeApproachDetails.ManAndPayMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesContractPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.UtilitiesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesContractPercentNull() {
                this[this.tableIncomeApproachDetails.UtilitiesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.UtilitiesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesContractValueNull() {
                this[this.tableIncomeApproachDetails.UtilitiesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.UtilitiesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesMarketPercentNull() {
                this[this.tableIncomeApproachDetails.UtilitiesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.UtilitiesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesMarketValueNull() {
                this[this.tableIncomeApproachDetails.UtilitiesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepContractPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.MaintAndRepContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepContractPercentNull() {
                this[this.tableIncomeApproachDetails.MaintAndRepContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.MaintAndRepMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepMarketPercentNull() {
                this[this.tableIncomeApproachDetails.MaintAndRepMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.MaintAndRepMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepMarketValueNull() {
                this[this.tableIncomeApproachDetails.MaintAndRepMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceContractPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.ResReplaceContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceContractPercentNull() {
                this[this.tableIncomeApproachDetails.ResReplaceContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.ResReplaceContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceContractValueNull() {
                this[this.tableIncomeApproachDetails.ResReplaceContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.ResReplaceMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceMarketPercentNull() {
                this[this.tableIncomeApproachDetails.ResReplaceMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.ResReplaceMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceMarketValueNull() {
                this[this.tableIncomeApproachDetails.ResReplaceMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesContractPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.TotalExpensesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesContractPercentNull() {
                this[this.tableIncomeApproachDetails.TotalExpensesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.TotalExpensesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesContractValueNull() {
                this[this.tableIncomeApproachDetails.TotalExpensesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.TotalExpensesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesMarketPercentNull() {
                this[this.tableIncomeApproachDetails.TotalExpensesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.TotalExpensesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesMarketValueNull() {
                this[this.tableIncomeApproachDetails.TotalExpensesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetOpIncContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.NetOpIncContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetOpIncContractValueNull() {
                this[this.tableIncomeApproachDetails.NetOpIncContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetOpIncMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.NetOpIncMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetOpIncMarketValueNull() {
                this[this.tableIncomeApproachDetails.NetOpIncMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCapitalizationRateNull() {
                return this.IsNull(this.tableIncomeApproachDetails.CapitalizationRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCapitalizationRateNull() {
                this[this.tableIncomeApproachDetails.CapitalizationRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsUseContractNull() {
                return this.IsNull(this.tableIncomeApproachDetails.IsUseContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsUseContractNull() {
                this[this.tableIncomeApproachDetails.IsUseContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeApproachNull() {
                return this.IsNull(this.tableIncomeApproachDetails.IncomeApproachColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeApproachNull() {
                this[this.tableIncomeApproachDetails.IncomeApproachColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.MaintAndRepContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepContractValueNull() {
                this[this.tableIncomeApproachDetails.MaintAndRepContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesContractPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.SuppliesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesContractPercentNull() {
                this[this.tableIncomeApproachDetails.SuppliesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.SuppliesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesContractValueNull() {
                this[this.tableIncomeApproachDetails.SuppliesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.SuppliesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesMarketPercentNull() {
                this[this.tableIncomeApproachDetails.SuppliesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.SuppliesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesMarketValueNull() {
                this[this.tableIncomeApproachDetails.SuppliesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesContractPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.OtherExpensesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesContractPercentNull() {
                this[this.tableIncomeApproachDetails.OtherExpensesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.OtherExpensesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesContractValueNull() {
                this[this.tableIncomeApproachDetails.OtherExpensesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.OtherExpensesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesMarketPercentNull() {
                this[this.tableIncomeApproachDetails.OtherExpensesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.OtherExpensesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesMarketValueNull() {
                this[this.tableIncomeApproachDetails.OtherExpensesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeContractPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.MiscIncomeContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeContractPercentNull() {
                this[this.tableIncomeApproachDetails.MiscIncomeContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeContractValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.MiscIncomeContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeContractValueNull() {
                this[this.tableIncomeApproachDetails.MiscIncomeContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeMarketPercentNull() {
                return this.IsNull(this.tableIncomeApproachDetails.MiscIncomeMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeMarketPercentNull() {
                this[this.tableIncomeApproachDetails.MiscIncomeMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeMarketValueNull() {
                return this.IsNull(this.tableIncomeApproachDetails.MiscIncomeMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeMarketValueNull() {
                this[this.tableIncomeApproachDetails.MiscIncomeMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalPropertyNull() {
                return this.IsNull(this.tableIncomeApproachDetails.PersonalPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalPropertyNull() {
                this[this.tableIncomeApproachDetails.PersonalPropertyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IncomeSourceTypesRow : global::System.Data.DataRow {
            
            private IncomeSourceTypesDataTable tableIncomeSourceTypes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncomeSourceTypesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIncomeSourceTypes = ((IncomeSourceTypesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IncomeSourceID {
                get {
                    try {
                        return ((int)(this[this.tableIncomeSourceTypes.IncomeSourceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeSourceID\' in table \'IncomeSourceTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSourceTypes.IncomeSourceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SourceCode {
                get {
                    try {
                        return ((string)(this[this.tableIncomeSourceTypes.SourceCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SourceCode\' in table \'IncomeSourceTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSourceTypes.SourceCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableIncomeSourceTypes.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'IncomeSourceTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeSourceTypes.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeSourceIDNull() {
                return this.IsNull(this.tableIncomeSourceTypes.IncomeSourceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeSourceIDNull() {
                this[this.tableIncomeSourceTypes.IncomeSourceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceCodeNull() {
                return this.IsNull(this.tableIncomeSourceTypes.SourceCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceCodeNull() {
                this[this.tableIncomeSourceTypes.SourceCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableIncomeSourceTypes.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableIncomeSourceTypes.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IncomeApproachItemValuesRow : global::System.Data.DataRow {
            
            private IncomeApproachItemValuesDataTable tableIncomeApproachItemValues;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncomeApproachItemValuesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIncomeApproachItemValues = ((IncomeApproachItemValuesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Contract {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproachItemValues.ContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contract\' in table \'IncomeApproachItemValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachItemValues.ContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Market {
                get {
                    try {
                        return ((decimal)(this[this.tableIncomeApproachItemValues.MarketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Market\' in table \'IncomeApproachItemValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncomeApproachItemValues.MarketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractNull() {
                return this.IsNull(this.tableIncomeApproachItemValues.ContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractNull() {
                this[this.tableIncomeApproachItemValues.ContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketNull() {
                return this.IsNull(this.tableIncomeApproachItemValues.MarketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketNull() {
                this[this.tableIncomeApproachItemValues.MarketColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetIncomeApproachValuesRow : global::System.Data.DataRow {
            
            private GetIncomeApproachValuesDataTable tableGetIncomeApproachValues;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetIncomeApproachValuesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetIncomeApproachValues = ((GetIncomeApproachValuesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PotGrossIncomeContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.PotGrossIncomeContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PotGrossIncomeContractValue\' in table \'GetIncomeApproachVal" +
                                "ues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.PotGrossIncomeContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PotGrossIncomeMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.PotGrossIncomeMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PotGrossIncomeMarketValue\' in table \'GetIncomeApproachValue" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.PotGrossIncomeMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VacAndCollContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.VacAndCollContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollContractPercent\' in table \'GetIncomeApproachValue" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.VacAndCollContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VacAndCollContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.VacAndCollContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollContractValue\' in table \'GetIncomeApproachValues\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.VacAndCollContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VacAndCollMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.VacAndCollMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollMarketPercent\' in table \'GetIncomeApproachValues\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.VacAndCollMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VacAndCollMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.VacAndCollMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollMarketValue\' in table \'GetIncomeApproachValues\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.VacAndCollMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EffGrossIncomeContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.EffGrossIncomeContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffGrossIncomeContractValue\' in table \'GetIncomeApproachVal" +
                                "ues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.EffGrossIncomeContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EffGrossIncomeMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.EffGrossIncomeMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffGrossIncomeMarketValue\' in table \'GetIncomeApproachValue" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.EffGrossIncomeMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InsuranceContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.InsuranceContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceContractPercent\' in table \'GetIncomeApproachValues" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.InsuranceContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InsuranceContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.InsuranceContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceContractValue\' in table \'GetIncomeApproachValues\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.InsuranceContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InsuranceMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.InsuranceMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceMarketPercent\' in table \'GetIncomeApproachValues\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.InsuranceMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InsuranceMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.InsuranceMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceMarketValue\' in table \'GetIncomeApproachValues\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.InsuranceMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ManAndPayContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.ManAndPayContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayContractPercent\' in table \'GetIncomeApproachValues" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.ManAndPayContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ManAndPayContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.ManAndPayContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayContractValue\' in table \'GetIncomeApproachValues\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.ManAndPayContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ManAndPayMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.ManAndPayMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayMarketPercent\' in table \'GetIncomeApproachValues\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.ManAndPayMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ManAndPayMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.ManAndPayMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayMarketValue\' in table \'GetIncomeApproachValues\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.ManAndPayMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilitiesContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.UtilitiesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesContractPercent\' in table \'GetIncomeApproachValues" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.UtilitiesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilitiesContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.UtilitiesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesContractValue\' in table \'GetIncomeApproachValues\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.UtilitiesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilitiesMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.UtilitiesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesMarketPercent\' in table \'GetIncomeApproachValues\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.UtilitiesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilitiesMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.UtilitiesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesMarketValue\' in table \'GetIncomeApproachValues\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.UtilitiesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MaintAndRepContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.MaintAndRepContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepContractPercent\' in table \'GetIncomeApproachValu" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.MaintAndRepContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MaintAndRepContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.MaintAndRepContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepContractValue\' in table \'GetIncomeApproachValues" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.MaintAndRepContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MaintAndRepMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.MaintAndRepMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepMarketPercent\' in table \'GetIncomeApproachValues" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.MaintAndRepMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MaintAndRepMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.MaintAndRepMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepMarketValue\' in table \'GetIncomeApproachValues\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.MaintAndRepMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResReplaceContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.ResReplaceContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceContractPercent\' in table \'GetIncomeApproachValue" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.ResReplaceContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResReplaceContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.ResReplaceContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceContractValue\' in table \'GetIncomeApproachValues\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.ResReplaceContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResReplaceMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.ResReplaceMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceMarketPercent\' in table \'GetIncomeApproachValues\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.ResReplaceMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResReplaceMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.ResReplaceMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceMarketValue\' in table \'GetIncomeApproachValues\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.ResReplaceMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalExpensesContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.TotalExpensesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesContractPercent\' in table \'GetIncomeApproachVa" +
                                "lues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.TotalExpensesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalExpensesContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.TotalExpensesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesContractValue\' in table \'GetIncomeApproachValu" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.TotalExpensesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalExpensesMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.TotalExpensesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesMarketPercent\' in table \'GetIncomeApproachValu" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.TotalExpensesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalExpensesMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.TotalExpensesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesMarketValue\' in table \'GetIncomeApproachValues" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.TotalExpensesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetOpIncContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.NetOpIncContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetOpIncContractValue\' in table \'GetIncomeApproachValues\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.NetOpIncContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetOpIncMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.NetOpIncMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetOpIncMarketValue\' in table \'GetIncomeApproachValues\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.NetOpIncMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CapitalizationRate {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.CapitalizationRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapitalizationRate\' in table \'GetIncomeApproachValues\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.CapitalizationRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseContract {
                get {
                    try {
                        return ((bool)(this[this.tableGetIncomeApproachValues.IsUseContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsUseContract\' in table \'GetIncomeApproachValues\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.IsUseContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IncomeApproach {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.IncomeApproachColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeApproach\' in table \'GetIncomeApproachValues\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.IncomeApproachColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SuppliesContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.SuppliesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesContractPercent\' in table \'GetIncomeApproachValues\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.SuppliesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SuppliesContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.SuppliesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesContractValue\' in table \'GetIncomeApproachValues\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.SuppliesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SuppliesMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.SuppliesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesMarketPercent\' in table \'GetIncomeApproachValues\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.SuppliesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SuppliesMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.SuppliesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesMarketValue\' in table \'GetIncomeApproachValues\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.SuppliesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExpensesContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.OtherExpensesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesContractPercent\' in table \'GetIncomeApproachVa" +
                                "lues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.OtherExpensesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExpensesContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.OtherExpensesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesContractValue\' in table \'GetIncomeApproachValu" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.OtherExpensesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExpensesMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.OtherExpensesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesMarketPercent\' in table \'GetIncomeApproachValu" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.OtherExpensesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExpensesMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.OtherExpensesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesMarketValue\' in table \'GetIncomeApproachValues" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.OtherExpensesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscIncomeContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.MiscIncomeContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeContractPercent\' in table \'GetIncomeApproachValue" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.MiscIncomeContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscIncomeContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.MiscIncomeContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeContractValue\' in table \'GetIncomeApproachValues\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.MiscIncomeContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscIncomeMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.MiscIncomeMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeMarketPercent\' in table \'GetIncomeApproachValues\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.MiscIncomeMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscIncomeMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.MiscIncomeMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeMarketValue\' in table \'GetIncomeApproachValues\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.MiscIncomeMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PersonalProperty {
                get {
                    try {
                        return ((decimal)(this[this.tableGetIncomeApproachValues.PersonalPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalProperty\' in table \'GetIncomeApproachValues\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetIncomeApproachValues.PersonalPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPotGrossIncomeContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.PotGrossIncomeContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPotGrossIncomeContractValueNull() {
                this[this.tableGetIncomeApproachValues.PotGrossIncomeContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPotGrossIncomeMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.PotGrossIncomeMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPotGrossIncomeMarketValueNull() {
                this[this.tableGetIncomeApproachValues.PotGrossIncomeMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollContractPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.VacAndCollContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollContractPercentNull() {
                this[this.tableGetIncomeApproachValues.VacAndCollContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.VacAndCollContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollContractValueNull() {
                this[this.tableGetIncomeApproachValues.VacAndCollContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollMarketPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.VacAndCollMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollMarketPercentNull() {
                this[this.tableGetIncomeApproachValues.VacAndCollMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.VacAndCollMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollMarketValueNull() {
                this[this.tableGetIncomeApproachValues.VacAndCollMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffGrossIncomeContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.EffGrossIncomeContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffGrossIncomeContractValueNull() {
                this[this.tableGetIncomeApproachValues.EffGrossIncomeContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffGrossIncomeMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.EffGrossIncomeMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffGrossIncomeMarketValueNull() {
                this[this.tableGetIncomeApproachValues.EffGrossIncomeMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceContractPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.InsuranceContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceContractPercentNull() {
                this[this.tableGetIncomeApproachValues.InsuranceContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.InsuranceContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceContractValueNull() {
                this[this.tableGetIncomeApproachValues.InsuranceContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceMarketPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.InsuranceMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceMarketPercentNull() {
                this[this.tableGetIncomeApproachValues.InsuranceMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.InsuranceMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceMarketValueNull() {
                this[this.tableGetIncomeApproachValues.InsuranceMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayContractPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.ManAndPayContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayContractPercentNull() {
                this[this.tableGetIncomeApproachValues.ManAndPayContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.ManAndPayContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayContractValueNull() {
                this[this.tableGetIncomeApproachValues.ManAndPayContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayMarketPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.ManAndPayMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayMarketPercentNull() {
                this[this.tableGetIncomeApproachValues.ManAndPayMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.ManAndPayMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayMarketValueNull() {
                this[this.tableGetIncomeApproachValues.ManAndPayMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesContractPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.UtilitiesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesContractPercentNull() {
                this[this.tableGetIncomeApproachValues.UtilitiesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.UtilitiesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesContractValueNull() {
                this[this.tableGetIncomeApproachValues.UtilitiesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesMarketPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.UtilitiesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesMarketPercentNull() {
                this[this.tableGetIncomeApproachValues.UtilitiesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.UtilitiesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesMarketValueNull() {
                this[this.tableGetIncomeApproachValues.UtilitiesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepContractPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.MaintAndRepContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepContractPercentNull() {
                this[this.tableGetIncomeApproachValues.MaintAndRepContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.MaintAndRepContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepContractValueNull() {
                this[this.tableGetIncomeApproachValues.MaintAndRepContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepMarketPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.MaintAndRepMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepMarketPercentNull() {
                this[this.tableGetIncomeApproachValues.MaintAndRepMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.MaintAndRepMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepMarketValueNull() {
                this[this.tableGetIncomeApproachValues.MaintAndRepMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceContractPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.ResReplaceContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceContractPercentNull() {
                this[this.tableGetIncomeApproachValues.ResReplaceContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.ResReplaceContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceContractValueNull() {
                this[this.tableGetIncomeApproachValues.ResReplaceContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceMarketPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.ResReplaceMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceMarketPercentNull() {
                this[this.tableGetIncomeApproachValues.ResReplaceMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.ResReplaceMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceMarketValueNull() {
                this[this.tableGetIncomeApproachValues.ResReplaceMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesContractPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.TotalExpensesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesContractPercentNull() {
                this[this.tableGetIncomeApproachValues.TotalExpensesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.TotalExpensesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesContractValueNull() {
                this[this.tableGetIncomeApproachValues.TotalExpensesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesMarketPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.TotalExpensesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesMarketPercentNull() {
                this[this.tableGetIncomeApproachValues.TotalExpensesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.TotalExpensesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesMarketValueNull() {
                this[this.tableGetIncomeApproachValues.TotalExpensesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetOpIncContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.NetOpIncContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetOpIncContractValueNull() {
                this[this.tableGetIncomeApproachValues.NetOpIncContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetOpIncMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.NetOpIncMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetOpIncMarketValueNull() {
                this[this.tableGetIncomeApproachValues.NetOpIncMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCapitalizationRateNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.CapitalizationRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCapitalizationRateNull() {
                this[this.tableGetIncomeApproachValues.CapitalizationRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsUseContractNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.IsUseContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsUseContractNull() {
                this[this.tableGetIncomeApproachValues.IsUseContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeApproachNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.IncomeApproachColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeApproachNull() {
                this[this.tableGetIncomeApproachValues.IncomeApproachColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesContractPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.SuppliesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesContractPercentNull() {
                this[this.tableGetIncomeApproachValues.SuppliesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.SuppliesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesContractValueNull() {
                this[this.tableGetIncomeApproachValues.SuppliesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesMarketPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.SuppliesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesMarketPercentNull() {
                this[this.tableGetIncomeApproachValues.SuppliesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.SuppliesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesMarketValueNull() {
                this[this.tableGetIncomeApproachValues.SuppliesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesContractPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.OtherExpensesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesContractPercentNull() {
                this[this.tableGetIncomeApproachValues.OtherExpensesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.OtherExpensesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesContractValueNull() {
                this[this.tableGetIncomeApproachValues.OtherExpensesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesMarketPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.OtherExpensesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesMarketPercentNull() {
                this[this.tableGetIncomeApproachValues.OtherExpensesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.OtherExpensesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesMarketValueNull() {
                this[this.tableGetIncomeApproachValues.OtherExpensesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeContractPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.MiscIncomeContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeContractPercentNull() {
                this[this.tableGetIncomeApproachValues.MiscIncomeContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeContractValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.MiscIncomeContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeContractValueNull() {
                this[this.tableGetIncomeApproachValues.MiscIncomeContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeMarketPercentNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.MiscIncomeMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeMarketPercentNull() {
                this[this.tableGetIncomeApproachValues.MiscIncomeMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeMarketValueNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.MiscIncomeMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeMarketValueNull() {
                this[this.tableGetIncomeApproachValues.MiscIncomeMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalPropertyNull() {
                return this.IsNull(this.tableGetIncomeApproachValues.PersonalPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalPropertyNull() {
                this[this.tableGetIncomeApproachValues.PersonalPropertyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CalculatedIncomeApproachValuesRow : global::System.Data.DataRow {
            
            private CalculatedIncomeApproachValuesDataTable tableCalculatedIncomeApproachValues;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CalculatedIncomeApproachValuesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCalculatedIncomeApproachValues = ((CalculatedIncomeApproachValuesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VacAndCollContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.VacAndCollContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollContractPercent\' in table \'CalculatedIncomeApproa" +
                                "chValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.VacAndCollContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VacAndCollMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.VacAndCollMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VacAndCollMarketValue\' in table \'CalculatedIncomeApproachVa" +
                                "lues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.VacAndCollMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EffGrossIncomeContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.EffGrossIncomeContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffGrossIncomeContractValue\' in table \'CalculatedIncomeAppr" +
                                "oachValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.EffGrossIncomeContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EffGrossIncomeMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.EffGrossIncomeMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffGrossIncomeMarketValue\' in table \'CalculatedIncomeApproa" +
                                "chValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.EffGrossIncomeMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InsuranceContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.InsuranceContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceContractPercent\' in table \'CalculatedIncomeApproac" +
                                "hValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.InsuranceContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InsuranceMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.InsuranceMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceMarketValue\' in table \'CalculatedIncomeApproachVal" +
                                "ues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.InsuranceMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ManAndPayContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.ManAndPayContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayContractPercent\' in table \'CalculatedIncomeApproac" +
                                "hValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.ManAndPayContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ManAndPayMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.ManAndPayMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManAndPayMarketValue\' in table \'CalculatedIncomeApproachVal" +
                                "ues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.ManAndPayMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilitiesContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.UtilitiesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesContractPercent\' in table \'CalculatedIncomeApproac" +
                                "hValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.UtilitiesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilitiesMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.UtilitiesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilitiesMarketValue\' in table \'CalculatedIncomeApproachVal" +
                                "ues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.UtilitiesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MaintAndRepContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.MaintAndRepContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepContractPercent\' in table \'CalculatedIncomeAppro" +
                                "achValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.MaintAndRepContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MaintAndRepMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.MaintAndRepMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintAndRepMarketValue\' in table \'CalculatedIncomeApproachV" +
                                "alues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.MaintAndRepMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResReplaceContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.ResReplaceContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceContractPercent\' in table \'CalculatedIncomeApproa" +
                                "chValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.ResReplaceContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResReplaceMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.ResReplaceMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResReplaceMarketValue\' in table \'CalculatedIncomeApproachVa" +
                                "lues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.ResReplaceMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalExpensesContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.TotalExpensesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesContractPercent\' in table \'CalculatedIncomeApp" +
                                "roachValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.TotalExpensesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalExpensesContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.TotalExpensesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesContractValue\' in table \'CalculatedIncomeAppro" +
                                "achValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.TotalExpensesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalExpensesMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.TotalExpensesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesMarketPercent\' in table \'CalculatedIncomeAppro" +
                                "achValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.TotalExpensesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalExpensesMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.TotalExpensesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpensesMarketValue\' in table \'CalculatedIncomeApproac" +
                                "hValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.TotalExpensesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetOpIncContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.NetOpIncContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetOpIncContractValue\' in table \'CalculatedIncomeApproachVa" +
                                "lues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.NetOpIncContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetOpIncMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.NetOpIncMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetOpIncMarketValue\' in table \'CalculatedIncomeApproachValu" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.NetOpIncMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IncomeApproach {
                get {
                    try {
                        return ((string)(this[this.tableCalculatedIncomeApproachValues.IncomeApproachColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeApproach\' in table \'CalculatedIncomeApproachValues\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.IncomeApproachColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SuppliesContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.SuppliesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesContractPercent\' in table \'CalculatedIncomeApproach" +
                                "Values\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.SuppliesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SuppliesContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.SuppliesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesContractValue\' in table \'CalculatedIncomeApproachVa" +
                                "lues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.SuppliesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SuppliesMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.SuppliesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesMarketPercent\' in table \'CalculatedIncomeApproachVa" +
                                "lues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.SuppliesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SuppliesMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.SuppliesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppliesMarketValue\' in table \'CalculatedIncomeApproachValu" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.SuppliesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExpensesContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.OtherExpensesContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesContractPercent\' in table \'CalculatedIncomeApp" +
                                "roachValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.OtherExpensesContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExpensesContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.OtherExpensesContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesContractValue\' in table \'CalculatedIncomeAppro" +
                                "achValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.OtherExpensesContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExpensesMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.OtherExpensesMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesMarketPercent\' in table \'CalculatedIncomeAppro" +
                                "achValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.OtherExpensesMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherExpensesMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.OtherExpensesMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherExpensesMarketValue\' in table \'CalculatedIncomeApproac" +
                                "hValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.OtherExpensesMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscIncomeContractPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.MiscIncomeContractPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeContractPercent\' in table \'CalculatedIncomeApproa" +
                                "chValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.MiscIncomeContractPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscIncomeContractValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.MiscIncomeContractValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeContractValue\' in table \'CalculatedIncomeApproach" +
                                "Values\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.MiscIncomeContractValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscIncomeMarketPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.MiscIncomeMarketPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeMarketPercent\' in table \'CalculatedIncomeApproach" +
                                "Values\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.MiscIncomeMarketPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscIncomeMarketValue {
                get {
                    try {
                        return ((decimal)(this[this.tableCalculatedIncomeApproachValues.MiscIncomeMarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscIncomeMarketValue\' in table \'CalculatedIncomeApproachVa" +
                                "lues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCalculatedIncomeApproachValues.MiscIncomeMarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollContractPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.VacAndCollContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollContractPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.VacAndCollContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVacAndCollMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.VacAndCollMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVacAndCollMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.VacAndCollMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffGrossIncomeContractValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.EffGrossIncomeContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffGrossIncomeContractValueNull() {
                this[this.tableCalculatedIncomeApproachValues.EffGrossIncomeContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffGrossIncomeMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.EffGrossIncomeMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffGrossIncomeMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.EffGrossIncomeMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceContractPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.InsuranceContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceContractPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.InsuranceContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.InsuranceMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.InsuranceMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayContractPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.ManAndPayContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayContractPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.ManAndPayContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManAndPayMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.ManAndPayMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManAndPayMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.ManAndPayMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesContractPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.UtilitiesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesContractPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.UtilitiesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilitiesMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.UtilitiesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilitiesMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.UtilitiesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepContractPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.MaintAndRepContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepContractPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.MaintAndRepContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintAndRepMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.MaintAndRepMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintAndRepMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.MaintAndRepMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceContractPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.ResReplaceContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceContractPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.ResReplaceContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResReplaceMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.ResReplaceMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResReplaceMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.ResReplaceMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesContractPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.TotalExpensesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesContractPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.TotalExpensesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesContractValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.TotalExpensesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesContractValueNull() {
                this[this.tableCalculatedIncomeApproachValues.TotalExpensesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesMarketPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.TotalExpensesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesMarketPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.TotalExpensesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpensesMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.TotalExpensesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpensesMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.TotalExpensesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetOpIncContractValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.NetOpIncContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetOpIncContractValueNull() {
                this[this.tableCalculatedIncomeApproachValues.NetOpIncContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetOpIncMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.NetOpIncMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetOpIncMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.NetOpIncMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeApproachNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.IncomeApproachColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeApproachNull() {
                this[this.tableCalculatedIncomeApproachValues.IncomeApproachColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesContractPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.SuppliesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesContractPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.SuppliesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesContractValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.SuppliesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesContractValueNull() {
                this[this.tableCalculatedIncomeApproachValues.SuppliesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesMarketPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.SuppliesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesMarketPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.SuppliesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppliesMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.SuppliesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppliesMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.SuppliesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesContractPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.OtherExpensesContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesContractPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.OtherExpensesContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesContractValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.OtherExpensesContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesContractValueNull() {
                this[this.tableCalculatedIncomeApproachValues.OtherExpensesContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesMarketPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.OtherExpensesMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesMarketPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.OtherExpensesMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExpensesMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.OtherExpensesMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExpensesMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.OtherExpensesMarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeContractPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.MiscIncomeContractPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeContractPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.MiscIncomeContractPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeContractValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.MiscIncomeContractValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeContractValueNull() {
                this[this.tableCalculatedIncomeApproachValues.MiscIncomeContractValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeMarketPercentNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.MiscIncomeMarketPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeMarketPercentNull() {
                this[this.tableCalculatedIncomeApproachValues.MiscIncomeMarketPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscIncomeMarketValueNull() {
                return this.IsNull(this.tableCalculatedIncomeApproachValues.MiscIncomeMarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscIncomeMarketValueNull() {
                this[this.tableCalculatedIncomeApproachValues.MiscIncomeMarketValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IncomeSourcesRowChangeEvent : global::System.EventArgs {
            
            private IncomeSourcesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourcesRowChangeEvent(IncomeSourcesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourcesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IncomeApproachRowChangeEvent : global::System.EventArgs {
            
            private IncomeApproachRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachRowChangeEvent(IncomeApproachRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IncomeApproachDetailsRowChangeEvent : global::System.EventArgs {
            
            private IncomeApproachDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachDetailsRowChangeEvent(IncomeApproachDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IncomeSourceTypesRowChangeEvent : global::System.EventArgs {
            
            private IncomeSourceTypesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourceTypesRowChangeEvent(IncomeSourceTypesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeSourceTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IncomeApproachItemValuesRowChangeEvent : global::System.EventArgs {
            
            private IncomeApproachItemValuesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachItemValuesRowChangeEvent(IncomeApproachItemValuesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncomeApproachItemValuesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetIncomeApproachValuesRowChangeEvent : global::System.EventArgs {
            
            private GetIncomeApproachValuesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetIncomeApproachValuesRowChangeEvent(GetIncomeApproachValuesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetIncomeApproachValuesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CalculatedIncomeApproachValuesRowChangeEvent : global::System.EventArgs {
            
            private CalculatedIncomeApproachValuesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CalculatedIncomeApproachValuesRowChangeEvent(CalculatedIncomeApproachValuesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CalculatedIncomeApproachValuesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591