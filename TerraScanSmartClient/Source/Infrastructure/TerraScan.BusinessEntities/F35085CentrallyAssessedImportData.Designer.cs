//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F35085CentrallyAssessedImportData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F35085CentrallyAssessedImportData : global::System.Data.DataSet {
        
        private F35085_GetCAImportDataTableDataTable tableF35085_GetCAImportDataTable;
        
        private F35085_Get_GridDataTableDataTable tableF35085_Get_GridDataTable;
        
        private F35085_ListComboImportTypesDataTable tableF35085_ListComboImportTypes;
        
        private F35085_SaveHeaderTemplateDataTableDataTable tableF35085_SaveHeaderTemplateDataTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F35085CentrallyAssessedImportData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F35085CentrallyAssessedImportData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["F35085_GetCAImportDataTable"] != null)) {
                    base.Tables.Add(new F35085_GetCAImportDataTableDataTable(ds.Tables["F35085_GetCAImportDataTable"]));
                }
                if ((ds.Tables["F35085_Get_GridDataTable"] != null)) {
                    base.Tables.Add(new F35085_Get_GridDataTableDataTable(ds.Tables["F35085_Get_GridDataTable"]));
                }
                if ((ds.Tables["F35085_ListComboImportTypes"] != null)) {
                    base.Tables.Add(new F35085_ListComboImportTypesDataTable(ds.Tables["F35085_ListComboImportTypes"]));
                }
                if ((ds.Tables["F35085_SaveHeaderTemplateDataTable"] != null)) {
                    base.Tables.Add(new F35085_SaveHeaderTemplateDataTableDataTable(ds.Tables["F35085_SaveHeaderTemplateDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F35085_GetCAImportDataTableDataTable F35085_GetCAImportDataTable {
            get {
                return this.tableF35085_GetCAImportDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F35085_Get_GridDataTableDataTable F35085_Get_GridDataTable {
            get {
                return this.tableF35085_Get_GridDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F35085_ListComboImportTypesDataTable F35085_ListComboImportTypes {
            get {
                return this.tableF35085_ListComboImportTypes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F35085_SaveHeaderTemplateDataTableDataTable F35085_SaveHeaderTemplateDataTable {
            get {
                return this.tableF35085_SaveHeaderTemplateDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F35085CentrallyAssessedImportData cln = ((F35085CentrallyAssessedImportData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["F35085_GetCAImportDataTable"] != null)) {
                    base.Tables.Add(new F35085_GetCAImportDataTableDataTable(ds.Tables["F35085_GetCAImportDataTable"]));
                }
                if ((ds.Tables["F35085_Get_GridDataTable"] != null)) {
                    base.Tables.Add(new F35085_Get_GridDataTableDataTable(ds.Tables["F35085_Get_GridDataTable"]));
                }
                if ((ds.Tables["F35085_ListComboImportTypes"] != null)) {
                    base.Tables.Add(new F35085_ListComboImportTypesDataTable(ds.Tables["F35085_ListComboImportTypes"]));
                }
                if ((ds.Tables["F35085_SaveHeaderTemplateDataTable"] != null)) {
                    base.Tables.Add(new F35085_SaveHeaderTemplateDataTableDataTable(ds.Tables["F35085_SaveHeaderTemplateDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableF35085_GetCAImportDataTable = ((F35085_GetCAImportDataTableDataTable)(base.Tables["F35085_GetCAImportDataTable"]));
            if ((initTable == true)) {
                if ((this.tableF35085_GetCAImportDataTable != null)) {
                    this.tableF35085_GetCAImportDataTable.InitVars();
                }
            }
            this.tableF35085_Get_GridDataTable = ((F35085_Get_GridDataTableDataTable)(base.Tables["F35085_Get_GridDataTable"]));
            if ((initTable == true)) {
                if ((this.tableF35085_Get_GridDataTable != null)) {
                    this.tableF35085_Get_GridDataTable.InitVars();
                }
            }
            this.tableF35085_ListComboImportTypes = ((F35085_ListComboImportTypesDataTable)(base.Tables["F35085_ListComboImportTypes"]));
            if ((initTable == true)) {
                if ((this.tableF35085_ListComboImportTypes != null)) {
                    this.tableF35085_ListComboImportTypes.InitVars();
                }
            }
            this.tableF35085_SaveHeaderTemplateDataTable = ((F35085_SaveHeaderTemplateDataTableDataTable)(base.Tables["F35085_SaveHeaderTemplateDataTable"]));
            if ((initTable == true)) {
                if ((this.tableF35085_SaveHeaderTemplateDataTable != null)) {
                    this.tableF35085_SaveHeaderTemplateDataTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F35085CentrallyAssessedImportData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F35085CentrallyAssessedImportData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableF35085_GetCAImportDataTable = new F35085_GetCAImportDataTableDataTable();
            base.Tables.Add(this.tableF35085_GetCAImportDataTable);
            this.tableF35085_Get_GridDataTable = new F35085_Get_GridDataTableDataTable();
            base.Tables.Add(this.tableF35085_Get_GridDataTable);
            this.tableF35085_ListComboImportTypes = new F35085_ListComboImportTypesDataTable();
            base.Tables.Add(this.tableF35085_ListComboImportTypes);
            this.tableF35085_SaveHeaderTemplateDataTable = new F35085_SaveHeaderTemplateDataTableDataTable();
            base.Tables.Add(this.tableF35085_SaveHeaderTemplateDataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF35085_GetCAImportDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF35085_Get_GridDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF35085_ListComboImportTypes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF35085_SaveHeaderTemplateDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F35085CentrallyAssessedImportData ds = new F35085CentrallyAssessedImportData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void F35085_GetCAImportDataTableRowChangeEventHandler(object sender, F35085_GetCAImportDataTableRowChangeEvent e);
        
        public delegate void F35085_Get_GridDataTableRowChangeEventHandler(object sender, F35085_Get_GridDataTableRowChangeEvent e);
        
        public delegate void F35085_ListComboImportTypesRowChangeEventHandler(object sender, F35085_ListComboImportTypesRowChangeEvent e);
        
        public delegate void F35085_SaveHeaderTemplateDataTableRowChangeEventHandler(object sender, F35085_SaveHeaderTemplateDataTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F35085_GetCAImportDataTableDataTable : global::System.Data.TypedTableBase<F35085_GetCAImportDataTableRow> {
            
            private global::System.Data.DataColumn columnRollyear;
            
            private global::System.Data.DataColumn columnPropertyClassID;
            
            private global::System.Data.DataColumn columnPropertyClass;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnFilePath;
            
            private global::System.Data.DataColumn columnIsImportEnabled;
            
            private global::System.Data.DataColumn columnImportStatus;
            
            private global::System.Data.DataColumn columnIsCheckForErrors;
            
            private global::System.Data.DataColumn columnCheckErrorStatus;
            
            private global::System.Data.DataColumn columnIsRecordsCreated;
            
            private global::System.Data.DataColumn columnRecordsCreateStatus;
            
            private global::System.Data.DataColumn columnImportedEntries;
            
            private global::System.Data.DataColumn columnEntriesInError;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_GetCAImportDataTableDataTable() {
                this.TableName = "F35085_GetCAImportDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F35085_GetCAImportDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F35085_GetCAImportDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollyearColumn {
                get {
                    return this.columnRollyear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassIDColumn {
                get {
                    return this.columnPropertyClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassColumn {
                get {
                    return this.columnPropertyClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilePathColumn {
                get {
                    return this.columnFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsImportEnabledColumn {
                get {
                    return this.columnIsImportEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImportStatusColumn {
                get {
                    return this.columnImportStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCheckForErrorsColumn {
                get {
                    return this.columnIsCheckForErrors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckErrorStatusColumn {
                get {
                    return this.columnCheckErrorStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRecordsCreatedColumn {
                get {
                    return this.columnIsRecordsCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordsCreateStatusColumn {
                get {
                    return this.columnRecordsCreateStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImportedEntriesColumn {
                get {
                    return this.columnImportedEntries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntriesInErrorColumn {
                get {
                    return this.columnEntriesInError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_GetCAImportDataTableRow this[int index] {
                get {
                    return ((F35085_GetCAImportDataTableRow)(this.Rows[index]));
                }
            }
            
            public event F35085_GetCAImportDataTableRowChangeEventHandler F35085_GetCAImportDataTableRowChanging;
            
            public event F35085_GetCAImportDataTableRowChangeEventHandler F35085_GetCAImportDataTableRowChanged;
            
            public event F35085_GetCAImportDataTableRowChangeEventHandler F35085_GetCAImportDataTableRowDeleting;
            
            public event F35085_GetCAImportDataTableRowChangeEventHandler F35085_GetCAImportDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF35085_GetCAImportDataTableRow(F35085_GetCAImportDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_GetCAImportDataTableRow AddF35085_GetCAImportDataTableRow(int Rollyear, int PropertyClassID, string PropertyClass, string Description, string FilePath, bool IsImportEnabled, string ImportStatus, bool IsCheckForErrors, string CheckErrorStatus, bool IsRecordsCreated, string RecordsCreateStatus, int ImportedEntries, int EntriesInError) {
                F35085_GetCAImportDataTableRow rowF35085_GetCAImportDataTableRow = ((F35085_GetCAImportDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Rollyear,
                        PropertyClassID,
                        PropertyClass,
                        Description,
                        FilePath,
                        IsImportEnabled,
                        ImportStatus,
                        IsCheckForErrors,
                        CheckErrorStatus,
                        IsRecordsCreated,
                        RecordsCreateStatus,
                        ImportedEntries,
                        EntriesInError};
                rowF35085_GetCAImportDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF35085_GetCAImportDataTableRow);
                return rowF35085_GetCAImportDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F35085_GetCAImportDataTableDataTable cln = ((F35085_GetCAImportDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F35085_GetCAImportDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRollyear = base.Columns["Rollyear"];
                this.columnPropertyClassID = base.Columns["PropertyClassID"];
                this.columnPropertyClass = base.Columns["PropertyClass"];
                this.columnDescription = base.Columns["Description"];
                this.columnFilePath = base.Columns["FilePath"];
                this.columnIsImportEnabled = base.Columns["IsImportEnabled"];
                this.columnImportStatus = base.Columns["ImportStatus"];
                this.columnIsCheckForErrors = base.Columns["IsCheckForErrors"];
                this.columnCheckErrorStatus = base.Columns["CheckErrorStatus"];
                this.columnIsRecordsCreated = base.Columns["IsRecordsCreated"];
                this.columnRecordsCreateStatus = base.Columns["RecordsCreateStatus"];
                this.columnImportedEntries = base.Columns["ImportedEntries"];
                this.columnEntriesInError = base.Columns["EntriesInError"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRollyear = new global::System.Data.DataColumn("Rollyear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollyear);
                this.columnPropertyClassID = new global::System.Data.DataColumn("PropertyClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClassID);
                this.columnPropertyClass = new global::System.Data.DataColumn("PropertyClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClass);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnFilePath = new global::System.Data.DataColumn("FilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilePath);
                this.columnIsImportEnabled = new global::System.Data.DataColumn("IsImportEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsImportEnabled);
                this.columnImportStatus = new global::System.Data.DataColumn("ImportStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportStatus);
                this.columnIsCheckForErrors = new global::System.Data.DataColumn("IsCheckForErrors", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCheckForErrors);
                this.columnCheckErrorStatus = new global::System.Data.DataColumn("CheckErrorStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckErrorStatus);
                this.columnIsRecordsCreated = new global::System.Data.DataColumn("IsRecordsCreated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRecordsCreated);
                this.columnRecordsCreateStatus = new global::System.Data.DataColumn("RecordsCreateStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordsCreateStatus);
                this.columnImportedEntries = new global::System.Data.DataColumn("ImportedEntries", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportedEntries);
                this.columnEntriesInError = new global::System.Data.DataColumn("EntriesInError", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntriesInError);
                this.columnRollyear.AllowDBNull = false;
                this.columnPropertyClassID.AllowDBNull = false;
                this.columnPropertyClass.AllowDBNull = false;
                this.columnPropertyClass.MaxLength = 50;
                this.columnDescription.MaxLength = 50;
                this.columnFilePath.AllowDBNull = false;
                this.columnFilePath.MaxLength = 250;
                this.columnIsImportEnabled.AllowDBNull = false;
                this.columnImportStatus.ReadOnly = true;
                this.columnImportStatus.MaxLength = 90;
                this.columnIsCheckForErrors.AllowDBNull = false;
                this.columnCheckErrorStatus.ReadOnly = true;
                this.columnCheckErrorStatus.MaxLength = 90;
                this.columnIsRecordsCreated.AllowDBNull = false;
                this.columnRecordsCreateStatus.ReadOnly = true;
                this.columnRecordsCreateStatus.MaxLength = 90;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_GetCAImportDataTableRow NewF35085_GetCAImportDataTableRow() {
                return ((F35085_GetCAImportDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F35085_GetCAImportDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F35085_GetCAImportDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F35085_GetCAImportDataTableRowChanged != null)) {
                    this.F35085_GetCAImportDataTableRowChanged(this, new F35085_GetCAImportDataTableRowChangeEvent(((F35085_GetCAImportDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F35085_GetCAImportDataTableRowChanging != null)) {
                    this.F35085_GetCAImportDataTableRowChanging(this, new F35085_GetCAImportDataTableRowChangeEvent(((F35085_GetCAImportDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F35085_GetCAImportDataTableRowDeleted != null)) {
                    this.F35085_GetCAImportDataTableRowDeleted(this, new F35085_GetCAImportDataTableRowChangeEvent(((F35085_GetCAImportDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F35085_GetCAImportDataTableRowDeleting != null)) {
                    this.F35085_GetCAImportDataTableRowDeleting(this, new F35085_GetCAImportDataTableRowChangeEvent(((F35085_GetCAImportDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF35085_GetCAImportDataTableRow(F35085_GetCAImportDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35085CentrallyAssessedImportData ds = new F35085CentrallyAssessedImportData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F35085_GetCAImportDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F35085_Get_GridDataTableDataTable : global::System.Data.TypedTableBase<F35085_Get_GridDataTableRow> {
            
            private global::System.Data.DataColumn columnCentralID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPersonalProperty;
            
            private global::System.Data.DataColumn columnRealProperty;
            
            private global::System.Data.DataColumn columnErrorStatus;
            
            private global::System.Data.DataColumn columnLine;
            
            private global::System.Data.DataColumn columnEntryID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_Get_GridDataTableDataTable() {
                this.TableName = "F35085_Get_GridDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F35085_Get_GridDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F35085_Get_GridDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CentralIDColumn {
                get {
                    return this.columnCentralID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalPropertyColumn {
                get {
                    return this.columnPersonalProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RealPropertyColumn {
                get {
                    return this.columnRealProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ErrorStatusColumn {
                get {
                    return this.columnErrorStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineColumn {
                get {
                    return this.columnLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryIDColumn {
                get {
                    return this.columnEntryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_Get_GridDataTableRow this[int index] {
                get {
                    return ((F35085_Get_GridDataTableRow)(this.Rows[index]));
                }
            }
            
            public event F35085_Get_GridDataTableRowChangeEventHandler F35085_Get_GridDataTableRowChanging;
            
            public event F35085_Get_GridDataTableRowChangeEventHandler F35085_Get_GridDataTableRowChanged;
            
            public event F35085_Get_GridDataTableRowChangeEventHandler F35085_Get_GridDataTableRowDeleting;
            
            public event F35085_Get_GridDataTableRowChangeEventHandler F35085_Get_GridDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF35085_Get_GridDataTableRow(F35085_Get_GridDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_Get_GridDataTableRow AddF35085_Get_GridDataTableRow(int CentralID, string ParcelNumber, string Description, decimal PersonalProperty, decimal RealProperty, string ErrorStatus, int Line, int EntryID) {
                F35085_Get_GridDataTableRow rowF35085_Get_GridDataTableRow = ((F35085_Get_GridDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CentralID,
                        ParcelNumber,
                        Description,
                        PersonalProperty,
                        RealProperty,
                        ErrorStatus,
                        Line,
                        EntryID};
                rowF35085_Get_GridDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF35085_Get_GridDataTableRow);
                return rowF35085_Get_GridDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F35085_Get_GridDataTableDataTable cln = ((F35085_Get_GridDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F35085_Get_GridDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCentralID = base.Columns["CentralID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnPersonalProperty = base.Columns["PersonalProperty"];
                this.columnRealProperty = base.Columns["RealProperty"];
                this.columnErrorStatus = base.Columns["ErrorStatus"];
                this.columnLine = base.Columns["Line"];
                this.columnEntryID = base.Columns["EntryID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCentralID = new global::System.Data.DataColumn("CentralID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentralID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPersonalProperty = new global::System.Data.DataColumn("PersonalProperty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalProperty);
                this.columnRealProperty = new global::System.Data.DataColumn("RealProperty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealProperty);
                this.columnErrorStatus = new global::System.Data.DataColumn("ErrorStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorStatus);
                this.columnLine = new global::System.Data.DataColumn("Line", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLine);
                this.columnEntryID = new global::System.Data.DataColumn("EntryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryID);
                this.columnCentralID.ReadOnly = true;
                this.columnParcelNumber.MaxLength = 50;
                this.columnDescription.MaxLength = 50;
                this.columnErrorStatus.MaxLength = 50;
                this.columnEntryID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_Get_GridDataTableRow NewF35085_Get_GridDataTableRow() {
                return ((F35085_Get_GridDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F35085_Get_GridDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F35085_Get_GridDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F35085_Get_GridDataTableRowChanged != null)) {
                    this.F35085_Get_GridDataTableRowChanged(this, new F35085_Get_GridDataTableRowChangeEvent(((F35085_Get_GridDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F35085_Get_GridDataTableRowChanging != null)) {
                    this.F35085_Get_GridDataTableRowChanging(this, new F35085_Get_GridDataTableRowChangeEvent(((F35085_Get_GridDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F35085_Get_GridDataTableRowDeleted != null)) {
                    this.F35085_Get_GridDataTableRowDeleted(this, new F35085_Get_GridDataTableRowChangeEvent(((F35085_Get_GridDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F35085_Get_GridDataTableRowDeleting != null)) {
                    this.F35085_Get_GridDataTableRowDeleting(this, new F35085_Get_GridDataTableRowChangeEvent(((F35085_Get_GridDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF35085_Get_GridDataTableRow(F35085_Get_GridDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35085CentrallyAssessedImportData ds = new F35085CentrallyAssessedImportData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F35085_Get_GridDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F35085_ListComboImportTypesDataTable : global::System.Data.TypedTableBase<F35085_ListComboImportTypesRow> {
            
            private global::System.Data.DataColumn columnPropertyClassID;
            
            private global::System.Data.DataColumn columnPropertyClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_ListComboImportTypesDataTable() {
                this.TableName = "F35085_ListComboImportTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F35085_ListComboImportTypesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F35085_ListComboImportTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassIDColumn {
                get {
                    return this.columnPropertyClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassColumn {
                get {
                    return this.columnPropertyClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_ListComboImportTypesRow this[int index] {
                get {
                    return ((F35085_ListComboImportTypesRow)(this.Rows[index]));
                }
            }
            
            public event F35085_ListComboImportTypesRowChangeEventHandler F35085_ListComboImportTypesRowChanging;
            
            public event F35085_ListComboImportTypesRowChangeEventHandler F35085_ListComboImportTypesRowChanged;
            
            public event F35085_ListComboImportTypesRowChangeEventHandler F35085_ListComboImportTypesRowDeleting;
            
            public event F35085_ListComboImportTypesRowChangeEventHandler F35085_ListComboImportTypesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF35085_ListComboImportTypesRow(F35085_ListComboImportTypesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_ListComboImportTypesRow AddF35085_ListComboImportTypesRow(string PropertyClass) {
                F35085_ListComboImportTypesRow rowF35085_ListComboImportTypesRow = ((F35085_ListComboImportTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PropertyClass};
                rowF35085_ListComboImportTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF35085_ListComboImportTypesRow);
                return rowF35085_ListComboImportTypesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F35085_ListComboImportTypesDataTable cln = ((F35085_ListComboImportTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F35085_ListComboImportTypesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPropertyClassID = base.Columns["PropertyClassID"];
                this.columnPropertyClass = base.Columns["PropertyClass"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPropertyClassID = new global::System.Data.DataColumn("PropertyClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClassID);
                this.columnPropertyClass = new global::System.Data.DataColumn("PropertyClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClass);
                this.columnPropertyClassID.AutoIncrement = true;
                this.columnPropertyClassID.AllowDBNull = false;
                this.columnPropertyClassID.ReadOnly = true;
                this.columnPropertyClass.AllowDBNull = false;
                this.columnPropertyClass.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_ListComboImportTypesRow NewF35085_ListComboImportTypesRow() {
                return ((F35085_ListComboImportTypesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F35085_ListComboImportTypesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F35085_ListComboImportTypesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F35085_ListComboImportTypesRowChanged != null)) {
                    this.F35085_ListComboImportTypesRowChanged(this, new F35085_ListComboImportTypesRowChangeEvent(((F35085_ListComboImportTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F35085_ListComboImportTypesRowChanging != null)) {
                    this.F35085_ListComboImportTypesRowChanging(this, new F35085_ListComboImportTypesRowChangeEvent(((F35085_ListComboImportTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F35085_ListComboImportTypesRowDeleted != null)) {
                    this.F35085_ListComboImportTypesRowDeleted(this, new F35085_ListComboImportTypesRowChangeEvent(((F35085_ListComboImportTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F35085_ListComboImportTypesRowDeleting != null)) {
                    this.F35085_ListComboImportTypesRowDeleting(this, new F35085_ListComboImportTypesRowChangeEvent(((F35085_ListComboImportTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF35085_ListComboImportTypesRow(F35085_ListComboImportTypesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35085CentrallyAssessedImportData ds = new F35085CentrallyAssessedImportData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F35085_ListComboImportTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F35085_SaveHeaderTemplateDataTableDataTable : global::System.Data.TypedTableBase<F35085_SaveHeaderTemplateDataTableRow> {
            
            private global::System.Data.DataColumn columnRollyear;
            
            private global::System.Data.DataColumn columnPropertyClassID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnFilePath;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_SaveHeaderTemplateDataTableDataTable() {
                this.TableName = "F35085_SaveHeaderTemplateDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F35085_SaveHeaderTemplateDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F35085_SaveHeaderTemplateDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollyearColumn {
                get {
                    return this.columnRollyear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassIDColumn {
                get {
                    return this.columnPropertyClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilePathColumn {
                get {
                    return this.columnFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_SaveHeaderTemplateDataTableRow this[int index] {
                get {
                    return ((F35085_SaveHeaderTemplateDataTableRow)(this.Rows[index]));
                }
            }
            
            public event F35085_SaveHeaderTemplateDataTableRowChangeEventHandler F35085_SaveHeaderTemplateDataTableRowChanging;
            
            public event F35085_SaveHeaderTemplateDataTableRowChangeEventHandler F35085_SaveHeaderTemplateDataTableRowChanged;
            
            public event F35085_SaveHeaderTemplateDataTableRowChangeEventHandler F35085_SaveHeaderTemplateDataTableRowDeleting;
            
            public event F35085_SaveHeaderTemplateDataTableRowChangeEventHandler F35085_SaveHeaderTemplateDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF35085_SaveHeaderTemplateDataTableRow(F35085_SaveHeaderTemplateDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_SaveHeaderTemplateDataTableRow AddF35085_SaveHeaderTemplateDataTableRow(string Rollyear, string PropertyClassID, string Description, string FilePath) {
                F35085_SaveHeaderTemplateDataTableRow rowF35085_SaveHeaderTemplateDataTableRow = ((F35085_SaveHeaderTemplateDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Rollyear,
                        PropertyClassID,
                        Description,
                        FilePath};
                rowF35085_SaveHeaderTemplateDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF35085_SaveHeaderTemplateDataTableRow);
                return rowF35085_SaveHeaderTemplateDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F35085_SaveHeaderTemplateDataTableDataTable cln = ((F35085_SaveHeaderTemplateDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F35085_SaveHeaderTemplateDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRollyear = base.Columns["Rollyear"];
                this.columnPropertyClassID = base.Columns["PropertyClassID"];
                this.columnDescription = base.Columns["Description"];
                this.columnFilePath = base.Columns["FilePath"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRollyear = new global::System.Data.DataColumn("Rollyear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollyear);
                this.columnPropertyClassID = new global::System.Data.DataColumn("PropertyClassID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClassID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnFilePath = new global::System.Data.DataColumn("FilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilePath);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_SaveHeaderTemplateDataTableRow NewF35085_SaveHeaderTemplateDataTableRow() {
                return ((F35085_SaveHeaderTemplateDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F35085_SaveHeaderTemplateDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F35085_SaveHeaderTemplateDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F35085_SaveHeaderTemplateDataTableRowChanged != null)) {
                    this.F35085_SaveHeaderTemplateDataTableRowChanged(this, new F35085_SaveHeaderTemplateDataTableRowChangeEvent(((F35085_SaveHeaderTemplateDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F35085_SaveHeaderTemplateDataTableRowChanging != null)) {
                    this.F35085_SaveHeaderTemplateDataTableRowChanging(this, new F35085_SaveHeaderTemplateDataTableRowChangeEvent(((F35085_SaveHeaderTemplateDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F35085_SaveHeaderTemplateDataTableRowDeleted != null)) {
                    this.F35085_SaveHeaderTemplateDataTableRowDeleted(this, new F35085_SaveHeaderTemplateDataTableRowChangeEvent(((F35085_SaveHeaderTemplateDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F35085_SaveHeaderTemplateDataTableRowDeleting != null)) {
                    this.F35085_SaveHeaderTemplateDataTableRowDeleting(this, new F35085_SaveHeaderTemplateDataTableRowChangeEvent(((F35085_SaveHeaderTemplateDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF35085_SaveHeaderTemplateDataTableRow(F35085_SaveHeaderTemplateDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35085CentrallyAssessedImportData ds = new F35085CentrallyAssessedImportData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F35085_SaveHeaderTemplateDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F35085_GetCAImportDataTableRow : global::System.Data.DataRow {
            
            private F35085_GetCAImportDataTableDataTable tableF35085_GetCAImportDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F35085_GetCAImportDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF35085_GetCAImportDataTable = ((F35085_GetCAImportDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Rollyear {
                get {
                    return ((int)(this[this.tableF35085_GetCAImportDataTable.RollyearColumn]));
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.RollyearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PropertyClassID {
                get {
                    return ((int)(this[this.tableF35085_GetCAImportDataTable.PropertyClassIDColumn]));
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.PropertyClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyClass {
                get {
                    return ((string)(this[this.tableF35085_GetCAImportDataTable.PropertyClassColumn]));
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.PropertyClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableF35085_GetCAImportDataTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'F35085_GetCAImportDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilePath {
                get {
                    return ((string)(this[this.tableF35085_GetCAImportDataTable.FilePathColumn]));
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.FilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImportEnabled {
                get {
                    return ((bool)(this[this.tableF35085_GetCAImportDataTable.IsImportEnabledColumn]));
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.IsImportEnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ImportStatus {
                get {
                    try {
                        return ((string)(this[this.tableF35085_GetCAImportDataTable.ImportStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportStatus\' in table \'F35085_GetCAImportDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.ImportStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckForErrors {
                get {
                    return ((bool)(this[this.tableF35085_GetCAImportDataTable.IsCheckForErrorsColumn]));
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.IsCheckForErrorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CheckErrorStatus {
                get {
                    try {
                        return ((string)(this[this.tableF35085_GetCAImportDataTable.CheckErrorStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CheckErrorStatus\' in table \'F35085_GetCAImportDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.CheckErrorStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordsCreated {
                get {
                    return ((bool)(this[this.tableF35085_GetCAImportDataTable.IsRecordsCreatedColumn]));
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.IsRecordsCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordsCreateStatus {
                get {
                    try {
                        return ((string)(this[this.tableF35085_GetCAImportDataTable.RecordsCreateStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordsCreateStatus\' in table \'F35085_GetCAImportDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.RecordsCreateStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ImportedEntries {
                get {
                    try {
                        return ((int)(this[this.tableF35085_GetCAImportDataTable.ImportedEntriesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportedEntries\' in table \'F35085_GetCAImportDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.ImportedEntriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EntriesInError {
                get {
                    try {
                        return ((int)(this[this.tableF35085_GetCAImportDataTable.EntriesInErrorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntriesInError\' in table \'F35085_GetCAImportDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_GetCAImportDataTable.EntriesInErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableF35085_GetCAImportDataTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableF35085_GetCAImportDataTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImportStatusNull() {
                return this.IsNull(this.tableF35085_GetCAImportDataTable.ImportStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImportStatusNull() {
                this[this.tableF35085_GetCAImportDataTable.ImportStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckErrorStatusNull() {
                return this.IsNull(this.tableF35085_GetCAImportDataTable.CheckErrorStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckErrorStatusNull() {
                this[this.tableF35085_GetCAImportDataTable.CheckErrorStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordsCreateStatusNull() {
                return this.IsNull(this.tableF35085_GetCAImportDataTable.RecordsCreateStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordsCreateStatusNull() {
                this[this.tableF35085_GetCAImportDataTable.RecordsCreateStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImportedEntriesNull() {
                return this.IsNull(this.tableF35085_GetCAImportDataTable.ImportedEntriesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImportedEntriesNull() {
                this[this.tableF35085_GetCAImportDataTable.ImportedEntriesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntriesInErrorNull() {
                return this.IsNull(this.tableF35085_GetCAImportDataTable.EntriesInErrorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntriesInErrorNull() {
                this[this.tableF35085_GetCAImportDataTable.EntriesInErrorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F35085_Get_GridDataTableRow : global::System.Data.DataRow {
            
            private F35085_Get_GridDataTableDataTable tableF35085_Get_GridDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F35085_Get_GridDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF35085_Get_GridDataTable = ((F35085_Get_GridDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CentralID {
                get {
                    try {
                        return ((int)(this[this.tableF35085_Get_GridDataTable.CentralIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CentralID\' in table \'F35085_Get_GridDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_Get_GridDataTable.CentralIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    try {
                        return ((string)(this[this.tableF35085_Get_GridDataTable.ParcelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber\' in table \'F35085_Get_GridDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableF35085_Get_GridDataTable.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableF35085_Get_GridDataTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'F35085_Get_GridDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableF35085_Get_GridDataTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PersonalProperty {
                get {
                    try {
                        return ((decimal)(this[this.tableF35085_Get_GridDataTable.PersonalPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonalProperty\' in table \'F35085_Get_GridDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableF35085_Get_GridDataTable.PersonalPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RealProperty {
                get {
                    try {
                        return ((decimal)(this[this.tableF35085_Get_GridDataTable.RealPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealProperty\' in table \'F35085_Get_GridDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableF35085_Get_GridDataTable.RealPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ErrorStatus {
                get {
                    try {
                        return ((string)(this[this.tableF35085_Get_GridDataTable.ErrorStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ErrorStatus\' in table \'F35085_Get_GridDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableF35085_Get_GridDataTable.ErrorStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Line {
                get {
                    try {
                        return ((int)(this[this.tableF35085_Get_GridDataTable.LineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Line\' in table \'F35085_Get_GridDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_Get_GridDataTable.LineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EntryID {
                get {
                    try {
                        return ((int)(this[this.tableF35085_Get_GridDataTable.EntryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryID\' in table \'F35085_Get_GridDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_Get_GridDataTable.EntryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCentralIDNull() {
                return this.IsNull(this.tableF35085_Get_GridDataTable.CentralIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCentralIDNull() {
                this[this.tableF35085_Get_GridDataTable.CentralIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tableF35085_Get_GridDataTable.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tableF35085_Get_GridDataTable.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableF35085_Get_GridDataTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableF35085_Get_GridDataTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalPropertyNull() {
                return this.IsNull(this.tableF35085_Get_GridDataTable.PersonalPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalPropertyNull() {
                this[this.tableF35085_Get_GridDataTable.PersonalPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRealPropertyNull() {
                return this.IsNull(this.tableF35085_Get_GridDataTable.RealPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRealPropertyNull() {
                this[this.tableF35085_Get_GridDataTable.RealPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsErrorStatusNull() {
                return this.IsNull(this.tableF35085_Get_GridDataTable.ErrorStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetErrorStatusNull() {
                this[this.tableF35085_Get_GridDataTable.ErrorStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineNull() {
                return this.IsNull(this.tableF35085_Get_GridDataTable.LineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineNull() {
                this[this.tableF35085_Get_GridDataTable.LineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryIDNull() {
                return this.IsNull(this.tableF35085_Get_GridDataTable.EntryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryIDNull() {
                this[this.tableF35085_Get_GridDataTable.EntryIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F35085_ListComboImportTypesRow : global::System.Data.DataRow {
            
            private F35085_ListComboImportTypesDataTable tableF35085_ListComboImportTypes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F35085_ListComboImportTypesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF35085_ListComboImportTypes = ((F35085_ListComboImportTypesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PropertyClassID {
                get {
                    return ((int)(this[this.tableF35085_ListComboImportTypes.PropertyClassIDColumn]));
                }
                set {
                    this[this.tableF35085_ListComboImportTypes.PropertyClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyClass {
                get {
                    return ((string)(this[this.tableF35085_ListComboImportTypes.PropertyClassColumn]));
                }
                set {
                    this[this.tableF35085_ListComboImportTypes.PropertyClassColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F35085_SaveHeaderTemplateDataTableRow : global::System.Data.DataRow {
            
            private F35085_SaveHeaderTemplateDataTableDataTable tableF35085_SaveHeaderTemplateDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F35085_SaveHeaderTemplateDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF35085_SaveHeaderTemplateDataTable = ((F35085_SaveHeaderTemplateDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rollyear {
                get {
                    try {
                        return ((string)(this[this.tableF35085_SaveHeaderTemplateDataTable.RollyearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rollyear\' in table \'F35085_SaveHeaderTemplateDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_SaveHeaderTemplateDataTable.RollyearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyClassID {
                get {
                    try {
                        return ((string)(this[this.tableF35085_SaveHeaderTemplateDataTable.PropertyClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyClassID\' in table \'F35085_SaveHeaderTemplateDataTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_SaveHeaderTemplateDataTable.PropertyClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableF35085_SaveHeaderTemplateDataTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'F35085_SaveHeaderTemplateDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_SaveHeaderTemplateDataTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilePath {
                get {
                    try {
                        return ((string)(this[this.tableF35085_SaveHeaderTemplateDataTable.FilePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilePath\' in table \'F35085_SaveHeaderTemplateDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableF35085_SaveHeaderTemplateDataTable.FilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollyearNull() {
                return this.IsNull(this.tableF35085_SaveHeaderTemplateDataTable.RollyearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollyearNull() {
                this[this.tableF35085_SaveHeaderTemplateDataTable.RollyearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyClassIDNull() {
                return this.IsNull(this.tableF35085_SaveHeaderTemplateDataTable.PropertyClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyClassIDNull() {
                this[this.tableF35085_SaveHeaderTemplateDataTable.PropertyClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableF35085_SaveHeaderTemplateDataTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableF35085_SaveHeaderTemplateDataTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilePathNull() {
                return this.IsNull(this.tableF35085_SaveHeaderTemplateDataTable.FilePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilePathNull() {
                this[this.tableF35085_SaveHeaderTemplateDataTable.FilePathColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F35085_GetCAImportDataTableRowChangeEvent : global::System.EventArgs {
            
            private F35085_GetCAImportDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_GetCAImportDataTableRowChangeEvent(F35085_GetCAImportDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_GetCAImportDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F35085_Get_GridDataTableRowChangeEvent : global::System.EventArgs {
            
            private F35085_Get_GridDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_Get_GridDataTableRowChangeEvent(F35085_Get_GridDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_Get_GridDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F35085_ListComboImportTypesRowChangeEvent : global::System.EventArgs {
            
            private F35085_ListComboImportTypesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_ListComboImportTypesRowChangeEvent(F35085_ListComboImportTypesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_ListComboImportTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F35085_SaveHeaderTemplateDataTableRowChangeEvent : global::System.EventArgs {
            
            private F35085_SaveHeaderTemplateDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_SaveHeaderTemplateDataTableRowChangeEvent(F35085_SaveHeaderTemplateDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F35085_SaveHeaderTemplateDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591