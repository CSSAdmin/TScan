//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F29600SeniorExemptData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F29600SeniorExemptData : global::System.Data.DataSet {
        
        private f29600ListExemptionCodeDataTable1DataTable tablef29600ListExemptionCodeDataTable1;
        
        private f29600GetSeniorExemptionModeDataTable tablef29600GetSeniorExemptionMode;
        
        private f29600ListExemptionCodeDataTableDataTable tablef29600ListExemptionCodeDataTable;
        
        private f29600ExemptCodeDataTableDataTable tablef29600ExemptCodeDataTable;
        
        private f29600_pcget_SeniorExemptionRollYearDataTable tablef29600_pcget_SeniorExemptionRollYear;
        
        private f29600GetSeniorExemptionOwnerComboDataTableDataTable tablef29600GetSeniorExemptionOwnerComboDataTable;
        
        private f29600ListSeniorExemptionDataTableDataTable tablef29600ListSeniorExemptionDataTable;
        
        private saveSeniorExemptDataTableDataTable tablesaveSeniorExemptDataTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F29600SeniorExemptData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F29600SeniorExemptData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f29600ListExemptionCodeDataTable1"] != null)) {
                    base.Tables.Add(new f29600ListExemptionCodeDataTable1DataTable(ds.Tables["f29600ListExemptionCodeDataTable1"]));
                }
                if ((ds.Tables["f29600GetSeniorExemptionMode"] != null)) {
                    base.Tables.Add(new f29600GetSeniorExemptionModeDataTable(ds.Tables["f29600GetSeniorExemptionMode"]));
                }
                if ((ds.Tables["f29600ListExemptionCodeDataTable"] != null)) {
                    base.Tables.Add(new f29600ListExemptionCodeDataTableDataTable(ds.Tables["f29600ListExemptionCodeDataTable"]));
                }
                if ((ds.Tables["f29600ExemptCodeDataTable"] != null)) {
                    base.Tables.Add(new f29600ExemptCodeDataTableDataTable(ds.Tables["f29600ExemptCodeDataTable"]));
                }
                if ((ds.Tables["f29600_pcget_SeniorExemptionRollYear"] != null)) {
                    base.Tables.Add(new f29600_pcget_SeniorExemptionRollYearDataTable(ds.Tables["f29600_pcget_SeniorExemptionRollYear"]));
                }
                if ((ds.Tables["f29600GetSeniorExemptionOwnerComboDataTable"] != null)) {
                    base.Tables.Add(new f29600GetSeniorExemptionOwnerComboDataTableDataTable(ds.Tables["f29600GetSeniorExemptionOwnerComboDataTable"]));
                }
                if ((ds.Tables["f29600ListSeniorExemptionDataTable"] != null)) {
                    base.Tables.Add(new f29600ListSeniorExemptionDataTableDataTable(ds.Tables["f29600ListSeniorExemptionDataTable"]));
                }
                if ((ds.Tables["saveSeniorExemptDataTable"] != null)) {
                    base.Tables.Add(new saveSeniorExemptDataTableDataTable(ds.Tables["saveSeniorExemptDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29600ListExemptionCodeDataTable1DataTable f29600ListExemptionCodeDataTable1 {
            get {
                return this.tablef29600ListExemptionCodeDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29600GetSeniorExemptionModeDataTable f29600GetSeniorExemptionMode {
            get {
                return this.tablef29600GetSeniorExemptionMode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29600ListExemptionCodeDataTableDataTable f29600ListExemptionCodeDataTable {
            get {
                return this.tablef29600ListExemptionCodeDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29600ExemptCodeDataTableDataTable f29600ExemptCodeDataTable {
            get {
                return this.tablef29600ExemptCodeDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29600_pcget_SeniorExemptionRollYearDataTable f29600_pcget_SeniorExemptionRollYear {
            get {
                return this.tablef29600_pcget_SeniorExemptionRollYear;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29600GetSeniorExemptionOwnerComboDataTableDataTable f29600GetSeniorExemptionOwnerComboDataTable {
            get {
                return this.tablef29600GetSeniorExemptionOwnerComboDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29600ListSeniorExemptionDataTableDataTable f29600ListSeniorExemptionDataTable {
            get {
                return this.tablef29600ListSeniorExemptionDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public saveSeniorExemptDataTableDataTable saveSeniorExemptDataTable {
            get {
                return this.tablesaveSeniorExemptDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F29600SeniorExemptData cln = ((F29600SeniorExemptData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f29600ListExemptionCodeDataTable1"] != null)) {
                    base.Tables.Add(new f29600ListExemptionCodeDataTable1DataTable(ds.Tables["f29600ListExemptionCodeDataTable1"]));
                }
                if ((ds.Tables["f29600GetSeniorExemptionMode"] != null)) {
                    base.Tables.Add(new f29600GetSeniorExemptionModeDataTable(ds.Tables["f29600GetSeniorExemptionMode"]));
                }
                if ((ds.Tables["f29600ListExemptionCodeDataTable"] != null)) {
                    base.Tables.Add(new f29600ListExemptionCodeDataTableDataTable(ds.Tables["f29600ListExemptionCodeDataTable"]));
                }
                if ((ds.Tables["f29600ExemptCodeDataTable"] != null)) {
                    base.Tables.Add(new f29600ExemptCodeDataTableDataTable(ds.Tables["f29600ExemptCodeDataTable"]));
                }
                if ((ds.Tables["f29600_pcget_SeniorExemptionRollYear"] != null)) {
                    base.Tables.Add(new f29600_pcget_SeniorExemptionRollYearDataTable(ds.Tables["f29600_pcget_SeniorExemptionRollYear"]));
                }
                if ((ds.Tables["f29600GetSeniorExemptionOwnerComboDataTable"] != null)) {
                    base.Tables.Add(new f29600GetSeniorExemptionOwnerComboDataTableDataTable(ds.Tables["f29600GetSeniorExemptionOwnerComboDataTable"]));
                }
                if ((ds.Tables["f29600ListSeniorExemptionDataTable"] != null)) {
                    base.Tables.Add(new f29600ListSeniorExemptionDataTableDataTable(ds.Tables["f29600ListSeniorExemptionDataTable"]));
                }
                if ((ds.Tables["saveSeniorExemptDataTable"] != null)) {
                    base.Tables.Add(new saveSeniorExemptDataTableDataTable(ds.Tables["saveSeniorExemptDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef29600ListExemptionCodeDataTable1 = ((f29600ListExemptionCodeDataTable1DataTable)(base.Tables["f29600ListExemptionCodeDataTable1"]));
            if ((initTable == true)) {
                if ((this.tablef29600ListExemptionCodeDataTable1 != null)) {
                    this.tablef29600ListExemptionCodeDataTable1.InitVars();
                }
            }
            this.tablef29600GetSeniorExemptionMode = ((f29600GetSeniorExemptionModeDataTable)(base.Tables["f29600GetSeniorExemptionMode"]));
            if ((initTable == true)) {
                if ((this.tablef29600GetSeniorExemptionMode != null)) {
                    this.tablef29600GetSeniorExemptionMode.InitVars();
                }
            }
            this.tablef29600ListExemptionCodeDataTable = ((f29600ListExemptionCodeDataTableDataTable)(base.Tables["f29600ListExemptionCodeDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef29600ListExemptionCodeDataTable != null)) {
                    this.tablef29600ListExemptionCodeDataTable.InitVars();
                }
            }
            this.tablef29600ExemptCodeDataTable = ((f29600ExemptCodeDataTableDataTable)(base.Tables["f29600ExemptCodeDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef29600ExemptCodeDataTable != null)) {
                    this.tablef29600ExemptCodeDataTable.InitVars();
                }
            }
            this.tablef29600_pcget_SeniorExemptionRollYear = ((f29600_pcget_SeniorExemptionRollYearDataTable)(base.Tables["f29600_pcget_SeniorExemptionRollYear"]));
            if ((initTable == true)) {
                if ((this.tablef29600_pcget_SeniorExemptionRollYear != null)) {
                    this.tablef29600_pcget_SeniorExemptionRollYear.InitVars();
                }
            }
            this.tablef29600GetSeniorExemptionOwnerComboDataTable = ((f29600GetSeniorExemptionOwnerComboDataTableDataTable)(base.Tables["f29600GetSeniorExemptionOwnerComboDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef29600GetSeniorExemptionOwnerComboDataTable != null)) {
                    this.tablef29600GetSeniorExemptionOwnerComboDataTable.InitVars();
                }
            }
            this.tablef29600ListSeniorExemptionDataTable = ((f29600ListSeniorExemptionDataTableDataTable)(base.Tables["f29600ListSeniorExemptionDataTable"]));
            if ((initTable == true)) {
                if ((this.tablef29600ListSeniorExemptionDataTable != null)) {
                    this.tablef29600ListSeniorExemptionDataTable.InitVars();
                }
            }
            this.tablesaveSeniorExemptDataTable = ((saveSeniorExemptDataTableDataTable)(base.Tables["saveSeniorExemptDataTable"]));
            if ((initTable == true)) {
                if ((this.tablesaveSeniorExemptDataTable != null)) {
                    this.tablesaveSeniorExemptDataTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F29600SeniorExemptData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F29600SeniorExemptData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef29600ListExemptionCodeDataTable1 = new f29600ListExemptionCodeDataTable1DataTable();
            base.Tables.Add(this.tablef29600ListExemptionCodeDataTable1);
            this.tablef29600GetSeniorExemptionMode = new f29600GetSeniorExemptionModeDataTable();
            base.Tables.Add(this.tablef29600GetSeniorExemptionMode);
            this.tablef29600ListExemptionCodeDataTable = new f29600ListExemptionCodeDataTableDataTable();
            base.Tables.Add(this.tablef29600ListExemptionCodeDataTable);
            this.tablef29600ExemptCodeDataTable = new f29600ExemptCodeDataTableDataTable();
            base.Tables.Add(this.tablef29600ExemptCodeDataTable);
            this.tablef29600_pcget_SeniorExemptionRollYear = new f29600_pcget_SeniorExemptionRollYearDataTable();
            base.Tables.Add(this.tablef29600_pcget_SeniorExemptionRollYear);
            this.tablef29600GetSeniorExemptionOwnerComboDataTable = new f29600GetSeniorExemptionOwnerComboDataTableDataTable();
            base.Tables.Add(this.tablef29600GetSeniorExemptionOwnerComboDataTable);
            this.tablef29600ListSeniorExemptionDataTable = new f29600ListSeniorExemptionDataTableDataTable();
            base.Tables.Add(this.tablef29600ListSeniorExemptionDataTable);
            this.tablesaveSeniorExemptDataTable = new saveSeniorExemptDataTableDataTable();
            base.Tables.Add(this.tablesaveSeniorExemptDataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29600ListExemptionCodeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29600GetSeniorExemptionMode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29600ListExemptionCodeDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29600ExemptCodeDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29600_pcget_SeniorExemptionRollYear() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29600GetSeniorExemptionOwnerComboDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29600ListSeniorExemptionDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesaveSeniorExemptDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F29600SeniorExemptData ds = new F29600SeniorExemptData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f29600ListExemptionCodeDataTable1RowChangeEventHandler(object sender, f29600ListExemptionCodeDataTable1RowChangeEvent e);
        
        public delegate void f29600GetSeniorExemptionModeRowChangeEventHandler(object sender, f29600GetSeniorExemptionModeRowChangeEvent e);
        
        public delegate void f29600ListExemptionCodeDataTableRowChangeEventHandler(object sender, f29600ListExemptionCodeDataTableRowChangeEvent e);
        
        public delegate void f29600ExemptCodeDataTableRowChangeEventHandler(object sender, f29600ExemptCodeDataTableRowChangeEvent e);
        
        public delegate void f29600_pcget_SeniorExemptionRollYearRowChangeEventHandler(object sender, f29600_pcget_SeniorExemptionRollYearRowChangeEvent e);
        
        public delegate void f29600GetSeniorExemptionOwnerComboDataTableRowChangeEventHandler(object sender, f29600GetSeniorExemptionOwnerComboDataTableRowChangeEvent e);
        
        public delegate void f29600ListSeniorExemptionDataTableRowChangeEventHandler(object sender, f29600ListSeniorExemptionDataTableRowChangeEvent e);
        
        public delegate void saveSeniorExemptDataTableRowChangeEventHandler(object sender, saveSeniorExemptDataTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29600ListExemptionCodeDataTable1DataTable : global::System.Data.TypedTableBase<f29600ListExemptionCodeDataTable1Row> {
            
            private global::System.Data.DataColumn columnExemptionCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTable1DataTable() {
                this.TableName = "f29600ListExemptionCodeDataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600ListExemptionCodeDataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29600ListExemptionCodeDataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionCodeColumn {
                get {
                    return this.columnExemptionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTable1Row this[int index] {
                get {
                    return ((f29600ListExemptionCodeDataTable1Row)(this.Rows[index]));
                }
            }
            
            public event f29600ListExemptionCodeDataTable1RowChangeEventHandler f29600ListExemptionCodeDataTable1RowChanging;
            
            public event f29600ListExemptionCodeDataTable1RowChangeEventHandler f29600ListExemptionCodeDataTable1RowChanged;
            
            public event f29600ListExemptionCodeDataTable1RowChangeEventHandler f29600ListExemptionCodeDataTable1RowDeleting;
            
            public event f29600ListExemptionCodeDataTable1RowChangeEventHandler f29600ListExemptionCodeDataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29600ListExemptionCodeDataTable1Row(f29600ListExemptionCodeDataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTable1Row Addf29600ListExemptionCodeDataTable1Row(string ExemptionCode) {
                f29600ListExemptionCodeDataTable1Row rowf29600ListExemptionCodeDataTable1Row = ((f29600ListExemptionCodeDataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ExemptionCode};
                rowf29600ListExemptionCodeDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29600ListExemptionCodeDataTable1Row);
                return rowf29600ListExemptionCodeDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29600ListExemptionCodeDataTable1DataTable cln = ((f29600ListExemptionCodeDataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29600ListExemptionCodeDataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnExemptionCode = base.Columns["ExemptionCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnExemptionCode = new global::System.Data.DataColumn("ExemptionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionCode);
                this.columnExemptionCode.AllowDBNull = false;
                this.columnExemptionCode.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTable1Row Newf29600ListExemptionCodeDataTable1Row() {
                return ((f29600ListExemptionCodeDataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29600ListExemptionCodeDataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29600ListExemptionCodeDataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29600ListExemptionCodeDataTable1RowChanged != null)) {
                    this.f29600ListExemptionCodeDataTable1RowChanged(this, new f29600ListExemptionCodeDataTable1RowChangeEvent(((f29600ListExemptionCodeDataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29600ListExemptionCodeDataTable1RowChanging != null)) {
                    this.f29600ListExemptionCodeDataTable1RowChanging(this, new f29600ListExemptionCodeDataTable1RowChangeEvent(((f29600ListExemptionCodeDataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29600ListExemptionCodeDataTable1RowDeleted != null)) {
                    this.f29600ListExemptionCodeDataTable1RowDeleted(this, new f29600ListExemptionCodeDataTable1RowChangeEvent(((f29600ListExemptionCodeDataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29600ListExemptionCodeDataTable1RowDeleting != null)) {
                    this.f29600ListExemptionCodeDataTable1RowDeleting(this, new f29600ListExemptionCodeDataTable1RowChangeEvent(((f29600ListExemptionCodeDataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29600ListExemptionCodeDataTable1Row(f29600ListExemptionCodeDataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29600SeniorExemptData ds = new F29600SeniorExemptData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29600ListExemptionCodeDataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29600GetSeniorExemptionModeDataTable : global::System.Data.TypedTableBase<f29600GetSeniorExemptionModeRow> {
            
            private global::System.Data.DataColumn columnMode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionModeDataTable() {
                this.TableName = "f29600GetSeniorExemptionMode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600GetSeniorExemptionModeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29600GetSeniorExemptionModeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModeColumn {
                get {
                    return this.columnMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionModeRow this[int index] {
                get {
                    return ((f29600GetSeniorExemptionModeRow)(this.Rows[index]));
                }
            }
            
            public event f29600GetSeniorExemptionModeRowChangeEventHandler f29600GetSeniorExemptionModeRowChanging;
            
            public event f29600GetSeniorExemptionModeRowChangeEventHandler f29600GetSeniorExemptionModeRowChanged;
            
            public event f29600GetSeniorExemptionModeRowChangeEventHandler f29600GetSeniorExemptionModeRowDeleting;
            
            public event f29600GetSeniorExemptionModeRowChangeEventHandler f29600GetSeniorExemptionModeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29600GetSeniorExemptionModeRow(f29600GetSeniorExemptionModeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionModeRow Addf29600GetSeniorExemptionModeRow(int Mode) {
                f29600GetSeniorExemptionModeRow rowf29600GetSeniorExemptionModeRow = ((f29600GetSeniorExemptionModeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Mode};
                rowf29600GetSeniorExemptionModeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29600GetSeniorExemptionModeRow);
                return rowf29600GetSeniorExemptionModeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29600GetSeniorExemptionModeDataTable cln = ((f29600GetSeniorExemptionModeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29600GetSeniorExemptionModeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMode = base.Columns["Mode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMode = new global::System.Data.DataColumn("Mode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMode);
                this.columnMode.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionModeRow Newf29600GetSeniorExemptionModeRow() {
                return ((f29600GetSeniorExemptionModeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29600GetSeniorExemptionModeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29600GetSeniorExemptionModeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29600GetSeniorExemptionModeRowChanged != null)) {
                    this.f29600GetSeniorExemptionModeRowChanged(this, new f29600GetSeniorExemptionModeRowChangeEvent(((f29600GetSeniorExemptionModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29600GetSeniorExemptionModeRowChanging != null)) {
                    this.f29600GetSeniorExemptionModeRowChanging(this, new f29600GetSeniorExemptionModeRowChangeEvent(((f29600GetSeniorExemptionModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29600GetSeniorExemptionModeRowDeleted != null)) {
                    this.f29600GetSeniorExemptionModeRowDeleted(this, new f29600GetSeniorExemptionModeRowChangeEvent(((f29600GetSeniorExemptionModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29600GetSeniorExemptionModeRowDeleting != null)) {
                    this.f29600GetSeniorExemptionModeRowDeleting(this, new f29600GetSeniorExemptionModeRowChangeEvent(((f29600GetSeniorExemptionModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29600GetSeniorExemptionModeRow(f29600GetSeniorExemptionModeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29600SeniorExemptData ds = new F29600SeniorExemptData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29600GetSeniorExemptionModeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29600ListExemptionCodeDataTableDataTable : global::System.Data.TypedTableBase<f29600ListExemptionCodeDataTableRow> {
            
            private global::System.Data.DataColumn columnExemptionCode;
            
            private global::System.Data.DataColumn columnIncomeMin;
            
            private global::System.Data.DataColumn columnIncomeMax;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTableDataTable() {
                this.TableName = "f29600ListExemptionCodeDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600ListExemptionCodeDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29600ListExemptionCodeDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionCodeColumn {
                get {
                    return this.columnExemptionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeMinColumn {
                get {
                    return this.columnIncomeMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeMaxColumn {
                get {
                    return this.columnIncomeMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTableRow this[int index] {
                get {
                    return ((f29600ListExemptionCodeDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f29600ListExemptionCodeDataTableRowChangeEventHandler f29600ListExemptionCodeDataTableRowChanging;
            
            public event f29600ListExemptionCodeDataTableRowChangeEventHandler f29600ListExemptionCodeDataTableRowChanged;
            
            public event f29600ListExemptionCodeDataTableRowChangeEventHandler f29600ListExemptionCodeDataTableRowDeleting;
            
            public event f29600ListExemptionCodeDataTableRowChangeEventHandler f29600ListExemptionCodeDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29600ListExemptionCodeDataTableRow(f29600ListExemptionCodeDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTableRow Addf29600ListExemptionCodeDataTableRow(string ExemptionCode, int IncomeMin, int IncomeMax) {
                f29600ListExemptionCodeDataTableRow rowf29600ListExemptionCodeDataTableRow = ((f29600ListExemptionCodeDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ExemptionCode,
                        IncomeMin,
                        IncomeMax};
                rowf29600ListExemptionCodeDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29600ListExemptionCodeDataTableRow);
                return rowf29600ListExemptionCodeDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29600ListExemptionCodeDataTableDataTable cln = ((f29600ListExemptionCodeDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29600ListExemptionCodeDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnExemptionCode = base.Columns["ExemptionCode"];
                this.columnIncomeMin = base.Columns["IncomeMin"];
                this.columnIncomeMax = base.Columns["IncomeMax"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnExemptionCode = new global::System.Data.DataColumn("ExemptionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionCode);
                this.columnIncomeMin = new global::System.Data.DataColumn("IncomeMin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeMin);
                this.columnIncomeMax = new global::System.Data.DataColumn("IncomeMax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeMax);
                this.columnExemptionCode.AllowDBNull = false;
                this.columnExemptionCode.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTableRow Newf29600ListExemptionCodeDataTableRow() {
                return ((f29600ListExemptionCodeDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29600ListExemptionCodeDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29600ListExemptionCodeDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29600ListExemptionCodeDataTableRowChanged != null)) {
                    this.f29600ListExemptionCodeDataTableRowChanged(this, new f29600ListExemptionCodeDataTableRowChangeEvent(((f29600ListExemptionCodeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29600ListExemptionCodeDataTableRowChanging != null)) {
                    this.f29600ListExemptionCodeDataTableRowChanging(this, new f29600ListExemptionCodeDataTableRowChangeEvent(((f29600ListExemptionCodeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29600ListExemptionCodeDataTableRowDeleted != null)) {
                    this.f29600ListExemptionCodeDataTableRowDeleted(this, new f29600ListExemptionCodeDataTableRowChangeEvent(((f29600ListExemptionCodeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29600ListExemptionCodeDataTableRowDeleting != null)) {
                    this.f29600ListExemptionCodeDataTableRowDeleting(this, new f29600ListExemptionCodeDataTableRowChangeEvent(((f29600ListExemptionCodeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29600ListExemptionCodeDataTableRow(f29600ListExemptionCodeDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29600SeniorExemptData ds = new F29600SeniorExemptData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29600ListExemptionCodeDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29600ExemptCodeDataTableDataTable : global::System.Data.TypedTableBase<f29600ExemptCodeDataTableRow> {
            
            private global::System.Data.DataColumn columnRollYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ExemptCodeDataTableDataTable() {
                this.TableName = "f29600ExemptCodeDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600ExemptCodeDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29600ExemptCodeDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ExemptCodeDataTableRow this[int index] {
                get {
                    return ((f29600ExemptCodeDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f29600ExemptCodeDataTableRowChangeEventHandler f29600ExemptCodeDataTableRowChanging;
            
            public event f29600ExemptCodeDataTableRowChangeEventHandler f29600ExemptCodeDataTableRowChanged;
            
            public event f29600ExemptCodeDataTableRowChangeEventHandler f29600ExemptCodeDataTableRowDeleting;
            
            public event f29600ExemptCodeDataTableRowChangeEventHandler f29600ExemptCodeDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29600ExemptCodeDataTableRow(f29600ExemptCodeDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ExemptCodeDataTableRow Addf29600ExemptCodeDataTableRow(string RollYear) {
                f29600ExemptCodeDataTableRow rowf29600ExemptCodeDataTableRow = ((f29600ExemptCodeDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RollYear};
                rowf29600ExemptCodeDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29600ExemptCodeDataTableRow);
                return rowf29600ExemptCodeDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29600ExemptCodeDataTableDataTable cln = ((f29600ExemptCodeDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29600ExemptCodeDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRollYear = base.Columns["RollYear"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ExemptCodeDataTableRow Newf29600ExemptCodeDataTableRow() {
                return ((f29600ExemptCodeDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29600ExemptCodeDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29600ExemptCodeDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29600ExemptCodeDataTableRowChanged != null)) {
                    this.f29600ExemptCodeDataTableRowChanged(this, new f29600ExemptCodeDataTableRowChangeEvent(((f29600ExemptCodeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29600ExemptCodeDataTableRowChanging != null)) {
                    this.f29600ExemptCodeDataTableRowChanging(this, new f29600ExemptCodeDataTableRowChangeEvent(((f29600ExemptCodeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29600ExemptCodeDataTableRowDeleted != null)) {
                    this.f29600ExemptCodeDataTableRowDeleted(this, new f29600ExemptCodeDataTableRowChangeEvent(((f29600ExemptCodeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29600ExemptCodeDataTableRowDeleting != null)) {
                    this.f29600ExemptCodeDataTableRowDeleting(this, new f29600ExemptCodeDataTableRowChangeEvent(((f29600ExemptCodeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29600ExemptCodeDataTableRow(f29600ExemptCodeDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29600SeniorExemptData ds = new F29600SeniorExemptData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29600ExemptCodeDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29600_pcget_SeniorExemptionRollYearDataTable : global::System.Data.TypedTableBase<f29600_pcget_SeniorExemptionRollYearRow> {
            
            private global::System.Data.DataColumn columnRollYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600_pcget_SeniorExemptionRollYearDataTable() {
                this.TableName = "f29600_pcget_SeniorExemptionRollYear";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600_pcget_SeniorExemptionRollYearDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29600_pcget_SeniorExemptionRollYearDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600_pcget_SeniorExemptionRollYearRow this[int index] {
                get {
                    return ((f29600_pcget_SeniorExemptionRollYearRow)(this.Rows[index]));
                }
            }
            
            public event f29600_pcget_SeniorExemptionRollYearRowChangeEventHandler f29600_pcget_SeniorExemptionRollYearRowChanging;
            
            public event f29600_pcget_SeniorExemptionRollYearRowChangeEventHandler f29600_pcget_SeniorExemptionRollYearRowChanged;
            
            public event f29600_pcget_SeniorExemptionRollYearRowChangeEventHandler f29600_pcget_SeniorExemptionRollYearRowDeleting;
            
            public event f29600_pcget_SeniorExemptionRollYearRowChangeEventHandler f29600_pcget_SeniorExemptionRollYearRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29600_pcget_SeniorExemptionRollYearRow(f29600_pcget_SeniorExemptionRollYearRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600_pcget_SeniorExemptionRollYearRow Addf29600_pcget_SeniorExemptionRollYearRow(short RollYear) {
                f29600_pcget_SeniorExemptionRollYearRow rowf29600_pcget_SeniorExemptionRollYearRow = ((f29600_pcget_SeniorExemptionRollYearRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RollYear};
                rowf29600_pcget_SeniorExemptionRollYearRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29600_pcget_SeniorExemptionRollYearRow);
                return rowf29600_pcget_SeniorExemptionRollYearRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29600_pcget_SeniorExemptionRollYearDataTable cln = ((f29600_pcget_SeniorExemptionRollYearDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29600_pcget_SeniorExemptionRollYearDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRollYear = base.Columns["RollYear"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnRollYear.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600_pcget_SeniorExemptionRollYearRow Newf29600_pcget_SeniorExemptionRollYearRow() {
                return ((f29600_pcget_SeniorExemptionRollYearRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29600_pcget_SeniorExemptionRollYearRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29600_pcget_SeniorExemptionRollYearRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29600_pcget_SeniorExemptionRollYearRowChanged != null)) {
                    this.f29600_pcget_SeniorExemptionRollYearRowChanged(this, new f29600_pcget_SeniorExemptionRollYearRowChangeEvent(((f29600_pcget_SeniorExemptionRollYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29600_pcget_SeniorExemptionRollYearRowChanging != null)) {
                    this.f29600_pcget_SeniorExemptionRollYearRowChanging(this, new f29600_pcget_SeniorExemptionRollYearRowChangeEvent(((f29600_pcget_SeniorExemptionRollYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29600_pcget_SeniorExemptionRollYearRowDeleted != null)) {
                    this.f29600_pcget_SeniorExemptionRollYearRowDeleted(this, new f29600_pcget_SeniorExemptionRollYearRowChangeEvent(((f29600_pcget_SeniorExemptionRollYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29600_pcget_SeniorExemptionRollYearRowDeleting != null)) {
                    this.f29600_pcget_SeniorExemptionRollYearRowDeleting(this, new f29600_pcget_SeniorExemptionRollYearRowChangeEvent(((f29600_pcget_SeniorExemptionRollYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29600_pcget_SeniorExemptionRollYearRow(f29600_pcget_SeniorExemptionRollYearRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29600SeniorExemptData ds = new F29600SeniorExemptData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29600_pcget_SeniorExemptionRollYearDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29600GetSeniorExemptionOwnerComboDataTableDataTable : global::System.Data.TypedTableBase<f29600GetSeniorExemptionOwnerComboDataTableRow> {
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnOwnerName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionOwnerComboDataTableDataTable() {
                this.TableName = "f29600GetSeniorExemptionOwnerComboDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600GetSeniorExemptionOwnerComboDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29600GetSeniorExemptionOwnerComboDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerNameColumn {
                get {
                    return this.columnOwnerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionOwnerComboDataTableRow this[int index] {
                get {
                    return ((f29600GetSeniorExemptionOwnerComboDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f29600GetSeniorExemptionOwnerComboDataTableRowChangeEventHandler f29600GetSeniorExemptionOwnerComboDataTableRowChanging;
            
            public event f29600GetSeniorExemptionOwnerComboDataTableRowChangeEventHandler f29600GetSeniorExemptionOwnerComboDataTableRowChanged;
            
            public event f29600GetSeniorExemptionOwnerComboDataTableRowChangeEventHandler f29600GetSeniorExemptionOwnerComboDataTableRowDeleting;
            
            public event f29600GetSeniorExemptionOwnerComboDataTableRowChangeEventHandler f29600GetSeniorExemptionOwnerComboDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29600GetSeniorExemptionOwnerComboDataTableRow(f29600GetSeniorExemptionOwnerComboDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionOwnerComboDataTableRow Addf29600GetSeniorExemptionOwnerComboDataTableRow(int OwnerID, string OwnerName) {
                f29600GetSeniorExemptionOwnerComboDataTableRow rowf29600GetSeniorExemptionOwnerComboDataTableRow = ((f29600GetSeniorExemptionOwnerComboDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OwnerID,
                        OwnerName};
                rowf29600GetSeniorExemptionOwnerComboDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29600GetSeniorExemptionOwnerComboDataTableRow);
                return rowf29600GetSeniorExemptionOwnerComboDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29600GetSeniorExemptionOwnerComboDataTableDataTable cln = ((f29600GetSeniorExemptionOwnerComboDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29600GetSeniorExemptionOwnerComboDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnOwnerName = base.Columns["OwnerName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionOwnerComboDataTableRow Newf29600GetSeniorExemptionOwnerComboDataTableRow() {
                return ((f29600GetSeniorExemptionOwnerComboDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29600GetSeniorExemptionOwnerComboDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29600GetSeniorExemptionOwnerComboDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29600GetSeniorExemptionOwnerComboDataTableRowChanged != null)) {
                    this.f29600GetSeniorExemptionOwnerComboDataTableRowChanged(this, new f29600GetSeniorExemptionOwnerComboDataTableRowChangeEvent(((f29600GetSeniorExemptionOwnerComboDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29600GetSeniorExemptionOwnerComboDataTableRowChanging != null)) {
                    this.f29600GetSeniorExemptionOwnerComboDataTableRowChanging(this, new f29600GetSeniorExemptionOwnerComboDataTableRowChangeEvent(((f29600GetSeniorExemptionOwnerComboDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29600GetSeniorExemptionOwnerComboDataTableRowDeleted != null)) {
                    this.f29600GetSeniorExemptionOwnerComboDataTableRowDeleted(this, new f29600GetSeniorExemptionOwnerComboDataTableRowChangeEvent(((f29600GetSeniorExemptionOwnerComboDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29600GetSeniorExemptionOwnerComboDataTableRowDeleting != null)) {
                    this.f29600GetSeniorExemptionOwnerComboDataTableRowDeleting(this, new f29600GetSeniorExemptionOwnerComboDataTableRowChangeEvent(((f29600GetSeniorExemptionOwnerComboDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29600GetSeniorExemptionOwnerComboDataTableRow(f29600GetSeniorExemptionOwnerComboDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29600SeniorExemptData ds = new F29600SeniorExemptData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29600GetSeniorExemptionOwnerComboDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29600ListSeniorExemptionDataTableDataTable : global::System.Data.TypedTableBase<f29600ListSeniorExemptionDataTableRow> {
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnExemptionID;
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnAppliedOwner;
            
            private global::System.Data.DataColumn columnOwnerAddress;
            
            private global::System.Data.DataColumn columnCityStateZip;
            
            private global::System.Data.DataColumn columnIsCertifyAge;
            
            private global::System.Data.DataColumn columnIsCertifyDisability;
            
            private global::System.Data.DataColumn columnIsCertifyVeteran;
            
            private global::System.Data.DataColumn columnIsCertifySpouse;
            
            private global::System.Data.DataColumn columnApplicantBdayDate;
            
            private global::System.Data.DataColumn columnSpouseBdayDate;
            
            private global::System.Data.DataColumn columnPropertyPurchasedDate;
            
            private global::System.Data.DataColumn columnPropertyOccupiedDate;
            
            private global::System.Data.DataColumn columnCancelDate;
            
            private global::System.Data.DataColumn columnOwnershipType;
            
            private global::System.Data.DataColumn columnResidencels;
            
            private global::System.Data.DataColumn columnMHYear;
            
            private global::System.Data.DataColumn columnMHMake;
            
            private global::System.Data.DataColumn columnMHModel;
            
            private global::System.Data.DataColumn columnMHLocation;
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnSitus;
            
            private global::System.Data.DataColumn columnLegal;
            
            private global::System.Data.DataColumn columnPropertyIncludes;
            
            private global::System.Data.DataColumn columnAcres;
            
            private global::System.Data.DataColumn columnAdjustedGross;
            
            private global::System.Data.DataColumn columnMilitaryPay;
            
            private global::System.Data.DataColumn columnOtherIncome;
            
            private global::System.Data.DataColumn columnLessPrescription;
            
            private global::System.Data.DataColumn columnCapitalGains;
            
            private global::System.Data.DataColumn columnDividends;
            
            private global::System.Data.DataColumn columnLessInsurance;
            
            private global::System.Data.DataColumn columnDeductions;
            
            private global::System.Data.DataColumn columnTaxableIRA;
            
            private global::System.Data.DataColumn columnLessHome;
            
            private global::System.Data.DataColumn columnLessOther;
            
            private global::System.Data.DataColumn columnPensions;
            
            private global::System.Data.DataColumn columnSocialSecurityDisability;
            
            private global::System.Data.DataColumn columnLessInHome;
            
            private global::System.Data.DataColumn columnCombinedDisposable;
            
            private global::System.Data.DataColumn columnDeductions1;
            
            private global::System.Data.DataColumn columnTaxableIRA1;
            
            private global::System.Data.DataColumn columnLessHome1;
            
            private global::System.Data.DataColumn columnLessOther1;
            
            private global::System.Data.DataColumn columnPensions1;
            
            private global::System.Data.DataColumn columnIsQualified;
            
            private global::System.Data.DataColumn columnEffectiveDate;
            
            private global::System.Data.DataColumn columnExemptionCode;
            
            private global::System.Data.DataColumn columnOwnerPercent;
            
            private global::System.Data.DataColumn columnIsContinuation;
            
            private global::System.Data.DataColumn columnFrozenValue;
            
            private global::System.Data.DataColumn columnNewConstruction;
            
            private global::System.Data.DataColumn columnResultingMarket;
            
            private global::System.Data.DataColumn columnValueLoss;
            
            private global::System.Data.DataColumn columnResultingTaxable;
            
            private global::System.Data.DataColumn columnFrozenLabel;
            
            private global::System.Data.DataColumn columnMarketImprovement;
            
            private global::System.Data.DataColumn columnMarketLand;
            
            private global::System.Data.DataColumn columnMarketCrop;
            
            private global::System.Data.DataColumn columnOriginalFrozenValue;
            
            private global::System.Data.DataColumn columnPensions2;
            
            private global::System.Data.DataColumn columnSocialSecurityDisability2;
            
            private global::System.Data.DataColumn columnOtherIncome2;
            
            private global::System.Data.DataColumn columnOtherIncome3;
            
            private global::System.Data.DataColumn columnLessOther2;
            
            private global::System.Data.DataColumn columnNonSRNewConstruction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListSeniorExemptionDataTableDataTable() {
                this.TableName = "f29600ListSeniorExemptionDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600ListSeniorExemptionDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29600ListSeniorExemptionDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionIDColumn {
                get {
                    return this.columnExemptionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppliedOwnerColumn {
                get {
                    return this.columnAppliedOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerAddressColumn {
                get {
                    return this.columnOwnerAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityStateZipColumn {
                get {
                    return this.columnCityStateZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCertifyAgeColumn {
                get {
                    return this.columnIsCertifyAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCertifyDisabilityColumn {
                get {
                    return this.columnIsCertifyDisability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCertifyVeteranColumn {
                get {
                    return this.columnIsCertifyVeteran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCertifySpouseColumn {
                get {
                    return this.columnIsCertifySpouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicantBdayDateColumn {
                get {
                    return this.columnApplicantBdayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpouseBdayDateColumn {
                get {
                    return this.columnSpouseBdayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyPurchasedDateColumn {
                get {
                    return this.columnPropertyPurchasedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyOccupiedDateColumn {
                get {
                    return this.columnPropertyOccupiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelDateColumn {
                get {
                    return this.columnCancelDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnershipTypeColumn {
                get {
                    return this.columnOwnershipType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidencelsColumn {
                get {
                    return this.columnResidencels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHYearColumn {
                get {
                    return this.columnMHYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHMakeColumn {
                get {
                    return this.columnMHMake;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHModelColumn {
                get {
                    return this.columnMHModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHLocationColumn {
                get {
                    return this.columnMHLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SitusColumn {
                get {
                    return this.columnSitus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LegalColumn {
                get {
                    return this.columnLegal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyIncludesColumn {
                get {
                    return this.columnPropertyIncludes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcresColumn {
                get {
                    return this.columnAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustedGrossColumn {
                get {
                    return this.columnAdjustedGross;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MilitaryPayColumn {
                get {
                    return this.columnMilitaryPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherIncomeColumn {
                get {
                    return this.columnOtherIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessPrescriptionColumn {
                get {
                    return this.columnLessPrescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CapitalGainsColumn {
                get {
                    return this.columnCapitalGains;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DividendsColumn {
                get {
                    return this.columnDividends;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessInsuranceColumn {
                get {
                    return this.columnLessInsurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeductionsColumn {
                get {
                    return this.columnDeductions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxableIRAColumn {
                get {
                    return this.columnTaxableIRA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessHomeColumn {
                get {
                    return this.columnLessHome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessOtherColumn {
                get {
                    return this.columnLessOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PensionsColumn {
                get {
                    return this.columnPensions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SocialSecurityDisabilityColumn {
                get {
                    return this.columnSocialSecurityDisability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessInHomeColumn {
                get {
                    return this.columnLessInHome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CombinedDisposableColumn {
                get {
                    return this.columnCombinedDisposable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Deductions1Column {
                get {
                    return this.columnDeductions1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxableIRA1Column {
                get {
                    return this.columnTaxableIRA1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessHome1Column {
                get {
                    return this.columnLessHome1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessOther1Column {
                get {
                    return this.columnLessOther1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pensions1Column {
                get {
                    return this.columnPensions1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsQualifiedColumn {
                get {
                    return this.columnIsQualified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveDateColumn {
                get {
                    return this.columnEffectiveDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionCodeColumn {
                get {
                    return this.columnExemptionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerPercentColumn {
                get {
                    return this.columnOwnerPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsContinuationColumn {
                get {
                    return this.columnIsContinuation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrozenValueColumn {
                get {
                    return this.columnFrozenValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewConstructionColumn {
                get {
                    return this.columnNewConstruction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultingMarketColumn {
                get {
                    return this.columnResultingMarket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueLossColumn {
                get {
                    return this.columnValueLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultingTaxableColumn {
                get {
                    return this.columnResultingTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrozenLabelColumn {
                get {
                    return this.columnFrozenLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketImprovementColumn {
                get {
                    return this.columnMarketImprovement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketLandColumn {
                get {
                    return this.columnMarketLand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketCropColumn {
                get {
                    return this.columnMarketCrop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalFrozenValueColumn {
                get {
                    return this.columnOriginalFrozenValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pensions2Column {
                get {
                    return this.columnPensions2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SocialSecurityDisability2Column {
                get {
                    return this.columnSocialSecurityDisability2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherIncome2Column {
                get {
                    return this.columnOtherIncome2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherIncome3Column {
                get {
                    return this.columnOtherIncome3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessOther2Column {
                get {
                    return this.columnLessOther2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonSRNewConstructionColumn {
                get {
                    return this.columnNonSRNewConstruction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListSeniorExemptionDataTableRow this[int index] {
                get {
                    return ((f29600ListSeniorExemptionDataTableRow)(this.Rows[index]));
                }
            }
            
            public event f29600ListSeniorExemptionDataTableRowChangeEventHandler f29600ListSeniorExemptionDataTableRowChanging;
            
            public event f29600ListSeniorExemptionDataTableRowChangeEventHandler f29600ListSeniorExemptionDataTableRowChanged;
            
            public event f29600ListSeniorExemptionDataTableRowChangeEventHandler f29600ListSeniorExemptionDataTableRowDeleting;
            
            public event f29600ListSeniorExemptionDataTableRowChangeEventHandler f29600ListSeniorExemptionDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29600ListSeniorExemptionDataTableRow(f29600ListSeniorExemptionDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListSeniorExemptionDataTableRow Addf29600ListSeniorExemptionDataTableRow(
                        int EventID, 
                        string ExemptionID, 
                        int OwnerID, 
                        string AppliedOwner, 
                        string OwnerAddress, 
                        string CityStateZip, 
                        bool IsCertifyAge, 
                        bool IsCertifyDisability, 
                        bool IsCertifyVeteran, 
                        bool IsCertifySpouse, 
                        string ApplicantBdayDate, 
                        string SpouseBdayDate, 
                        string PropertyPurchasedDate, 
                        string PropertyOccupiedDate, 
                        string CancelDate, 
                        byte OwnershipType, 
                        byte Residencels, 
                        short MHYear, 
                        string MHMake, 
                        string MHModel, 
                        string MHLocation, 
                        string ParcelNumber, 
                        string Situs, 
                        string Legal, 
                        byte PropertyIncludes, 
                        short Acres, 
                        int AdjustedGross, 
                        int MilitaryPay, 
                        int OtherIncome, 
                        int LessPrescription, 
                        int CapitalGains, 
                        int Dividends, 
                        int LessInsurance, 
                        int Deductions, 
                        int TaxableIRA, 
                        int LessHome, 
                        int LessOther, 
                        int Pensions, 
                        int SocialSecurityDisability, 
                        int LessInHome, 
                        decimal CombinedDisposable, 
                        int Deductions1, 
                        int TaxableIRA1, 
                        int LessHome1, 
                        int LessOther1, 
                        int Pensions1, 
                        bool IsQualified, 
                        string EffectiveDate, 
                        string ExemptionCode, 
                        decimal OwnerPercent, 
                        bool IsContinuation, 
                        decimal FrozenValue, 
                        decimal NewConstruction, 
                        decimal ResultingMarket, 
                        decimal ValueLoss, 
                        decimal ResultingTaxable, 
                        string FrozenLabel, 
                        decimal MarketImprovement, 
                        decimal MarketLand, 
                        decimal MarketCrop, 
                        decimal OriginalFrozenValue, 
                        int Pensions2, 
                        int SocialSecurityDisability2, 
                        int OtherIncome2, 
                        int OtherIncome3, 
                        int LessOther2, 
                        int NonSRNewConstruction) {
                f29600ListSeniorExemptionDataTableRow rowf29600ListSeniorExemptionDataTableRow = ((f29600ListSeniorExemptionDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EventID,
                        ExemptionID,
                        OwnerID,
                        AppliedOwner,
                        OwnerAddress,
                        CityStateZip,
                        IsCertifyAge,
                        IsCertifyDisability,
                        IsCertifyVeteran,
                        IsCertifySpouse,
                        ApplicantBdayDate,
                        SpouseBdayDate,
                        PropertyPurchasedDate,
                        PropertyOccupiedDate,
                        CancelDate,
                        OwnershipType,
                        Residencels,
                        MHYear,
                        MHMake,
                        MHModel,
                        MHLocation,
                        null,
                        ParcelNumber,
                        Situs,
                        Legal,
                        PropertyIncludes,
                        Acres,
                        AdjustedGross,
                        MilitaryPay,
                        OtherIncome,
                        LessPrescription,
                        CapitalGains,
                        Dividends,
                        LessInsurance,
                        Deductions,
                        TaxableIRA,
                        LessHome,
                        LessOther,
                        Pensions,
                        SocialSecurityDisability,
                        LessInHome,
                        CombinedDisposable,
                        Deductions1,
                        TaxableIRA1,
                        LessHome1,
                        LessOther1,
                        Pensions1,
                        IsQualified,
                        EffectiveDate,
                        ExemptionCode,
                        OwnerPercent,
                        IsContinuation,
                        FrozenValue,
                        NewConstruction,
                        ResultingMarket,
                        ValueLoss,
                        ResultingTaxable,
                        FrozenLabel,
                        MarketImprovement,
                        MarketLand,
                        MarketCrop,
                        OriginalFrozenValue,
                        Pensions2,
                        SocialSecurityDisability2,
                        OtherIncome2,
                        OtherIncome3,
                        LessOther2,
                        NonSRNewConstruction};
                rowf29600ListSeniorExemptionDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29600ListSeniorExemptionDataTableRow);
                return rowf29600ListSeniorExemptionDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29600ListSeniorExemptionDataTableDataTable cln = ((f29600ListSeniorExemptionDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29600ListSeniorExemptionDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEventID = base.Columns["EventID"];
                this.columnExemptionID = base.Columns["ExemptionID"];
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnAppliedOwner = base.Columns["AppliedOwner"];
                this.columnOwnerAddress = base.Columns["OwnerAddress"];
                this.columnCityStateZip = base.Columns["CityStateZip"];
                this.columnIsCertifyAge = base.Columns["IsCertifyAge"];
                this.columnIsCertifyDisability = base.Columns["IsCertifyDisability"];
                this.columnIsCertifyVeteran = base.Columns["IsCertifyVeteran"];
                this.columnIsCertifySpouse = base.Columns["IsCertifySpouse"];
                this.columnApplicantBdayDate = base.Columns["ApplicantBdayDate"];
                this.columnSpouseBdayDate = base.Columns["SpouseBdayDate"];
                this.columnPropertyPurchasedDate = base.Columns["PropertyPurchasedDate"];
                this.columnPropertyOccupiedDate = base.Columns["PropertyOccupiedDate"];
                this.columnCancelDate = base.Columns["CancelDate"];
                this.columnOwnershipType = base.Columns["OwnershipType"];
                this.columnResidencels = base.Columns["Residencels"];
                this.columnMHYear = base.Columns["MHYear"];
                this.columnMHMake = base.Columns["MHMake"];
                this.columnMHModel = base.Columns["MHModel"];
                this.columnMHLocation = base.Columns["MHLocation"];
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnSitus = base.Columns["Situs"];
                this.columnLegal = base.Columns["Legal"];
                this.columnPropertyIncludes = base.Columns["PropertyIncludes"];
                this.columnAcres = base.Columns["Acres"];
                this.columnAdjustedGross = base.Columns["AdjustedGross"];
                this.columnMilitaryPay = base.Columns["MilitaryPay"];
                this.columnOtherIncome = base.Columns["OtherIncome"];
                this.columnLessPrescription = base.Columns["LessPrescription"];
                this.columnCapitalGains = base.Columns["CapitalGains"];
                this.columnDividends = base.Columns["Dividends"];
                this.columnLessInsurance = base.Columns["LessInsurance"];
                this.columnDeductions = base.Columns["Deductions"];
                this.columnTaxableIRA = base.Columns["TaxableIRA"];
                this.columnLessHome = base.Columns["LessHome"];
                this.columnLessOther = base.Columns["LessOther"];
                this.columnPensions = base.Columns["Pensions"];
                this.columnSocialSecurityDisability = base.Columns["SocialSecurityDisability"];
                this.columnLessInHome = base.Columns["LessInHome"];
                this.columnCombinedDisposable = base.Columns["CombinedDisposable"];
                this.columnDeductions1 = base.Columns["Deductions1"];
                this.columnTaxableIRA1 = base.Columns["TaxableIRA1"];
                this.columnLessHome1 = base.Columns["LessHome1"];
                this.columnLessOther1 = base.Columns["LessOther1"];
                this.columnPensions1 = base.Columns["Pensions1"];
                this.columnIsQualified = base.Columns["IsQualified"];
                this.columnEffectiveDate = base.Columns["EffectiveDate"];
                this.columnExemptionCode = base.Columns["ExemptionCode"];
                this.columnOwnerPercent = base.Columns["OwnerPercent"];
                this.columnIsContinuation = base.Columns["IsContinuation"];
                this.columnFrozenValue = base.Columns["FrozenValue"];
                this.columnNewConstruction = base.Columns["NewConstruction"];
                this.columnResultingMarket = base.Columns["ResultingMarket"];
                this.columnValueLoss = base.Columns["ValueLoss"];
                this.columnResultingTaxable = base.Columns["ResultingTaxable"];
                this.columnFrozenLabel = base.Columns["FrozenLabel"];
                this.columnMarketImprovement = base.Columns["MarketImprovement"];
                this.columnMarketLand = base.Columns["MarketLand"];
                this.columnMarketCrop = base.Columns["MarketCrop"];
                this.columnOriginalFrozenValue = base.Columns["OriginalFrozenValue"];
                this.columnPensions2 = base.Columns["Pensions2"];
                this.columnSocialSecurityDisability2 = base.Columns["SocialSecurityDisability2"];
                this.columnOtherIncome2 = base.Columns["OtherIncome2"];
                this.columnOtherIncome3 = base.Columns["OtherIncome3"];
                this.columnLessOther2 = base.Columns["LessOther2"];
                this.columnNonSRNewConstruction = base.Columns["NonSRNewConstruction"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnExemptionID = new global::System.Data.DataColumn("ExemptionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionID);
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnAppliedOwner = new global::System.Data.DataColumn("AppliedOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppliedOwner);
                this.columnOwnerAddress = new global::System.Data.DataColumn("OwnerAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerAddress);
                this.columnCityStateZip = new global::System.Data.DataColumn("CityStateZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityStateZip);
                this.columnIsCertifyAge = new global::System.Data.DataColumn("IsCertifyAge", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCertifyAge);
                this.columnIsCertifyDisability = new global::System.Data.DataColumn("IsCertifyDisability", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCertifyDisability);
                this.columnIsCertifyVeteran = new global::System.Data.DataColumn("IsCertifyVeteran", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCertifyVeteran);
                this.columnIsCertifySpouse = new global::System.Data.DataColumn("IsCertifySpouse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCertifySpouse);
                this.columnApplicantBdayDate = new global::System.Data.DataColumn("ApplicantBdayDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicantBdayDate);
                this.columnSpouseBdayDate = new global::System.Data.DataColumn("SpouseBdayDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpouseBdayDate);
                this.columnPropertyPurchasedDate = new global::System.Data.DataColumn("PropertyPurchasedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyPurchasedDate);
                this.columnPropertyOccupiedDate = new global::System.Data.DataColumn("PropertyOccupiedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyOccupiedDate);
                this.columnCancelDate = new global::System.Data.DataColumn("CancelDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelDate);
                this.columnOwnershipType = new global::System.Data.DataColumn("OwnershipType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnershipType);
                this.columnResidencels = new global::System.Data.DataColumn("Residencels", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidencels);
                this.columnMHYear = new global::System.Data.DataColumn("MHYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHYear);
                this.columnMHMake = new global::System.Data.DataColumn("MHMake", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHMake);
                this.columnMHModel = new global::System.Data.DataColumn("MHModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHModel);
                this.columnMHLocation = new global::System.Data.DataColumn("MHLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHLocation);
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnSitus = new global::System.Data.DataColumn("Situs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSitus);
                this.columnLegal = new global::System.Data.DataColumn("Legal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLegal);
                this.columnPropertyIncludes = new global::System.Data.DataColumn("PropertyIncludes", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyIncludes);
                this.columnAcres = new global::System.Data.DataColumn("Acres", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcres);
                this.columnAdjustedGross = new global::System.Data.DataColumn("AdjustedGross", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustedGross);
                this.columnMilitaryPay = new global::System.Data.DataColumn("MilitaryPay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMilitaryPay);
                this.columnOtherIncome = new global::System.Data.DataColumn("OtherIncome", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherIncome);
                this.columnLessPrescription = new global::System.Data.DataColumn("LessPrescription", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessPrescription);
                this.columnCapitalGains = new global::System.Data.DataColumn("CapitalGains", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapitalGains);
                this.columnDividends = new global::System.Data.DataColumn("Dividends", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDividends);
                this.columnLessInsurance = new global::System.Data.DataColumn("LessInsurance", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessInsurance);
                this.columnDeductions = new global::System.Data.DataColumn("Deductions", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductions);
                this.columnTaxableIRA = new global::System.Data.DataColumn("TaxableIRA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxableIRA);
                this.columnLessHome = new global::System.Data.DataColumn("LessHome", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessHome);
                this.columnLessOther = new global::System.Data.DataColumn("LessOther", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessOther);
                this.columnPensions = new global::System.Data.DataColumn("Pensions", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPensions);
                this.columnSocialSecurityDisability = new global::System.Data.DataColumn("SocialSecurityDisability", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocialSecurityDisability);
                this.columnLessInHome = new global::System.Data.DataColumn("LessInHome", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessInHome);
                this.columnCombinedDisposable = new global::System.Data.DataColumn("CombinedDisposable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCombinedDisposable);
                this.columnDeductions1 = new global::System.Data.DataColumn("Deductions1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductions1);
                this.columnTaxableIRA1 = new global::System.Data.DataColumn("TaxableIRA1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxableIRA1);
                this.columnLessHome1 = new global::System.Data.DataColumn("LessHome1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessHome1);
                this.columnLessOther1 = new global::System.Data.DataColumn("LessOther1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessOther1);
                this.columnPensions1 = new global::System.Data.DataColumn("Pensions1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPensions1);
                this.columnIsQualified = new global::System.Data.DataColumn("IsQualified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsQualified);
                this.columnEffectiveDate = new global::System.Data.DataColumn("EffectiveDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveDate);
                this.columnExemptionCode = new global::System.Data.DataColumn("ExemptionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionCode);
                this.columnOwnerPercent = new global::System.Data.DataColumn("OwnerPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerPercent);
                this.columnIsContinuation = new global::System.Data.DataColumn("IsContinuation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsContinuation);
                this.columnFrozenValue = new global::System.Data.DataColumn("FrozenValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrozenValue);
                this.columnNewConstruction = new global::System.Data.DataColumn("NewConstruction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewConstruction);
                this.columnResultingMarket = new global::System.Data.DataColumn("ResultingMarket", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultingMarket);
                this.columnValueLoss = new global::System.Data.DataColumn("ValueLoss", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueLoss);
                this.columnResultingTaxable = new global::System.Data.DataColumn("ResultingTaxable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultingTaxable);
                this.columnFrozenLabel = new global::System.Data.DataColumn("FrozenLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrozenLabel);
                this.columnMarketImprovement = new global::System.Data.DataColumn("MarketImprovement", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketImprovement);
                this.columnMarketLand = new global::System.Data.DataColumn("MarketLand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketLand);
                this.columnMarketCrop = new global::System.Data.DataColumn("MarketCrop", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketCrop);
                this.columnOriginalFrozenValue = new global::System.Data.DataColumn("OriginalFrozenValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalFrozenValue);
                this.columnPensions2 = new global::System.Data.DataColumn("Pensions2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPensions2);
                this.columnSocialSecurityDisability2 = new global::System.Data.DataColumn("SocialSecurityDisability2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocialSecurityDisability2);
                this.columnOtherIncome2 = new global::System.Data.DataColumn("OtherIncome2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherIncome2);
                this.columnOtherIncome3 = new global::System.Data.DataColumn("OtherIncome3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherIncome3);
                this.columnLessOther2 = new global::System.Data.DataColumn("LessOther2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessOther2);
                this.columnNonSRNewConstruction = new global::System.Data.DataColumn("NonSRNewConstruction", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonSRNewConstruction);
                this.columnExemptionID.MaxLength = 250;
                this.columnAppliedOwner.ReadOnly = true;
                this.columnAppliedOwner.MaxLength = 102;
                this.columnOwnerAddress.ReadOnly = true;
                this.columnOwnerAddress.MaxLength = 102;
                this.columnCityStateZip.ReadOnly = true;
                this.columnCityStateZip.MaxLength = 153;
                this.columnApplicantBdayDate.MaxLength = 10;
                this.columnSpouseBdayDate.MaxLength = 10;
                this.columnPropertyPurchasedDate.MaxLength = 10;
                this.columnPropertyOccupiedDate.MaxLength = 10;
                this.columnCancelDate.MaxLength = 10;
                this.columnOwnershipType.ReadOnly = true;
                this.columnResidencels.ReadOnly = true;
                this.columnMHYear.ReadOnly = true;
                this.columnMHMake.ReadOnly = true;
                this.columnMHMake.MaxLength = 250;
                this.columnMHModel.ReadOnly = true;
                this.columnMHModel.MaxLength = 250;
                this.columnMHLocation.ReadOnly = true;
                this.columnMHLocation.MaxLength = 250;
                this.columnParcelID.AutoIncrement = true;
                this.columnParcelID.ReadOnly = true;
                this.columnParcelNumber.MaxLength = 50;
                this.columnSitus.ReadOnly = true;
                this.columnSitus.MaxLength = 400;
                this.columnLegal.ReadOnly = true;
                this.columnLegal.MaxLength = 5000;
                this.columnPropertyIncludes.ReadOnly = true;
                this.columnAcres.ReadOnly = true;
                this.columnAdjustedGross.ReadOnly = true;
                this.columnMilitaryPay.ReadOnly = true;
                this.columnOtherIncome.ReadOnly = true;
                this.columnLessPrescription.ReadOnly = true;
                this.columnCapitalGains.ReadOnly = true;
                this.columnDividends.ReadOnly = true;
                this.columnLessInsurance.ReadOnly = true;
                this.columnDeductions.ReadOnly = true;
                this.columnTaxableIRA.ReadOnly = true;
                this.columnLessHome.ReadOnly = true;
                this.columnLessOther.ReadOnly = true;
                this.columnPensions.ReadOnly = true;
                this.columnSocialSecurityDisability.ReadOnly = true;
                this.columnLessInHome.ReadOnly = true;
                this.columnCombinedDisposable.ReadOnly = true;
                this.columnDeductions1.ReadOnly = true;
                this.columnTaxableIRA1.ReadOnly = true;
                this.columnLessHome1.ReadOnly = true;
                this.columnLessOther1.ReadOnly = true;
                this.columnPensions1.ReadOnly = true;
                this.columnEffectiveDate.ReadOnly = true;
                this.columnEffectiveDate.MaxLength = 10;
                this.columnExemptionCode.MaxLength = 50;
                this.columnOwnerPercent.ReadOnly = true;
                this.columnFrozenValue.ReadOnly = true;
                this.columnNewConstruction.ReadOnly = true;
                this.columnResultingMarket.ReadOnly = true;
                this.columnValueLoss.ReadOnly = true;
                this.columnResultingTaxable.ReadOnly = true;
                this.columnFrozenLabel.ReadOnly = true;
                this.columnFrozenLabel.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListSeniorExemptionDataTableRow Newf29600ListSeniorExemptionDataTableRow() {
                return ((f29600ListSeniorExemptionDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29600ListSeniorExemptionDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29600ListSeniorExemptionDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29600ListSeniorExemptionDataTableRowChanged != null)) {
                    this.f29600ListSeniorExemptionDataTableRowChanged(this, new f29600ListSeniorExemptionDataTableRowChangeEvent(((f29600ListSeniorExemptionDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29600ListSeniorExemptionDataTableRowChanging != null)) {
                    this.f29600ListSeniorExemptionDataTableRowChanging(this, new f29600ListSeniorExemptionDataTableRowChangeEvent(((f29600ListSeniorExemptionDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29600ListSeniorExemptionDataTableRowDeleted != null)) {
                    this.f29600ListSeniorExemptionDataTableRowDeleted(this, new f29600ListSeniorExemptionDataTableRowChangeEvent(((f29600ListSeniorExemptionDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29600ListSeniorExemptionDataTableRowDeleting != null)) {
                    this.f29600ListSeniorExemptionDataTableRowDeleting(this, new f29600ListSeniorExemptionDataTableRowChangeEvent(((f29600ListSeniorExemptionDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29600ListSeniorExemptionDataTableRow(f29600ListSeniorExemptionDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29600SeniorExemptData ds = new F29600SeniorExemptData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29600ListSeniorExemptionDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class saveSeniorExemptDataTableDataTable : global::System.Data.TypedTableBase<saveSeniorExemptDataTableRow> {
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnExemptionID;
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnIsCertifyAge;
            
            private global::System.Data.DataColumn columnIsCertifyDisability;
            
            private global::System.Data.DataColumn columnIsCertifyVeteran;
            
            private global::System.Data.DataColumn columnIsCertifySpouse;
            
            private global::System.Data.DataColumn columnApplicantBdayDate;
            
            private global::System.Data.DataColumn columnSpouseBdayDate;
            
            private global::System.Data.DataColumn columnPropertyPurchasedDate;
            
            private global::System.Data.DataColumn columnPropertyOccupiedDate;
            
            private global::System.Data.DataColumn columnOwnershipType;
            
            private global::System.Data.DataColumn columnResidencels;
            
            private global::System.Data.DataColumn columnMHYear;
            
            private global::System.Data.DataColumn columnMHMake;
            
            private global::System.Data.DataColumn columnMHModel;
            
            private global::System.Data.DataColumn columnMHLocation;
            
            private global::System.Data.DataColumn columnPropertyIncludes;
            
            private global::System.Data.DataColumn columnAcres;
            
            private global::System.Data.DataColumn columnAdjustedGross;
            
            private global::System.Data.DataColumn columnCapitalGains;
            
            private global::System.Data.DataColumn columnDeductions;
            
            private global::System.Data.DataColumn columnPensions;
            
            private global::System.Data.DataColumn columnMilitaryPay;
            
            private global::System.Data.DataColumn columnDividends;
            
            private global::System.Data.DataColumn columnTaxableIRA;
            
            private global::System.Data.DataColumn columnSocialSecurityDisability;
            
            private global::System.Data.DataColumn columnOtherIncome;
            
            private global::System.Data.DataColumn columnLessHome;
            
            private global::System.Data.DataColumn columnLessInHome;
            
            private global::System.Data.DataColumn columnLessPrescription;
            
            private global::System.Data.DataColumn columnLessInsurance;
            
            private global::System.Data.DataColumn columnLessOther;
            
            private global::System.Data.DataColumn columnCombinedDisposable;
            
            private global::System.Data.DataColumn columnIsQualified;
            
            private global::System.Data.DataColumn columnExemptionCode;
            
            private global::System.Data.DataColumn columnEffectiveDate;
            
            private global::System.Data.DataColumn columnIsContinuation;
            
            private global::System.Data.DataColumn columnFrozenValue;
            
            private global::System.Data.DataColumn columnNewConstruction;
            
            private global::System.Data.DataColumn columnResultingMarket;
            
            private global::System.Data.DataColumn columnValueLoss;
            
            private global::System.Data.DataColumn columnCancelDate;
            
            private global::System.Data.DataColumn columnResultingTaxable;
            
            private global::System.Data.DataColumn columnMarketImprovement;
            
            private global::System.Data.DataColumn columnMarketLand;
            
            private global::System.Data.DataColumn columnMarketCrop;
            
            private global::System.Data.DataColumn columnOriginalFrozenValue;
            
            private global::System.Data.DataColumn columnPensions2;
            
            private global::System.Data.DataColumn columnSocialSecurityDisability2;
            
            private global::System.Data.DataColumn columnOtherIncome2;
            
            private global::System.Data.DataColumn columnOtherIncome3;
            
            private global::System.Data.DataColumn columnLessOther2;
            
            private global::System.Data.DataColumn columnNonSRNewConstruction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveSeniorExemptDataTableDataTable() {
                this.TableName = "saveSeniorExemptDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal saveSeniorExemptDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected saveSeniorExemptDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionIDColumn {
                get {
                    return this.columnExemptionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCertifyAgeColumn {
                get {
                    return this.columnIsCertifyAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCertifyDisabilityColumn {
                get {
                    return this.columnIsCertifyDisability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCertifyVeteranColumn {
                get {
                    return this.columnIsCertifyVeteran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCertifySpouseColumn {
                get {
                    return this.columnIsCertifySpouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicantBdayDateColumn {
                get {
                    return this.columnApplicantBdayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpouseBdayDateColumn {
                get {
                    return this.columnSpouseBdayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyPurchasedDateColumn {
                get {
                    return this.columnPropertyPurchasedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyOccupiedDateColumn {
                get {
                    return this.columnPropertyOccupiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnershipTypeColumn {
                get {
                    return this.columnOwnershipType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidencelsColumn {
                get {
                    return this.columnResidencels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHYearColumn {
                get {
                    return this.columnMHYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHMakeColumn {
                get {
                    return this.columnMHMake;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHModelColumn {
                get {
                    return this.columnMHModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHLocationColumn {
                get {
                    return this.columnMHLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyIncludesColumn {
                get {
                    return this.columnPropertyIncludes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcresColumn {
                get {
                    return this.columnAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustedGrossColumn {
                get {
                    return this.columnAdjustedGross;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CapitalGainsColumn {
                get {
                    return this.columnCapitalGains;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeductionsColumn {
                get {
                    return this.columnDeductions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PensionsColumn {
                get {
                    return this.columnPensions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MilitaryPayColumn {
                get {
                    return this.columnMilitaryPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DividendsColumn {
                get {
                    return this.columnDividends;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxableIRAColumn {
                get {
                    return this.columnTaxableIRA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SocialSecurityDisabilityColumn {
                get {
                    return this.columnSocialSecurityDisability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherIncomeColumn {
                get {
                    return this.columnOtherIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessHomeColumn {
                get {
                    return this.columnLessHome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessInHomeColumn {
                get {
                    return this.columnLessInHome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessPrescriptionColumn {
                get {
                    return this.columnLessPrescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessInsuranceColumn {
                get {
                    return this.columnLessInsurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessOtherColumn {
                get {
                    return this.columnLessOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CombinedDisposableColumn {
                get {
                    return this.columnCombinedDisposable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsQualifiedColumn {
                get {
                    return this.columnIsQualified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionCodeColumn {
                get {
                    return this.columnExemptionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveDateColumn {
                get {
                    return this.columnEffectiveDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsContinuationColumn {
                get {
                    return this.columnIsContinuation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrozenValueColumn {
                get {
                    return this.columnFrozenValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewConstructionColumn {
                get {
                    return this.columnNewConstruction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultingMarketColumn {
                get {
                    return this.columnResultingMarket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueLossColumn {
                get {
                    return this.columnValueLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelDateColumn {
                get {
                    return this.columnCancelDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultingTaxableColumn {
                get {
                    return this.columnResultingTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketImprovementColumn {
                get {
                    return this.columnMarketImprovement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketLandColumn {
                get {
                    return this.columnMarketLand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketCropColumn {
                get {
                    return this.columnMarketCrop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalFrozenValueColumn {
                get {
                    return this.columnOriginalFrozenValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pensions2Column {
                get {
                    return this.columnPensions2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SocialSecurityDisability2Column {
                get {
                    return this.columnSocialSecurityDisability2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherIncome2Column {
                get {
                    return this.columnOtherIncome2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherIncome3Column {
                get {
                    return this.columnOtherIncome3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessOther2Column {
                get {
                    return this.columnLessOther2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonSRNewConstructionColumn {
                get {
                    return this.columnNonSRNewConstruction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveSeniorExemptDataTableRow this[int index] {
                get {
                    return ((saveSeniorExemptDataTableRow)(this.Rows[index]));
                }
            }
            
            public event saveSeniorExemptDataTableRowChangeEventHandler saveSeniorExemptDataTableRowChanging;
            
            public event saveSeniorExemptDataTableRowChangeEventHandler saveSeniorExemptDataTableRowChanged;
            
            public event saveSeniorExemptDataTableRowChangeEventHandler saveSeniorExemptDataTableRowDeleting;
            
            public event saveSeniorExemptDataTableRowChangeEventHandler saveSeniorExemptDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsaveSeniorExemptDataTableRow(saveSeniorExemptDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveSeniorExemptDataTableRow AddsaveSeniorExemptDataTableRow(
                        int EventID, 
                        string ExemptionID, 
                        int OwnerID, 
                        bool IsCertifyAge, 
                        bool IsCertifyDisability, 
                        bool IsCertifyVeteran, 
                        bool IsCertifySpouse, 
                        string ApplicantBdayDate, 
                        string SpouseBdayDate, 
                        string PropertyPurchasedDate, 
                        string PropertyOccupiedDate, 
                        short OwnershipType, 
                        short Residencels, 
                        short MHYear, 
                        string MHMake, 
                        string MHModel, 
                        string MHLocation, 
                        short PropertyIncludes, 
                        short Acres, 
                        decimal AdjustedGross, 
                        decimal CapitalGains, 
                        decimal Deductions, 
                        decimal Pensions, 
                        decimal MilitaryPay, 
                        decimal Dividends, 
                        decimal TaxableIRA, 
                        decimal SocialSecurityDisability, 
                        decimal OtherIncome, 
                        decimal LessHome, 
                        decimal LessInHome, 
                        decimal LessPrescription, 
                        decimal LessInsurance, 
                        decimal LessOther, 
                        decimal CombinedDisposable, 
                        bool IsQualified, 
                        string ExemptionCode, 
                        string EffectiveDate, 
                        bool IsContinuation, 
                        decimal FrozenValue, 
                        decimal NewConstruction, 
                        decimal ResultingMarket, 
                        decimal ValueLoss, 
                        string CancelDate, 
                        decimal ResultingTaxable, 
                        decimal MarketImprovement, 
                        decimal MarketLand, 
                        decimal MarketCrop, 
                        decimal OriginalFrozenValue, 
                        decimal Pensions2, 
                        decimal SocialSecurityDisability2, 
                        decimal OtherIncome2, 
                        decimal OtherIncome3, 
                        decimal LessOther2, 
                        decimal NonSRNewConstruction) {
                saveSeniorExemptDataTableRow rowsaveSeniorExemptDataTableRow = ((saveSeniorExemptDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EventID,
                        ExemptionID,
                        OwnerID,
                        IsCertifyAge,
                        IsCertifyDisability,
                        IsCertifyVeteran,
                        IsCertifySpouse,
                        ApplicantBdayDate,
                        SpouseBdayDate,
                        PropertyPurchasedDate,
                        PropertyOccupiedDate,
                        OwnershipType,
                        Residencels,
                        MHYear,
                        MHMake,
                        MHModel,
                        MHLocation,
                        PropertyIncludes,
                        Acres,
                        AdjustedGross,
                        CapitalGains,
                        Deductions,
                        Pensions,
                        MilitaryPay,
                        Dividends,
                        TaxableIRA,
                        SocialSecurityDisability,
                        OtherIncome,
                        LessHome,
                        LessInHome,
                        LessPrescription,
                        LessInsurance,
                        LessOther,
                        CombinedDisposable,
                        IsQualified,
                        ExemptionCode,
                        EffectiveDate,
                        IsContinuation,
                        FrozenValue,
                        NewConstruction,
                        ResultingMarket,
                        ValueLoss,
                        CancelDate,
                        ResultingTaxable,
                        MarketImprovement,
                        MarketLand,
                        MarketCrop,
                        OriginalFrozenValue,
                        Pensions2,
                        SocialSecurityDisability2,
                        OtherIncome2,
                        OtherIncome3,
                        LessOther2,
                        NonSRNewConstruction};
                rowsaveSeniorExemptDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsaveSeniorExemptDataTableRow);
                return rowsaveSeniorExemptDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                saveSeniorExemptDataTableDataTable cln = ((saveSeniorExemptDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new saveSeniorExemptDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEventID = base.Columns["EventID"];
                this.columnExemptionID = base.Columns["ExemptionID"];
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnIsCertifyAge = base.Columns["IsCertifyAge"];
                this.columnIsCertifyDisability = base.Columns["IsCertifyDisability"];
                this.columnIsCertifyVeteran = base.Columns["IsCertifyVeteran"];
                this.columnIsCertifySpouse = base.Columns["IsCertifySpouse"];
                this.columnApplicantBdayDate = base.Columns["ApplicantBdayDate"];
                this.columnSpouseBdayDate = base.Columns["SpouseBdayDate"];
                this.columnPropertyPurchasedDate = base.Columns["PropertyPurchasedDate"];
                this.columnPropertyOccupiedDate = base.Columns["PropertyOccupiedDate"];
                this.columnOwnershipType = base.Columns["OwnershipType"];
                this.columnResidencels = base.Columns["Residencels"];
                this.columnMHYear = base.Columns["MHYear"];
                this.columnMHMake = base.Columns["MHMake"];
                this.columnMHModel = base.Columns["MHModel"];
                this.columnMHLocation = base.Columns["MHLocation"];
                this.columnPropertyIncludes = base.Columns["PropertyIncludes"];
                this.columnAcres = base.Columns["Acres"];
                this.columnAdjustedGross = base.Columns["AdjustedGross"];
                this.columnCapitalGains = base.Columns["CapitalGains"];
                this.columnDeductions = base.Columns["Deductions"];
                this.columnPensions = base.Columns["Pensions"];
                this.columnMilitaryPay = base.Columns["MilitaryPay"];
                this.columnDividends = base.Columns["Dividends"];
                this.columnTaxableIRA = base.Columns["TaxableIRA"];
                this.columnSocialSecurityDisability = base.Columns["SocialSecurityDisability"];
                this.columnOtherIncome = base.Columns["OtherIncome"];
                this.columnLessHome = base.Columns["LessHome"];
                this.columnLessInHome = base.Columns["LessInHome"];
                this.columnLessPrescription = base.Columns["LessPrescription"];
                this.columnLessInsurance = base.Columns["LessInsurance"];
                this.columnLessOther = base.Columns["LessOther"];
                this.columnCombinedDisposable = base.Columns["CombinedDisposable"];
                this.columnIsQualified = base.Columns["IsQualified"];
                this.columnExemptionCode = base.Columns["ExemptionCode"];
                this.columnEffectiveDate = base.Columns["EffectiveDate"];
                this.columnIsContinuation = base.Columns["IsContinuation"];
                this.columnFrozenValue = base.Columns["FrozenValue"];
                this.columnNewConstruction = base.Columns["NewConstruction"];
                this.columnResultingMarket = base.Columns["ResultingMarket"];
                this.columnValueLoss = base.Columns["ValueLoss"];
                this.columnCancelDate = base.Columns["CancelDate"];
                this.columnResultingTaxable = base.Columns["ResultingTaxable"];
                this.columnMarketImprovement = base.Columns["MarketImprovement"];
                this.columnMarketLand = base.Columns["MarketLand"];
                this.columnMarketCrop = base.Columns["MarketCrop"];
                this.columnOriginalFrozenValue = base.Columns["OriginalFrozenValue"];
                this.columnPensions2 = base.Columns["Pensions2"];
                this.columnSocialSecurityDisability2 = base.Columns["SocialSecurityDisability2"];
                this.columnOtherIncome2 = base.Columns["OtherIncome2"];
                this.columnOtherIncome3 = base.Columns["OtherIncome3"];
                this.columnLessOther2 = base.Columns["LessOther2"];
                this.columnNonSRNewConstruction = base.Columns["NonSRNewConstruction"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnExemptionID = new global::System.Data.DataColumn("ExemptionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionID);
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnIsCertifyAge = new global::System.Data.DataColumn("IsCertifyAge", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCertifyAge);
                this.columnIsCertifyDisability = new global::System.Data.DataColumn("IsCertifyDisability", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCertifyDisability);
                this.columnIsCertifyVeteran = new global::System.Data.DataColumn("IsCertifyVeteran", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCertifyVeteran);
                this.columnIsCertifySpouse = new global::System.Data.DataColumn("IsCertifySpouse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCertifySpouse);
                this.columnApplicantBdayDate = new global::System.Data.DataColumn("ApplicantBdayDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicantBdayDate);
                this.columnSpouseBdayDate = new global::System.Data.DataColumn("SpouseBdayDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpouseBdayDate);
                this.columnPropertyPurchasedDate = new global::System.Data.DataColumn("PropertyPurchasedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyPurchasedDate);
                this.columnPropertyOccupiedDate = new global::System.Data.DataColumn("PropertyOccupiedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyOccupiedDate);
                this.columnOwnershipType = new global::System.Data.DataColumn("OwnershipType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnershipType);
                this.columnResidencels = new global::System.Data.DataColumn("Residencels", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidencels);
                this.columnMHYear = new global::System.Data.DataColumn("MHYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHYear);
                this.columnMHMake = new global::System.Data.DataColumn("MHMake", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHMake);
                this.columnMHModel = new global::System.Data.DataColumn("MHModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHModel);
                this.columnMHLocation = new global::System.Data.DataColumn("MHLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHLocation);
                this.columnPropertyIncludes = new global::System.Data.DataColumn("PropertyIncludes", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyIncludes);
                this.columnAcres = new global::System.Data.DataColumn("Acres", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcres);
                this.columnAdjustedGross = new global::System.Data.DataColumn("AdjustedGross", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustedGross);
                this.columnCapitalGains = new global::System.Data.DataColumn("CapitalGains", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapitalGains);
                this.columnDeductions = new global::System.Data.DataColumn("Deductions", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductions);
                this.columnPensions = new global::System.Data.DataColumn("Pensions", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPensions);
                this.columnMilitaryPay = new global::System.Data.DataColumn("MilitaryPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMilitaryPay);
                this.columnDividends = new global::System.Data.DataColumn("Dividends", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDividends);
                this.columnTaxableIRA = new global::System.Data.DataColumn("TaxableIRA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxableIRA);
                this.columnSocialSecurityDisability = new global::System.Data.DataColumn("SocialSecurityDisability", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocialSecurityDisability);
                this.columnOtherIncome = new global::System.Data.DataColumn("OtherIncome", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherIncome);
                this.columnLessHome = new global::System.Data.DataColumn("LessHome", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessHome);
                this.columnLessInHome = new global::System.Data.DataColumn("LessInHome", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessInHome);
                this.columnLessPrescription = new global::System.Data.DataColumn("LessPrescription", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessPrescription);
                this.columnLessInsurance = new global::System.Data.DataColumn("LessInsurance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessInsurance);
                this.columnLessOther = new global::System.Data.DataColumn("LessOther", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessOther);
                this.columnCombinedDisposable = new global::System.Data.DataColumn("CombinedDisposable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCombinedDisposable);
                this.columnIsQualified = new global::System.Data.DataColumn("IsQualified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsQualified);
                this.columnExemptionCode = new global::System.Data.DataColumn("ExemptionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionCode);
                this.columnEffectiveDate = new global::System.Data.DataColumn("EffectiveDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveDate);
                this.columnIsContinuation = new global::System.Data.DataColumn("IsContinuation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsContinuation);
                this.columnFrozenValue = new global::System.Data.DataColumn("FrozenValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrozenValue);
                this.columnNewConstruction = new global::System.Data.DataColumn("NewConstruction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewConstruction);
                this.columnResultingMarket = new global::System.Data.DataColumn("ResultingMarket", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultingMarket);
                this.columnValueLoss = new global::System.Data.DataColumn("ValueLoss", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueLoss);
                this.columnCancelDate = new global::System.Data.DataColumn("CancelDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelDate);
                this.columnResultingTaxable = new global::System.Data.DataColumn("ResultingTaxable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultingTaxable);
                this.columnMarketImprovement = new global::System.Data.DataColumn("MarketImprovement", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketImprovement);
                this.columnMarketLand = new global::System.Data.DataColumn("MarketLand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketLand);
                this.columnMarketCrop = new global::System.Data.DataColumn("MarketCrop", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketCrop);
                this.columnOriginalFrozenValue = new global::System.Data.DataColumn("OriginalFrozenValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalFrozenValue);
                this.columnPensions2 = new global::System.Data.DataColumn("Pensions2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPensions2);
                this.columnSocialSecurityDisability2 = new global::System.Data.DataColumn("SocialSecurityDisability2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocialSecurityDisability2);
                this.columnOtherIncome2 = new global::System.Data.DataColumn("OtherIncome2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherIncome2);
                this.columnOtherIncome3 = new global::System.Data.DataColumn("OtherIncome3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherIncome3);
                this.columnLessOther2 = new global::System.Data.DataColumn("LessOther2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessOther2);
                this.columnNonSRNewConstruction = new global::System.Data.DataColumn("NonSRNewConstruction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonSRNewConstruction);
                this.columnExemptionID.MaxLength = 250;
                this.columnApplicantBdayDate.MaxLength = 10;
                this.columnSpouseBdayDate.MaxLength = 10;
                this.columnPropertyPurchasedDate.MaxLength = 10;
                this.columnPropertyOccupiedDate.MaxLength = 10;
                this.columnMHMake.MaxLength = 250;
                this.columnMHModel.MaxLength = 250;
                this.columnMHLocation.MaxLength = 250;
                this.columnEffectiveDate.MaxLength = 10;
                this.columnCancelDate.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveSeniorExemptDataTableRow NewsaveSeniorExemptDataTableRow() {
                return ((saveSeniorExemptDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new saveSeniorExemptDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(saveSeniorExemptDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.saveSeniorExemptDataTableRowChanged != null)) {
                    this.saveSeniorExemptDataTableRowChanged(this, new saveSeniorExemptDataTableRowChangeEvent(((saveSeniorExemptDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.saveSeniorExemptDataTableRowChanging != null)) {
                    this.saveSeniorExemptDataTableRowChanging(this, new saveSeniorExemptDataTableRowChangeEvent(((saveSeniorExemptDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.saveSeniorExemptDataTableRowDeleted != null)) {
                    this.saveSeniorExemptDataTableRowDeleted(this, new saveSeniorExemptDataTableRowChangeEvent(((saveSeniorExemptDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.saveSeniorExemptDataTableRowDeleting != null)) {
                    this.saveSeniorExemptDataTableRowDeleting(this, new saveSeniorExemptDataTableRowChangeEvent(((saveSeniorExemptDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesaveSeniorExemptDataTableRow(saveSeniorExemptDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29600SeniorExemptData ds = new F29600SeniorExemptData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "saveSeniorExemptDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29600ListExemptionCodeDataTable1Row : global::System.Data.DataRow {
            
            private f29600ListExemptionCodeDataTable1DataTable tablef29600ListExemptionCodeDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600ListExemptionCodeDataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29600ListExemptionCodeDataTable1 = ((f29600ListExemptionCodeDataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExemptionCode {
                get {
                    return ((string)(this[this.tablef29600ListExemptionCodeDataTable1.ExemptionCodeColumn]));
                }
                set {
                    this[this.tablef29600ListExemptionCodeDataTable1.ExemptionCodeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29600GetSeniorExemptionModeRow : global::System.Data.DataRow {
            
            private f29600GetSeniorExemptionModeDataTable tablef29600GetSeniorExemptionMode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600GetSeniorExemptionModeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29600GetSeniorExemptionMode = ((f29600GetSeniorExemptionModeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Mode {
                get {
                    try {
                        return ((int)(this[this.tablef29600GetSeniorExemptionMode.ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mode\' in table \'f29600GetSeniorExemptionMode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600GetSeniorExemptionMode.ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModeNull() {
                return this.IsNull(this.tablef29600GetSeniorExemptionMode.ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModeNull() {
                this[this.tablef29600GetSeniorExemptionMode.ModeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29600ListExemptionCodeDataTableRow : global::System.Data.DataRow {
            
            private f29600ListExemptionCodeDataTableDataTable tablef29600ListExemptionCodeDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600ListExemptionCodeDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29600ListExemptionCodeDataTable = ((f29600ListExemptionCodeDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExemptionCode {
                get {
                    return ((string)(this[this.tablef29600ListExemptionCodeDataTable.ExemptionCodeColumn]));
                }
                set {
                    this[this.tablef29600ListExemptionCodeDataTable.ExemptionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IncomeMin {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListExemptionCodeDataTable.IncomeMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeMin\' in table \'f29600ListExemptionCodeDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListExemptionCodeDataTable.IncomeMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IncomeMax {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListExemptionCodeDataTable.IncomeMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeMax\' in table \'f29600ListExemptionCodeDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListExemptionCodeDataTable.IncomeMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeMinNull() {
                return this.IsNull(this.tablef29600ListExemptionCodeDataTable.IncomeMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeMinNull() {
                this[this.tablef29600ListExemptionCodeDataTable.IncomeMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeMaxNull() {
                return this.IsNull(this.tablef29600ListExemptionCodeDataTable.IncomeMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeMaxNull() {
                this[this.tablef29600ListExemptionCodeDataTable.IncomeMaxColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29600ExemptCodeDataTableRow : global::System.Data.DataRow {
            
            private f29600ExemptCodeDataTableDataTable tablef29600ExemptCodeDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600ExemptCodeDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29600ExemptCodeDataTable = ((f29600ExemptCodeDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RollYear {
                get {
                    try {
                        return ((string)(this[this.tablef29600ExemptCodeDataTable.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'f29600ExemptCodeDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ExemptCodeDataTable.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tablef29600ExemptCodeDataTable.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tablef29600ExemptCodeDataTable.RollYearColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29600_pcget_SeniorExemptionRollYearRow : global::System.Data.DataRow {
            
            private f29600_pcget_SeniorExemptionRollYearDataTable tablef29600_pcget_SeniorExemptionRollYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600_pcget_SeniorExemptionRollYearRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29600_pcget_SeniorExemptionRollYear = ((f29600_pcget_SeniorExemptionRollYearDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tablef29600_pcget_SeniorExemptionRollYear.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'f29600_pcget_SeniorExemptionRollYear\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600_pcget_SeniorExemptionRollYear.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tablef29600_pcget_SeniorExemptionRollYear.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tablef29600_pcget_SeniorExemptionRollYear.RollYearColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29600GetSeniorExemptionOwnerComboDataTableRow : global::System.Data.DataRow {
            
            private f29600GetSeniorExemptionOwnerComboDataTableDataTable tablef29600GetSeniorExemptionOwnerComboDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600GetSeniorExemptionOwnerComboDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29600GetSeniorExemptionOwnerComboDataTable = ((f29600GetSeniorExemptionOwnerComboDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    try {
                        return ((int)(this[this.tablef29600GetSeniorExemptionOwnerComboDataTable.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'f29600GetSeniorExemptionOwnerComboDataTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600GetSeniorExemptionOwnerComboDataTable.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerName {
                get {
                    if (this.IsOwnerNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablef29600GetSeniorExemptionOwnerComboDataTable.OwnerNameColumn]));
                    }
                }
                set {
                    this[this.tablef29600GetSeniorExemptionOwnerComboDataTable.OwnerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tablef29600GetSeniorExemptionOwnerComboDataTable.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tablef29600GetSeniorExemptionOwnerComboDataTable.OwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerNameNull() {
                return this.IsNull(this.tablef29600GetSeniorExemptionOwnerComboDataTable.OwnerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerNameNull() {
                this[this.tablef29600GetSeniorExemptionOwnerComboDataTable.OwnerNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29600ListSeniorExemptionDataTableRow : global::System.Data.DataRow {
            
            private f29600ListSeniorExemptionDataTableDataTable tablef29600ListSeniorExemptionDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29600ListSeniorExemptionDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29600ListSeniorExemptionDataTable = ((f29600ListSeniorExemptionDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.EventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventID\' in table \'f29600ListSeniorExemptionDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExemptionID {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.ExemptionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExemptionID\' in table \'f29600ListSeniorExemptionDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.ExemptionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'f29600ListSeniorExemptionDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AppliedOwner {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.AppliedOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppliedOwner\' in table \'f29600ListSeniorExemptionDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.AppliedOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerAddress {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.OwnerAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerAddress\' in table \'f29600ListSeniorExemptionDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.OwnerAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CityStateZip {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.CityStateZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityStateZip\' in table \'f29600ListSeniorExemptionDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.CityStateZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCertifyAge {
                get {
                    try {
                        return ((bool)(this[this.tablef29600ListSeniorExemptionDataTable.IsCertifyAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCertifyAge\' in table \'f29600ListSeniorExemptionDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.IsCertifyAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCertifyDisability {
                get {
                    try {
                        return ((bool)(this[this.tablef29600ListSeniorExemptionDataTable.IsCertifyDisabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCertifyDisability\' in table \'f29600ListSeniorExemptionDat" +
                                "aTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.IsCertifyDisabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCertifyVeteran {
                get {
                    try {
                        return ((bool)(this[this.tablef29600ListSeniorExemptionDataTable.IsCertifyVeteranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCertifyVeteran\' in table \'f29600ListSeniorExemptionDataTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.IsCertifyVeteranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCertifySpouse {
                get {
                    try {
                        return ((bool)(this[this.tablef29600ListSeniorExemptionDataTable.IsCertifySpouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCertifySpouse\' in table \'f29600ListSeniorExemptionDataTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.IsCertifySpouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplicantBdayDate {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.ApplicantBdayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicantBdayDate\' in table \'f29600ListSeniorExemptionDataT" +
                                "able\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.ApplicantBdayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpouseBdayDate {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.SpouseBdayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpouseBdayDate\' in table \'f29600ListSeniorExemptionDataTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.SpouseBdayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyPurchasedDate {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.PropertyPurchasedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyPurchasedDate\' in table \'f29600ListSeniorExemptionD" +
                                "ataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.PropertyPurchasedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyOccupiedDate {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.PropertyOccupiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyOccupiedDate\' in table \'f29600ListSeniorExemptionDa" +
                                "taTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.PropertyOccupiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CancelDate {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.CancelDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CancelDate\' in table \'f29600ListSeniorExemptionDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.CancelDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte OwnershipType {
                get {
                    try {
                        return ((byte)(this[this.tablef29600ListSeniorExemptionDataTable.OwnershipTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnershipType\' in table \'f29600ListSeniorExemptionDataTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.OwnershipTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Residencels {
                get {
                    try {
                        return ((byte)(this[this.tablef29600ListSeniorExemptionDataTable.ResidencelsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Residencels\' in table \'f29600ListSeniorExemptionDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.ResidencelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MHYear {
                get {
                    try {
                        return ((short)(this[this.tablef29600ListSeniorExemptionDataTable.MHYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHYear\' in table \'f29600ListSeniorExemptionDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.MHYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHMake {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.MHMakeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHMake\' in table \'f29600ListSeniorExemptionDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.MHMakeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHModel {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.MHModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHModel\' in table \'f29600ListSeniorExemptionDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.MHModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHLocation {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.MHLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHLocation\' in table \'f29600ListSeniorExemptionDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.MHLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'f29600ListSeniorExemptionDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.ParcelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber\' in table \'f29600ListSeniorExemptionDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Situs {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.SitusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Situs\' in table \'f29600ListSeniorExemptionDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.SitusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Legal {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.LegalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Legal\' in table \'f29600ListSeniorExemptionDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.LegalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte PropertyIncludes {
                get {
                    try {
                        return ((byte)(this[this.tablef29600ListSeniorExemptionDataTable.PropertyIncludesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyIncludes\' in table \'f29600ListSeniorExemptionDataTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.PropertyIncludesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Acres {
                get {
                    try {
                        return ((short)(this[this.tablef29600ListSeniorExemptionDataTable.AcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acres\' in table \'f29600ListSeniorExemptionDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.AcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AdjustedGross {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.AdjustedGrossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjustedGross\' in table \'f29600ListSeniorExemptionDataTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.AdjustedGrossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MilitaryPay {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.MilitaryPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MilitaryPay\' in table \'f29600ListSeniorExemptionDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.MilitaryPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OtherIncome {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.OtherIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherIncome\' in table \'f29600ListSeniorExemptionDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.OtherIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LessPrescription {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.LessPrescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessPrescription\' in table \'f29600ListSeniorExemptionDataTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.LessPrescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CapitalGains {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.CapitalGainsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapitalGains\' in table \'f29600ListSeniorExemptionDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.CapitalGainsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Dividends {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.DividendsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dividends\' in table \'f29600ListSeniorExemptionDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.DividendsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LessInsurance {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.LessInsuranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessInsurance\' in table \'f29600ListSeniorExemptionDataTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.LessInsuranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Deductions {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.DeductionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deductions\' in table \'f29600ListSeniorExemptionDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.DeductionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TaxableIRA {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.TaxableIRAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxableIRA\' in table \'f29600ListSeniorExemptionDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.TaxableIRAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LessHome {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.LessHomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessHome\' in table \'f29600ListSeniorExemptionDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.LessHomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LessOther {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.LessOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessOther\' in table \'f29600ListSeniorExemptionDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.LessOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Pensions {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.PensionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pensions\' in table \'f29600ListSeniorExemptionDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.PensionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SocialSecurityDisability {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.SocialSecurityDisabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SocialSecurityDisability\' in table \'f29600ListSeniorExempti" +
                                "onDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.SocialSecurityDisabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LessInHome {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.LessInHomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessInHome\' in table \'f29600ListSeniorExemptionDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.LessInHomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CombinedDisposable {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.CombinedDisposableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CombinedDisposable\' in table \'f29600ListSeniorExemptionData" +
                                "Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.CombinedDisposableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Deductions1 {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.Deductions1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deductions1\' in table \'f29600ListSeniorExemptionDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.Deductions1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TaxableIRA1 {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.TaxableIRA1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxableIRA1\' in table \'f29600ListSeniorExemptionDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.TaxableIRA1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LessHome1 {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.LessHome1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessHome1\' in table \'f29600ListSeniorExemptionDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.LessHome1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LessOther1 {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.LessOther1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessOther1\' in table \'f29600ListSeniorExemptionDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.LessOther1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Pensions1 {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.Pensions1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pensions1\' in table \'f29600ListSeniorExemptionDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.Pensions1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualified {
                get {
                    try {
                        return ((bool)(this[this.tablef29600ListSeniorExemptionDataTable.IsQualifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsQualified\' in table \'f29600ListSeniorExemptionDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.IsQualifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EffectiveDate {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.EffectiveDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveDate\' in table \'f29600ListSeniorExemptionDataTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.EffectiveDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExemptionCode {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.ExemptionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExemptionCode\' in table \'f29600ListSeniorExemptionDataTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.ExemptionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OwnerPercent {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.OwnerPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerPercent\' in table \'f29600ListSeniorExemptionDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.OwnerPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContinuation {
                get {
                    try {
                        return ((bool)(this[this.tablef29600ListSeniorExemptionDataTable.IsContinuationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsContinuation\' in table \'f29600ListSeniorExemptionDataTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.IsContinuationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FrozenValue {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.FrozenValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrozenValue\' in table \'f29600ListSeniorExemptionDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.FrozenValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NewConstruction {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.NewConstructionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewConstruction\' in table \'f29600ListSeniorExemptionDataTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.NewConstructionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResultingMarket {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.ResultingMarketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultingMarket\' in table \'f29600ListSeniorExemptionDataTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.ResultingMarketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ValueLoss {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.ValueLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueLoss\' in table \'f29600ListSeniorExemptionDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.ValueLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResultingTaxable {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.ResultingTaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultingTaxable\' in table \'f29600ListSeniorExemptionDataTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.ResultingTaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrozenLabel {
                get {
                    try {
                        return ((string)(this[this.tablef29600ListSeniorExemptionDataTable.FrozenLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrozenLabel\' in table \'f29600ListSeniorExemptionDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.FrozenLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MarketImprovement {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.MarketImprovementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketImprovement\' in table \'f29600ListSeniorExemptionDataT" +
                                "able\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.MarketImprovementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MarketLand {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.MarketLandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketLand\' in table \'f29600ListSeniorExemptionDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.MarketLandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MarketCrop {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.MarketCropColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketCrop\' in table \'f29600ListSeniorExemptionDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.MarketCropColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OriginalFrozenValue {
                get {
                    try {
                        return ((decimal)(this[this.tablef29600ListSeniorExemptionDataTable.OriginalFrozenValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalFrozenValue\' in table \'f29600ListSeniorExemptionDat" +
                                "aTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.OriginalFrozenValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Pensions2 {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.Pensions2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pensions2\' in table \'f29600ListSeniorExemptionDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.Pensions2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SocialSecurityDisability2 {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.SocialSecurityDisability2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SocialSecurityDisability2\' in table \'f29600ListSeniorExempt" +
                                "ionDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.SocialSecurityDisability2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OtherIncome2 {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.OtherIncome2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherIncome2\' in table \'f29600ListSeniorExemptionDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.OtherIncome2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OtherIncome3 {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.OtherIncome3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherIncome3\' in table \'f29600ListSeniorExemptionDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.OtherIncome3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LessOther2 {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.LessOther2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessOther2\' in table \'f29600ListSeniorExemptionDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.LessOther2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NonSRNewConstruction {
                get {
                    try {
                        return ((int)(this[this.tablef29600ListSeniorExemptionDataTable.NonSRNewConstructionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonSRNewConstruction\' in table \'f29600ListSeniorExemptionDa" +
                                "taTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29600ListSeniorExemptionDataTable.NonSRNewConstructionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventIDNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.EventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventIDNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.EventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptionIDNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.ExemptionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptionIDNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.ExemptionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.OwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppliedOwnerNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.AppliedOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppliedOwnerNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.AppliedOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerAddressNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.OwnerAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerAddressNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.OwnerAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityStateZipNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.CityStateZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityStateZipNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.CityStateZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCertifyAgeNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.IsCertifyAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCertifyAgeNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.IsCertifyAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCertifyDisabilityNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.IsCertifyDisabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCertifyDisabilityNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.IsCertifyDisabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCertifyVeteranNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.IsCertifyVeteranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCertifyVeteranNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.IsCertifyVeteranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCertifySpouseNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.IsCertifySpouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCertifySpouseNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.IsCertifySpouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicantBdayDateNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.ApplicantBdayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicantBdayDateNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.ApplicantBdayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpouseBdayDateNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.SpouseBdayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpouseBdayDateNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.SpouseBdayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyPurchasedDateNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.PropertyPurchasedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyPurchasedDateNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.PropertyPurchasedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyOccupiedDateNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.PropertyOccupiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyOccupiedDateNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.PropertyOccupiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancelDateNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.CancelDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancelDateNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.CancelDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnershipTypeNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.OwnershipTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnershipTypeNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.OwnershipTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidencelsNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.ResidencelsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidencelsNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.ResidencelsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHYearNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.MHYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHYearNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.MHYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHMakeNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.MHMakeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHMakeNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.MHMakeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHModelNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.MHModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHModelNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.MHModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHLocationNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.MHLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHLocationNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.MHLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSitusNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.SitusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSitusNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.SitusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLegalNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.LegalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLegalNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.LegalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyIncludesNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.PropertyIncludesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyIncludesNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.PropertyIncludesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcresNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.AcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcresNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.AcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustedGrossNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.AdjustedGrossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustedGrossNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.AdjustedGrossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMilitaryPayNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.MilitaryPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMilitaryPayNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.MilitaryPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherIncomeNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.OtherIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherIncomeNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.OtherIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessPrescriptionNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.LessPrescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessPrescriptionNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.LessPrescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCapitalGainsNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.CapitalGainsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCapitalGainsNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.CapitalGainsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDividendsNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.DividendsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDividendsNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.DividendsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessInsuranceNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.LessInsuranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessInsuranceNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.LessInsuranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeductionsNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.DeductionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeductionsNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.DeductionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxableIRANull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.TaxableIRAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxableIRANull() {
                this[this.tablef29600ListSeniorExemptionDataTable.TaxableIRAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessHomeNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.LessHomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessHomeNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.LessHomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessOtherNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.LessOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessOtherNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.LessOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPensionsNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.PensionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPensionsNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.PensionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocialSecurityDisabilityNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.SocialSecurityDisabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocialSecurityDisabilityNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.SocialSecurityDisabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessInHomeNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.LessInHomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessInHomeNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.LessInHomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCombinedDisposableNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.CombinedDisposableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCombinedDisposableNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.CombinedDisposableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeductions1Null() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.Deductions1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeductions1Null() {
                this[this.tablef29600ListSeniorExemptionDataTable.Deductions1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxableIRA1Null() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.TaxableIRA1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxableIRA1Null() {
                this[this.tablef29600ListSeniorExemptionDataTable.TaxableIRA1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessHome1Null() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.LessHome1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessHome1Null() {
                this[this.tablef29600ListSeniorExemptionDataTable.LessHome1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessOther1Null() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.LessOther1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessOther1Null() {
                this[this.tablef29600ListSeniorExemptionDataTable.LessOther1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPensions1Null() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.Pensions1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPensions1Null() {
                this[this.tablef29600ListSeniorExemptionDataTable.Pensions1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsQualifiedNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.IsQualifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsQualifiedNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.IsQualifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveDateNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.EffectiveDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveDateNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.EffectiveDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptionCodeNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.ExemptionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptionCodeNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.ExemptionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerPercentNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.OwnerPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerPercentNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.OwnerPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsContinuationNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.IsContinuationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsContinuationNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.IsContinuationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrozenValueNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.FrozenValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrozenValueNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.FrozenValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewConstructionNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.NewConstructionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewConstructionNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.NewConstructionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultingMarketNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.ResultingMarketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultingMarketNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.ResultingMarketColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueLossNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.ValueLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueLossNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.ValueLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultingTaxableNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.ResultingTaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultingTaxableNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.ResultingTaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrozenLabelNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.FrozenLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrozenLabelNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.FrozenLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketImprovementNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.MarketImprovementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketImprovementNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.MarketImprovementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketLandNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.MarketLandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketLandNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.MarketLandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketCropNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.MarketCropColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketCropNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.MarketCropColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalFrozenValueNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.OriginalFrozenValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalFrozenValueNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.OriginalFrozenValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPensions2Null() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.Pensions2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPensions2Null() {
                this[this.tablef29600ListSeniorExemptionDataTable.Pensions2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocialSecurityDisability2Null() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.SocialSecurityDisability2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocialSecurityDisability2Null() {
                this[this.tablef29600ListSeniorExemptionDataTable.SocialSecurityDisability2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherIncome2Null() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.OtherIncome2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherIncome2Null() {
                this[this.tablef29600ListSeniorExemptionDataTable.OtherIncome2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherIncome3Null() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.OtherIncome3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherIncome3Null() {
                this[this.tablef29600ListSeniorExemptionDataTable.OtherIncome3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessOther2Null() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.LessOther2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessOther2Null() {
                this[this.tablef29600ListSeniorExemptionDataTable.LessOther2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonSRNewConstructionNull() {
                return this.IsNull(this.tablef29600ListSeniorExemptionDataTable.NonSRNewConstructionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonSRNewConstructionNull() {
                this[this.tablef29600ListSeniorExemptionDataTable.NonSRNewConstructionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class saveSeniorExemptDataTableRow : global::System.Data.DataRow {
            
            private saveSeniorExemptDataTableDataTable tablesaveSeniorExemptDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal saveSeniorExemptDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesaveSeniorExemptDataTable = ((saveSeniorExemptDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    try {
                        return ((int)(this[this.tablesaveSeniorExemptDataTable.EventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventID\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExemptionID {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.ExemptionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExemptionID\' in table \'saveSeniorExemptDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.ExemptionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    try {
                        return ((int)(this[this.tablesaveSeniorExemptDataTable.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCertifyAge {
                get {
                    try {
                        return ((bool)(this[this.tablesaveSeniorExemptDataTable.IsCertifyAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCertifyAge\' in table \'saveSeniorExemptDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.IsCertifyAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCertifyDisability {
                get {
                    try {
                        return ((bool)(this[this.tablesaveSeniorExemptDataTable.IsCertifyDisabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCertifyDisability\' in table \'saveSeniorExemptDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.IsCertifyDisabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCertifyVeteran {
                get {
                    try {
                        return ((bool)(this[this.tablesaveSeniorExemptDataTable.IsCertifyVeteranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCertifyVeteran\' in table \'saveSeniorExemptDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.IsCertifyVeteranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCertifySpouse {
                get {
                    try {
                        return ((bool)(this[this.tablesaveSeniorExemptDataTable.IsCertifySpouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCertifySpouse\' in table \'saveSeniorExemptDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.IsCertifySpouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplicantBdayDate {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.ApplicantBdayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicantBdayDate\' in table \'saveSeniorExemptDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.ApplicantBdayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpouseBdayDate {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.SpouseBdayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpouseBdayDate\' in table \'saveSeniorExemptDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.SpouseBdayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyPurchasedDate {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.PropertyPurchasedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyPurchasedDate\' in table \'saveSeniorExemptDataTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.PropertyPurchasedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyOccupiedDate {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.PropertyOccupiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyOccupiedDate\' in table \'saveSeniorExemptDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.PropertyOccupiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short OwnershipType {
                get {
                    try {
                        return ((short)(this[this.tablesaveSeniorExemptDataTable.OwnershipTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnershipType\' in table \'saveSeniorExemptDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.OwnershipTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Residencels {
                get {
                    try {
                        return ((short)(this[this.tablesaveSeniorExemptDataTable.ResidencelsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Residencels\' in table \'saveSeniorExemptDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.ResidencelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MHYear {
                get {
                    try {
                        return ((short)(this[this.tablesaveSeniorExemptDataTable.MHYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHYear\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.MHYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHMake {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.MHMakeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHMake\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.MHMakeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHModel {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.MHModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHModel\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.MHModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHLocation {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.MHLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHLocation\' in table \'saveSeniorExemptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.MHLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PropertyIncludes {
                get {
                    try {
                        return ((short)(this[this.tablesaveSeniorExemptDataTable.PropertyIncludesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyIncludes\' in table \'saveSeniorExemptDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.PropertyIncludesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Acres {
                get {
                    try {
                        return ((short)(this[this.tablesaveSeniorExemptDataTable.AcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acres\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.AcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdjustedGross {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.AdjustedGrossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjustedGross\' in table \'saveSeniorExemptDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.AdjustedGrossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CapitalGains {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.CapitalGainsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapitalGains\' in table \'saveSeniorExemptDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.CapitalGainsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Deductions {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.DeductionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deductions\' in table \'saveSeniorExemptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.DeductionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Pensions {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.PensionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pensions\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.PensionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MilitaryPay {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.MilitaryPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MilitaryPay\' in table \'saveSeniorExemptDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.MilitaryPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Dividends {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.DividendsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dividends\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.DividendsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxableIRA {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.TaxableIRAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxableIRA\' in table \'saveSeniorExemptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.TaxableIRAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SocialSecurityDisability {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.SocialSecurityDisabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SocialSecurityDisability\' in table \'saveSeniorExemptDataTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.SocialSecurityDisabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherIncome {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.OtherIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherIncome\' in table \'saveSeniorExemptDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.OtherIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LessHome {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.LessHomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessHome\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.LessHomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LessInHome {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.LessInHomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessInHome\' in table \'saveSeniorExemptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.LessInHomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LessPrescription {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.LessPrescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessPrescription\' in table \'saveSeniorExemptDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.LessPrescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LessInsurance {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.LessInsuranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessInsurance\' in table \'saveSeniorExemptDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.LessInsuranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LessOther {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.LessOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessOther\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.LessOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CombinedDisposable {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.CombinedDisposableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CombinedDisposable\' in table \'saveSeniorExemptDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.CombinedDisposableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualified {
                get {
                    try {
                        return ((bool)(this[this.tablesaveSeniorExemptDataTable.IsQualifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsQualified\' in table \'saveSeniorExemptDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.IsQualifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExemptionCode {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.ExemptionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExemptionCode\' in table \'saveSeniorExemptDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.ExemptionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EffectiveDate {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.EffectiveDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveDate\' in table \'saveSeniorExemptDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.EffectiveDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContinuation {
                get {
                    try {
                        return ((bool)(this[this.tablesaveSeniorExemptDataTable.IsContinuationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsContinuation\' in table \'saveSeniorExemptDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.IsContinuationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FrozenValue {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.FrozenValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrozenValue\' in table \'saveSeniorExemptDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.FrozenValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NewConstruction {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.NewConstructionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewConstruction\' in table \'saveSeniorExemptDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.NewConstructionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResultingMarket {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.ResultingMarketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultingMarket\' in table \'saveSeniorExemptDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.ResultingMarketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ValueLoss {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.ValueLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueLoss\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.ValueLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CancelDate {
                get {
                    try {
                        return ((string)(this[this.tablesaveSeniorExemptDataTable.CancelDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CancelDate\' in table \'saveSeniorExemptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.CancelDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResultingTaxable {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.ResultingTaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultingTaxable\' in table \'saveSeniorExemptDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.ResultingTaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MarketImprovement {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.MarketImprovementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketImprovement\' in table \'saveSeniorExemptDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.MarketImprovementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MarketLand {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.MarketLandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketLand\' in table \'saveSeniorExemptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.MarketLandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MarketCrop {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.MarketCropColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketCrop\' in table \'saveSeniorExemptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.MarketCropColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OriginalFrozenValue {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.OriginalFrozenValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalFrozenValue\' in table \'saveSeniorExemptDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.OriginalFrozenValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Pensions2 {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.Pensions2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pensions2\' in table \'saveSeniorExemptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.Pensions2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SocialSecurityDisability2 {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.SocialSecurityDisability2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SocialSecurityDisability2\' in table \'saveSeniorExemptDataTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.SocialSecurityDisability2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherIncome2 {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.OtherIncome2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherIncome2\' in table \'saveSeniorExemptDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.OtherIncome2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherIncome3 {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.OtherIncome3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherIncome3\' in table \'saveSeniorExemptDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.OtherIncome3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LessOther2 {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.LessOther2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LessOther2\' in table \'saveSeniorExemptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.LessOther2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NonSRNewConstruction {
                get {
                    try {
                        return ((decimal)(this[this.tablesaveSeniorExemptDataTable.NonSRNewConstructionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonSRNewConstruction\' in table \'saveSeniorExemptDataTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaveSeniorExemptDataTable.NonSRNewConstructionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventIDNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.EventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventIDNull() {
                this[this.tablesaveSeniorExemptDataTable.EventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptionIDNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.ExemptionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptionIDNull() {
                this[this.tablesaveSeniorExemptDataTable.ExemptionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tablesaveSeniorExemptDataTable.OwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCertifyAgeNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.IsCertifyAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCertifyAgeNull() {
                this[this.tablesaveSeniorExemptDataTable.IsCertifyAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCertifyDisabilityNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.IsCertifyDisabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCertifyDisabilityNull() {
                this[this.tablesaveSeniorExemptDataTable.IsCertifyDisabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCertifyVeteranNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.IsCertifyVeteranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCertifyVeteranNull() {
                this[this.tablesaveSeniorExemptDataTable.IsCertifyVeteranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCertifySpouseNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.IsCertifySpouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCertifySpouseNull() {
                this[this.tablesaveSeniorExemptDataTable.IsCertifySpouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicantBdayDateNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.ApplicantBdayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicantBdayDateNull() {
                this[this.tablesaveSeniorExemptDataTable.ApplicantBdayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpouseBdayDateNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.SpouseBdayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpouseBdayDateNull() {
                this[this.tablesaveSeniorExemptDataTable.SpouseBdayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyPurchasedDateNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.PropertyPurchasedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyPurchasedDateNull() {
                this[this.tablesaveSeniorExemptDataTable.PropertyPurchasedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyOccupiedDateNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.PropertyOccupiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyOccupiedDateNull() {
                this[this.tablesaveSeniorExemptDataTable.PropertyOccupiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnershipTypeNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.OwnershipTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnershipTypeNull() {
                this[this.tablesaveSeniorExemptDataTable.OwnershipTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidencelsNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.ResidencelsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidencelsNull() {
                this[this.tablesaveSeniorExemptDataTable.ResidencelsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHYearNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.MHYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHYearNull() {
                this[this.tablesaveSeniorExemptDataTable.MHYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHMakeNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.MHMakeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHMakeNull() {
                this[this.tablesaveSeniorExemptDataTable.MHMakeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHModelNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.MHModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHModelNull() {
                this[this.tablesaveSeniorExemptDataTable.MHModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHLocationNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.MHLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHLocationNull() {
                this[this.tablesaveSeniorExemptDataTable.MHLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyIncludesNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.PropertyIncludesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyIncludesNull() {
                this[this.tablesaveSeniorExemptDataTable.PropertyIncludesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcresNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.AcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcresNull() {
                this[this.tablesaveSeniorExemptDataTable.AcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustedGrossNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.AdjustedGrossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustedGrossNull() {
                this[this.tablesaveSeniorExemptDataTable.AdjustedGrossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCapitalGainsNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.CapitalGainsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCapitalGainsNull() {
                this[this.tablesaveSeniorExemptDataTable.CapitalGainsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeductionsNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.DeductionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeductionsNull() {
                this[this.tablesaveSeniorExemptDataTable.DeductionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPensionsNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.PensionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPensionsNull() {
                this[this.tablesaveSeniorExemptDataTable.PensionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMilitaryPayNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.MilitaryPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMilitaryPayNull() {
                this[this.tablesaveSeniorExemptDataTable.MilitaryPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDividendsNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.DividendsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDividendsNull() {
                this[this.tablesaveSeniorExemptDataTable.DividendsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxableIRANull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.TaxableIRAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxableIRANull() {
                this[this.tablesaveSeniorExemptDataTable.TaxableIRAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocialSecurityDisabilityNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.SocialSecurityDisabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocialSecurityDisabilityNull() {
                this[this.tablesaveSeniorExemptDataTable.SocialSecurityDisabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherIncomeNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.OtherIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherIncomeNull() {
                this[this.tablesaveSeniorExemptDataTable.OtherIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessHomeNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.LessHomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessHomeNull() {
                this[this.tablesaveSeniorExemptDataTable.LessHomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessInHomeNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.LessInHomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessInHomeNull() {
                this[this.tablesaveSeniorExemptDataTable.LessInHomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessPrescriptionNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.LessPrescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessPrescriptionNull() {
                this[this.tablesaveSeniorExemptDataTable.LessPrescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessInsuranceNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.LessInsuranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessInsuranceNull() {
                this[this.tablesaveSeniorExemptDataTable.LessInsuranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessOtherNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.LessOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessOtherNull() {
                this[this.tablesaveSeniorExemptDataTable.LessOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCombinedDisposableNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.CombinedDisposableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCombinedDisposableNull() {
                this[this.tablesaveSeniorExemptDataTable.CombinedDisposableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsQualifiedNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.IsQualifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsQualifiedNull() {
                this[this.tablesaveSeniorExemptDataTable.IsQualifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptionCodeNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.ExemptionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptionCodeNull() {
                this[this.tablesaveSeniorExemptDataTable.ExemptionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveDateNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.EffectiveDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveDateNull() {
                this[this.tablesaveSeniorExemptDataTable.EffectiveDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsContinuationNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.IsContinuationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsContinuationNull() {
                this[this.tablesaveSeniorExemptDataTable.IsContinuationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrozenValueNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.FrozenValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrozenValueNull() {
                this[this.tablesaveSeniorExemptDataTable.FrozenValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewConstructionNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.NewConstructionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewConstructionNull() {
                this[this.tablesaveSeniorExemptDataTable.NewConstructionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultingMarketNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.ResultingMarketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultingMarketNull() {
                this[this.tablesaveSeniorExemptDataTable.ResultingMarketColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueLossNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.ValueLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueLossNull() {
                this[this.tablesaveSeniorExemptDataTable.ValueLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancelDateNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.CancelDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancelDateNull() {
                this[this.tablesaveSeniorExemptDataTable.CancelDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultingTaxableNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.ResultingTaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultingTaxableNull() {
                this[this.tablesaveSeniorExemptDataTable.ResultingTaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketImprovementNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.MarketImprovementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketImprovementNull() {
                this[this.tablesaveSeniorExemptDataTable.MarketImprovementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketLandNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.MarketLandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketLandNull() {
                this[this.tablesaveSeniorExemptDataTable.MarketLandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketCropNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.MarketCropColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketCropNull() {
                this[this.tablesaveSeniorExemptDataTable.MarketCropColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalFrozenValueNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.OriginalFrozenValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalFrozenValueNull() {
                this[this.tablesaveSeniorExemptDataTable.OriginalFrozenValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPensions2Null() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.Pensions2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPensions2Null() {
                this[this.tablesaveSeniorExemptDataTable.Pensions2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocialSecurityDisability2Null() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.SocialSecurityDisability2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocialSecurityDisability2Null() {
                this[this.tablesaveSeniorExemptDataTable.SocialSecurityDisability2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherIncome2Null() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.OtherIncome2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherIncome2Null() {
                this[this.tablesaveSeniorExemptDataTable.OtherIncome2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherIncome3Null() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.OtherIncome3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherIncome3Null() {
                this[this.tablesaveSeniorExemptDataTable.OtherIncome3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessOther2Null() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.LessOther2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessOther2Null() {
                this[this.tablesaveSeniorExemptDataTable.LessOther2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonSRNewConstructionNull() {
                return this.IsNull(this.tablesaveSeniorExemptDataTable.NonSRNewConstructionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonSRNewConstructionNull() {
                this[this.tablesaveSeniorExemptDataTable.NonSRNewConstructionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29600ListExemptionCodeDataTable1RowChangeEvent : global::System.EventArgs {
            
            private f29600ListExemptionCodeDataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTable1RowChangeEvent(f29600ListExemptionCodeDataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29600GetSeniorExemptionModeRowChangeEvent : global::System.EventArgs {
            
            private f29600GetSeniorExemptionModeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionModeRowChangeEvent(f29600GetSeniorExemptionModeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionModeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29600ListExemptionCodeDataTableRowChangeEvent : global::System.EventArgs {
            
            private f29600ListExemptionCodeDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTableRowChangeEvent(f29600ListExemptionCodeDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListExemptionCodeDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29600ExemptCodeDataTableRowChangeEvent : global::System.EventArgs {
            
            private f29600ExemptCodeDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ExemptCodeDataTableRowChangeEvent(f29600ExemptCodeDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ExemptCodeDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29600_pcget_SeniorExemptionRollYearRowChangeEvent : global::System.EventArgs {
            
            private f29600_pcget_SeniorExemptionRollYearRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600_pcget_SeniorExemptionRollYearRowChangeEvent(f29600_pcget_SeniorExemptionRollYearRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600_pcget_SeniorExemptionRollYearRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29600GetSeniorExemptionOwnerComboDataTableRowChangeEvent : global::System.EventArgs {
            
            private f29600GetSeniorExemptionOwnerComboDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionOwnerComboDataTableRowChangeEvent(f29600GetSeniorExemptionOwnerComboDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600GetSeniorExemptionOwnerComboDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29600ListSeniorExemptionDataTableRowChangeEvent : global::System.EventArgs {
            
            private f29600ListSeniorExemptionDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListSeniorExemptionDataTableRowChangeEvent(f29600ListSeniorExemptionDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29600ListSeniorExemptionDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class saveSeniorExemptDataTableRowChangeEvent : global::System.EventArgs {
            
            private saveSeniorExemptDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveSeniorExemptDataTableRowChangeEvent(saveSeniorExemptDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saveSeniorExemptDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591