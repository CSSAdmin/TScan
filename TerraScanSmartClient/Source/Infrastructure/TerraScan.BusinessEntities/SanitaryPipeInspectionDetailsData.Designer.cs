//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SanitaryPipeInspectionDetailsData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SanitaryPipeInspectionDetailsData : global::System.Data.DataSet {
        
        private ListEventEngineDetailTypeDataTable tableListEventEngineDetailType;
        
        private ListEventEngineTVDetailsDataTable tableListEventEngineTVDetails;
        
        private SaveEventEngineTVDetailsDataTable tableSaveEventEngineTVDetails;
        
        private UpdEventEngineTVDetailsDataTable tableUpdEventEngineTVDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SanitaryPipeInspectionDetailsData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SanitaryPipeInspectionDetailsData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ListEventEngineDetailType"] != null)) {
                    base.Tables.Add(new ListEventEngineDetailTypeDataTable(ds.Tables["ListEventEngineDetailType"]));
                }
                if ((ds.Tables["ListEventEngineTVDetails"] != null)) {
                    base.Tables.Add(new ListEventEngineTVDetailsDataTable(ds.Tables["ListEventEngineTVDetails"]));
                }
                if ((ds.Tables["SaveEventEngineTVDetails"] != null)) {
                    base.Tables.Add(new SaveEventEngineTVDetailsDataTable(ds.Tables["SaveEventEngineTVDetails"]));
                }
                if ((ds.Tables["UpdEventEngineTVDetails"] != null)) {
                    base.Tables.Add(new UpdEventEngineTVDetailsDataTable(ds.Tables["UpdEventEngineTVDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListEventEngineDetailTypeDataTable ListEventEngineDetailType {
            get {
                return this.tableListEventEngineDetailType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListEventEngineTVDetailsDataTable ListEventEngineTVDetails {
            get {
                return this.tableListEventEngineTVDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SaveEventEngineTVDetailsDataTable SaveEventEngineTVDetails {
            get {
                return this.tableSaveEventEngineTVDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UpdEventEngineTVDetailsDataTable UpdEventEngineTVDetails {
            get {
                return this.tableUpdEventEngineTVDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SanitaryPipeInspectionDetailsData cln = ((SanitaryPipeInspectionDetailsData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ListEventEngineDetailType"] != null)) {
                    base.Tables.Add(new ListEventEngineDetailTypeDataTable(ds.Tables["ListEventEngineDetailType"]));
                }
                if ((ds.Tables["ListEventEngineTVDetails"] != null)) {
                    base.Tables.Add(new ListEventEngineTVDetailsDataTable(ds.Tables["ListEventEngineTVDetails"]));
                }
                if ((ds.Tables["SaveEventEngineTVDetails"] != null)) {
                    base.Tables.Add(new SaveEventEngineTVDetailsDataTable(ds.Tables["SaveEventEngineTVDetails"]));
                }
                if ((ds.Tables["UpdEventEngineTVDetails"] != null)) {
                    base.Tables.Add(new UpdEventEngineTVDetailsDataTable(ds.Tables["UpdEventEngineTVDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableListEventEngineDetailType = ((ListEventEngineDetailTypeDataTable)(base.Tables["ListEventEngineDetailType"]));
            if ((initTable == true)) {
                if ((this.tableListEventEngineDetailType != null)) {
                    this.tableListEventEngineDetailType.InitVars();
                }
            }
            this.tableListEventEngineTVDetails = ((ListEventEngineTVDetailsDataTable)(base.Tables["ListEventEngineTVDetails"]));
            if ((initTable == true)) {
                if ((this.tableListEventEngineTVDetails != null)) {
                    this.tableListEventEngineTVDetails.InitVars();
                }
            }
            this.tableSaveEventEngineTVDetails = ((SaveEventEngineTVDetailsDataTable)(base.Tables["SaveEventEngineTVDetails"]));
            if ((initTable == true)) {
                if ((this.tableSaveEventEngineTVDetails != null)) {
                    this.tableSaveEventEngineTVDetails.InitVars();
                }
            }
            this.tableUpdEventEngineTVDetails = ((UpdEventEngineTVDetailsDataTable)(base.Tables["UpdEventEngineTVDetails"]));
            if ((initTable == true)) {
                if ((this.tableUpdEventEngineTVDetails != null)) {
                    this.tableUpdEventEngineTVDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SanitaryPipeInspectionDetailsData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SanitaryPipeInspectionDetailsData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableListEventEngineDetailType = new ListEventEngineDetailTypeDataTable();
            base.Tables.Add(this.tableListEventEngineDetailType);
            this.tableListEventEngineTVDetails = new ListEventEngineTVDetailsDataTable();
            base.Tables.Add(this.tableListEventEngineTVDetails);
            this.tableSaveEventEngineTVDetails = new SaveEventEngineTVDetailsDataTable();
            base.Tables.Add(this.tableSaveEventEngineTVDetails);
            this.tableUpdEventEngineTVDetails = new UpdEventEngineTVDetailsDataTable();
            base.Tables.Add(this.tableUpdEventEngineTVDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListEventEngineDetailType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListEventEngineTVDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSaveEventEngineTVDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUpdEventEngineTVDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SanitaryPipeInspectionDetailsData ds = new SanitaryPipeInspectionDetailsData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ListEventEngineDetailTypeRowChangeEventHandler(object sender, ListEventEngineDetailTypeRowChangeEvent e);
        
        public delegate void ListEventEngineTVDetailsRowChangeEventHandler(object sender, ListEventEngineTVDetailsRowChangeEvent e);
        
        public delegate void SaveEventEngineTVDetailsRowChangeEventHandler(object sender, SaveEventEngineTVDetailsRowChangeEvent e);
        
        public delegate void UpdEventEngineTVDetailsRowChangeEventHandler(object sender, UpdEventEngineTVDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListEventEngineDetailTypeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDetailType;
            
            private global::System.Data.DataColumn columnDetailTypeID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineDetailTypeDataTable() {
                this.TableName = "ListEventEngineDetailType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListEventEngineDetailTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListEventEngineDetailTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailTypeColumn {
                get {
                    return this.columnDetailType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailTypeIDColumn {
                get {
                    return this.columnDetailTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineDetailTypeRow this[int index] {
                get {
                    return ((ListEventEngineDetailTypeRow)(this.Rows[index]));
                }
            }
            
            public event ListEventEngineDetailTypeRowChangeEventHandler ListEventEngineDetailTypeRowChanging;
            
            public event ListEventEngineDetailTypeRowChangeEventHandler ListEventEngineDetailTypeRowChanged;
            
            public event ListEventEngineDetailTypeRowChangeEventHandler ListEventEngineDetailTypeRowDeleting;
            
            public event ListEventEngineDetailTypeRowChangeEventHandler ListEventEngineDetailTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListEventEngineDetailTypeRow(ListEventEngineDetailTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineDetailTypeRow AddListEventEngineDetailTypeRow(string DetailType, string DetailTypeID) {
                ListEventEngineDetailTypeRow rowListEventEngineDetailTypeRow = ((ListEventEngineDetailTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DetailType,
                        DetailTypeID};
                rowListEventEngineDetailTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListEventEngineDetailTypeRow);
                return rowListEventEngineDetailTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListEventEngineDetailTypeDataTable cln = ((ListEventEngineDetailTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListEventEngineDetailTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDetailType = base.Columns["DetailType"];
                this.columnDetailTypeID = base.Columns["DetailTypeID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDetailType = new global::System.Data.DataColumn("DetailType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailType);
                this.columnDetailTypeID = new global::System.Data.DataColumn("DetailTypeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailTypeID);
                this.columnDetailType.MaxLength = 20;
                this.columnDetailTypeID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineDetailTypeRow NewListEventEngineDetailTypeRow() {
                return ((ListEventEngineDetailTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListEventEngineDetailTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListEventEngineDetailTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListEventEngineDetailTypeRowChanged != null)) {
                    this.ListEventEngineDetailTypeRowChanged(this, new ListEventEngineDetailTypeRowChangeEvent(((ListEventEngineDetailTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListEventEngineDetailTypeRowChanging != null)) {
                    this.ListEventEngineDetailTypeRowChanging(this, new ListEventEngineDetailTypeRowChangeEvent(((ListEventEngineDetailTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListEventEngineDetailTypeRowDeleted != null)) {
                    this.ListEventEngineDetailTypeRowDeleted(this, new ListEventEngineDetailTypeRowChangeEvent(((ListEventEngineDetailTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListEventEngineDetailTypeRowDeleting != null)) {
                    this.ListEventEngineDetailTypeRowDeleting(this, new ListEventEngineDetailTypeRowChangeEvent(((ListEventEngineDetailTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListEventEngineDetailTypeRow(ListEventEngineDetailTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SanitaryPipeInspectionDetailsData ds = new SanitaryPipeInspectionDetailsData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListEventEngineDetailTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListEventEngineTVDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDetailID;
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnDetailTypeID;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineTVDetailsDataTable() {
                this.TableName = "ListEventEngineTVDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListEventEngineTVDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListEventEngineTVDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailIDColumn {
                get {
                    return this.columnDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailTypeIDColumn {
                get {
                    return this.columnDetailTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineTVDetailsRow this[int index] {
                get {
                    return ((ListEventEngineTVDetailsRow)(this.Rows[index]));
                }
            }
            
            public event ListEventEngineTVDetailsRowChangeEventHandler ListEventEngineTVDetailsRowChanging;
            
            public event ListEventEngineTVDetailsRowChangeEventHandler ListEventEngineTVDetailsRowChanged;
            
            public event ListEventEngineTVDetailsRowChangeEventHandler ListEventEngineTVDetailsRowDeleting;
            
            public event ListEventEngineTVDetailsRowChangeEventHandler ListEventEngineTVDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListEventEngineTVDetailsRow(ListEventEngineTVDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineTVDetailsRow AddListEventEngineTVDetailsRow(int DetailID, int EventID, string DetailTypeID, decimal Length, string Comment) {
                ListEventEngineTVDetailsRow rowListEventEngineTVDetailsRow = ((ListEventEngineTVDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DetailID,
                        EventID,
                        DetailTypeID,
                        Length,
                        Comment};
                rowListEventEngineTVDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListEventEngineTVDetailsRow);
                return rowListEventEngineTVDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListEventEngineTVDetailsDataTable cln = ((ListEventEngineTVDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListEventEngineTVDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDetailID = base.Columns["DetailID"];
                this.columnEventID = base.Columns["EventID"];
                this.columnDetailTypeID = base.Columns["DetailTypeID"];
                this.columnLength = base.Columns["Length"];
                this.columnComment = base.Columns["Comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDetailID = new global::System.Data.DataColumn("DetailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailID);
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnDetailTypeID = new global::System.Data.DataColumn("DetailTypeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailTypeID);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDetailID.AllowDBNull = false;
                this.columnEventID.AllowDBNull = false;
                this.columnDetailTypeID.AllowDBNull = false;
                this.columnComment.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineTVDetailsRow NewListEventEngineTVDetailsRow() {
                return ((ListEventEngineTVDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListEventEngineTVDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListEventEngineTVDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListEventEngineTVDetailsRowChanged != null)) {
                    this.ListEventEngineTVDetailsRowChanged(this, new ListEventEngineTVDetailsRowChangeEvent(((ListEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListEventEngineTVDetailsRowChanging != null)) {
                    this.ListEventEngineTVDetailsRowChanging(this, new ListEventEngineTVDetailsRowChangeEvent(((ListEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListEventEngineTVDetailsRowDeleted != null)) {
                    this.ListEventEngineTVDetailsRowDeleted(this, new ListEventEngineTVDetailsRowChangeEvent(((ListEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListEventEngineTVDetailsRowDeleting != null)) {
                    this.ListEventEngineTVDetailsRowDeleting(this, new ListEventEngineTVDetailsRowChangeEvent(((ListEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListEventEngineTVDetailsRow(ListEventEngineTVDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SanitaryPipeInspectionDetailsData ds = new SanitaryPipeInspectionDetailsData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListEventEngineTVDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SaveEventEngineTVDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnDetailTypeID;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineTVDetailsDataTable() {
                this.TableName = "SaveEventEngineTVDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SaveEventEngineTVDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SaveEventEngineTVDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailTypeIDColumn {
                get {
                    return this.columnDetailTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineTVDetailsRow this[int index] {
                get {
                    return ((SaveEventEngineTVDetailsRow)(this.Rows[index]));
                }
            }
            
            public event SaveEventEngineTVDetailsRowChangeEventHandler SaveEventEngineTVDetailsRowChanging;
            
            public event SaveEventEngineTVDetailsRowChangeEventHandler SaveEventEngineTVDetailsRowChanged;
            
            public event SaveEventEngineTVDetailsRowChangeEventHandler SaveEventEngineTVDetailsRowDeleting;
            
            public event SaveEventEngineTVDetailsRowChangeEventHandler SaveEventEngineTVDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSaveEventEngineTVDetailsRow(SaveEventEngineTVDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineTVDetailsRow AddSaveEventEngineTVDetailsRow(int EventID, int DetailTypeID, decimal Length, string Comment) {
                SaveEventEngineTVDetailsRow rowSaveEventEngineTVDetailsRow = ((SaveEventEngineTVDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EventID,
                        DetailTypeID,
                        Length,
                        Comment};
                rowSaveEventEngineTVDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSaveEventEngineTVDetailsRow);
                return rowSaveEventEngineTVDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SaveEventEngineTVDetailsDataTable cln = ((SaveEventEngineTVDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SaveEventEngineTVDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEventID = base.Columns["EventID"];
                this.columnDetailTypeID = base.Columns["DetailTypeID"];
                this.columnLength = base.Columns["Length"];
                this.columnComment = base.Columns["Comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnDetailTypeID = new global::System.Data.DataColumn("DetailTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailTypeID);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnEventID.AllowDBNull = false;
                this.columnDetailTypeID.AllowDBNull = false;
                this.columnComment.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineTVDetailsRow NewSaveEventEngineTVDetailsRow() {
                return ((SaveEventEngineTVDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SaveEventEngineTVDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SaveEventEngineTVDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SaveEventEngineTVDetailsRowChanged != null)) {
                    this.SaveEventEngineTVDetailsRowChanged(this, new SaveEventEngineTVDetailsRowChangeEvent(((SaveEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SaveEventEngineTVDetailsRowChanging != null)) {
                    this.SaveEventEngineTVDetailsRowChanging(this, new SaveEventEngineTVDetailsRowChangeEvent(((SaveEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SaveEventEngineTVDetailsRowDeleted != null)) {
                    this.SaveEventEngineTVDetailsRowDeleted(this, new SaveEventEngineTVDetailsRowChangeEvent(((SaveEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SaveEventEngineTVDetailsRowDeleting != null)) {
                    this.SaveEventEngineTVDetailsRowDeleting(this, new SaveEventEngineTVDetailsRowChangeEvent(((SaveEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSaveEventEngineTVDetailsRow(SaveEventEngineTVDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SanitaryPipeInspectionDetailsData ds = new SanitaryPipeInspectionDetailsData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SaveEventEngineTVDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UpdEventEngineTVDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDetailID;
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnDetailTypeID;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdEventEngineTVDetailsDataTable() {
                this.TableName = "UpdEventEngineTVDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UpdEventEngineTVDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UpdEventEngineTVDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailIDColumn {
                get {
                    return this.columnDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailTypeIDColumn {
                get {
                    return this.columnDetailTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdEventEngineTVDetailsRow this[int index] {
                get {
                    return ((UpdEventEngineTVDetailsRow)(this.Rows[index]));
                }
            }
            
            public event UpdEventEngineTVDetailsRowChangeEventHandler UpdEventEngineTVDetailsRowChanging;
            
            public event UpdEventEngineTVDetailsRowChangeEventHandler UpdEventEngineTVDetailsRowChanged;
            
            public event UpdEventEngineTVDetailsRowChangeEventHandler UpdEventEngineTVDetailsRowDeleting;
            
            public event UpdEventEngineTVDetailsRowChangeEventHandler UpdEventEngineTVDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUpdEventEngineTVDetailsRow(UpdEventEngineTVDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdEventEngineTVDetailsRow AddUpdEventEngineTVDetailsRow(int DetailID, int EventID, int DetailTypeID, decimal Length, string Comment) {
                UpdEventEngineTVDetailsRow rowUpdEventEngineTVDetailsRow = ((UpdEventEngineTVDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DetailID,
                        EventID,
                        DetailTypeID,
                        Length,
                        Comment};
                rowUpdEventEngineTVDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUpdEventEngineTVDetailsRow);
                return rowUpdEventEngineTVDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UpdEventEngineTVDetailsDataTable cln = ((UpdEventEngineTVDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UpdEventEngineTVDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDetailID = base.Columns["DetailID"];
                this.columnEventID = base.Columns["EventID"];
                this.columnDetailTypeID = base.Columns["DetailTypeID"];
                this.columnLength = base.Columns["Length"];
                this.columnComment = base.Columns["Comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDetailID = new global::System.Data.DataColumn("DetailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailID);
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnDetailTypeID = new global::System.Data.DataColumn("DetailTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailTypeID);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDetailID.AllowDBNull = false;
                this.columnEventID.AllowDBNull = false;
                this.columnDetailTypeID.AllowDBNull = false;
                this.columnComment.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdEventEngineTVDetailsRow NewUpdEventEngineTVDetailsRow() {
                return ((UpdEventEngineTVDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UpdEventEngineTVDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UpdEventEngineTVDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UpdEventEngineTVDetailsRowChanged != null)) {
                    this.UpdEventEngineTVDetailsRowChanged(this, new UpdEventEngineTVDetailsRowChangeEvent(((UpdEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UpdEventEngineTVDetailsRowChanging != null)) {
                    this.UpdEventEngineTVDetailsRowChanging(this, new UpdEventEngineTVDetailsRowChangeEvent(((UpdEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UpdEventEngineTVDetailsRowDeleted != null)) {
                    this.UpdEventEngineTVDetailsRowDeleted(this, new UpdEventEngineTVDetailsRowChangeEvent(((UpdEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UpdEventEngineTVDetailsRowDeleting != null)) {
                    this.UpdEventEngineTVDetailsRowDeleting(this, new UpdEventEngineTVDetailsRowChangeEvent(((UpdEventEngineTVDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUpdEventEngineTVDetailsRow(UpdEventEngineTVDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SanitaryPipeInspectionDetailsData ds = new SanitaryPipeInspectionDetailsData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UpdEventEngineTVDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListEventEngineDetailTypeRow : global::System.Data.DataRow {
            
            private ListEventEngineDetailTypeDataTable tableListEventEngineDetailType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListEventEngineDetailTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListEventEngineDetailType = ((ListEventEngineDetailTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailType {
                get {
                    try {
                        return ((string)(this[this.tableListEventEngineDetailType.DetailTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetailType\' in table \'ListEventEngineDetailType\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableListEventEngineDetailType.DetailTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailTypeID {
                get {
                    return ((string)(this[this.tableListEventEngineDetailType.DetailTypeIDColumn]));
                }
                set {
                    this[this.tableListEventEngineDetailType.DetailTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailTypeNull() {
                return this.IsNull(this.tableListEventEngineDetailType.DetailTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailTypeNull() {
                this[this.tableListEventEngineDetailType.DetailTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListEventEngineTVDetailsRow : global::System.Data.DataRow {
            
            private ListEventEngineTVDetailsDataTable tableListEventEngineTVDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListEventEngineTVDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListEventEngineTVDetails = ((ListEventEngineTVDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailID {
                get {
                    return ((int)(this[this.tableListEventEngineTVDetails.DetailIDColumn]));
                }
                set {
                    this[this.tableListEventEngineTVDetails.DetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    return ((int)(this[this.tableListEventEngineTVDetails.EventIDColumn]));
                }
                set {
                    this[this.tableListEventEngineTVDetails.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailTypeID {
                get {
                    return ((string)(this[this.tableListEventEngineTVDetails.DetailTypeIDColumn]));
                }
                set {
                    this[this.tableListEventEngineTVDetails.DetailTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Length {
                get {
                    try {
                        return ((decimal)(this[this.tableListEventEngineTVDetails.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'ListEventEngineTVDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListEventEngineTVDetails.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableListEventEngineTVDetails.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'ListEventEngineTVDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListEventEngineTVDetails.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableListEventEngineTVDetails.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableListEventEngineTVDetails.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableListEventEngineTVDetails.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableListEventEngineTVDetails.CommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SaveEventEngineTVDetailsRow : global::System.Data.DataRow {
            
            private SaveEventEngineTVDetailsDataTable tableSaveEventEngineTVDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SaveEventEngineTVDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSaveEventEngineTVDetails = ((SaveEventEngineTVDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    return ((int)(this[this.tableSaveEventEngineTVDetails.EventIDColumn]));
                }
                set {
                    this[this.tableSaveEventEngineTVDetails.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailTypeID {
                get {
                    return ((int)(this[this.tableSaveEventEngineTVDetails.DetailTypeIDColumn]));
                }
                set {
                    this[this.tableSaveEventEngineTVDetails.DetailTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Length {
                get {
                    try {
                        return ((decimal)(this[this.tableSaveEventEngineTVDetails.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'SaveEventEngineTVDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineTVDetails.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableSaveEventEngineTVDetails.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'SaveEventEngineTVDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveEventEngineTVDetails.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableSaveEventEngineTVDetails.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableSaveEventEngineTVDetails.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableSaveEventEngineTVDetails.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableSaveEventEngineTVDetails.CommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UpdEventEngineTVDetailsRow : global::System.Data.DataRow {
            
            private UpdEventEngineTVDetailsDataTable tableUpdEventEngineTVDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UpdEventEngineTVDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUpdEventEngineTVDetails = ((UpdEventEngineTVDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailID {
                get {
                    return ((int)(this[this.tableUpdEventEngineTVDetails.DetailIDColumn]));
                }
                set {
                    this[this.tableUpdEventEngineTVDetails.DetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    return ((int)(this[this.tableUpdEventEngineTVDetails.EventIDColumn]));
                }
                set {
                    this[this.tableUpdEventEngineTVDetails.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailTypeID {
                get {
                    return ((int)(this[this.tableUpdEventEngineTVDetails.DetailTypeIDColumn]));
                }
                set {
                    this[this.tableUpdEventEngineTVDetails.DetailTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Length {
                get {
                    try {
                        return ((decimal)(this[this.tableUpdEventEngineTVDetails.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'UpdEventEngineTVDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdEventEngineTVDetails.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableUpdEventEngineTVDetails.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'UpdEventEngineTVDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdEventEngineTVDetails.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableUpdEventEngineTVDetails.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableUpdEventEngineTVDetails.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableUpdEventEngineTVDetails.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableUpdEventEngineTVDetails.CommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListEventEngineDetailTypeRowChangeEvent : global::System.EventArgs {
            
            private ListEventEngineDetailTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineDetailTypeRowChangeEvent(ListEventEngineDetailTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineDetailTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListEventEngineTVDetailsRowChangeEvent : global::System.EventArgs {
            
            private ListEventEngineTVDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineTVDetailsRowChangeEvent(ListEventEngineTVDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListEventEngineTVDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SaveEventEngineTVDetailsRowChangeEvent : global::System.EventArgs {
            
            private SaveEventEngineTVDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineTVDetailsRowChangeEvent(SaveEventEngineTVDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveEventEngineTVDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UpdEventEngineTVDetailsRowChangeEvent : global::System.EventArgs {
            
            private UpdEventEngineTVDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdEventEngineTVDetailsRowChangeEvent(UpdEventEngineTVDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdEventEngineTVDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591