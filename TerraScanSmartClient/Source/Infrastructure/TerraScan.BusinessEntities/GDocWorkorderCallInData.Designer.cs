//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GDocWorkorderCallInData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GDocWorkorderCallInData : global::System.Data.DataSet {
        
        private F8912_GetWorkOrderCallInDataTable tableF8912_GetWorkOrderCallIn;
        
        private F8912_SaveWorkOrderCallInDataTable tableF8912_SaveWorkOrderCallIn;
        
        private ListAddressesDataTable tableListAddresses;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GDocWorkorderCallInData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected GDocWorkorderCallInData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["F8912_GetWorkOrderCallIn"] != null)) {
                    base.Tables.Add(new F8912_GetWorkOrderCallInDataTable(ds.Tables["F8912_GetWorkOrderCallIn"]));
                }
                if ((ds.Tables["F8912_SaveWorkOrderCallIn"] != null)) {
                    base.Tables.Add(new F8912_SaveWorkOrderCallInDataTable(ds.Tables["F8912_SaveWorkOrderCallIn"]));
                }
                if ((ds.Tables["ListAddresses"] != null)) {
                    base.Tables.Add(new ListAddressesDataTable(ds.Tables["ListAddresses"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F8912_GetWorkOrderCallInDataTable F8912_GetWorkOrderCallIn {
            get {
                return this.tableF8912_GetWorkOrderCallIn;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F8912_SaveWorkOrderCallInDataTable F8912_SaveWorkOrderCallIn {
            get {
                return this.tableF8912_SaveWorkOrderCallIn;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListAddressesDataTable ListAddresses {
            get {
                return this.tableListAddresses;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            GDocWorkorderCallInData cln = ((GDocWorkorderCallInData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["F8912_GetWorkOrderCallIn"] != null)) {
                    base.Tables.Add(new F8912_GetWorkOrderCallInDataTable(ds.Tables["F8912_GetWorkOrderCallIn"]));
                }
                if ((ds.Tables["F8912_SaveWorkOrderCallIn"] != null)) {
                    base.Tables.Add(new F8912_SaveWorkOrderCallInDataTable(ds.Tables["F8912_SaveWorkOrderCallIn"]));
                }
                if ((ds.Tables["ListAddresses"] != null)) {
                    base.Tables.Add(new ListAddressesDataTable(ds.Tables["ListAddresses"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableF8912_GetWorkOrderCallIn = ((F8912_GetWorkOrderCallInDataTable)(base.Tables["F8912_GetWorkOrderCallIn"]));
            if ((initTable == true)) {
                if ((this.tableF8912_GetWorkOrderCallIn != null)) {
                    this.tableF8912_GetWorkOrderCallIn.InitVars();
                }
            }
            this.tableF8912_SaveWorkOrderCallIn = ((F8912_SaveWorkOrderCallInDataTable)(base.Tables["F8912_SaveWorkOrderCallIn"]));
            if ((initTable == true)) {
                if ((this.tableF8912_SaveWorkOrderCallIn != null)) {
                    this.tableF8912_SaveWorkOrderCallIn.InitVars();
                }
            }
            this.tableListAddresses = ((ListAddressesDataTable)(base.Tables["ListAddresses"]));
            if ((initTable == true)) {
                if ((this.tableListAddresses != null)) {
                    this.tableListAddresses.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "GDocWorkorderCallInData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GDocWorkorderCallInData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableF8912_GetWorkOrderCallIn = new F8912_GetWorkOrderCallInDataTable();
            base.Tables.Add(this.tableF8912_GetWorkOrderCallIn);
            this.tableF8912_SaveWorkOrderCallIn = new F8912_SaveWorkOrderCallInDataTable();
            base.Tables.Add(this.tableF8912_SaveWorkOrderCallIn);
            this.tableListAddresses = new ListAddressesDataTable();
            base.Tables.Add(this.tableListAddresses);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF8912_GetWorkOrderCallIn() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF8912_SaveWorkOrderCallIn() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListAddresses() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GDocWorkorderCallInData ds = new GDocWorkorderCallInData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void F8912_GetWorkOrderCallInRowChangeEventHandler(object sender, F8912_GetWorkOrderCallInRowChangeEvent e);
        
        public delegate void F8912_SaveWorkOrderCallInRowChangeEventHandler(object sender, F8912_SaveWorkOrderCallInRowChangeEvent e);
        
        public delegate void ListAddressesRowChangeEventHandler(object sender, ListAddressesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F8912_GetWorkOrderCallInDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnComplName;
            
            private global::System.Data.DataColumn columnComplPhoneNo;
            
            private global::System.Data.DataColumn columnComplEmail;
            
            private global::System.Data.DataColumn columnAddID;
            
            private global::System.Data.DataColumn columnComplAddID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_GetWorkOrderCallInDataTable() {
                this.TableName = "F8912_GetWorkOrderCallIn";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F8912_GetWorkOrderCallInDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F8912_GetWorkOrderCallInDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplNameColumn {
                get {
                    return this.columnComplName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplPhoneNoColumn {
                get {
                    return this.columnComplPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplEmailColumn {
                get {
                    return this.columnComplEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddIDColumn {
                get {
                    return this.columnAddID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplAddIDColumn {
                get {
                    return this.columnComplAddID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_GetWorkOrderCallInRow this[int index] {
                get {
                    return ((F8912_GetWorkOrderCallInRow)(this.Rows[index]));
                }
            }
            
            public event F8912_GetWorkOrderCallInRowChangeEventHandler F8912_GetWorkOrderCallInRowChanging;
            
            public event F8912_GetWorkOrderCallInRowChangeEventHandler F8912_GetWorkOrderCallInRowChanged;
            
            public event F8912_GetWorkOrderCallInRowChangeEventHandler F8912_GetWorkOrderCallInRowDeleting;
            
            public event F8912_GetWorkOrderCallInRowChangeEventHandler F8912_GetWorkOrderCallInRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF8912_GetWorkOrderCallInRow(F8912_GetWorkOrderCallInRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_GetWorkOrderCallInRow AddF8912_GetWorkOrderCallInRow(string ComplName, string ComplPhoneNo, string ComplEmail, int AddID, int ComplAddID) {
                F8912_GetWorkOrderCallInRow rowF8912_GetWorkOrderCallInRow = ((F8912_GetWorkOrderCallInRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ComplName,
                        ComplPhoneNo,
                        ComplEmail,
                        AddID,
                        ComplAddID};
                rowF8912_GetWorkOrderCallInRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF8912_GetWorkOrderCallInRow);
                return rowF8912_GetWorkOrderCallInRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F8912_GetWorkOrderCallInDataTable cln = ((F8912_GetWorkOrderCallInDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F8912_GetWorkOrderCallInDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnComplName = base.Columns["ComplName"];
                this.columnComplPhoneNo = base.Columns["ComplPhoneNo"];
                this.columnComplEmail = base.Columns["ComplEmail"];
                this.columnAddID = base.Columns["AddID"];
                this.columnComplAddID = base.Columns["ComplAddID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnComplName = new global::System.Data.DataColumn("ComplName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplName);
                this.columnComplPhoneNo = new global::System.Data.DataColumn("ComplPhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplPhoneNo);
                this.columnComplEmail = new global::System.Data.DataColumn("ComplEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplEmail);
                this.columnAddID = new global::System.Data.DataColumn("AddID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddID);
                this.columnComplAddID = new global::System.Data.DataColumn("ComplAddID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplAddID);
                this.columnComplName.MaxLength = 50;
                this.columnComplPhoneNo.MaxLength = 50;
                this.columnComplEmail.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_GetWorkOrderCallInRow NewF8912_GetWorkOrderCallInRow() {
                return ((F8912_GetWorkOrderCallInRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F8912_GetWorkOrderCallInRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F8912_GetWorkOrderCallInRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F8912_GetWorkOrderCallInRowChanged != null)) {
                    this.F8912_GetWorkOrderCallInRowChanged(this, new F8912_GetWorkOrderCallInRowChangeEvent(((F8912_GetWorkOrderCallInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F8912_GetWorkOrderCallInRowChanging != null)) {
                    this.F8912_GetWorkOrderCallInRowChanging(this, new F8912_GetWorkOrderCallInRowChangeEvent(((F8912_GetWorkOrderCallInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F8912_GetWorkOrderCallInRowDeleted != null)) {
                    this.F8912_GetWorkOrderCallInRowDeleted(this, new F8912_GetWorkOrderCallInRowChangeEvent(((F8912_GetWorkOrderCallInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F8912_GetWorkOrderCallInRowDeleting != null)) {
                    this.F8912_GetWorkOrderCallInRowDeleting(this, new F8912_GetWorkOrderCallInRowChangeEvent(((F8912_GetWorkOrderCallInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF8912_GetWorkOrderCallInRow(F8912_GetWorkOrderCallInRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GDocWorkorderCallInData ds = new GDocWorkorderCallInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F8912_GetWorkOrderCallInDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F8912_SaveWorkOrderCallInDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnComplName;
            
            private global::System.Data.DataColumn columnComplPhoneNo;
            
            private global::System.Data.DataColumn columnComplEmail;
            
            private global::System.Data.DataColumn columnAddID;
            
            private global::System.Data.DataColumn columnComplAddID;
            
            private global::System.Data.DataColumn columnWOID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_SaveWorkOrderCallInDataTable() {
                this.TableName = "F8912_SaveWorkOrderCallIn";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F8912_SaveWorkOrderCallInDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F8912_SaveWorkOrderCallInDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplNameColumn {
                get {
                    return this.columnComplName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplPhoneNoColumn {
                get {
                    return this.columnComplPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplEmailColumn {
                get {
                    return this.columnComplEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddIDColumn {
                get {
                    return this.columnAddID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplAddIDColumn {
                get {
                    return this.columnComplAddID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WOIDColumn {
                get {
                    return this.columnWOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_SaveWorkOrderCallInRow this[int index] {
                get {
                    return ((F8912_SaveWorkOrderCallInRow)(this.Rows[index]));
                }
            }
            
            public event F8912_SaveWorkOrderCallInRowChangeEventHandler F8912_SaveWorkOrderCallInRowChanging;
            
            public event F8912_SaveWorkOrderCallInRowChangeEventHandler F8912_SaveWorkOrderCallInRowChanged;
            
            public event F8912_SaveWorkOrderCallInRowChangeEventHandler F8912_SaveWorkOrderCallInRowDeleting;
            
            public event F8912_SaveWorkOrderCallInRowChangeEventHandler F8912_SaveWorkOrderCallInRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF8912_SaveWorkOrderCallInRow(F8912_SaveWorkOrderCallInRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_SaveWorkOrderCallInRow AddF8912_SaveWorkOrderCallInRow(string ComplName, string ComplPhoneNo, string ComplEmail, int AddID, int ComplAddID, int WOID) {
                F8912_SaveWorkOrderCallInRow rowF8912_SaveWorkOrderCallInRow = ((F8912_SaveWorkOrderCallInRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ComplName,
                        ComplPhoneNo,
                        ComplEmail,
                        AddID,
                        ComplAddID,
                        WOID};
                rowF8912_SaveWorkOrderCallInRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF8912_SaveWorkOrderCallInRow);
                return rowF8912_SaveWorkOrderCallInRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F8912_SaveWorkOrderCallInDataTable cln = ((F8912_SaveWorkOrderCallInDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F8912_SaveWorkOrderCallInDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnComplName = base.Columns["ComplName"];
                this.columnComplPhoneNo = base.Columns["ComplPhoneNo"];
                this.columnComplEmail = base.Columns["ComplEmail"];
                this.columnAddID = base.Columns["AddID"];
                this.columnComplAddID = base.Columns["ComplAddID"];
                this.columnWOID = base.Columns["WOID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnComplName = new global::System.Data.DataColumn("ComplName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplName);
                this.columnComplPhoneNo = new global::System.Data.DataColumn("ComplPhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplPhoneNo);
                this.columnComplEmail = new global::System.Data.DataColumn("ComplEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplEmail);
                this.columnAddID = new global::System.Data.DataColumn("AddID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddID);
                this.columnComplAddID = new global::System.Data.DataColumn("ComplAddID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplAddID);
                this.columnWOID = new global::System.Data.DataColumn("WOID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWOID);
                this.columnComplName.MaxLength = 50;
                this.columnComplPhoneNo.MaxLength = 50;
                this.columnComplEmail.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_SaveWorkOrderCallInRow NewF8912_SaveWorkOrderCallInRow() {
                return ((F8912_SaveWorkOrderCallInRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F8912_SaveWorkOrderCallInRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F8912_SaveWorkOrderCallInRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F8912_SaveWorkOrderCallInRowChanged != null)) {
                    this.F8912_SaveWorkOrderCallInRowChanged(this, new F8912_SaveWorkOrderCallInRowChangeEvent(((F8912_SaveWorkOrderCallInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F8912_SaveWorkOrderCallInRowChanging != null)) {
                    this.F8912_SaveWorkOrderCallInRowChanging(this, new F8912_SaveWorkOrderCallInRowChangeEvent(((F8912_SaveWorkOrderCallInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F8912_SaveWorkOrderCallInRowDeleted != null)) {
                    this.F8912_SaveWorkOrderCallInRowDeleted(this, new F8912_SaveWorkOrderCallInRowChangeEvent(((F8912_SaveWorkOrderCallInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F8912_SaveWorkOrderCallInRowDeleting != null)) {
                    this.F8912_SaveWorkOrderCallInRowDeleting(this, new F8912_SaveWorkOrderCallInRowChangeEvent(((F8912_SaveWorkOrderCallInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF8912_SaveWorkOrderCallInRow(F8912_SaveWorkOrderCallInRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GDocWorkorderCallInData ds = new GDocWorkorderCallInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F8912_SaveWorkOrderCallInDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListAddressesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIncidentAddress;
            
            private global::System.Data.DataColumn columnIncidentID;
            
            private global::System.Data.DataColumn columnComplAddress;
            
            private global::System.Data.DataColumn columnComplID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListAddressesDataTable() {
                this.TableName = "ListAddresses";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListAddressesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListAddressesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncidentAddressColumn {
                get {
                    return this.columnIncidentAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncidentIDColumn {
                get {
                    return this.columnIncidentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplAddressColumn {
                get {
                    return this.columnComplAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplIDColumn {
                get {
                    return this.columnComplID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListAddressesRow this[int index] {
                get {
                    return ((ListAddressesRow)(this.Rows[index]));
                }
            }
            
            public event ListAddressesRowChangeEventHandler ListAddressesRowChanging;
            
            public event ListAddressesRowChangeEventHandler ListAddressesRowChanged;
            
            public event ListAddressesRowChangeEventHandler ListAddressesRowDeleting;
            
            public event ListAddressesRowChangeEventHandler ListAddressesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListAddressesRow(ListAddressesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListAddressesRow AddListAddressesRow(string IncidentAddress, string ComplAddress) {
                ListAddressesRow rowListAddressesRow = ((ListAddressesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IncidentAddress,
                        null,
                        ComplAddress,
                        null};
                rowListAddressesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListAddressesRow);
                return rowListAddressesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListAddressesDataTable cln = ((ListAddressesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListAddressesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIncidentAddress = base.Columns["IncidentAddress"];
                this.columnIncidentID = base.Columns["IncidentID"];
                this.columnComplAddress = base.Columns["ComplAddress"];
                this.columnComplID = base.Columns["ComplID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIncidentAddress = new global::System.Data.DataColumn("IncidentAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentAddress);
                this.columnIncidentID = new global::System.Data.DataColumn("IncidentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentID);
                this.columnComplAddress = new global::System.Data.DataColumn("ComplAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplAddress);
                this.columnComplID = new global::System.Data.DataColumn("ComplID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplID);
                this.columnIncidentAddress.MaxLength = 75;
                this.columnIncidentID.AutoIncrement = true;
                this.columnIncidentID.ReadOnly = true;
                this.columnComplAddress.MaxLength = 75;
                this.columnComplID.AutoIncrement = true;
                this.columnComplID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListAddressesRow NewListAddressesRow() {
                return ((ListAddressesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListAddressesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListAddressesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListAddressesRowChanged != null)) {
                    this.ListAddressesRowChanged(this, new ListAddressesRowChangeEvent(((ListAddressesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListAddressesRowChanging != null)) {
                    this.ListAddressesRowChanging(this, new ListAddressesRowChangeEvent(((ListAddressesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListAddressesRowDeleted != null)) {
                    this.ListAddressesRowDeleted(this, new ListAddressesRowChangeEvent(((ListAddressesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListAddressesRowDeleting != null)) {
                    this.ListAddressesRowDeleting(this, new ListAddressesRowChangeEvent(((ListAddressesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListAddressesRow(ListAddressesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GDocWorkorderCallInData ds = new GDocWorkorderCallInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListAddressesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F8912_GetWorkOrderCallInRow : global::System.Data.DataRow {
            
            private F8912_GetWorkOrderCallInDataTable tableF8912_GetWorkOrderCallIn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F8912_GetWorkOrderCallInRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF8912_GetWorkOrderCallIn = ((F8912_GetWorkOrderCallInDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ComplName {
                get {
                    try {
                        return ((string)(this[this.tableF8912_GetWorkOrderCallIn.ComplNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplName\' in table \'F8912_GetWorkOrderCallIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF8912_GetWorkOrderCallIn.ComplNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ComplPhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableF8912_GetWorkOrderCallIn.ComplPhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplPhoneNo\' in table \'F8912_GetWorkOrderCallIn\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableF8912_GetWorkOrderCallIn.ComplPhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ComplEmail {
                get {
                    try {
                        return ((string)(this[this.tableF8912_GetWorkOrderCallIn.ComplEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplEmail\' in table \'F8912_GetWorkOrderCallIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF8912_GetWorkOrderCallIn.ComplEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddID {
                get {
                    try {
                        return ((int)(this[this.tableF8912_GetWorkOrderCallIn.AddIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddID\' in table \'F8912_GetWorkOrderCallIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF8912_GetWorkOrderCallIn.AddIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ComplAddID {
                get {
                    try {
                        return ((int)(this[this.tableF8912_GetWorkOrderCallIn.ComplAddIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplAddID\' in table \'F8912_GetWorkOrderCallIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF8912_GetWorkOrderCallIn.ComplAddIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplNameNull() {
                return this.IsNull(this.tableF8912_GetWorkOrderCallIn.ComplNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplNameNull() {
                this[this.tableF8912_GetWorkOrderCallIn.ComplNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplPhoneNoNull() {
                return this.IsNull(this.tableF8912_GetWorkOrderCallIn.ComplPhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplPhoneNoNull() {
                this[this.tableF8912_GetWorkOrderCallIn.ComplPhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplEmailNull() {
                return this.IsNull(this.tableF8912_GetWorkOrderCallIn.ComplEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplEmailNull() {
                this[this.tableF8912_GetWorkOrderCallIn.ComplEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddIDNull() {
                return this.IsNull(this.tableF8912_GetWorkOrderCallIn.AddIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddIDNull() {
                this[this.tableF8912_GetWorkOrderCallIn.AddIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplAddIDNull() {
                return this.IsNull(this.tableF8912_GetWorkOrderCallIn.ComplAddIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplAddIDNull() {
                this[this.tableF8912_GetWorkOrderCallIn.ComplAddIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F8912_SaveWorkOrderCallInRow : global::System.Data.DataRow {
            
            private F8912_SaveWorkOrderCallInDataTable tableF8912_SaveWorkOrderCallIn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F8912_SaveWorkOrderCallInRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF8912_SaveWorkOrderCallIn = ((F8912_SaveWorkOrderCallInDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ComplName {
                get {
                    try {
                        return ((string)(this[this.tableF8912_SaveWorkOrderCallIn.ComplNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplName\' in table \'F8912_SaveWorkOrderCallIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF8912_SaveWorkOrderCallIn.ComplNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ComplPhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableF8912_SaveWorkOrderCallIn.ComplPhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplPhoneNo\' in table \'F8912_SaveWorkOrderCallIn\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableF8912_SaveWorkOrderCallIn.ComplPhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ComplEmail {
                get {
                    try {
                        return ((string)(this[this.tableF8912_SaveWorkOrderCallIn.ComplEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplEmail\' in table \'F8912_SaveWorkOrderCallIn\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableF8912_SaveWorkOrderCallIn.ComplEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddID {
                get {
                    try {
                        return ((int)(this[this.tableF8912_SaveWorkOrderCallIn.AddIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddID\' in table \'F8912_SaveWorkOrderCallIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF8912_SaveWorkOrderCallIn.AddIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ComplAddID {
                get {
                    try {
                        return ((int)(this[this.tableF8912_SaveWorkOrderCallIn.ComplAddIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplAddID\' in table \'F8912_SaveWorkOrderCallIn\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableF8912_SaveWorkOrderCallIn.ComplAddIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WOID {
                get {
                    try {
                        return ((int)(this[this.tableF8912_SaveWorkOrderCallIn.WOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WOID\' in table \'F8912_SaveWorkOrderCallIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF8912_SaveWorkOrderCallIn.WOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplNameNull() {
                return this.IsNull(this.tableF8912_SaveWorkOrderCallIn.ComplNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplNameNull() {
                this[this.tableF8912_SaveWorkOrderCallIn.ComplNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplPhoneNoNull() {
                return this.IsNull(this.tableF8912_SaveWorkOrderCallIn.ComplPhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplPhoneNoNull() {
                this[this.tableF8912_SaveWorkOrderCallIn.ComplPhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplEmailNull() {
                return this.IsNull(this.tableF8912_SaveWorkOrderCallIn.ComplEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplEmailNull() {
                this[this.tableF8912_SaveWorkOrderCallIn.ComplEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddIDNull() {
                return this.IsNull(this.tableF8912_SaveWorkOrderCallIn.AddIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddIDNull() {
                this[this.tableF8912_SaveWorkOrderCallIn.AddIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplAddIDNull() {
                return this.IsNull(this.tableF8912_SaveWorkOrderCallIn.ComplAddIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplAddIDNull() {
                this[this.tableF8912_SaveWorkOrderCallIn.ComplAddIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWOIDNull() {
                return this.IsNull(this.tableF8912_SaveWorkOrderCallIn.WOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWOIDNull() {
                this[this.tableF8912_SaveWorkOrderCallIn.WOIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListAddressesRow : global::System.Data.DataRow {
            
            private ListAddressesDataTable tableListAddresses;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListAddressesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListAddresses = ((ListAddressesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IncidentAddress {
                get {
                    try {
                        return ((string)(this[this.tableListAddresses.IncidentAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentAddress\' in table \'ListAddresses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListAddresses.IncidentAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IncidentID {
                get {
                    try {
                        return ((int)(this[this.tableListAddresses.IncidentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentID\' in table \'ListAddresses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListAddresses.IncidentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ComplAddress {
                get {
                    try {
                        return ((string)(this[this.tableListAddresses.ComplAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplAddress\' in table \'ListAddresses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListAddresses.ComplAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ComplID {
                get {
                    try {
                        return ((int)(this[this.tableListAddresses.ComplIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplID\' in table \'ListAddresses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListAddresses.ComplIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncidentAddressNull() {
                return this.IsNull(this.tableListAddresses.IncidentAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncidentAddressNull() {
                this[this.tableListAddresses.IncidentAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncidentIDNull() {
                return this.IsNull(this.tableListAddresses.IncidentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncidentIDNull() {
                this[this.tableListAddresses.IncidentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplAddressNull() {
                return this.IsNull(this.tableListAddresses.ComplAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplAddressNull() {
                this[this.tableListAddresses.ComplAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplIDNull() {
                return this.IsNull(this.tableListAddresses.ComplIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplIDNull() {
                this[this.tableListAddresses.ComplIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F8912_GetWorkOrderCallInRowChangeEvent : global::System.EventArgs {
            
            private F8912_GetWorkOrderCallInRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_GetWorkOrderCallInRowChangeEvent(F8912_GetWorkOrderCallInRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_GetWorkOrderCallInRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F8912_SaveWorkOrderCallInRowChangeEvent : global::System.EventArgs {
            
            private F8912_SaveWorkOrderCallInRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_SaveWorkOrderCallInRowChangeEvent(F8912_SaveWorkOrderCallInRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F8912_SaveWorkOrderCallInRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListAddressesRowChangeEvent : global::System.EventArgs {
            
            private ListAddressesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListAddressesRowChangeEvent(ListAddressesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListAddressesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591