//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F25055PropertyHeaderData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F25055PropertyHeaderData : global::System.Data.DataSet {
        
        private GetPersonalPropertyDetailDataTable tableGetPersonalPropertyDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F25055PropertyHeaderData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F25055PropertyHeaderData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GetPersonalPropertyDetail"] != null)) {
                    base.Tables.Add(new GetPersonalPropertyDetailDataTable(ds.Tables["GetPersonalPropertyDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetPersonalPropertyDetailDataTable GetPersonalPropertyDetail {
            get {
                return this.tableGetPersonalPropertyDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F25055PropertyHeaderData cln = ((F25055PropertyHeaderData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GetPersonalPropertyDetail"] != null)) {
                    base.Tables.Add(new GetPersonalPropertyDetailDataTable(ds.Tables["GetPersonalPropertyDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGetPersonalPropertyDetail = ((GetPersonalPropertyDetailDataTable)(base.Tables["GetPersonalPropertyDetail"]));
            if ((initTable == true)) {
                if ((this.tableGetPersonalPropertyDetail != null)) {
                    this.tableGetPersonalPropertyDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F25055PropertyHeaderData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F25055PropertyHeaderData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGetPersonalPropertyDetail = new GetPersonalPropertyDetailDataTable();
            base.Tables.Add(this.tableGetPersonalPropertyDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetPersonalPropertyDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F25055PropertyHeaderData ds = new F25055PropertyHeaderData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GetPersonalPropertyDetailRowChangeEventHandler(object sender, GetPersonalPropertyDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetPersonalPropertyDetailDataTable : global::System.Data.TypedTableBase<GetPersonalPropertyDetailRow> {
            
            private global::System.Data.DataColumn columnScheduleID;
            
            private global::System.Data.DataColumn columnScheduleNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnFilingType;
            
            private global::System.Data.DataColumn columnDistrictID;
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnPropertyType;
            
            private global::System.Data.DataColumn columnBuisnessName;
            
            private global::System.Data.DataColumn columnIsReview;
            
            private global::System.Data.DataColumn columnFilingDate;
            
            private global::System.Data.DataColumn columnO1Value;
            
            private global::System.Data.DataColumn columnO2Value;
            
            private global::System.Data.DataColumn columnPenaltyPercent;
            
            private global::System.Data.DataColumn columnPenaltyAmount;
            
            private global::System.Data.DataColumn columnStreetAddress;
            
            private global::System.Data.DataColumn columnScheduleStateCode;
            
            private global::System.Data.DataColumn columnNAICS;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnPrimaryOwner;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnParcelStateCode;
            
            private global::System.Data.DataColumn columnMapNumber;
            
            private global::System.Data.DataColumn columnLegal;
            
            private global::System.Data.DataColumn columnAssessmentTypeID;
            
            private global::System.Data.DataColumn columnAssessmentType;
            
            private global::System.Data.DataColumn columnNewConstruction;
            
            private global::System.Data.DataColumn columnScheduleTypeID;
            
            private global::System.Data.DataColumn columnScheduleType;
            
            private global::System.Data.DataColumn columnIsHeadOfHousehold;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnMID1;
            
            private global::System.Data.DataColumn columnMID2;
            
            private global::System.Data.DataColumn columnMID3;
            
            private global::System.Data.DataColumn columnMID4;
            
            private global::System.Data.DataColumn columnMID5;
            
            private global::System.Data.DataColumn columnMIDLabel1;
            
            private global::System.Data.DataColumn columnMIDLabel2;
            
            private global::System.Data.DataColumn columnMIDLabel3;
            
            private global::System.Data.DataColumn columnMIDLabel4;
            
            private global::System.Data.DataColumn columnMIDLabel5;
            
            private global::System.Data.DataColumn columnIsFarm;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnO3Value;
            
            private global::System.Data.DataColumn columnRealPropertyResultingTaxable;
            
            private global::System.Data.DataColumn columnResultingTaxable;
            
            private global::System.Data.DataColumn columnPPTaxableValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetPersonalPropertyDetailDataTable() {
                this.TableName = "GetPersonalPropertyDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetPersonalPropertyDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetPersonalPropertyDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduleIDColumn {
                get {
                    return this.columnScheduleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduleNumberColumn {
                get {
                    return this.columnScheduleNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilingTypeColumn {
                get {
                    return this.columnFilingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictIDColumn {
                get {
                    return this.columnDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyTypeColumn {
                get {
                    return this.columnPropertyType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuisnessNameColumn {
                get {
                    return this.columnBuisnessName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsReviewColumn {
                get {
                    return this.columnIsReview;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilingDateColumn {
                get {
                    return this.columnFilingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O1ValueColumn {
                get {
                    return this.columnO1Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O2ValueColumn {
                get {
                    return this.columnO2Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenaltyPercentColumn {
                get {
                    return this.columnPenaltyPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenaltyAmountColumn {
                get {
                    return this.columnPenaltyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetAddressColumn {
                get {
                    return this.columnStreetAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduleStateCodeColumn {
                get {
                    return this.columnScheduleStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAICSColumn {
                get {
                    return this.columnNAICS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimaryOwnerColumn {
                get {
                    return this.columnPrimaryOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelStateCodeColumn {
                get {
                    return this.columnParcelStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapNumberColumn {
                get {
                    return this.columnMapNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LegalColumn {
                get {
                    return this.columnLegal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessmentTypeIDColumn {
                get {
                    return this.columnAssessmentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessmentTypeColumn {
                get {
                    return this.columnAssessmentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewConstructionColumn {
                get {
                    return this.columnNewConstruction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduleTypeIDColumn {
                get {
                    return this.columnScheduleTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduleTypeColumn {
                get {
                    return this.columnScheduleType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsHeadOfHouseholdColumn {
                get {
                    return this.columnIsHeadOfHousehold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID1Column {
                get {
                    return this.columnMID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID2Column {
                get {
                    return this.columnMID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID3Column {
                get {
                    return this.columnMID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID4Column {
                get {
                    return this.columnMID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID5Column {
                get {
                    return this.columnMID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIDLabel1Column {
                get {
                    return this.columnMIDLabel1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIDLabel2Column {
                get {
                    return this.columnMIDLabel2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIDLabel3Column {
                get {
                    return this.columnMIDLabel3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIDLabel4Column {
                get {
                    return this.columnMIDLabel4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIDLabel5Column {
                get {
                    return this.columnMIDLabel5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsFarmColumn {
                get {
                    return this.columnIsFarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O3ValueColumn {
                get {
                    return this.columnO3Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RealPropertyResultingTaxableColumn {
                get {
                    return this.columnRealPropertyResultingTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultingTaxableColumn {
                get {
                    return this.columnResultingTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PPTaxableValueColumn {
                get {
                    return this.columnPPTaxableValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetPersonalPropertyDetailRow this[int index] {
                get {
                    return ((GetPersonalPropertyDetailRow)(this.Rows[index]));
                }
            }
            
            public event GetPersonalPropertyDetailRowChangeEventHandler GetPersonalPropertyDetailRowChanging;
            
            public event GetPersonalPropertyDetailRowChangeEventHandler GetPersonalPropertyDetailRowChanged;
            
            public event GetPersonalPropertyDetailRowChangeEventHandler GetPersonalPropertyDetailRowDeleting;
            
            public event GetPersonalPropertyDetailRowChangeEventHandler GetPersonalPropertyDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetPersonalPropertyDetailRow(GetPersonalPropertyDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetPersonalPropertyDetailRow AddGetPersonalPropertyDetailRow(
                        int ScheduleID, 
                        string ScheduleNumber, 
                        short RollYear, 
                        string FilingType, 
                        int DistrictID, 
                        int ParcelID, 
                        string PropertyType, 
                        string BuisnessName, 
                        string IsReview, 
                        System.DateTime FilingDate, 
                        decimal O1Value, 
                        decimal O2Value, 
                        decimal PenaltyPercent, 
                        decimal PenaltyAmount, 
                        string StreetAddress, 
                        string ScheduleStateCode, 
                        string NAICS, 
                        string Description, 
                        string ParcelNumber, 
                        int OwnerID, 
                        string PrimaryOwner, 
                        string District, 
                        string ParcelStateCode, 
                        string MapNumber, 
                        string Legal, 
                        short AssessmentTypeID, 
                        string AssessmentType, 
                        decimal NewConstruction, 
                        int ScheduleTypeID, 
                        string ScheduleType, 
                        bool IsHeadOfHousehold, 
                        bool IsExempt, 
                        string MID1, 
                        string MID2, 
                        string MID3, 
                        string MID4, 
                        string MID5, 
                        string MIDLabel1, 
                        string MIDLabel2, 
                        string MIDLabel3, 
                        string MIDLabel4, 
                        string MIDLabel5, 
                        bool IsFarm, 
                        string Phone, 
                        string Email, 
                        decimal O3Value, 
                        decimal RealPropertyResultingTaxable, 
                        decimal ResultingTaxable, 
                        decimal PPTaxableValue) {
                GetPersonalPropertyDetailRow rowGetPersonalPropertyDetailRow = ((GetPersonalPropertyDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ScheduleID,
                        ScheduleNumber,
                        RollYear,
                        FilingType,
                        DistrictID,
                        ParcelID,
                        PropertyType,
                        BuisnessName,
                        IsReview,
                        FilingDate,
                        O1Value,
                        O2Value,
                        PenaltyPercent,
                        PenaltyAmount,
                        StreetAddress,
                        ScheduleStateCode,
                        NAICS,
                        Description,
                        ParcelNumber,
                        OwnerID,
                        PrimaryOwner,
                        District,
                        ParcelStateCode,
                        MapNumber,
                        Legal,
                        AssessmentTypeID,
                        AssessmentType,
                        NewConstruction,
                        ScheduleTypeID,
                        ScheduleType,
                        IsHeadOfHousehold,
                        IsExempt,
                        MID1,
                        MID2,
                        MID3,
                        MID4,
                        MID5,
                        MIDLabel1,
                        MIDLabel2,
                        MIDLabel3,
                        MIDLabel4,
                        MIDLabel5,
                        IsFarm,
                        Phone,
                        Email,
                        O3Value,
                        RealPropertyResultingTaxable,
                        ResultingTaxable,
                        PPTaxableValue};
                rowGetPersonalPropertyDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetPersonalPropertyDetailRow);
                return rowGetPersonalPropertyDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetPersonalPropertyDetailDataTable cln = ((GetPersonalPropertyDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetPersonalPropertyDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnScheduleID = base.Columns["ScheduleID"];
                this.columnScheduleNumber = base.Columns["ScheduleNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnFilingType = base.Columns["FilingType"];
                this.columnDistrictID = base.Columns["DistrictID"];
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnPropertyType = base.Columns["PropertyType"];
                this.columnBuisnessName = base.Columns["BuisnessName"];
                this.columnIsReview = base.Columns["IsReview"];
                this.columnFilingDate = base.Columns["FilingDate"];
                this.columnO1Value = base.Columns["O1Value"];
                this.columnO2Value = base.Columns["O2Value"];
                this.columnPenaltyPercent = base.Columns["PenaltyPercent"];
                this.columnPenaltyAmount = base.Columns["PenaltyAmount"];
                this.columnStreetAddress = base.Columns["StreetAddress"];
                this.columnScheduleStateCode = base.Columns["ScheduleStateCode"];
                this.columnNAICS = base.Columns["NAICS"];
                this.columnDescription = base.Columns["Description"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnPrimaryOwner = base.Columns["PrimaryOwner"];
                this.columnDistrict = base.Columns["District"];
                this.columnParcelStateCode = base.Columns["ParcelStateCode"];
                this.columnMapNumber = base.Columns["MapNumber"];
                this.columnLegal = base.Columns["Legal"];
                this.columnAssessmentTypeID = base.Columns["AssessmentTypeID"];
                this.columnAssessmentType = base.Columns["AssessmentType"];
                this.columnNewConstruction = base.Columns["NewConstruction"];
                this.columnScheduleTypeID = base.Columns["ScheduleTypeID"];
                this.columnScheduleType = base.Columns["ScheduleType"];
                this.columnIsHeadOfHousehold = base.Columns["IsHeadOfHousehold"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnMID1 = base.Columns["MID1"];
                this.columnMID2 = base.Columns["MID2"];
                this.columnMID3 = base.Columns["MID3"];
                this.columnMID4 = base.Columns["MID4"];
                this.columnMID5 = base.Columns["MID5"];
                this.columnMIDLabel1 = base.Columns["MIDLabel1"];
                this.columnMIDLabel2 = base.Columns["MIDLabel2"];
                this.columnMIDLabel3 = base.Columns["MIDLabel3"];
                this.columnMIDLabel4 = base.Columns["MIDLabel4"];
                this.columnMIDLabel5 = base.Columns["MIDLabel5"];
                this.columnIsFarm = base.Columns["IsFarm"];
                this.columnPhone = base.Columns["Phone"];
                this.columnEmail = base.Columns["Email"];
                this.columnO3Value = base.Columns["O3Value"];
                this.columnRealPropertyResultingTaxable = base.Columns["RealPropertyResultingTaxable"];
                this.columnResultingTaxable = base.Columns["ResultingTaxable"];
                this.columnPPTaxableValue = base.Columns["PPTaxableValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnScheduleID = new global::System.Data.DataColumn("ScheduleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleID);
                this.columnScheduleNumber = new global::System.Data.DataColumn("ScheduleNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnFilingType = new global::System.Data.DataColumn("FilingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilingType);
                this.columnDistrictID = new global::System.Data.DataColumn("DistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictID);
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnPropertyType = new global::System.Data.DataColumn("PropertyType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyType);
                this.columnBuisnessName = new global::System.Data.DataColumn("BuisnessName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuisnessName);
                this.columnIsReview = new global::System.Data.DataColumn("IsReview", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsReview);
                this.columnFilingDate = new global::System.Data.DataColumn("FilingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilingDate);
                this.columnO1Value = new global::System.Data.DataColumn("O1Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO1Value);
                this.columnO2Value = new global::System.Data.DataColumn("O2Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2Value);
                this.columnPenaltyPercent = new global::System.Data.DataColumn("PenaltyPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenaltyPercent);
                this.columnPenaltyAmount = new global::System.Data.DataColumn("PenaltyAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenaltyAmount);
                this.columnStreetAddress = new global::System.Data.DataColumn("StreetAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetAddress);
                this.columnScheduleStateCode = new global::System.Data.DataColumn("ScheduleStateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleStateCode);
                this.columnNAICS = new global::System.Data.DataColumn("NAICS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAICS);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnPrimaryOwner = new global::System.Data.DataColumn("PrimaryOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryOwner);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnParcelStateCode = new global::System.Data.DataColumn("ParcelStateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelStateCode);
                this.columnMapNumber = new global::System.Data.DataColumn("MapNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapNumber);
                this.columnLegal = new global::System.Data.DataColumn("Legal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLegal);
                this.columnAssessmentTypeID = new global::System.Data.DataColumn("AssessmentTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessmentTypeID);
                this.columnAssessmentType = new global::System.Data.DataColumn("AssessmentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessmentType);
                this.columnNewConstruction = new global::System.Data.DataColumn("NewConstruction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewConstruction);
                this.columnScheduleTypeID = new global::System.Data.DataColumn("ScheduleTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleTypeID);
                this.columnScheduleType = new global::System.Data.DataColumn("ScheduleType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleType);
                this.columnIsHeadOfHousehold = new global::System.Data.DataColumn("IsHeadOfHousehold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHeadOfHousehold);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnMID1 = new global::System.Data.DataColumn("MID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID1);
                this.columnMID2 = new global::System.Data.DataColumn("MID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID2);
                this.columnMID3 = new global::System.Data.DataColumn("MID3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID3);
                this.columnMID4 = new global::System.Data.DataColumn("MID4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID4);
                this.columnMID5 = new global::System.Data.DataColumn("MID5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID5);
                this.columnMIDLabel1 = new global::System.Data.DataColumn("MIDLabel1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIDLabel1);
                this.columnMIDLabel2 = new global::System.Data.DataColumn("MIDLabel2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIDLabel2);
                this.columnMIDLabel3 = new global::System.Data.DataColumn("MIDLabel3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIDLabel3);
                this.columnMIDLabel4 = new global::System.Data.DataColumn("MIDLabel4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIDLabel4);
                this.columnMIDLabel5 = new global::System.Data.DataColumn("MIDLabel5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIDLabel5);
                this.columnIsFarm = new global::System.Data.DataColumn("IsFarm", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFarm);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnO3Value = new global::System.Data.DataColumn("O3Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO3Value);
                this.columnRealPropertyResultingTaxable = new global::System.Data.DataColumn("RealPropertyResultingTaxable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealPropertyResultingTaxable);
                this.columnResultingTaxable = new global::System.Data.DataColumn("ResultingTaxable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultingTaxable);
                this.columnPPTaxableValue = new global::System.Data.DataColumn("PPTaxableValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPTaxableValue);
                this.columnScheduleNumber.MaxLength = 50;
                this.columnFilingType.MaxLength = 50;
                this.columnPropertyType.MaxLength = 50;
                this.columnBuisnessName.MaxLength = 250;
                this.columnIsReview.MaxLength = 3;
                this.columnStreetAddress.MaxLength = 250;
                this.columnScheduleStateCode.MaxLength = 50;
                this.columnNAICS.MaxLength = 50;
                this.columnDescription.MaxLength = 100;
                this.columnParcelNumber.MaxLength = 50;
                this.columnPrimaryOwner.MaxLength = 102;
                this.columnDistrict.MaxLength = 63;
                this.columnParcelStateCode.MaxLength = 50;
                this.columnMapNumber.MaxLength = 50;
                this.columnLegal.MaxLength = 5000;
                this.columnAssessmentType.MaxLength = 50;
                this.columnScheduleType.MaxLength = 50;
                this.columnMID1.MaxLength = 50;
                this.columnMID2.MaxLength = 50;
                this.columnMID3.MaxLength = 50;
                this.columnMID4.MaxLength = 50;
                this.columnMID5.MaxLength = 50;
                this.columnMIDLabel1.MaxLength = 1000;
                this.columnMIDLabel2.MaxLength = 1000;
                this.columnMIDLabel3.MaxLength = 1000;
                this.columnMIDLabel4.MaxLength = 1000;
                this.columnMIDLabel5.MaxLength = 1000;
                this.columnPhone.MaxLength = 50;
                this.columnEmail.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetPersonalPropertyDetailRow NewGetPersonalPropertyDetailRow() {
                return ((GetPersonalPropertyDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetPersonalPropertyDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetPersonalPropertyDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetPersonalPropertyDetailRowChanged != null)) {
                    this.GetPersonalPropertyDetailRowChanged(this, new GetPersonalPropertyDetailRowChangeEvent(((GetPersonalPropertyDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetPersonalPropertyDetailRowChanging != null)) {
                    this.GetPersonalPropertyDetailRowChanging(this, new GetPersonalPropertyDetailRowChangeEvent(((GetPersonalPropertyDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetPersonalPropertyDetailRowDeleted != null)) {
                    this.GetPersonalPropertyDetailRowDeleted(this, new GetPersonalPropertyDetailRowChangeEvent(((GetPersonalPropertyDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetPersonalPropertyDetailRowDeleting != null)) {
                    this.GetPersonalPropertyDetailRowDeleting(this, new GetPersonalPropertyDetailRowChangeEvent(((GetPersonalPropertyDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetPersonalPropertyDetailRow(GetPersonalPropertyDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F25055PropertyHeaderData ds = new F25055PropertyHeaderData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetPersonalPropertyDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetPersonalPropertyDetailRow : global::System.Data.DataRow {
            
            private GetPersonalPropertyDetailDataTable tableGetPersonalPropertyDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetPersonalPropertyDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetPersonalPropertyDetail = ((GetPersonalPropertyDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ScheduleID {
                get {
                    try {
                        return ((int)(this[this.tableGetPersonalPropertyDetail.ScheduleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduleID\' in table \'GetPersonalPropertyDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.ScheduleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduleNumber {
                get {
                    if (this.IsScheduleNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.ScheduleNumberColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.ScheduleNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tableGetPersonalPropertyDetail.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'GetPersonalPropertyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilingType {
                get {
                    if (this.IsFilingTypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.FilingTypeColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.FilingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DistrictID {
                get {
                    try {
                        return ((int)(this[this.tableGetPersonalPropertyDetail.DistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictID\' in table \'GetPersonalPropertyDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.DistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tableGetPersonalPropertyDetail.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'GetPersonalPropertyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyType {
                get {
                    if (this.IsPropertyTypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.PropertyTypeColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.PropertyTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuisnessName {
                get {
                    if (this.IsBuisnessNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.BuisnessNameColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.BuisnessNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsReview {
                get {
                    if (this.IsIsReviewNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.IsReviewColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.IsReviewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FilingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetPersonalPropertyDetail.FilingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilingDate\' in table \'GetPersonalPropertyDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.FilingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O1Value {
                get {
                    try {
                        return ((decimal)(this[this.tableGetPersonalPropertyDetail.O1ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O1Value\' in table \'GetPersonalPropertyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.O1ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O2Value {
                get {
                    try {
                        return ((decimal)(this[this.tableGetPersonalPropertyDetail.O2ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2Value\' in table \'GetPersonalPropertyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.O2ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PenaltyPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableGetPersonalPropertyDetail.PenaltyPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenaltyPercent\' in table \'GetPersonalPropertyDetail\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.PenaltyPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PenaltyAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableGetPersonalPropertyDetail.PenaltyAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenaltyAmount\' in table \'GetPersonalPropertyDetail\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.PenaltyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StreetAddress {
                get {
                    if (this.IsStreetAddressNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.StreetAddressColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.StreetAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduleStateCode {
                get {
                    if (this.IsScheduleStateCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.ScheduleStateCodeColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.ScheduleStateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAICS {
                get {
                    if (this.IsNAICSNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.NAICSColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.NAICSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    if (this.IsDescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.DescriptionColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    if (this.IsParcelNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.ParcelNumberColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    try {
                        return ((int)(this[this.tableGetPersonalPropertyDetail.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'GetPersonalPropertyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrimaryOwner {
                get {
                    if (this.IsPrimaryOwnerNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.PrimaryOwnerColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.PrimaryOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    if (this.IsDistrictNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.DistrictColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelStateCode {
                get {
                    if (this.IsParcelStateCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.ParcelStateCodeColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.ParcelStateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapNumber {
                get {
                    if (this.IsMapNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MapNumberColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MapNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Legal {
                get {
                    if (this.IsLegalNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.LegalColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.LegalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AssessmentTypeID {
                get {
                    try {
                        return ((short)(this[this.tableGetPersonalPropertyDetail.AssessmentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessmentTypeID\' in table \'GetPersonalPropertyDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.AssessmentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssessmentType {
                get {
                    if (this.IsAssessmentTypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.AssessmentTypeColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.AssessmentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NewConstruction {
                get {
                    try {
                        return ((decimal)(this[this.tableGetPersonalPropertyDetail.NewConstructionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewConstruction\' in table \'GetPersonalPropertyDetail\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.NewConstructionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ScheduleTypeID {
                get {
                    try {
                        return ((int)(this[this.tableGetPersonalPropertyDetail.ScheduleTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduleTypeID\' in table \'GetPersonalPropertyDetail\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.ScheduleTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduleType {
                get {
                    if (this.IsScheduleTypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.ScheduleTypeColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.ScheduleTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadOfHousehold {
                get {
                    try {
                        return ((bool)(this[this.tableGetPersonalPropertyDetail.IsHeadOfHouseholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHeadOfHousehold\' in table \'GetPersonalPropertyDetail\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.IsHeadOfHouseholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tableGetPersonalPropertyDetail.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'GetPersonalPropertyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID1 {
                get {
                    if (this.IsMID1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MID1Column]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID2 {
                get {
                    if (this.IsMID2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MID2Column]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID3 {
                get {
                    if (this.IsMID3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MID3Column]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID4 {
                get {
                    if (this.IsMID4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MID4Column]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID5 {
                get {
                    if (this.IsMID5Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MID5Column]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MIDLabel1 {
                get {
                    if (this.IsMIDLabel1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MIDLabel1Column]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MIDLabel1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MIDLabel2 {
                get {
                    if (this.IsMIDLabel2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MIDLabel2Column]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MIDLabel2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MIDLabel3 {
                get {
                    if (this.IsMIDLabel3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MIDLabel3Column]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MIDLabel3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MIDLabel4 {
                get {
                    if (this.IsMIDLabel4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MIDLabel4Column]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MIDLabel4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MIDLabel5 {
                get {
                    if (this.IsMIDLabel5Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.MIDLabel5Column]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.MIDLabel5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFarm {
                get {
                    try {
                        return ((bool)(this[this.tableGetPersonalPropertyDetail.IsFarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFarm\' in table \'GetPersonalPropertyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.IsFarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    if (this.IsPhoneNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.PhoneColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    if (this.IsEmailNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetPersonalPropertyDetail.EmailColumn]));
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O3Value {
                get {
                    try {
                        return ((decimal)(this[this.tableGetPersonalPropertyDetail.O3ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O3Value\' in table \'GetPersonalPropertyDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.O3ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RealPropertyResultingTaxable {
                get {
                    try {
                        return ((decimal)(this[this.tableGetPersonalPropertyDetail.RealPropertyResultingTaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealPropertyResultingTaxable\' in table \'GetPersonalProperty" +
                                "Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.RealPropertyResultingTaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResultingTaxable {
                get {
                    try {
                        return ((decimal)(this[this.tableGetPersonalPropertyDetail.ResultingTaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultingTaxable\' in table \'GetPersonalPropertyDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.ResultingTaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PPTaxableValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetPersonalPropertyDetail.PPTaxableValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PPTaxableValue\' in table \'GetPersonalPropertyDetail\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetPersonalPropertyDetail.PPTaxableValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduleIDNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.ScheduleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduleIDNull() {
                this[this.tableGetPersonalPropertyDetail.ScheduleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduleNumberNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.ScheduleNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduleNumberNull() {
                this[this.tableGetPersonalPropertyDetail.ScheduleNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableGetPersonalPropertyDetail.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilingTypeNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.FilingTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilingTypeNull() {
                this[this.tableGetPersonalPropertyDetail.FilingTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictIDNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.DistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictIDNull() {
                this[this.tableGetPersonalPropertyDetail.DistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tableGetPersonalPropertyDetail.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyTypeNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.PropertyTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyTypeNull() {
                this[this.tableGetPersonalPropertyDetail.PropertyTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuisnessNameNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.BuisnessNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuisnessNameNull() {
                this[this.tableGetPersonalPropertyDetail.BuisnessNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsReviewNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.IsReviewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsReviewNull() {
                this[this.tableGetPersonalPropertyDetail.IsReviewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilingDateNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.FilingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilingDateNull() {
                this[this.tableGetPersonalPropertyDetail.FilingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO1ValueNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.O1ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO1ValueNull() {
                this[this.tableGetPersonalPropertyDetail.O1ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO2ValueNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.O2ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO2ValueNull() {
                this[this.tableGetPersonalPropertyDetail.O2ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenaltyPercentNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.PenaltyPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenaltyPercentNull() {
                this[this.tableGetPersonalPropertyDetail.PenaltyPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenaltyAmountNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.PenaltyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenaltyAmountNull() {
                this[this.tableGetPersonalPropertyDetail.PenaltyAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetAddressNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.StreetAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetAddressNull() {
                this[this.tableGetPersonalPropertyDetail.StreetAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduleStateCodeNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.ScheduleStateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduleStateCodeNull() {
                this[this.tableGetPersonalPropertyDetail.ScheduleStateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAICSNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.NAICSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAICSNull() {
                this[this.tableGetPersonalPropertyDetail.NAICSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableGetPersonalPropertyDetail.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tableGetPersonalPropertyDetail.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tableGetPersonalPropertyDetail.OwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimaryOwnerNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.PrimaryOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimaryOwnerNull() {
                this[this.tableGetPersonalPropertyDetail.PrimaryOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableGetPersonalPropertyDetail.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelStateCodeNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.ParcelStateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelStateCodeNull() {
                this[this.tableGetPersonalPropertyDetail.ParcelStateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapNumberNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MapNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapNumberNull() {
                this[this.tableGetPersonalPropertyDetail.MapNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLegalNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.LegalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLegalNull() {
                this[this.tableGetPersonalPropertyDetail.LegalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessmentTypeIDNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.AssessmentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessmentTypeIDNull() {
                this[this.tableGetPersonalPropertyDetail.AssessmentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessmentTypeNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.AssessmentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessmentTypeNull() {
                this[this.tableGetPersonalPropertyDetail.AssessmentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewConstructionNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.NewConstructionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewConstructionNull() {
                this[this.tableGetPersonalPropertyDetail.NewConstructionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduleTypeIDNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.ScheduleTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduleTypeIDNull() {
                this[this.tableGetPersonalPropertyDetail.ScheduleTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduleTypeNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.ScheduleTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduleTypeNull() {
                this[this.tableGetPersonalPropertyDetail.ScheduleTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsHeadOfHouseholdNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.IsHeadOfHouseholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsHeadOfHouseholdNull() {
                this[this.tableGetPersonalPropertyDetail.IsHeadOfHouseholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tableGetPersonalPropertyDetail.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID1Null() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID1Null() {
                this[this.tableGetPersonalPropertyDetail.MID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID2Null() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID2Null() {
                this[this.tableGetPersonalPropertyDetail.MID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID3Null() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID3Null() {
                this[this.tableGetPersonalPropertyDetail.MID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID4Null() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MID4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID4Null() {
                this[this.tableGetPersonalPropertyDetail.MID4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID5Null() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MID5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID5Null() {
                this[this.tableGetPersonalPropertyDetail.MID5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDLabel1Null() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MIDLabel1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDLabel1Null() {
                this[this.tableGetPersonalPropertyDetail.MIDLabel1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDLabel2Null() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MIDLabel2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDLabel2Null() {
                this[this.tableGetPersonalPropertyDetail.MIDLabel2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDLabel3Null() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MIDLabel3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDLabel3Null() {
                this[this.tableGetPersonalPropertyDetail.MIDLabel3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDLabel4Null() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MIDLabel4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDLabel4Null() {
                this[this.tableGetPersonalPropertyDetail.MIDLabel4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDLabel5Null() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.MIDLabel5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDLabel5Null() {
                this[this.tableGetPersonalPropertyDetail.MIDLabel5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsFarmNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.IsFarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsFarmNull() {
                this[this.tableGetPersonalPropertyDetail.IsFarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableGetPersonalPropertyDetail.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableGetPersonalPropertyDetail.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO3ValueNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.O3ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO3ValueNull() {
                this[this.tableGetPersonalPropertyDetail.O3ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRealPropertyResultingTaxableNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.RealPropertyResultingTaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRealPropertyResultingTaxableNull() {
                this[this.tableGetPersonalPropertyDetail.RealPropertyResultingTaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultingTaxableNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.ResultingTaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultingTaxableNull() {
                this[this.tableGetPersonalPropertyDetail.ResultingTaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPPTaxableValueNull() {
                return this.IsNull(this.tableGetPersonalPropertyDetail.PPTaxableValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPPTaxableValueNull() {
                this[this.tableGetPersonalPropertyDetail.PPTaxableValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetPersonalPropertyDetailRowChangeEvent : global::System.EventArgs {
            
            private GetPersonalPropertyDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetPersonalPropertyDetailRowChangeEvent(GetPersonalPropertyDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetPersonalPropertyDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591