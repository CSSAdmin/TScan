//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4984
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F35080CentralAssessedOwner")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F35080CentralAssessedOwner : global::System.Data.DataSet {
        
        private f35080PropertyClassDataTable tablef35080PropertyClass;
        
        private f35080CentrallyAssessedOwnerDataTable tablef35080CentrallyAssessedOwner;
        
        private f35080_updateCentralOwnerDetailsDataTable tablef35080_updateCentralOwnerDetails;
        
        private f9101_CentralOwnerDetailsDataTable tablef9101_CentralOwnerDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F35080CentralAssessedOwner() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F35080CentralAssessedOwner(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f35080PropertyClass"] != null)) {
                    base.Tables.Add(new f35080PropertyClassDataTable(ds.Tables["f35080PropertyClass"]));
                }
                if ((ds.Tables["f35080CentrallyAssessedOwner"] != null)) {
                    base.Tables.Add(new f35080CentrallyAssessedOwnerDataTable(ds.Tables["f35080CentrallyAssessedOwner"]));
                }
                if ((ds.Tables["f35080_updateCentralOwnerDetails"] != null)) {
                    base.Tables.Add(new f35080_updateCentralOwnerDetailsDataTable(ds.Tables["f35080_updateCentralOwnerDetails"]));
                }
                if ((ds.Tables["f9101_CentralOwnerDetails"] != null)) {
                    base.Tables.Add(new f9101_CentralOwnerDetailsDataTable(ds.Tables["f9101_CentralOwnerDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35080PropertyClassDataTable f35080PropertyClass {
            get {
                return this.tablef35080PropertyClass;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35080CentrallyAssessedOwnerDataTable f35080CentrallyAssessedOwner {
            get {
                return this.tablef35080CentrallyAssessedOwner;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f35080_updateCentralOwnerDetailsDataTable f35080_updateCentralOwnerDetails {
            get {
                return this.tablef35080_updateCentralOwnerDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f9101_CentralOwnerDetailsDataTable f9101_CentralOwnerDetails {
            get {
                return this.tablef9101_CentralOwnerDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F35080CentralAssessedOwner cln = ((F35080CentralAssessedOwner)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f35080PropertyClass"] != null)) {
                    base.Tables.Add(new f35080PropertyClassDataTable(ds.Tables["f35080PropertyClass"]));
                }
                if ((ds.Tables["f35080CentrallyAssessedOwner"] != null)) {
                    base.Tables.Add(new f35080CentrallyAssessedOwnerDataTable(ds.Tables["f35080CentrallyAssessedOwner"]));
                }
                if ((ds.Tables["f35080_updateCentralOwnerDetails"] != null)) {
                    base.Tables.Add(new f35080_updateCentralOwnerDetailsDataTable(ds.Tables["f35080_updateCentralOwnerDetails"]));
                }
                if ((ds.Tables["f9101_CentralOwnerDetails"] != null)) {
                    base.Tables.Add(new f9101_CentralOwnerDetailsDataTable(ds.Tables["f9101_CentralOwnerDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef35080PropertyClass = ((f35080PropertyClassDataTable)(base.Tables["f35080PropertyClass"]));
            if ((initTable == true)) {
                if ((this.tablef35080PropertyClass != null)) {
                    this.tablef35080PropertyClass.InitVars();
                }
            }
            this.tablef35080CentrallyAssessedOwner = ((f35080CentrallyAssessedOwnerDataTable)(base.Tables["f35080CentrallyAssessedOwner"]));
            if ((initTable == true)) {
                if ((this.tablef35080CentrallyAssessedOwner != null)) {
                    this.tablef35080CentrallyAssessedOwner.InitVars();
                }
            }
            this.tablef35080_updateCentralOwnerDetails = ((f35080_updateCentralOwnerDetailsDataTable)(base.Tables["f35080_updateCentralOwnerDetails"]));
            if ((initTable == true)) {
                if ((this.tablef35080_updateCentralOwnerDetails != null)) {
                    this.tablef35080_updateCentralOwnerDetails.InitVars();
                }
            }
            this.tablef9101_CentralOwnerDetails = ((f9101_CentralOwnerDetailsDataTable)(base.Tables["f9101_CentralOwnerDetails"]));
            if ((initTable == true)) {
                if ((this.tablef9101_CentralOwnerDetails != null)) {
                    this.tablef9101_CentralOwnerDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F35080CentralAssessedOwner";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F35080CentralAssessedOwner.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef35080PropertyClass = new f35080PropertyClassDataTable();
            base.Tables.Add(this.tablef35080PropertyClass);
            this.tablef35080CentrallyAssessedOwner = new f35080CentrallyAssessedOwnerDataTable();
            base.Tables.Add(this.tablef35080CentrallyAssessedOwner);
            this.tablef35080_updateCentralOwnerDetails = new f35080_updateCentralOwnerDetailsDataTable();
            base.Tables.Add(this.tablef35080_updateCentralOwnerDetails);
            this.tablef9101_CentralOwnerDetails = new f9101_CentralOwnerDetailsDataTable();
            base.Tables.Add(this.tablef9101_CentralOwnerDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35080PropertyClass() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35080CentrallyAssessedOwner() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef35080_updateCentralOwnerDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef9101_CentralOwnerDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F35080CentralAssessedOwner ds = new F35080CentralAssessedOwner();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f35080PropertyClassRowChangeEventHandler(object sender, f35080PropertyClassRowChangeEvent e);
        
        public delegate void f35080CentrallyAssessedOwnerRowChangeEventHandler(object sender, f35080CentrallyAssessedOwnerRowChangeEvent e);
        
        public delegate void f35080_updateCentralOwnerDetailsRowChangeEventHandler(object sender, f35080_updateCentralOwnerDetailsRowChangeEvent e);
        
        public delegate void f9101_CentralOwnerDetailsRowChangeEventHandler(object sender, f9101_CentralOwnerDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35080PropertyClassDataTable : global::System.Data.TypedTableBase<f35080PropertyClassRow> {
            
            private global::System.Data.DataColumn columnPropertyClassID;
            
            private global::System.Data.DataColumn columnPropertyClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080PropertyClassDataTable() {
                this.TableName = "f35080PropertyClass";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35080PropertyClassDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35080PropertyClassDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassIDColumn {
                get {
                    return this.columnPropertyClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassColumn {
                get {
                    return this.columnPropertyClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080PropertyClassRow this[int index] {
                get {
                    return ((f35080PropertyClassRow)(this.Rows[index]));
                }
            }
            
            public event f35080PropertyClassRowChangeEventHandler f35080PropertyClassRowChanging;
            
            public event f35080PropertyClassRowChangeEventHandler f35080PropertyClassRowChanged;
            
            public event f35080PropertyClassRowChangeEventHandler f35080PropertyClassRowDeleting;
            
            public event f35080PropertyClassRowChangeEventHandler f35080PropertyClassRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35080PropertyClassRow(f35080PropertyClassRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080PropertyClassRow Addf35080PropertyClassRow(string PropertyClass) {
                f35080PropertyClassRow rowf35080PropertyClassRow = ((f35080PropertyClassRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PropertyClass};
                rowf35080PropertyClassRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf35080PropertyClassRow);
                return rowf35080PropertyClassRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f35080PropertyClassDataTable cln = ((f35080PropertyClassDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f35080PropertyClassDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPropertyClassID = base.Columns["PropertyClassID"];
                this.columnPropertyClass = base.Columns["PropertyClass"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPropertyClassID = new global::System.Data.DataColumn("PropertyClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClassID);
                this.columnPropertyClass = new global::System.Data.DataColumn("PropertyClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClass);
                this.columnPropertyClassID.AutoIncrement = true;
                this.columnPropertyClassID.AllowDBNull = false;
                this.columnPropertyClassID.ReadOnly = true;
                this.columnPropertyClass.AllowDBNull = false;
                this.columnPropertyClass.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080PropertyClassRow Newf35080PropertyClassRow() {
                return ((f35080PropertyClassRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f35080PropertyClassRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f35080PropertyClassRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35080PropertyClassRowChanged != null)) {
                    this.f35080PropertyClassRowChanged(this, new f35080PropertyClassRowChangeEvent(((f35080PropertyClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35080PropertyClassRowChanging != null)) {
                    this.f35080PropertyClassRowChanging(this, new f35080PropertyClassRowChangeEvent(((f35080PropertyClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35080PropertyClassRowDeleted != null)) {
                    this.f35080PropertyClassRowDeleted(this, new f35080PropertyClassRowChangeEvent(((f35080PropertyClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35080PropertyClassRowDeleting != null)) {
                    this.f35080PropertyClassRowDeleting(this, new f35080PropertyClassRowChangeEvent(((f35080PropertyClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35080PropertyClassRow(f35080PropertyClassRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35080CentralAssessedOwner ds = new F35080CentralAssessedOwner();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35080PropertyClassDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35080CentrallyAssessedOwnerDataTable : global::System.Data.TypedTableBase<f35080CentrallyAssessedOwnerRow> {
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyNumber;
            
            private global::System.Data.DataColumn columnBranchLine;
            
            private global::System.Data.DataColumn columnPropertyClassID;
            
            private global::System.Data.DataColumn columnPropertyClass;
            
            private global::System.Data.DataColumn columnOwner;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnOwnerCode;
            
            private global::System.Data.DataColumn columnCountyGeneralTotal;
            
            private global::System.Data.DataColumn columnCountyGeneralTotalRGB;
            
            private global::System.Data.DataColumn columnSchoolGeneralTotal;
            
            private global::System.Data.DataColumn columnSchoolGeneralTotalRGB;
            
            private global::System.Data.DataColumn columnSchoolBondTotal;
            
            private global::System.Data.DataColumn columnSchoolBondTotalRGB;
            
            private global::System.Data.DataColumn columnSchoolsWithBondsTotal;
            
            private global::System.Data.DataColumn columnSchoolsWithBondsTotalRGB;
            
            private global::System.Data.DataColumn columnOwnerID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080CentrallyAssessedOwnerDataTable() {
                this.TableName = "f35080CentrallyAssessedOwner";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35080CentrallyAssessedOwnerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35080CentrallyAssessedOwnerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNumberColumn {
                get {
                    return this.columnCompanyNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchLineColumn {
                get {
                    return this.columnBranchLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassIDColumn {
                get {
                    return this.columnPropertyClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassColumn {
                get {
                    return this.columnPropertyClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerColumn {
                get {
                    return this.columnOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerCodeColumn {
                get {
                    return this.columnOwnerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyGeneralTotalColumn {
                get {
                    return this.columnCountyGeneralTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyGeneralTotalRGBColumn {
                get {
                    return this.columnCountyGeneralTotalRGB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolGeneralTotalColumn {
                get {
                    return this.columnSchoolGeneralTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolGeneralTotalRGBColumn {
                get {
                    return this.columnSchoolGeneralTotalRGB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolBondTotalColumn {
                get {
                    return this.columnSchoolBondTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolBondTotalRGBColumn {
                get {
                    return this.columnSchoolBondTotalRGB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolsWithBondsTotalColumn {
                get {
                    return this.columnSchoolsWithBondsTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolsWithBondsTotalRGBColumn {
                get {
                    return this.columnSchoolsWithBondsTotalRGB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080CentrallyAssessedOwnerRow this[int index] {
                get {
                    return ((f35080CentrallyAssessedOwnerRow)(this.Rows[index]));
                }
            }
            
            public event f35080CentrallyAssessedOwnerRowChangeEventHandler f35080CentrallyAssessedOwnerRowChanging;
            
            public event f35080CentrallyAssessedOwnerRowChangeEventHandler f35080CentrallyAssessedOwnerRowChanged;
            
            public event f35080CentrallyAssessedOwnerRowChangeEventHandler f35080CentrallyAssessedOwnerRowDeleting;
            
            public event f35080CentrallyAssessedOwnerRowChangeEventHandler f35080CentrallyAssessedOwnerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35080CentrallyAssessedOwnerRow(f35080CentrallyAssessedOwnerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080CentrallyAssessedOwnerRow Addf35080CentrallyAssessedOwnerRow(
                        string ParcelNumber, 
                        int RollYear, 
                        string CompanyName, 
                        string CompanyNumber, 
                        string BranchLine, 
                        string PropertyClass, 
                        string Owner, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string State, 
                        string Zip, 
                        string OwnerCode, 
                        int CountyGeneralTotal, 
                        string CountyGeneralTotalRGB, 
                        int SchoolGeneralTotal, 
                        string SchoolGeneralTotalRGB, 
                        int SchoolBondTotal, 
                        string SchoolBondTotalRGB, 
                        int SchoolsWithBondsTotal, 
                        string SchoolsWithBondsTotalRGB, 
                        string OwnerID) {
                f35080CentrallyAssessedOwnerRow rowf35080CentrallyAssessedOwnerRow = ((f35080CentrallyAssessedOwnerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelNumber,
                        RollYear,
                        CompanyName,
                        CompanyNumber,
                        BranchLine,
                        null,
                        PropertyClass,
                        Owner,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        OwnerCode,
                        CountyGeneralTotal,
                        CountyGeneralTotalRGB,
                        SchoolGeneralTotal,
                        SchoolGeneralTotalRGB,
                        SchoolBondTotal,
                        SchoolBondTotalRGB,
                        SchoolsWithBondsTotal,
                        SchoolsWithBondsTotalRGB,
                        OwnerID};
                rowf35080CentrallyAssessedOwnerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf35080CentrallyAssessedOwnerRow);
                return rowf35080CentrallyAssessedOwnerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f35080CentrallyAssessedOwnerDataTable cln = ((f35080CentrallyAssessedOwnerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f35080CentrallyAssessedOwnerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyNumber = base.Columns["CompanyNumber"];
                this.columnBranchLine = base.Columns["BranchLine"];
                this.columnPropertyClassID = base.Columns["PropertyClassID"];
                this.columnPropertyClass = base.Columns["PropertyClass"];
                this.columnOwner = base.Columns["Owner"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
                this.columnOwnerCode = base.Columns["OwnerCode"];
                this.columnCountyGeneralTotal = base.Columns["CountyGeneralTotal"];
                this.columnCountyGeneralTotalRGB = base.Columns["CountyGeneralTotalRGB"];
                this.columnSchoolGeneralTotal = base.Columns["SchoolGeneralTotal"];
                this.columnSchoolGeneralTotalRGB = base.Columns["SchoolGeneralTotalRGB"];
                this.columnSchoolBondTotal = base.Columns["SchoolBondTotal"];
                this.columnSchoolBondTotalRGB = base.Columns["SchoolBondTotalRGB"];
                this.columnSchoolsWithBondsTotal = base.Columns["SchoolsWithBondsTotal"];
                this.columnSchoolsWithBondsTotalRGB = base.Columns["SchoolsWithBondsTotalRGB"];
                this.columnOwnerID = base.Columns["OwnerID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyNumber = new global::System.Data.DataColumn("CompanyNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyNumber);
                this.columnBranchLine = new global::System.Data.DataColumn("BranchLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchLine);
                this.columnPropertyClassID = new global::System.Data.DataColumn("PropertyClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClassID);
                this.columnPropertyClass = new global::System.Data.DataColumn("PropertyClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClass);
                this.columnOwner = new global::System.Data.DataColumn("Owner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwner);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnOwnerCode = new global::System.Data.DataColumn("OwnerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerCode);
                this.columnCountyGeneralTotal = new global::System.Data.DataColumn("CountyGeneralTotal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyGeneralTotal);
                this.columnCountyGeneralTotalRGB = new global::System.Data.DataColumn("CountyGeneralTotalRGB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyGeneralTotalRGB);
                this.columnSchoolGeneralTotal = new global::System.Data.DataColumn("SchoolGeneralTotal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolGeneralTotal);
                this.columnSchoolGeneralTotalRGB = new global::System.Data.DataColumn("SchoolGeneralTotalRGB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolGeneralTotalRGB);
                this.columnSchoolBondTotal = new global::System.Data.DataColumn("SchoolBondTotal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolBondTotal);
                this.columnSchoolBondTotalRGB = new global::System.Data.DataColumn("SchoolBondTotalRGB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolBondTotalRGB);
                this.columnSchoolsWithBondsTotal = new global::System.Data.DataColumn("SchoolsWithBondsTotal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolsWithBondsTotal);
                this.columnSchoolsWithBondsTotalRGB = new global::System.Data.DataColumn("SchoolsWithBondsTotalRGB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolsWithBondsTotalRGB);
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnParcelNumber.AllowDBNull = false;
                this.columnParcelNumber.MaxLength = 50;
                this.columnRollYear.AllowDBNull = false;
                this.columnCompanyName.MaxLength = 250;
                this.columnCompanyNumber.MaxLength = 50;
                this.columnBranchLine.MaxLength = 50;
                this.columnPropertyClassID.AutoIncrement = true;
                this.columnPropertyClassID.AllowDBNull = false;
                this.columnPropertyClassID.ReadOnly = true;
                this.columnPropertyClass.AllowDBNull = false;
                this.columnPropertyClass.MaxLength = 50;
                this.columnOwner.ReadOnly = true;
                this.columnOwner.MaxLength = 102;
                this.columnAddress1.MaxLength = 50;
                this.columnAddress2.MaxLength = 50;
                this.columnCity.MaxLength = 50;
                this.columnState.MaxLength = 50;
                this.columnZip.MaxLength = 50;
                this.columnOwnerCode.MaxLength = 20;
                this.columnCountyGeneralTotal.ReadOnly = true;
                this.columnCountyGeneralTotalRGB.ReadOnly = true;
                this.columnCountyGeneralTotalRGB.MaxLength = 5;
                this.columnSchoolGeneralTotal.ReadOnly = true;
                this.columnSchoolGeneralTotalRGB.ReadOnly = true;
                this.columnSchoolGeneralTotalRGB.MaxLength = 5;
                this.columnSchoolBondTotal.ReadOnly = true;
                this.columnSchoolBondTotalRGB.ReadOnly = true;
                this.columnSchoolBondTotalRGB.MaxLength = 5;
                this.columnSchoolsWithBondsTotal.ReadOnly = true;
                this.columnSchoolsWithBondsTotalRGB.ReadOnly = true;
                this.columnSchoolsWithBondsTotalRGB.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080CentrallyAssessedOwnerRow Newf35080CentrallyAssessedOwnerRow() {
                return ((f35080CentrallyAssessedOwnerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f35080CentrallyAssessedOwnerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f35080CentrallyAssessedOwnerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35080CentrallyAssessedOwnerRowChanged != null)) {
                    this.f35080CentrallyAssessedOwnerRowChanged(this, new f35080CentrallyAssessedOwnerRowChangeEvent(((f35080CentrallyAssessedOwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35080CentrallyAssessedOwnerRowChanging != null)) {
                    this.f35080CentrallyAssessedOwnerRowChanging(this, new f35080CentrallyAssessedOwnerRowChangeEvent(((f35080CentrallyAssessedOwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35080CentrallyAssessedOwnerRowDeleted != null)) {
                    this.f35080CentrallyAssessedOwnerRowDeleted(this, new f35080CentrallyAssessedOwnerRowChangeEvent(((f35080CentrallyAssessedOwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35080CentrallyAssessedOwnerRowDeleting != null)) {
                    this.f35080CentrallyAssessedOwnerRowDeleting(this, new f35080CentrallyAssessedOwnerRowChangeEvent(((f35080CentrallyAssessedOwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35080CentrallyAssessedOwnerRow(f35080CentrallyAssessedOwnerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35080CentralAssessedOwner ds = new F35080CentralAssessedOwner();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35080CentrallyAssessedOwnerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f35080_updateCentralOwnerDetailsDataTable : global::System.Data.TypedTableBase<f35080_updateCentralOwnerDetailsRow> {
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyNumber;
            
            private global::System.Data.DataColumn columnBranchLine;
            
            private global::System.Data.DataColumn columnPropertyClassID;
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnOwnershipCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080_updateCentralOwnerDetailsDataTable() {
                this.TableName = "f35080_updateCentralOwnerDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35080_updateCentralOwnerDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f35080_updateCentralOwnerDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNumberColumn {
                get {
                    return this.columnCompanyNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchLineColumn {
                get {
                    return this.columnBranchLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassIDColumn {
                get {
                    return this.columnPropertyClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnershipCodeColumn {
                get {
                    return this.columnOwnershipCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080_updateCentralOwnerDetailsRow this[int index] {
                get {
                    return ((f35080_updateCentralOwnerDetailsRow)(this.Rows[index]));
                }
            }
            
            public event f35080_updateCentralOwnerDetailsRowChangeEventHandler f35080_updateCentralOwnerDetailsRowChanging;
            
            public event f35080_updateCentralOwnerDetailsRowChangeEventHandler f35080_updateCentralOwnerDetailsRowChanged;
            
            public event f35080_updateCentralOwnerDetailsRowChangeEventHandler f35080_updateCentralOwnerDetailsRowDeleting;
            
            public event f35080_updateCentralOwnerDetailsRowChangeEventHandler f35080_updateCentralOwnerDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf35080_updateCentralOwnerDetailsRow(f35080_updateCentralOwnerDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080_updateCentralOwnerDetailsRow Addf35080_updateCentralOwnerDetailsRow(string ParcelNumber, string RollYear, string CompanyName, string CompanyNumber, string BranchLine, string PropertyClassID, string OwnerID, string Address1, string Address2, string City, string State, string Zip, string OwnershipCode) {
                f35080_updateCentralOwnerDetailsRow rowf35080_updateCentralOwnerDetailsRow = ((f35080_updateCentralOwnerDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelNumber,
                        RollYear,
                        CompanyName,
                        CompanyNumber,
                        BranchLine,
                        PropertyClassID,
                        OwnerID,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        OwnershipCode};
                rowf35080_updateCentralOwnerDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf35080_updateCentralOwnerDetailsRow);
                return rowf35080_updateCentralOwnerDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f35080_updateCentralOwnerDetailsDataTable cln = ((f35080_updateCentralOwnerDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f35080_updateCentralOwnerDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyNumber = base.Columns["CompanyNumber"];
                this.columnBranchLine = base.Columns["BranchLine"];
                this.columnPropertyClassID = base.Columns["PropertyClassID"];
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
                this.columnOwnershipCode = base.Columns["OwnershipCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyNumber = new global::System.Data.DataColumn("CompanyNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyNumber);
                this.columnBranchLine = new global::System.Data.DataColumn("BranchLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchLine);
                this.columnPropertyClassID = new global::System.Data.DataColumn("PropertyClassID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClassID);
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnOwnershipCode = new global::System.Data.DataColumn("OwnershipCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnershipCode);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080_updateCentralOwnerDetailsRow Newf35080_updateCentralOwnerDetailsRow() {
                return ((f35080_updateCentralOwnerDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f35080_updateCentralOwnerDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f35080_updateCentralOwnerDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f35080_updateCentralOwnerDetailsRowChanged != null)) {
                    this.f35080_updateCentralOwnerDetailsRowChanged(this, new f35080_updateCentralOwnerDetailsRowChangeEvent(((f35080_updateCentralOwnerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f35080_updateCentralOwnerDetailsRowChanging != null)) {
                    this.f35080_updateCentralOwnerDetailsRowChanging(this, new f35080_updateCentralOwnerDetailsRowChangeEvent(((f35080_updateCentralOwnerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f35080_updateCentralOwnerDetailsRowDeleted != null)) {
                    this.f35080_updateCentralOwnerDetailsRowDeleted(this, new f35080_updateCentralOwnerDetailsRowChangeEvent(((f35080_updateCentralOwnerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f35080_updateCentralOwnerDetailsRowDeleting != null)) {
                    this.f35080_updateCentralOwnerDetailsRowDeleting(this, new f35080_updateCentralOwnerDetailsRowChangeEvent(((f35080_updateCentralOwnerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef35080_updateCentralOwnerDetailsRow(f35080_updateCentralOwnerDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35080CentralAssessedOwner ds = new F35080CentralAssessedOwner();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f35080_updateCentralOwnerDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f9101_CentralOwnerDetailsDataTable : global::System.Data.TypedTableBase<f9101_CentralOwnerDetailsRow> {
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnPOwnerID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnNameOwner;
            
            private global::System.Data.DataColumn columnOwnerCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9101_CentralOwnerDetailsDataTable() {
                this.TableName = "f9101_CentralOwnerDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f9101_CentralOwnerDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f9101_CentralOwnerDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POwnerIDColumn {
                get {
                    return this.columnPOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameOwnerColumn {
                get {
                    return this.columnNameOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerCodeColumn {
                get {
                    return this.columnOwnerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9101_CentralOwnerDetailsRow this[int index] {
                get {
                    return ((f9101_CentralOwnerDetailsRow)(this.Rows[index]));
                }
            }
            
            public event f9101_CentralOwnerDetailsRowChangeEventHandler f9101_CentralOwnerDetailsRowChanging;
            
            public event f9101_CentralOwnerDetailsRowChangeEventHandler f9101_CentralOwnerDetailsRowChanged;
            
            public event f9101_CentralOwnerDetailsRowChangeEventHandler f9101_CentralOwnerDetailsRowDeleting;
            
            public event f9101_CentralOwnerDetailsRowChangeEventHandler f9101_CentralOwnerDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf9101_CentralOwnerDetailsRow(f9101_CentralOwnerDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9101_CentralOwnerDetailsRow Addf9101_CentralOwnerDetailsRow(int POwnerID, string Name, string Address1, string Address2, string Address, string City, string State, string Zip, string NameOwner, string OwnerCode) {
                f9101_CentralOwnerDetailsRow rowf9101_CentralOwnerDetailsRow = ((f9101_CentralOwnerDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        POwnerID,
                        Name,
                        Address1,
                        Address2,
                        Address,
                        City,
                        State,
                        Zip,
                        NameOwner,
                        OwnerCode};
                rowf9101_CentralOwnerDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf9101_CentralOwnerDetailsRow);
                return rowf9101_CentralOwnerDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f9101_CentralOwnerDetailsDataTable cln = ((f9101_CentralOwnerDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f9101_CentralOwnerDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnPOwnerID = base.Columns["POwnerID"];
                this.columnName = base.Columns["Name"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress = base.Columns["Address"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
                this.columnNameOwner = base.Columns["NameOwner"];
                this.columnOwnerCode = base.Columns["OwnerCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnPOwnerID = new global::System.Data.DataColumn("POwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOwnerID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnNameOwner = new global::System.Data.DataColumn("NameOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameOwner);
                this.columnOwnerCode = new global::System.Data.DataColumn("OwnerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerCode);
                this.columnOwnerID.AutoIncrement = true;
                this.columnOwnerID.AllowDBNull = false;
                this.columnOwnerID.ReadOnly = true;
                this.columnPOwnerID.ReadOnly = true;
                this.columnName.ReadOnly = true;
                this.columnName.MaxLength = 102;
                this.columnAddress1.MaxLength = 50;
                this.columnAddress2.MaxLength = 50;
                this.columnAddress.ReadOnly = true;
                this.columnAddress.MaxLength = 102;
                this.columnCity.MaxLength = 50;
                this.columnState.MaxLength = 50;
                this.columnZip.MaxLength = 50;
                this.columnNameOwner.ReadOnly = true;
                this.columnNameOwner.MaxLength = 102;
                this.columnOwnerCode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9101_CentralOwnerDetailsRow Newf9101_CentralOwnerDetailsRow() {
                return ((f9101_CentralOwnerDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f9101_CentralOwnerDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f9101_CentralOwnerDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f9101_CentralOwnerDetailsRowChanged != null)) {
                    this.f9101_CentralOwnerDetailsRowChanged(this, new f9101_CentralOwnerDetailsRowChangeEvent(((f9101_CentralOwnerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f9101_CentralOwnerDetailsRowChanging != null)) {
                    this.f9101_CentralOwnerDetailsRowChanging(this, new f9101_CentralOwnerDetailsRowChangeEvent(((f9101_CentralOwnerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f9101_CentralOwnerDetailsRowDeleted != null)) {
                    this.f9101_CentralOwnerDetailsRowDeleted(this, new f9101_CentralOwnerDetailsRowChangeEvent(((f9101_CentralOwnerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f9101_CentralOwnerDetailsRowDeleting != null)) {
                    this.f9101_CentralOwnerDetailsRowDeleting(this, new f9101_CentralOwnerDetailsRowChangeEvent(((f9101_CentralOwnerDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef9101_CentralOwnerDetailsRow(f9101_CentralOwnerDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35080CentralAssessedOwner ds = new F35080CentralAssessedOwner();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f9101_CentralOwnerDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35080PropertyClassRow : global::System.Data.DataRow {
            
            private f35080PropertyClassDataTable tablef35080PropertyClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35080PropertyClassRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35080PropertyClass = ((f35080PropertyClassDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PropertyClassID {
                get {
                    return ((int)(this[this.tablef35080PropertyClass.PropertyClassIDColumn]));
                }
                set {
                    this[this.tablef35080PropertyClass.PropertyClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyClass {
                get {
                    return ((string)(this[this.tablef35080PropertyClass.PropertyClassColumn]));
                }
                set {
                    this[this.tablef35080PropertyClass.PropertyClassColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35080CentrallyAssessedOwnerRow : global::System.Data.DataRow {
            
            private f35080CentrallyAssessedOwnerDataTable tablef35080CentrallyAssessedOwner;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35080CentrallyAssessedOwnerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35080CentrallyAssessedOwner = ((f35080CentrallyAssessedOwnerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    return ((string)(this[this.tablef35080CentrallyAssessedOwner.ParcelNumberColumn]));
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RollYear {
                get {
                    return ((int)(this[this.tablef35080CentrallyAssessedOwner.RollYearColumn]));
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'f35080CentrallyAssessedOwner\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyNumber {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.CompanyNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyNumber\' in table \'f35080CentrallyAssessedOwner\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.CompanyNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchLine {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.BranchLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchLine\' in table \'f35080CentrallyAssessedOwner\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.BranchLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PropertyClassID {
                get {
                    return ((int)(this[this.tablef35080CentrallyAssessedOwner.PropertyClassIDColumn]));
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.PropertyClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyClass {
                get {
                    return ((string)(this[this.tablef35080CentrallyAssessedOwner.PropertyClassColumn]));
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.PropertyClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Owner {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.OwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Owner\' in table \'f35080CentrallyAssessedOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.OwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'f35080CentrallyAssessedOwner\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'f35080CentrallyAssessedOwner\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'f35080CentrallyAssessedOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'f35080CentrallyAssessedOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.ZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zip\' in table \'f35080CentrallyAssessedOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerCode {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.OwnerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerCode\' in table \'f35080CentrallyAssessedOwner\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.OwnerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CountyGeneralTotal {
                get {
                    try {
                        return ((int)(this[this.tablef35080CentrallyAssessedOwner.CountyGeneralTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyGeneralTotal\' in table \'f35080CentrallyAssessedOwner\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.CountyGeneralTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountyGeneralTotalRGB {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.CountyGeneralTotalRGBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyGeneralTotalRGB\' in table \'f35080CentrallyAssessedOwn" +
                                "er\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.CountyGeneralTotalRGBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SchoolGeneralTotal {
                get {
                    try {
                        return ((int)(this[this.tablef35080CentrallyAssessedOwner.SchoolGeneralTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolGeneralTotal\' in table \'f35080CentrallyAssessedOwner\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.SchoolGeneralTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchoolGeneralTotalRGB {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.SchoolGeneralTotalRGBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolGeneralTotalRGB\' in table \'f35080CentrallyAssessedOwn" +
                                "er\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.SchoolGeneralTotalRGBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SchoolBondTotal {
                get {
                    try {
                        return ((int)(this[this.tablef35080CentrallyAssessedOwner.SchoolBondTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolBondTotal\' in table \'f35080CentrallyAssessedOwner\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.SchoolBondTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchoolBondTotalRGB {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.SchoolBondTotalRGBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolBondTotalRGB\' in table \'f35080CentrallyAssessedOwner\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.SchoolBondTotalRGBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SchoolsWithBondsTotal {
                get {
                    try {
                        return ((int)(this[this.tablef35080CentrallyAssessedOwner.SchoolsWithBondsTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolsWithBondsTotal\' in table \'f35080CentrallyAssessedOwn" +
                                "er\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.SchoolsWithBondsTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchoolsWithBondsTotalRGB {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.SchoolsWithBondsTotalRGBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolsWithBondsTotalRGB\' in table \'f35080CentrallyAssessed" +
                                "Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.SchoolsWithBondsTotalRGBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerID {
                get {
                    try {
                        return ((string)(this[this.tablef35080CentrallyAssessedOwner.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'f35080CentrallyAssessedOwner\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef35080CentrallyAssessedOwner.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tablef35080CentrallyAssessedOwner.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNumberNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.CompanyNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNumberNull() {
                this[this.tablef35080CentrallyAssessedOwner.CompanyNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchLineNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.BranchLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchLineNull() {
                this[this.tablef35080CentrallyAssessedOwner.BranchLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.OwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerNull() {
                this[this.tablef35080CentrallyAssessedOwner.OwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tablef35080CentrallyAssessedOwner.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tablef35080CentrallyAssessedOwner.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tablef35080CentrallyAssessedOwner.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tablef35080CentrallyAssessedOwner.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipNull() {
                this[this.tablef35080CentrallyAssessedOwner.ZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerCodeNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.OwnerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerCodeNull() {
                this[this.tablef35080CentrallyAssessedOwner.OwnerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyGeneralTotalNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.CountyGeneralTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyGeneralTotalNull() {
                this[this.tablef35080CentrallyAssessedOwner.CountyGeneralTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyGeneralTotalRGBNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.CountyGeneralTotalRGBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyGeneralTotalRGBNull() {
                this[this.tablef35080CentrallyAssessedOwner.CountyGeneralTotalRGBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolGeneralTotalNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.SchoolGeneralTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolGeneralTotalNull() {
                this[this.tablef35080CentrallyAssessedOwner.SchoolGeneralTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolGeneralTotalRGBNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.SchoolGeneralTotalRGBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolGeneralTotalRGBNull() {
                this[this.tablef35080CentrallyAssessedOwner.SchoolGeneralTotalRGBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolBondTotalNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.SchoolBondTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolBondTotalNull() {
                this[this.tablef35080CentrallyAssessedOwner.SchoolBondTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolBondTotalRGBNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.SchoolBondTotalRGBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolBondTotalRGBNull() {
                this[this.tablef35080CentrallyAssessedOwner.SchoolBondTotalRGBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolsWithBondsTotalNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.SchoolsWithBondsTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolsWithBondsTotalNull() {
                this[this.tablef35080CentrallyAssessedOwner.SchoolsWithBondsTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolsWithBondsTotalRGBNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.SchoolsWithBondsTotalRGBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolsWithBondsTotalRGBNull() {
                this[this.tablef35080CentrallyAssessedOwner.SchoolsWithBondsTotalRGBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tablef35080CentrallyAssessedOwner.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tablef35080CentrallyAssessedOwner.OwnerIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f35080_updateCentralOwnerDetailsRow : global::System.Data.DataRow {
            
            private f35080_updateCentralOwnerDetailsDataTable tablef35080_updateCentralOwnerDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f35080_updateCentralOwnerDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef35080_updateCentralOwnerDetails = ((f35080_updateCentralOwnerDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.ParcelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber\' in table \'f35080_updateCentralOwnerDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RollYear {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'f35080_updateCentralOwnerDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'f35080_updateCentralOwnerDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyNumber {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.CompanyNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyNumber\' in table \'f35080_updateCentralOwnerDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.CompanyNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchLine {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.BranchLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchLine\' in table \'f35080_updateCentralOwnerDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.BranchLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyClassID {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.PropertyClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyClassID\' in table \'f35080_updateCentralOwnerDetails" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.PropertyClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerID {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'f35080_updateCentralOwnerDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'f35080_updateCentralOwnerDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'f35080_updateCentralOwnerDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'f35080_updateCentralOwnerDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'f35080_updateCentralOwnerDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.ZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zip\' in table \'f35080_updateCentralOwnerDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnershipCode {
                get {
                    try {
                        return ((string)(this[this.tablef35080_updateCentralOwnerDetails.OwnershipCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnershipCode\' in table \'f35080_updateCentralOwnerDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef35080_updateCentralOwnerDetails.OwnershipCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tablef35080_updateCentralOwnerDetails.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tablef35080_updateCentralOwnerDetails.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tablef35080_updateCentralOwnerDetails.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNumberNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.CompanyNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNumberNull() {
                this[this.tablef35080_updateCentralOwnerDetails.CompanyNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchLineNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.BranchLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchLineNull() {
                this[this.tablef35080_updateCentralOwnerDetails.BranchLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyClassIDNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.PropertyClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyClassIDNull() {
                this[this.tablef35080_updateCentralOwnerDetails.PropertyClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tablef35080_updateCentralOwnerDetails.OwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tablef35080_updateCentralOwnerDetails.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tablef35080_updateCentralOwnerDetails.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tablef35080_updateCentralOwnerDetails.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tablef35080_updateCentralOwnerDetails.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipNull() {
                this[this.tablef35080_updateCentralOwnerDetails.ZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnershipCodeNull() {
                return this.IsNull(this.tablef35080_updateCentralOwnerDetails.OwnershipCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnershipCodeNull() {
                this[this.tablef35080_updateCentralOwnerDetails.OwnershipCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f9101_CentralOwnerDetailsRow : global::System.Data.DataRow {
            
            private f9101_CentralOwnerDetailsDataTable tablef9101_CentralOwnerDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f9101_CentralOwnerDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef9101_CentralOwnerDetails = ((f9101_CentralOwnerDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    return ((int)(this[this.tablef9101_CentralOwnerDetails.OwnerIDColumn]));
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POwnerID {
                get {
                    try {
                        return ((int)(this[this.tablef9101_CentralOwnerDetails.POwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POwnerID\' in table \'f9101_CentralOwnerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.POwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablef9101_CentralOwnerDetails.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'f9101_CentralOwnerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tablef9101_CentralOwnerDetails.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'f9101_CentralOwnerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tablef9101_CentralOwnerDetails.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'f9101_CentralOwnerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tablef9101_CentralOwnerDetails.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'f9101_CentralOwnerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tablef9101_CentralOwnerDetails.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'f9101_CentralOwnerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tablef9101_CentralOwnerDetails.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'f9101_CentralOwnerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tablef9101_CentralOwnerDetails.ZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zip\' in table \'f9101_CentralOwnerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameOwner {
                get {
                    try {
                        return ((string)(this[this.tablef9101_CentralOwnerDetails.NameOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameOwner\' in table \'f9101_CentralOwnerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.NameOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerCode {
                get {
                    try {
                        return ((string)(this[this.tablef9101_CentralOwnerDetails.OwnerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerCode\' in table \'f9101_CentralOwnerDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef9101_CentralOwnerDetails.OwnerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOwnerIDNull() {
                return this.IsNull(this.tablef9101_CentralOwnerDetails.POwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOwnerIDNull() {
                this[this.tablef9101_CentralOwnerDetails.POwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tablef9101_CentralOwnerDetails.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tablef9101_CentralOwnerDetails.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tablef9101_CentralOwnerDetails.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tablef9101_CentralOwnerDetails.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tablef9101_CentralOwnerDetails.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tablef9101_CentralOwnerDetails.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tablef9101_CentralOwnerDetails.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tablef9101_CentralOwnerDetails.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tablef9101_CentralOwnerDetails.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tablef9101_CentralOwnerDetails.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tablef9101_CentralOwnerDetails.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tablef9101_CentralOwnerDetails.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipNull() {
                return this.IsNull(this.tablef9101_CentralOwnerDetails.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipNull() {
                this[this.tablef9101_CentralOwnerDetails.ZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameOwnerNull() {
                return this.IsNull(this.tablef9101_CentralOwnerDetails.NameOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameOwnerNull() {
                this[this.tablef9101_CentralOwnerDetails.NameOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerCodeNull() {
                return this.IsNull(this.tablef9101_CentralOwnerDetails.OwnerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerCodeNull() {
                this[this.tablef9101_CentralOwnerDetails.OwnerCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35080PropertyClassRowChangeEvent : global::System.EventArgs {
            
            private f35080PropertyClassRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080PropertyClassRowChangeEvent(f35080PropertyClassRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080PropertyClassRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35080CentrallyAssessedOwnerRowChangeEvent : global::System.EventArgs {
            
            private f35080CentrallyAssessedOwnerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080CentrallyAssessedOwnerRowChangeEvent(f35080CentrallyAssessedOwnerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080CentrallyAssessedOwnerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f35080_updateCentralOwnerDetailsRowChangeEvent : global::System.EventArgs {
            
            private f35080_updateCentralOwnerDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080_updateCentralOwnerDetailsRowChangeEvent(f35080_updateCentralOwnerDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f35080_updateCentralOwnerDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f9101_CentralOwnerDetailsRowChangeEvent : global::System.EventArgs {
            
            private f9101_CentralOwnerDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9101_CentralOwnerDetailsRowChangeEvent(f9101_CentralOwnerDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f9101_CentralOwnerDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591