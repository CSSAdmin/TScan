//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F29555PersonalPropertySaleData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F29555PersonalPropertySaleData : global::System.Data.DataSet {
        
        private f29555_pcget_PSaleOwnersDataTable tablef29555_pcget_PSaleOwners;
        
        private f29555_pclst_DeedTypesDataTable tablef29555_pclst_DeedTypes;
        
        private f29555_pcget_SaleSchedulesAndOwnersDataTable tablef29555_pcget_SaleSchedulesAndOwners;
        
        private f29555_pcget_ScheduleSaleTrackingDataTable tablef29555_pcget_ScheduleSaleTracking;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F29555PersonalPropertySaleData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F29555PersonalPropertySaleData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f29555_pcget_PSaleOwners"] != null)) {
                    base.Tables.Add(new f29555_pcget_PSaleOwnersDataTable(ds.Tables["f29555_pcget_PSaleOwners"]));
                }
                if ((ds.Tables["f29555_pclst_DeedTypes"] != null)) {
                    base.Tables.Add(new f29555_pclst_DeedTypesDataTable(ds.Tables["f29555_pclst_DeedTypes"]));
                }
                if ((ds.Tables["f29555_pcget_SaleSchedulesAndOwners"] != null)) {
                    base.Tables.Add(new f29555_pcget_SaleSchedulesAndOwnersDataTable(ds.Tables["f29555_pcget_SaleSchedulesAndOwners"]));
                }
                if ((ds.Tables["f29555_pcget_ScheduleSaleTracking"] != null)) {
                    base.Tables.Add(new f29555_pcget_ScheduleSaleTrackingDataTable(ds.Tables["f29555_pcget_ScheduleSaleTracking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29555_pcget_PSaleOwnersDataTable f29555_pcget_PSaleOwners {
            get {
                return this.tablef29555_pcget_PSaleOwners;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29555_pclst_DeedTypesDataTable f29555_pclst_DeedTypes {
            get {
                return this.tablef29555_pclst_DeedTypes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29555_pcget_SaleSchedulesAndOwnersDataTable f29555_pcget_SaleSchedulesAndOwners {
            get {
                return this.tablef29555_pcget_SaleSchedulesAndOwners;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f29555_pcget_ScheduleSaleTrackingDataTable f29555_pcget_ScheduleSaleTracking {
            get {
                return this.tablef29555_pcget_ScheduleSaleTracking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F29555PersonalPropertySaleData cln = ((F29555PersonalPropertySaleData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f29555_pcget_PSaleOwners"] != null)) {
                    base.Tables.Add(new f29555_pcget_PSaleOwnersDataTable(ds.Tables["f29555_pcget_PSaleOwners"]));
                }
                if ((ds.Tables["f29555_pclst_DeedTypes"] != null)) {
                    base.Tables.Add(new f29555_pclst_DeedTypesDataTable(ds.Tables["f29555_pclst_DeedTypes"]));
                }
                if ((ds.Tables["f29555_pcget_SaleSchedulesAndOwners"] != null)) {
                    base.Tables.Add(new f29555_pcget_SaleSchedulesAndOwnersDataTable(ds.Tables["f29555_pcget_SaleSchedulesAndOwners"]));
                }
                if ((ds.Tables["f29555_pcget_ScheduleSaleTracking"] != null)) {
                    base.Tables.Add(new f29555_pcget_ScheduleSaleTrackingDataTable(ds.Tables["f29555_pcget_ScheduleSaleTracking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef29555_pcget_PSaleOwners = ((f29555_pcget_PSaleOwnersDataTable)(base.Tables["f29555_pcget_PSaleOwners"]));
            if ((initTable == true)) {
                if ((this.tablef29555_pcget_PSaleOwners != null)) {
                    this.tablef29555_pcget_PSaleOwners.InitVars();
                }
            }
            this.tablef29555_pclst_DeedTypes = ((f29555_pclst_DeedTypesDataTable)(base.Tables["f29555_pclst_DeedTypes"]));
            if ((initTable == true)) {
                if ((this.tablef29555_pclst_DeedTypes != null)) {
                    this.tablef29555_pclst_DeedTypes.InitVars();
                }
            }
            this.tablef29555_pcget_SaleSchedulesAndOwners = ((f29555_pcget_SaleSchedulesAndOwnersDataTable)(base.Tables["f29555_pcget_SaleSchedulesAndOwners"]));
            if ((initTable == true)) {
                if ((this.tablef29555_pcget_SaleSchedulesAndOwners != null)) {
                    this.tablef29555_pcget_SaleSchedulesAndOwners.InitVars();
                }
            }
            this.tablef29555_pcget_ScheduleSaleTracking = ((f29555_pcget_ScheduleSaleTrackingDataTable)(base.Tables["f29555_pcget_ScheduleSaleTracking"]));
            if ((initTable == true)) {
                if ((this.tablef29555_pcget_ScheduleSaleTracking != null)) {
                    this.tablef29555_pcget_ScheduleSaleTracking.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F29555PersonalPropertySaleData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F29555PersonalPropertySaleData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef29555_pcget_PSaleOwners = new f29555_pcget_PSaleOwnersDataTable();
            base.Tables.Add(this.tablef29555_pcget_PSaleOwners);
            this.tablef29555_pclst_DeedTypes = new f29555_pclst_DeedTypesDataTable();
            base.Tables.Add(this.tablef29555_pclst_DeedTypes);
            this.tablef29555_pcget_SaleSchedulesAndOwners = new f29555_pcget_SaleSchedulesAndOwnersDataTable();
            base.Tables.Add(this.tablef29555_pcget_SaleSchedulesAndOwners);
            this.tablef29555_pcget_ScheduleSaleTracking = new f29555_pcget_ScheduleSaleTrackingDataTable();
            base.Tables.Add(this.tablef29555_pcget_ScheduleSaleTracking);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29555_pcget_PSaleOwners() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29555_pclst_DeedTypes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29555_pcget_SaleSchedulesAndOwners() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef29555_pcget_ScheduleSaleTracking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F29555PersonalPropertySaleData ds = new F29555PersonalPropertySaleData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f29555_pcget_PSaleOwnersRowChangeEventHandler(object sender, f29555_pcget_PSaleOwnersRowChangeEvent e);
        
        public delegate void f29555_pclst_DeedTypesRowChangeEventHandler(object sender, f29555_pclst_DeedTypesRowChangeEvent e);
        
        public delegate void f29555_pcget_SaleSchedulesAndOwnersRowChangeEventHandler(object sender, f29555_pcget_SaleSchedulesAndOwnersRowChangeEvent e);
        
        public delegate void f29555_pcget_ScheduleSaleTrackingRowChangeEventHandler(object sender, f29555_pcget_ScheduleSaleTrackingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29555_pcget_PSaleOwnersDataTable : global::System.Data.TypedTableBase<f29555_pcget_PSaleOwnersRow> {
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnOwnerName;
            
            private global::System.Data.DataColumn columnIsBuyer;
            
            private global::System.Data.DataColumn columnOwnerAddress;
            
            private global::System.Data.DataColumn columnOwnerLocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_PSaleOwnersDataTable() {
                this.TableName = "f29555_pcget_PSaleOwners";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29555_pcget_PSaleOwnersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29555_pcget_PSaleOwnersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerNameColumn {
                get {
                    return this.columnOwnerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsBuyerColumn {
                get {
                    return this.columnIsBuyer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerAddressColumn {
                get {
                    return this.columnOwnerAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerLocationColumn {
                get {
                    return this.columnOwnerLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_PSaleOwnersRow this[int index] {
                get {
                    return ((f29555_pcget_PSaleOwnersRow)(this.Rows[index]));
                }
            }
            
            public event f29555_pcget_PSaleOwnersRowChangeEventHandler f29555_pcget_PSaleOwnersRowChanging;
            
            public event f29555_pcget_PSaleOwnersRowChangeEventHandler f29555_pcget_PSaleOwnersRowChanged;
            
            public event f29555_pcget_PSaleOwnersRowChangeEventHandler f29555_pcget_PSaleOwnersRowDeleting;
            
            public event f29555_pcget_PSaleOwnersRowChangeEventHandler f29555_pcget_PSaleOwnersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29555_pcget_PSaleOwnersRow(f29555_pcget_PSaleOwnersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_PSaleOwnersRow Addf29555_pcget_PSaleOwnersRow(int OwnerID, string OwnerName, bool IsBuyer, string OwnerAddress, string OwnerLocation) {
                f29555_pcget_PSaleOwnersRow rowf29555_pcget_PSaleOwnersRow = ((f29555_pcget_PSaleOwnersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OwnerID,
                        OwnerName,
                        IsBuyer,
                        OwnerAddress,
                        OwnerLocation};
                rowf29555_pcget_PSaleOwnersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29555_pcget_PSaleOwnersRow);
                return rowf29555_pcget_PSaleOwnersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29555_pcget_PSaleOwnersDataTable cln = ((f29555_pcget_PSaleOwnersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29555_pcget_PSaleOwnersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnOwnerName = base.Columns["OwnerName"];
                this.columnIsBuyer = base.Columns["IsBuyer"];
                this.columnOwnerAddress = base.Columns["OwnerAddress"];
                this.columnOwnerLocation = base.Columns["OwnerLocation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
                this.columnIsBuyer = new global::System.Data.DataColumn("IsBuyer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBuyer);
                this.columnOwnerAddress = new global::System.Data.DataColumn("OwnerAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerAddress);
                this.columnOwnerLocation = new global::System.Data.DataColumn("OwnerLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerLocation);
                this.columnOwnerName.MaxLength = 200;
                this.columnOwnerAddress.MaxLength = 200;
                this.columnOwnerLocation.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_PSaleOwnersRow Newf29555_pcget_PSaleOwnersRow() {
                return ((f29555_pcget_PSaleOwnersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29555_pcget_PSaleOwnersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29555_pcget_PSaleOwnersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29555_pcget_PSaleOwnersRowChanged != null)) {
                    this.f29555_pcget_PSaleOwnersRowChanged(this, new f29555_pcget_PSaleOwnersRowChangeEvent(((f29555_pcget_PSaleOwnersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29555_pcget_PSaleOwnersRowChanging != null)) {
                    this.f29555_pcget_PSaleOwnersRowChanging(this, new f29555_pcget_PSaleOwnersRowChangeEvent(((f29555_pcget_PSaleOwnersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29555_pcget_PSaleOwnersRowDeleted != null)) {
                    this.f29555_pcget_PSaleOwnersRowDeleted(this, new f29555_pcget_PSaleOwnersRowChangeEvent(((f29555_pcget_PSaleOwnersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29555_pcget_PSaleOwnersRowDeleting != null)) {
                    this.f29555_pcget_PSaleOwnersRowDeleting(this, new f29555_pcget_PSaleOwnersRowChangeEvent(((f29555_pcget_PSaleOwnersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29555_pcget_PSaleOwnersRow(f29555_pcget_PSaleOwnersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29555PersonalPropertySaleData ds = new F29555PersonalPropertySaleData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29555_pcget_PSaleOwnersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29555_pclst_DeedTypesDataTable : global::System.Data.TypedTableBase<f29555_pclst_DeedTypesRow> {
            
            private global::System.Data.DataColumn columnDeedTypeID;
            
            private global::System.Data.DataColumn columnDeedType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pclst_DeedTypesDataTable() {
                this.TableName = "f29555_pclst_DeedTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29555_pclst_DeedTypesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29555_pclst_DeedTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeedTypeIDColumn {
                get {
                    return this.columnDeedTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeedTypeColumn {
                get {
                    return this.columnDeedType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pclst_DeedTypesRow this[int index] {
                get {
                    return ((f29555_pclst_DeedTypesRow)(this.Rows[index]));
                }
            }
            
            public event f29555_pclst_DeedTypesRowChangeEventHandler f29555_pclst_DeedTypesRowChanging;
            
            public event f29555_pclst_DeedTypesRowChangeEventHandler f29555_pclst_DeedTypesRowChanged;
            
            public event f29555_pclst_DeedTypesRowChangeEventHandler f29555_pclst_DeedTypesRowDeleting;
            
            public event f29555_pclst_DeedTypesRowChangeEventHandler f29555_pclst_DeedTypesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29555_pclst_DeedTypesRow(f29555_pclst_DeedTypesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pclst_DeedTypesRow Addf29555_pclst_DeedTypesRow(int DeedTypeID, string DeedType) {
                f29555_pclst_DeedTypesRow rowf29555_pclst_DeedTypesRow = ((f29555_pclst_DeedTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeedTypeID,
                        DeedType};
                rowf29555_pclst_DeedTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29555_pclst_DeedTypesRow);
                return rowf29555_pclst_DeedTypesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29555_pclst_DeedTypesDataTable cln = ((f29555_pclst_DeedTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29555_pclst_DeedTypesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeedTypeID = base.Columns["DeedTypeID"];
                this.columnDeedType = base.Columns["DeedType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeedTypeID = new global::System.Data.DataColumn("DeedTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeedTypeID);
                this.columnDeedType = new global::System.Data.DataColumn("DeedType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeedType);
                this.columnDeedTypeID.ReadOnly = true;
                this.columnDeedType.ReadOnly = true;
                this.columnDeedType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pclst_DeedTypesRow Newf29555_pclst_DeedTypesRow() {
                return ((f29555_pclst_DeedTypesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29555_pclst_DeedTypesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29555_pclst_DeedTypesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29555_pclst_DeedTypesRowChanged != null)) {
                    this.f29555_pclst_DeedTypesRowChanged(this, new f29555_pclst_DeedTypesRowChangeEvent(((f29555_pclst_DeedTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29555_pclst_DeedTypesRowChanging != null)) {
                    this.f29555_pclst_DeedTypesRowChanging(this, new f29555_pclst_DeedTypesRowChangeEvent(((f29555_pclst_DeedTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29555_pclst_DeedTypesRowDeleted != null)) {
                    this.f29555_pclst_DeedTypesRowDeleted(this, new f29555_pclst_DeedTypesRowChangeEvent(((f29555_pclst_DeedTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29555_pclst_DeedTypesRowDeleting != null)) {
                    this.f29555_pclst_DeedTypesRowDeleting(this, new f29555_pclst_DeedTypesRowChangeEvent(((f29555_pclst_DeedTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29555_pclst_DeedTypesRow(f29555_pclst_DeedTypesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29555PersonalPropertySaleData ds = new F29555PersonalPropertySaleData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29555_pclst_DeedTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29555_pcget_SaleSchedulesAndOwnersDataTable : global::System.Data.TypedTableBase<f29555_pcget_SaleSchedulesAndOwnersRow> {
            
            private global::System.Data.DataColumn columnIsBaseSchedule;
            
            private global::System.Data.DataColumn columnScheduleNumber;
            
            private global::System.Data.DataColumn columnAssessedValue;
            
            private global::System.Data.DataColumn columnTaxableValue;
            
            private global::System.Data.DataColumn columnScheduleID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_SaleSchedulesAndOwnersDataTable() {
                this.TableName = "f29555_pcget_SaleSchedulesAndOwners";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29555_pcget_SaleSchedulesAndOwnersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29555_pcget_SaleSchedulesAndOwnersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsBaseScheduleColumn {
                get {
                    return this.columnIsBaseSchedule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduleNumberColumn {
                get {
                    return this.columnScheduleNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessedValueColumn {
                get {
                    return this.columnAssessedValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxableValueColumn {
                get {
                    return this.columnTaxableValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduleIDColumn {
                get {
                    return this.columnScheduleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_SaleSchedulesAndOwnersRow this[int index] {
                get {
                    return ((f29555_pcget_SaleSchedulesAndOwnersRow)(this.Rows[index]));
                }
            }
            
            public event f29555_pcget_SaleSchedulesAndOwnersRowChangeEventHandler f29555_pcget_SaleSchedulesAndOwnersRowChanging;
            
            public event f29555_pcget_SaleSchedulesAndOwnersRowChangeEventHandler f29555_pcget_SaleSchedulesAndOwnersRowChanged;
            
            public event f29555_pcget_SaleSchedulesAndOwnersRowChangeEventHandler f29555_pcget_SaleSchedulesAndOwnersRowDeleting;
            
            public event f29555_pcget_SaleSchedulesAndOwnersRowChangeEventHandler f29555_pcget_SaleSchedulesAndOwnersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29555_pcget_SaleSchedulesAndOwnersRow(f29555_pcget_SaleSchedulesAndOwnersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_SaleSchedulesAndOwnersRow Addf29555_pcget_SaleSchedulesAndOwnersRow(int IsBaseSchedule, string ScheduleNumber, decimal AssessedValue, decimal TaxableValue, int ScheduleID) {
                f29555_pcget_SaleSchedulesAndOwnersRow rowf29555_pcget_SaleSchedulesAndOwnersRow = ((f29555_pcget_SaleSchedulesAndOwnersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IsBaseSchedule,
                        ScheduleNumber,
                        AssessedValue,
                        TaxableValue,
                        ScheduleID};
                rowf29555_pcget_SaleSchedulesAndOwnersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29555_pcget_SaleSchedulesAndOwnersRow);
                return rowf29555_pcget_SaleSchedulesAndOwnersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29555_pcget_SaleSchedulesAndOwnersDataTable cln = ((f29555_pcget_SaleSchedulesAndOwnersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29555_pcget_SaleSchedulesAndOwnersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIsBaseSchedule = base.Columns["IsBaseSchedule"];
                this.columnScheduleNumber = base.Columns["ScheduleNumber"];
                this.columnAssessedValue = base.Columns["AssessedValue"];
                this.columnTaxableValue = base.Columns["TaxableValue"];
                this.columnScheduleID = base.Columns["ScheduleID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIsBaseSchedule = new global::System.Data.DataColumn("IsBaseSchedule", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBaseSchedule);
                this.columnScheduleNumber = new global::System.Data.DataColumn("ScheduleNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleNumber);
                this.columnAssessedValue = new global::System.Data.DataColumn("AssessedValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessedValue);
                this.columnTaxableValue = new global::System.Data.DataColumn("TaxableValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxableValue);
                this.columnScheduleID = new global::System.Data.DataColumn("ScheduleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleID);
                this.columnIsBaseSchedule.ReadOnly = true;
                this.columnScheduleNumber.AllowDBNull = false;
                this.columnScheduleNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_SaleSchedulesAndOwnersRow Newf29555_pcget_SaleSchedulesAndOwnersRow() {
                return ((f29555_pcget_SaleSchedulesAndOwnersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29555_pcget_SaleSchedulesAndOwnersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29555_pcget_SaleSchedulesAndOwnersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29555_pcget_SaleSchedulesAndOwnersRowChanged != null)) {
                    this.f29555_pcget_SaleSchedulesAndOwnersRowChanged(this, new f29555_pcget_SaleSchedulesAndOwnersRowChangeEvent(((f29555_pcget_SaleSchedulesAndOwnersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29555_pcget_SaleSchedulesAndOwnersRowChanging != null)) {
                    this.f29555_pcget_SaleSchedulesAndOwnersRowChanging(this, new f29555_pcget_SaleSchedulesAndOwnersRowChangeEvent(((f29555_pcget_SaleSchedulesAndOwnersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29555_pcget_SaleSchedulesAndOwnersRowDeleted != null)) {
                    this.f29555_pcget_SaleSchedulesAndOwnersRowDeleted(this, new f29555_pcget_SaleSchedulesAndOwnersRowChangeEvent(((f29555_pcget_SaleSchedulesAndOwnersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29555_pcget_SaleSchedulesAndOwnersRowDeleting != null)) {
                    this.f29555_pcget_SaleSchedulesAndOwnersRowDeleting(this, new f29555_pcget_SaleSchedulesAndOwnersRowChangeEvent(((f29555_pcget_SaleSchedulesAndOwnersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29555_pcget_SaleSchedulesAndOwnersRow(f29555_pcget_SaleSchedulesAndOwnersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29555PersonalPropertySaleData ds = new F29555PersonalPropertySaleData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29555_pcget_SaleSchedulesAndOwnersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f29555_pcget_ScheduleSaleTrackingDataTable : global::System.Data.TypedTableBase<f29555_pcget_ScheduleSaleTrackingRow> {
            
            private global::System.Data.DataColumn columnDeedType;
            
            private global::System.Data.DataColumn columnSaleDate;
            
            private global::System.Data.DataColumn columnIsOwnerPushed;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_ScheduleSaleTrackingDataTable() {
                this.TableName = "f29555_pcget_ScheduleSaleTracking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29555_pcget_ScheduleSaleTrackingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f29555_pcget_ScheduleSaleTrackingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeedTypeColumn {
                get {
                    return this.columnDeedType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleDateColumn {
                get {
                    return this.columnSaleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOwnerPushedColumn {
                get {
                    return this.columnIsOwnerPushed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_ScheduleSaleTrackingRow this[int index] {
                get {
                    return ((f29555_pcget_ScheduleSaleTrackingRow)(this.Rows[index]));
                }
            }
            
            public event f29555_pcget_ScheduleSaleTrackingRowChangeEventHandler f29555_pcget_ScheduleSaleTrackingRowChanging;
            
            public event f29555_pcget_ScheduleSaleTrackingRowChangeEventHandler f29555_pcget_ScheduleSaleTrackingRowChanged;
            
            public event f29555_pcget_ScheduleSaleTrackingRowChangeEventHandler f29555_pcget_ScheduleSaleTrackingRowDeleting;
            
            public event f29555_pcget_ScheduleSaleTrackingRowChangeEventHandler f29555_pcget_ScheduleSaleTrackingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf29555_pcget_ScheduleSaleTrackingRow(f29555_pcget_ScheduleSaleTrackingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_ScheduleSaleTrackingRow Addf29555_pcget_ScheduleSaleTrackingRow(string DeedType, string SaleDate, bool IsOwnerPushed) {
                f29555_pcget_ScheduleSaleTrackingRow rowf29555_pcget_ScheduleSaleTrackingRow = ((f29555_pcget_ScheduleSaleTrackingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeedType,
                        SaleDate,
                        IsOwnerPushed};
                rowf29555_pcget_ScheduleSaleTrackingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf29555_pcget_ScheduleSaleTrackingRow);
                return rowf29555_pcget_ScheduleSaleTrackingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f29555_pcget_ScheduleSaleTrackingDataTable cln = ((f29555_pcget_ScheduleSaleTrackingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f29555_pcget_ScheduleSaleTrackingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeedType = base.Columns["DeedType"];
                this.columnSaleDate = base.Columns["SaleDate"];
                this.columnIsOwnerPushed = base.Columns["IsOwnerPushed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeedType = new global::System.Data.DataColumn("DeedType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeedType);
                this.columnSaleDate = new global::System.Data.DataColumn("SaleDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleDate);
                this.columnIsOwnerPushed = new global::System.Data.DataColumn("IsOwnerPushed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOwnerPushed);
                this.columnDeedType.MaxLength = 100;
                this.columnIsOwnerPushed.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_ScheduleSaleTrackingRow Newf29555_pcget_ScheduleSaleTrackingRow() {
                return ((f29555_pcget_ScheduleSaleTrackingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f29555_pcget_ScheduleSaleTrackingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f29555_pcget_ScheduleSaleTrackingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f29555_pcget_ScheduleSaleTrackingRowChanged != null)) {
                    this.f29555_pcget_ScheduleSaleTrackingRowChanged(this, new f29555_pcget_ScheduleSaleTrackingRowChangeEvent(((f29555_pcget_ScheduleSaleTrackingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f29555_pcget_ScheduleSaleTrackingRowChanging != null)) {
                    this.f29555_pcget_ScheduleSaleTrackingRowChanging(this, new f29555_pcget_ScheduleSaleTrackingRowChangeEvent(((f29555_pcget_ScheduleSaleTrackingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f29555_pcget_ScheduleSaleTrackingRowDeleted != null)) {
                    this.f29555_pcget_ScheduleSaleTrackingRowDeleted(this, new f29555_pcget_ScheduleSaleTrackingRowChangeEvent(((f29555_pcget_ScheduleSaleTrackingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f29555_pcget_ScheduleSaleTrackingRowDeleting != null)) {
                    this.f29555_pcget_ScheduleSaleTrackingRowDeleting(this, new f29555_pcget_ScheduleSaleTrackingRowChangeEvent(((f29555_pcget_ScheduleSaleTrackingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef29555_pcget_ScheduleSaleTrackingRow(f29555_pcget_ScheduleSaleTrackingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29555PersonalPropertySaleData ds = new F29555PersonalPropertySaleData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f29555_pcget_ScheduleSaleTrackingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29555_pcget_PSaleOwnersRow : global::System.Data.DataRow {
            
            private f29555_pcget_PSaleOwnersDataTable tablef29555_pcget_PSaleOwners;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29555_pcget_PSaleOwnersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29555_pcget_PSaleOwners = ((f29555_pcget_PSaleOwnersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    try {
                        return ((int)(this[this.tablef29555_pcget_PSaleOwners.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'f29555_pcget_PSaleOwners\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_PSaleOwners.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerName {
                get {
                    try {
                        return ((string)(this[this.tablef29555_pcget_PSaleOwners.OwnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerName\' in table \'f29555_pcget_PSaleOwners\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_PSaleOwners.OwnerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyer {
                get {
                    try {
                        return ((bool)(this[this.tablef29555_pcget_PSaleOwners.IsBuyerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsBuyer\' in table \'f29555_pcget_PSaleOwners\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_PSaleOwners.IsBuyerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerAddress {
                get {
                    try {
                        return ((string)(this[this.tablef29555_pcget_PSaleOwners.OwnerAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerAddress\' in table \'f29555_pcget_PSaleOwners\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_PSaleOwners.OwnerAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerLocation {
                get {
                    try {
                        return ((string)(this[this.tablef29555_pcget_PSaleOwners.OwnerLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerLocation\' in table \'f29555_pcget_PSaleOwners\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_PSaleOwners.OwnerLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tablef29555_pcget_PSaleOwners.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tablef29555_pcget_PSaleOwners.OwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerNameNull() {
                return this.IsNull(this.tablef29555_pcget_PSaleOwners.OwnerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerNameNull() {
                this[this.tablef29555_pcget_PSaleOwners.OwnerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsBuyerNull() {
                return this.IsNull(this.tablef29555_pcget_PSaleOwners.IsBuyerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsBuyerNull() {
                this[this.tablef29555_pcget_PSaleOwners.IsBuyerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerAddressNull() {
                return this.IsNull(this.tablef29555_pcget_PSaleOwners.OwnerAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerAddressNull() {
                this[this.tablef29555_pcget_PSaleOwners.OwnerAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerLocationNull() {
                return this.IsNull(this.tablef29555_pcget_PSaleOwners.OwnerLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerLocationNull() {
                this[this.tablef29555_pcget_PSaleOwners.OwnerLocationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29555_pclst_DeedTypesRow : global::System.Data.DataRow {
            
            private f29555_pclst_DeedTypesDataTable tablef29555_pclst_DeedTypes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29555_pclst_DeedTypesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29555_pclst_DeedTypes = ((f29555_pclst_DeedTypesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeedTypeID {
                get {
                    try {
                        return ((int)(this[this.tablef29555_pclst_DeedTypes.DeedTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeedTypeID\' in table \'f29555_pclst_DeedTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pclst_DeedTypes.DeedTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeedType {
                get {
                    try {
                        return ((string)(this[this.tablef29555_pclst_DeedTypes.DeedTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeedType\' in table \'f29555_pclst_DeedTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pclst_DeedTypes.DeedTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeedTypeIDNull() {
                return this.IsNull(this.tablef29555_pclst_DeedTypes.DeedTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeedTypeIDNull() {
                this[this.tablef29555_pclst_DeedTypes.DeedTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeedTypeNull() {
                return this.IsNull(this.tablef29555_pclst_DeedTypes.DeedTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeedTypeNull() {
                this[this.tablef29555_pclst_DeedTypes.DeedTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29555_pcget_SaleSchedulesAndOwnersRow : global::System.Data.DataRow {
            
            private f29555_pcget_SaleSchedulesAndOwnersDataTable tablef29555_pcget_SaleSchedulesAndOwners;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29555_pcget_SaleSchedulesAndOwnersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29555_pcget_SaleSchedulesAndOwners = ((f29555_pcget_SaleSchedulesAndOwnersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsBaseSchedule {
                get {
                    try {
                        return ((int)(this[this.tablef29555_pcget_SaleSchedulesAndOwners.IsBaseScheduleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsBaseSchedule\' in table \'f29555_pcget_SaleSchedulesAndOwne" +
                                "rs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_SaleSchedulesAndOwners.IsBaseScheduleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduleNumber {
                get {
                    return ((string)(this[this.tablef29555_pcget_SaleSchedulesAndOwners.ScheduleNumberColumn]));
                }
                set {
                    this[this.tablef29555_pcget_SaleSchedulesAndOwners.ScheduleNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AssessedValue {
                get {
                    try {
                        return ((decimal)(this[this.tablef29555_pcget_SaleSchedulesAndOwners.AssessedValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessedValue\' in table \'f29555_pcget_SaleSchedulesAndOwner" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_SaleSchedulesAndOwners.AssessedValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxableValue {
                get {
                    try {
                        return ((decimal)(this[this.tablef29555_pcget_SaleSchedulesAndOwners.TaxableValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxableValue\' in table \'f29555_pcget_SaleSchedulesAndOwners" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_SaleSchedulesAndOwners.TaxableValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ScheduleID {
                get {
                    try {
                        return ((int)(this[this.tablef29555_pcget_SaleSchedulesAndOwners.ScheduleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduleID\' in table \'f29555_pcget_SaleSchedulesAndOwners\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_SaleSchedulesAndOwners.ScheduleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsBaseScheduleNull() {
                return this.IsNull(this.tablef29555_pcget_SaleSchedulesAndOwners.IsBaseScheduleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsBaseScheduleNull() {
                this[this.tablef29555_pcget_SaleSchedulesAndOwners.IsBaseScheduleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessedValueNull() {
                return this.IsNull(this.tablef29555_pcget_SaleSchedulesAndOwners.AssessedValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessedValueNull() {
                this[this.tablef29555_pcget_SaleSchedulesAndOwners.AssessedValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxableValueNull() {
                return this.IsNull(this.tablef29555_pcget_SaleSchedulesAndOwners.TaxableValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxableValueNull() {
                this[this.tablef29555_pcget_SaleSchedulesAndOwners.TaxableValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduleIDNull() {
                return this.IsNull(this.tablef29555_pcget_SaleSchedulesAndOwners.ScheduleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduleIDNull() {
                this[this.tablef29555_pcget_SaleSchedulesAndOwners.ScheduleIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f29555_pcget_ScheduleSaleTrackingRow : global::System.Data.DataRow {
            
            private f29555_pcget_ScheduleSaleTrackingDataTable tablef29555_pcget_ScheduleSaleTracking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f29555_pcget_ScheduleSaleTrackingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef29555_pcget_ScheduleSaleTracking = ((f29555_pcget_ScheduleSaleTrackingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeedType {
                get {
                    try {
                        return ((string)(this[this.tablef29555_pcget_ScheduleSaleTracking.DeedTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeedType\' in table \'f29555_pcget_ScheduleSaleTracking\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_ScheduleSaleTracking.DeedTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaleDate {
                get {
                    try {
                        return ((string)(this[this.tablef29555_pcget_ScheduleSaleTracking.SaleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleDate\' in table \'f29555_pcget_ScheduleSaleTracking\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_ScheduleSaleTracking.SaleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerPushed {
                get {
                    try {
                        return ((bool)(this[this.tablef29555_pcget_ScheduleSaleTracking.IsOwnerPushedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOwnerPushed\' in table \'f29555_pcget_ScheduleSaleTracking\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef29555_pcget_ScheduleSaleTracking.IsOwnerPushedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeedTypeNull() {
                return this.IsNull(this.tablef29555_pcget_ScheduleSaleTracking.DeedTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeedTypeNull() {
                this[this.tablef29555_pcget_ScheduleSaleTracking.DeedTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleDateNull() {
                return this.IsNull(this.tablef29555_pcget_ScheduleSaleTracking.SaleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleDateNull() {
                this[this.tablef29555_pcget_ScheduleSaleTracking.SaleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOwnerPushedNull() {
                return this.IsNull(this.tablef29555_pcget_ScheduleSaleTracking.IsOwnerPushedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOwnerPushedNull() {
                this[this.tablef29555_pcget_ScheduleSaleTracking.IsOwnerPushedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29555_pcget_PSaleOwnersRowChangeEvent : global::System.EventArgs {
            
            private f29555_pcget_PSaleOwnersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_PSaleOwnersRowChangeEvent(f29555_pcget_PSaleOwnersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_PSaleOwnersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29555_pclst_DeedTypesRowChangeEvent : global::System.EventArgs {
            
            private f29555_pclst_DeedTypesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pclst_DeedTypesRowChangeEvent(f29555_pclst_DeedTypesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pclst_DeedTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29555_pcget_SaleSchedulesAndOwnersRowChangeEvent : global::System.EventArgs {
            
            private f29555_pcget_SaleSchedulesAndOwnersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_SaleSchedulesAndOwnersRowChangeEvent(f29555_pcget_SaleSchedulesAndOwnersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_SaleSchedulesAndOwnersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f29555_pcget_ScheduleSaleTrackingRowChangeEvent : global::System.EventArgs {
            
            private f29555_pcget_ScheduleSaleTrackingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_ScheduleSaleTrackingRowChangeEvent(f29555_pcget_ScheduleSaleTrackingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f29555_pcget_ScheduleSaleTrackingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591