//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F3230CheckInData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F3230CheckInData : global::System.Data.DataSet {
        
        private tTS_CommentDataTable tabletTS_Comment;
        
        private EstimateComponentGroupDataTable tableEstimateComponentGroup;
        
        private EstimateDataTable tableEstimate;
        
        private tTS_FileDataTable tabletTS_File;
        
        private tAA_LandValuesDataTable tabletAA_LandValues;
        
        private tAA_LandDataTable tabletAA_Land;
        
        private tAA_MiscDataTable tabletAA_Misc;
        
        private tAA_MSC_EstimateDataTable tabletAA_MSC_Estimate;
        
        private tAA_NBHDDataTable tabletAA_NBHD;
        
        private tAA_ObjectDataTable tabletAA_Object;
        
        private tAA_ParcelValueDataTable tabletAA_ParcelValue;
        
        private tAA_ParcelDataTable tabletAA_Parcel;
        
        private tAA_VSTerraGonDataTable tabletAA_VSTerraGon;
        
        private tAA_MA_Type2DataTable tabletAA_MA_Type2;
        
        private tAA_MA_Type6DataTable tabletAA_MA_Type6;
        
        private tAA_DeprItemDataTable tabletAA_DeprItem;
        
        private tAA_Misc_CatalogDataTable tabletAA_Misc_Catalog;
        
        private tAA_DeprDataTable tabletAA_Depr;
        
        private tAA_ApexPolygonDataTable tabletAA_ApexPolygon;
        
        private tAA_LandType1DataTable tabletAA_LandType1;
        
        private tTS_QueryViewLayoutDataTable tabletTS_QueryViewLayout;
        
        private tTS_Exemption_Type1DataTable tabletTS_Exemption_Type1;
        
        private tAA_LandInfluenceItemDataTable tabletAA_LandInfluenceItem;
        
        private tAA_MA_Type9DataTable tabletAA_MA_Type9;
        
        private tAA_MAD_Type9DataTable tabletAA_MAD_Type9;
        
        private tAA_MAD_Type2DataTable tabletAA_MAD_Type2;
        
        private tAA_MAD_Type6DataTable tabletAA_MAD_Type6;
        
        private tAA_MA_Type1DataTable tabletAA_MA_Type1;
        
        private tAA_MAD_Type10DataTable tabletAA_MAD_Type10;
        
        private tAA_MA_Type10DataTable tabletAA_MA_Type10;
        
        private tAA_LandUnitDataTable tabletAA_LandUnit;
        
        private tTS_CommentTemplateDataTable tabletTS_CommentTemplate;
        
        private tAA_MA_Type11DataTable tabletAA_MA_Type11;
        
        private tAA_MA_Type12DataTable tabletAA_MA_Type12;
        
        private tAA_MA_Type3DataTable tabletAA_MA_Type3;
        
        private tAA_MA_Type4DataTable tabletAA_MA_Type4;
        
        private tAA_MA_Type7DataTable tabletAA_MA_Type7;
        
        private tAA_MA_Type8DataTable tabletAA_MA_Type8;
        
        private tAA_MAD_Type11DataTable tabletAA_MAD_Type11;
        
        private tAA_MAD_Type12DataTable tabletAA_MAD_Type12;
        
        private tAA_MAD_Type3DataTable tabletAA_MAD_Type3;
        
        private tAA_MAD_Type4DataTable tabletAA_MAD_Type4;
        
        private tAA_MAD_Type7DataTable tabletAA_MAD_Type7;
        
        private tAA_MAD_Type8DataTable tabletAA_MAD_Type8;
        
        private tTS_TableXMLDataTable tabletTS_TableXML;
        
        private EstimateComponentDataTable tableEstimateComponent;
        
        private tAA_LandCodeDataTable tabletAA_LandCode;
        
        private ParcelIDsDataTable tableParcelIDs;
        
        private InsertXmlDataTable tableInsertXml;
        
        private ChecoutDetailsXMLDataTable tableChecoutDetailsXML;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F3230CheckInData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F3230CheckInData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tTS_Comment"] != null)) {
                    base.Tables.Add(new tTS_CommentDataTable(ds.Tables["tTS_Comment"]));
                }
                if ((ds.Tables["EstimateComponentGroup"] != null)) {
                    base.Tables.Add(new EstimateComponentGroupDataTable(ds.Tables["EstimateComponentGroup"]));
                }
                if ((ds.Tables["Estimate"] != null)) {
                    base.Tables.Add(new EstimateDataTable(ds.Tables["Estimate"]));
                }
                if ((ds.Tables["tTS_File"] != null)) {
                    base.Tables.Add(new tTS_FileDataTable(ds.Tables["tTS_File"]));
                }
                if ((ds.Tables["tAA_LandValues"] != null)) {
                    base.Tables.Add(new tAA_LandValuesDataTable(ds.Tables["tAA_LandValues"]));
                }
                if ((ds.Tables["tAA_Land"] != null)) {
                    base.Tables.Add(new tAA_LandDataTable(ds.Tables["tAA_Land"]));
                }
                if ((ds.Tables["tAA_Misc"] != null)) {
                    base.Tables.Add(new tAA_MiscDataTable(ds.Tables["tAA_Misc"]));
                }
                if ((ds.Tables["tAA_MSC_Estimate"] != null)) {
                    base.Tables.Add(new tAA_MSC_EstimateDataTable(ds.Tables["tAA_MSC_Estimate"]));
                }
                if ((ds.Tables["tAA_NBHD"] != null)) {
                    base.Tables.Add(new tAA_NBHDDataTable(ds.Tables["tAA_NBHD"]));
                }
                if ((ds.Tables["tAA_Object"] != null)) {
                    base.Tables.Add(new tAA_ObjectDataTable(ds.Tables["tAA_Object"]));
                }
                if ((ds.Tables["tAA_ParcelValue"] != null)) {
                    base.Tables.Add(new tAA_ParcelValueDataTable(ds.Tables["tAA_ParcelValue"]));
                }
                if ((ds.Tables["tAA_Parcel"] != null)) {
                    base.Tables.Add(new tAA_ParcelDataTable(ds.Tables["tAA_Parcel"]));
                }
                if ((ds.Tables["tAA_VSTerraGon"] != null)) {
                    base.Tables.Add(new tAA_VSTerraGonDataTable(ds.Tables["tAA_VSTerraGon"]));
                }
                if ((ds.Tables["tAA_MA_Type2"] != null)) {
                    base.Tables.Add(new tAA_MA_Type2DataTable(ds.Tables["tAA_MA_Type2"]));
                }
                if ((ds.Tables["tAA_MA_Type6"] != null)) {
                    base.Tables.Add(new tAA_MA_Type6DataTable(ds.Tables["tAA_MA_Type6"]));
                }
                if ((ds.Tables["tAA_DeprItem"] != null)) {
                    base.Tables.Add(new tAA_DeprItemDataTable(ds.Tables["tAA_DeprItem"]));
                }
                if ((ds.Tables["tAA_Misc_Catalog"] != null)) {
                    base.Tables.Add(new tAA_Misc_CatalogDataTable(ds.Tables["tAA_Misc_Catalog"]));
                }
                if ((ds.Tables["tAA_Depr"] != null)) {
                    base.Tables.Add(new tAA_DeprDataTable(ds.Tables["tAA_Depr"]));
                }
                if ((ds.Tables["tAA_ApexPolygon"] != null)) {
                    base.Tables.Add(new tAA_ApexPolygonDataTable(ds.Tables["tAA_ApexPolygon"]));
                }
                if ((ds.Tables["tAA_LandType1"] != null)) {
                    base.Tables.Add(new tAA_LandType1DataTable(ds.Tables["tAA_LandType1"]));
                }
                if ((ds.Tables["tTS_QueryViewLayout"] != null)) {
                    base.Tables.Add(new tTS_QueryViewLayoutDataTable(ds.Tables["tTS_QueryViewLayout"]));
                }
                if ((ds.Tables["tTS_Exemption_Type1"] != null)) {
                    base.Tables.Add(new tTS_Exemption_Type1DataTable(ds.Tables["tTS_Exemption_Type1"]));
                }
                if ((ds.Tables["tAA_LandInfluenceItem"] != null)) {
                    base.Tables.Add(new tAA_LandInfluenceItemDataTable(ds.Tables["tAA_LandInfluenceItem"]));
                }
                if ((ds.Tables["tAA_MA_Type9"] != null)) {
                    base.Tables.Add(new tAA_MA_Type9DataTable(ds.Tables["tAA_MA_Type9"]));
                }
                if ((ds.Tables["tAA_MAD_Type9"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type9DataTable(ds.Tables["tAA_MAD_Type9"]));
                }
                if ((ds.Tables["tAA_MAD_Type2"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type2DataTable(ds.Tables["tAA_MAD_Type2"]));
                }
                if ((ds.Tables["tAA_MAD_Type6"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type6DataTable(ds.Tables["tAA_MAD_Type6"]));
                }
                if ((ds.Tables["tAA_MA_Type1"] != null)) {
                    base.Tables.Add(new tAA_MA_Type1DataTable(ds.Tables["tAA_MA_Type1"]));
                }
                if ((ds.Tables["tAA_MAD_Type10"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type10DataTable(ds.Tables["tAA_MAD_Type10"]));
                }
                if ((ds.Tables["tAA_MA_Type10"] != null)) {
                    base.Tables.Add(new tAA_MA_Type10DataTable(ds.Tables["tAA_MA_Type10"]));
                }
                if ((ds.Tables["tAA_LandUnit"] != null)) {
                    base.Tables.Add(new tAA_LandUnitDataTable(ds.Tables["tAA_LandUnit"]));
                }
                if ((ds.Tables["tTS_CommentTemplate"] != null)) {
                    base.Tables.Add(new tTS_CommentTemplateDataTable(ds.Tables["tTS_CommentTemplate"]));
                }
                if ((ds.Tables["tAA_MA_Type11"] != null)) {
                    base.Tables.Add(new tAA_MA_Type11DataTable(ds.Tables["tAA_MA_Type11"]));
                }
                if ((ds.Tables["tAA_MA_Type12"] != null)) {
                    base.Tables.Add(new tAA_MA_Type12DataTable(ds.Tables["tAA_MA_Type12"]));
                }
                if ((ds.Tables["tAA_MA_Type3"] != null)) {
                    base.Tables.Add(new tAA_MA_Type3DataTable(ds.Tables["tAA_MA_Type3"]));
                }
                if ((ds.Tables["tAA_MA_Type4"] != null)) {
                    base.Tables.Add(new tAA_MA_Type4DataTable(ds.Tables["tAA_MA_Type4"]));
                }
                if ((ds.Tables["tAA_MA_Type7"] != null)) {
                    base.Tables.Add(new tAA_MA_Type7DataTable(ds.Tables["tAA_MA_Type7"]));
                }
                if ((ds.Tables["tAA_MA_Type8"] != null)) {
                    base.Tables.Add(new tAA_MA_Type8DataTable(ds.Tables["tAA_MA_Type8"]));
                }
                if ((ds.Tables["tAA_MAD_Type11"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type11DataTable(ds.Tables["tAA_MAD_Type11"]));
                }
                if ((ds.Tables["tAA_MAD_Type12"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type12DataTable(ds.Tables["tAA_MAD_Type12"]));
                }
                if ((ds.Tables["tAA_MAD_Type3"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type3DataTable(ds.Tables["tAA_MAD_Type3"]));
                }
                if ((ds.Tables["tAA_MAD_Type4"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type4DataTable(ds.Tables["tAA_MAD_Type4"]));
                }
                if ((ds.Tables["tAA_MAD_Type7"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type7DataTable(ds.Tables["tAA_MAD_Type7"]));
                }
                if ((ds.Tables["tAA_MAD_Type8"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type8DataTable(ds.Tables["tAA_MAD_Type8"]));
                }
                if ((ds.Tables["tTS_TableXML"] != null)) {
                    base.Tables.Add(new tTS_TableXMLDataTable(ds.Tables["tTS_TableXML"]));
                }
                if ((ds.Tables["EstimateComponent"] != null)) {
                    base.Tables.Add(new EstimateComponentDataTable(ds.Tables["EstimateComponent"]));
                }
                if ((ds.Tables["tAA_LandCode"] != null)) {
                    base.Tables.Add(new tAA_LandCodeDataTable(ds.Tables["tAA_LandCode"]));
                }
                if ((ds.Tables["ParcelIDs"] != null)) {
                    base.Tables.Add(new ParcelIDsDataTable(ds.Tables["ParcelIDs"]));
                }
                if ((ds.Tables["InsertXml"] != null)) {
                    base.Tables.Add(new InsertXmlDataTable(ds.Tables["InsertXml"]));
                }
                if ((ds.Tables["ChecoutDetailsXML"] != null)) {
                    base.Tables.Add(new ChecoutDetailsXMLDataTable(ds.Tables["ChecoutDetailsXML"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_CommentDataTable tTS_Comment {
            get {
                return this.tabletTS_Comment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EstimateComponentGroupDataTable EstimateComponentGroup {
            get {
                return this.tableEstimateComponentGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EstimateDataTable Estimate {
            get {
                return this.tableEstimate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_FileDataTable tTS_File {
            get {
                return this.tabletTS_File;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_LandValuesDataTable tAA_LandValues {
            get {
                return this.tabletAA_LandValues;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_LandDataTable tAA_Land {
            get {
                return this.tabletAA_Land;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MiscDataTable tAA_Misc {
            get {
                return this.tabletAA_Misc;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MSC_EstimateDataTable tAA_MSC_Estimate {
            get {
                return this.tabletAA_MSC_Estimate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_NBHDDataTable tAA_NBHD {
            get {
                return this.tabletAA_NBHD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_ObjectDataTable tAA_Object {
            get {
                return this.tabletAA_Object;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_ParcelValueDataTable tAA_ParcelValue {
            get {
                return this.tabletAA_ParcelValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_ParcelDataTable tAA_Parcel {
            get {
                return this.tabletAA_Parcel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_VSTerraGonDataTable tAA_VSTerraGon {
            get {
                return this.tabletAA_VSTerraGon;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type2DataTable tAA_MA_Type2 {
            get {
                return this.tabletAA_MA_Type2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type6DataTable tAA_MA_Type6 {
            get {
                return this.tabletAA_MA_Type6;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_DeprItemDataTable tAA_DeprItem {
            get {
                return this.tabletAA_DeprItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_Misc_CatalogDataTable tAA_Misc_Catalog {
            get {
                return this.tabletAA_Misc_Catalog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_DeprDataTable tAA_Depr {
            get {
                return this.tabletAA_Depr;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_ApexPolygonDataTable tAA_ApexPolygon {
            get {
                return this.tabletAA_ApexPolygon;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_LandType1DataTable tAA_LandType1 {
            get {
                return this.tabletAA_LandType1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_QueryViewLayoutDataTable tTS_QueryViewLayout {
            get {
                return this.tabletTS_QueryViewLayout;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_Exemption_Type1DataTable tTS_Exemption_Type1 {
            get {
                return this.tabletTS_Exemption_Type1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_LandInfluenceItemDataTable tAA_LandInfluenceItem {
            get {
                return this.tabletAA_LandInfluenceItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type9DataTable tAA_MA_Type9 {
            get {
                return this.tabletAA_MA_Type9;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MAD_Type9DataTable tAA_MAD_Type9 {
            get {
                return this.tabletAA_MAD_Type9;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MAD_Type2DataTable tAA_MAD_Type2 {
            get {
                return this.tabletAA_MAD_Type2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MAD_Type6DataTable tAA_MAD_Type6 {
            get {
                return this.tabletAA_MAD_Type6;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type1DataTable tAA_MA_Type1 {
            get {
                return this.tabletAA_MA_Type1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MAD_Type10DataTable tAA_MAD_Type10 {
            get {
                return this.tabletAA_MAD_Type10;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type10DataTable tAA_MA_Type10 {
            get {
                return this.tabletAA_MA_Type10;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_LandUnitDataTable tAA_LandUnit {
            get {
                return this.tabletAA_LandUnit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_CommentTemplateDataTable tTS_CommentTemplate {
            get {
                return this.tabletTS_CommentTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type11DataTable tAA_MA_Type11 {
            get {
                return this.tabletAA_MA_Type11;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type12DataTable tAA_MA_Type12 {
            get {
                return this.tabletAA_MA_Type12;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type3DataTable tAA_MA_Type3 {
            get {
                return this.tabletAA_MA_Type3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type4DataTable tAA_MA_Type4 {
            get {
                return this.tabletAA_MA_Type4;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type7DataTable tAA_MA_Type7 {
            get {
                return this.tabletAA_MA_Type7;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MA_Type8DataTable tAA_MA_Type8 {
            get {
                return this.tabletAA_MA_Type8;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MAD_Type11DataTable tAA_MAD_Type11 {
            get {
                return this.tabletAA_MAD_Type11;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MAD_Type12DataTable tAA_MAD_Type12 {
            get {
                return this.tabletAA_MAD_Type12;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MAD_Type3DataTable tAA_MAD_Type3 {
            get {
                return this.tabletAA_MAD_Type3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MAD_Type4DataTable tAA_MAD_Type4 {
            get {
                return this.tabletAA_MAD_Type4;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MAD_Type7DataTable tAA_MAD_Type7 {
            get {
                return this.tabletAA_MAD_Type7;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MAD_Type8DataTable tAA_MAD_Type8 {
            get {
                return this.tabletAA_MAD_Type8;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_TableXMLDataTable tTS_TableXML {
            get {
                return this.tabletTS_TableXML;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EstimateComponentDataTable EstimateComponent {
            get {
                return this.tableEstimateComponent;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_LandCodeDataTable tAA_LandCode {
            get {
                return this.tabletAA_LandCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ParcelIDsDataTable ParcelIDs {
            get {
                return this.tableParcelIDs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InsertXmlDataTable InsertXml {
            get {
                return this.tableInsertXml;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChecoutDetailsXMLDataTable ChecoutDetailsXML {
            get {
                return this.tableChecoutDetailsXML;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F3230CheckInData cln = ((F3230CheckInData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tTS_Comment"] != null)) {
                    base.Tables.Add(new tTS_CommentDataTable(ds.Tables["tTS_Comment"]));
                }
                if ((ds.Tables["EstimateComponentGroup"] != null)) {
                    base.Tables.Add(new EstimateComponentGroupDataTable(ds.Tables["EstimateComponentGroup"]));
                }
                if ((ds.Tables["Estimate"] != null)) {
                    base.Tables.Add(new EstimateDataTable(ds.Tables["Estimate"]));
                }
                if ((ds.Tables["tTS_File"] != null)) {
                    base.Tables.Add(new tTS_FileDataTable(ds.Tables["tTS_File"]));
                }
                if ((ds.Tables["tAA_LandValues"] != null)) {
                    base.Tables.Add(new tAA_LandValuesDataTable(ds.Tables["tAA_LandValues"]));
                }
                if ((ds.Tables["tAA_Land"] != null)) {
                    base.Tables.Add(new tAA_LandDataTable(ds.Tables["tAA_Land"]));
                }
                if ((ds.Tables["tAA_Misc"] != null)) {
                    base.Tables.Add(new tAA_MiscDataTable(ds.Tables["tAA_Misc"]));
                }
                if ((ds.Tables["tAA_MSC_Estimate"] != null)) {
                    base.Tables.Add(new tAA_MSC_EstimateDataTable(ds.Tables["tAA_MSC_Estimate"]));
                }
                if ((ds.Tables["tAA_NBHD"] != null)) {
                    base.Tables.Add(new tAA_NBHDDataTable(ds.Tables["tAA_NBHD"]));
                }
                if ((ds.Tables["tAA_Object"] != null)) {
                    base.Tables.Add(new tAA_ObjectDataTable(ds.Tables["tAA_Object"]));
                }
                if ((ds.Tables["tAA_ParcelValue"] != null)) {
                    base.Tables.Add(new tAA_ParcelValueDataTable(ds.Tables["tAA_ParcelValue"]));
                }
                if ((ds.Tables["tAA_Parcel"] != null)) {
                    base.Tables.Add(new tAA_ParcelDataTable(ds.Tables["tAA_Parcel"]));
                }
                if ((ds.Tables["tAA_VSTerraGon"] != null)) {
                    base.Tables.Add(new tAA_VSTerraGonDataTable(ds.Tables["tAA_VSTerraGon"]));
                }
                if ((ds.Tables["tAA_MA_Type2"] != null)) {
                    base.Tables.Add(new tAA_MA_Type2DataTable(ds.Tables["tAA_MA_Type2"]));
                }
                if ((ds.Tables["tAA_MA_Type6"] != null)) {
                    base.Tables.Add(new tAA_MA_Type6DataTable(ds.Tables["tAA_MA_Type6"]));
                }
                if ((ds.Tables["tAA_DeprItem"] != null)) {
                    base.Tables.Add(new tAA_DeprItemDataTable(ds.Tables["tAA_DeprItem"]));
                }
                if ((ds.Tables["tAA_Misc_Catalog"] != null)) {
                    base.Tables.Add(new tAA_Misc_CatalogDataTable(ds.Tables["tAA_Misc_Catalog"]));
                }
                if ((ds.Tables["tAA_Depr"] != null)) {
                    base.Tables.Add(new tAA_DeprDataTable(ds.Tables["tAA_Depr"]));
                }
                if ((ds.Tables["tAA_ApexPolygon"] != null)) {
                    base.Tables.Add(new tAA_ApexPolygonDataTable(ds.Tables["tAA_ApexPolygon"]));
                }
                if ((ds.Tables["tAA_LandType1"] != null)) {
                    base.Tables.Add(new tAA_LandType1DataTable(ds.Tables["tAA_LandType1"]));
                }
                if ((ds.Tables["tTS_QueryViewLayout"] != null)) {
                    base.Tables.Add(new tTS_QueryViewLayoutDataTable(ds.Tables["tTS_QueryViewLayout"]));
                }
                if ((ds.Tables["tTS_Exemption_Type1"] != null)) {
                    base.Tables.Add(new tTS_Exemption_Type1DataTable(ds.Tables["tTS_Exemption_Type1"]));
                }
                if ((ds.Tables["tAA_LandInfluenceItem"] != null)) {
                    base.Tables.Add(new tAA_LandInfluenceItemDataTable(ds.Tables["tAA_LandInfluenceItem"]));
                }
                if ((ds.Tables["tAA_MA_Type9"] != null)) {
                    base.Tables.Add(new tAA_MA_Type9DataTable(ds.Tables["tAA_MA_Type9"]));
                }
                if ((ds.Tables["tAA_MAD_Type9"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type9DataTable(ds.Tables["tAA_MAD_Type9"]));
                }
                if ((ds.Tables["tAA_MAD_Type2"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type2DataTable(ds.Tables["tAA_MAD_Type2"]));
                }
                if ((ds.Tables["tAA_MAD_Type6"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type6DataTable(ds.Tables["tAA_MAD_Type6"]));
                }
                if ((ds.Tables["tAA_MA_Type1"] != null)) {
                    base.Tables.Add(new tAA_MA_Type1DataTable(ds.Tables["tAA_MA_Type1"]));
                }
                if ((ds.Tables["tAA_MAD_Type10"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type10DataTable(ds.Tables["tAA_MAD_Type10"]));
                }
                if ((ds.Tables["tAA_MA_Type10"] != null)) {
                    base.Tables.Add(new tAA_MA_Type10DataTable(ds.Tables["tAA_MA_Type10"]));
                }
                if ((ds.Tables["tAA_LandUnit"] != null)) {
                    base.Tables.Add(new tAA_LandUnitDataTable(ds.Tables["tAA_LandUnit"]));
                }
                if ((ds.Tables["tTS_CommentTemplate"] != null)) {
                    base.Tables.Add(new tTS_CommentTemplateDataTable(ds.Tables["tTS_CommentTemplate"]));
                }
                if ((ds.Tables["tAA_MA_Type11"] != null)) {
                    base.Tables.Add(new tAA_MA_Type11DataTable(ds.Tables["tAA_MA_Type11"]));
                }
                if ((ds.Tables["tAA_MA_Type12"] != null)) {
                    base.Tables.Add(new tAA_MA_Type12DataTable(ds.Tables["tAA_MA_Type12"]));
                }
                if ((ds.Tables["tAA_MA_Type3"] != null)) {
                    base.Tables.Add(new tAA_MA_Type3DataTable(ds.Tables["tAA_MA_Type3"]));
                }
                if ((ds.Tables["tAA_MA_Type4"] != null)) {
                    base.Tables.Add(new tAA_MA_Type4DataTable(ds.Tables["tAA_MA_Type4"]));
                }
                if ((ds.Tables["tAA_MA_Type7"] != null)) {
                    base.Tables.Add(new tAA_MA_Type7DataTable(ds.Tables["tAA_MA_Type7"]));
                }
                if ((ds.Tables["tAA_MA_Type8"] != null)) {
                    base.Tables.Add(new tAA_MA_Type8DataTable(ds.Tables["tAA_MA_Type8"]));
                }
                if ((ds.Tables["tAA_MAD_Type11"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type11DataTable(ds.Tables["tAA_MAD_Type11"]));
                }
                if ((ds.Tables["tAA_MAD_Type12"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type12DataTable(ds.Tables["tAA_MAD_Type12"]));
                }
                if ((ds.Tables["tAA_MAD_Type3"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type3DataTable(ds.Tables["tAA_MAD_Type3"]));
                }
                if ((ds.Tables["tAA_MAD_Type4"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type4DataTable(ds.Tables["tAA_MAD_Type4"]));
                }
                if ((ds.Tables["tAA_MAD_Type7"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type7DataTable(ds.Tables["tAA_MAD_Type7"]));
                }
                if ((ds.Tables["tAA_MAD_Type8"] != null)) {
                    base.Tables.Add(new tAA_MAD_Type8DataTable(ds.Tables["tAA_MAD_Type8"]));
                }
                if ((ds.Tables["tTS_TableXML"] != null)) {
                    base.Tables.Add(new tTS_TableXMLDataTable(ds.Tables["tTS_TableXML"]));
                }
                if ((ds.Tables["EstimateComponent"] != null)) {
                    base.Tables.Add(new EstimateComponentDataTable(ds.Tables["EstimateComponent"]));
                }
                if ((ds.Tables["tAA_LandCode"] != null)) {
                    base.Tables.Add(new tAA_LandCodeDataTable(ds.Tables["tAA_LandCode"]));
                }
                if ((ds.Tables["ParcelIDs"] != null)) {
                    base.Tables.Add(new ParcelIDsDataTable(ds.Tables["ParcelIDs"]));
                }
                if ((ds.Tables["InsertXml"] != null)) {
                    base.Tables.Add(new InsertXmlDataTable(ds.Tables["InsertXml"]));
                }
                if ((ds.Tables["ChecoutDetailsXML"] != null)) {
                    base.Tables.Add(new ChecoutDetailsXMLDataTable(ds.Tables["ChecoutDetailsXML"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletTS_Comment = ((tTS_CommentDataTable)(base.Tables["tTS_Comment"]));
            if ((initTable == true)) {
                if ((this.tabletTS_Comment != null)) {
                    this.tabletTS_Comment.InitVars();
                }
            }
            this.tableEstimateComponentGroup = ((EstimateComponentGroupDataTable)(base.Tables["EstimateComponentGroup"]));
            if ((initTable == true)) {
                if ((this.tableEstimateComponentGroup != null)) {
                    this.tableEstimateComponentGroup.InitVars();
                }
            }
            this.tableEstimate = ((EstimateDataTable)(base.Tables["Estimate"]));
            if ((initTable == true)) {
                if ((this.tableEstimate != null)) {
                    this.tableEstimate.InitVars();
                }
            }
            this.tabletTS_File = ((tTS_FileDataTable)(base.Tables["tTS_File"]));
            if ((initTable == true)) {
                if ((this.tabletTS_File != null)) {
                    this.tabletTS_File.InitVars();
                }
            }
            this.tabletAA_LandValues = ((tAA_LandValuesDataTable)(base.Tables["tAA_LandValues"]));
            if ((initTable == true)) {
                if ((this.tabletAA_LandValues != null)) {
                    this.tabletAA_LandValues.InitVars();
                }
            }
            this.tabletAA_Land = ((tAA_LandDataTable)(base.Tables["tAA_Land"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Land != null)) {
                    this.tabletAA_Land.InitVars();
                }
            }
            this.tabletAA_Misc = ((tAA_MiscDataTable)(base.Tables["tAA_Misc"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Misc != null)) {
                    this.tabletAA_Misc.InitVars();
                }
            }
            this.tabletAA_MSC_Estimate = ((tAA_MSC_EstimateDataTable)(base.Tables["tAA_MSC_Estimate"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MSC_Estimate != null)) {
                    this.tabletAA_MSC_Estimate.InitVars();
                }
            }
            this.tabletAA_NBHD = ((tAA_NBHDDataTable)(base.Tables["tAA_NBHD"]));
            if ((initTable == true)) {
                if ((this.tabletAA_NBHD != null)) {
                    this.tabletAA_NBHD.InitVars();
                }
            }
            this.tabletAA_Object = ((tAA_ObjectDataTable)(base.Tables["tAA_Object"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Object != null)) {
                    this.tabletAA_Object.InitVars();
                }
            }
            this.tabletAA_ParcelValue = ((tAA_ParcelValueDataTable)(base.Tables["tAA_ParcelValue"]));
            if ((initTable == true)) {
                if ((this.tabletAA_ParcelValue != null)) {
                    this.tabletAA_ParcelValue.InitVars();
                }
            }
            this.tabletAA_Parcel = ((tAA_ParcelDataTable)(base.Tables["tAA_Parcel"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Parcel != null)) {
                    this.tabletAA_Parcel.InitVars();
                }
            }
            this.tabletAA_VSTerraGon = ((tAA_VSTerraGonDataTable)(base.Tables["tAA_VSTerraGon"]));
            if ((initTable == true)) {
                if ((this.tabletAA_VSTerraGon != null)) {
                    this.tabletAA_VSTerraGon.InitVars();
                }
            }
            this.tabletAA_MA_Type2 = ((tAA_MA_Type2DataTable)(base.Tables["tAA_MA_Type2"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type2 != null)) {
                    this.tabletAA_MA_Type2.InitVars();
                }
            }
            this.tabletAA_MA_Type6 = ((tAA_MA_Type6DataTable)(base.Tables["tAA_MA_Type6"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type6 != null)) {
                    this.tabletAA_MA_Type6.InitVars();
                }
            }
            this.tabletAA_DeprItem = ((tAA_DeprItemDataTable)(base.Tables["tAA_DeprItem"]));
            if ((initTable == true)) {
                if ((this.tabletAA_DeprItem != null)) {
                    this.tabletAA_DeprItem.InitVars();
                }
            }
            this.tabletAA_Misc_Catalog = ((tAA_Misc_CatalogDataTable)(base.Tables["tAA_Misc_Catalog"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Misc_Catalog != null)) {
                    this.tabletAA_Misc_Catalog.InitVars();
                }
            }
            this.tabletAA_Depr = ((tAA_DeprDataTable)(base.Tables["tAA_Depr"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Depr != null)) {
                    this.tabletAA_Depr.InitVars();
                }
            }
            this.tabletAA_ApexPolygon = ((tAA_ApexPolygonDataTable)(base.Tables["tAA_ApexPolygon"]));
            if ((initTable == true)) {
                if ((this.tabletAA_ApexPolygon != null)) {
                    this.tabletAA_ApexPolygon.InitVars();
                }
            }
            this.tabletAA_LandType1 = ((tAA_LandType1DataTable)(base.Tables["tAA_LandType1"]));
            if ((initTable == true)) {
                if ((this.tabletAA_LandType1 != null)) {
                    this.tabletAA_LandType1.InitVars();
                }
            }
            this.tabletTS_QueryViewLayout = ((tTS_QueryViewLayoutDataTable)(base.Tables["tTS_QueryViewLayout"]));
            if ((initTable == true)) {
                if ((this.tabletTS_QueryViewLayout != null)) {
                    this.tabletTS_QueryViewLayout.InitVars();
                }
            }
            this.tabletTS_Exemption_Type1 = ((tTS_Exemption_Type1DataTable)(base.Tables["tTS_Exemption_Type1"]));
            if ((initTable == true)) {
                if ((this.tabletTS_Exemption_Type1 != null)) {
                    this.tabletTS_Exemption_Type1.InitVars();
                }
            }
            this.tabletAA_LandInfluenceItem = ((tAA_LandInfluenceItemDataTable)(base.Tables["tAA_LandInfluenceItem"]));
            if ((initTable == true)) {
                if ((this.tabletAA_LandInfluenceItem != null)) {
                    this.tabletAA_LandInfluenceItem.InitVars();
                }
            }
            this.tabletAA_MA_Type9 = ((tAA_MA_Type9DataTable)(base.Tables["tAA_MA_Type9"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type9 != null)) {
                    this.tabletAA_MA_Type9.InitVars();
                }
            }
            this.tabletAA_MAD_Type9 = ((tAA_MAD_Type9DataTable)(base.Tables["tAA_MAD_Type9"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MAD_Type9 != null)) {
                    this.tabletAA_MAD_Type9.InitVars();
                }
            }
            this.tabletAA_MAD_Type2 = ((tAA_MAD_Type2DataTable)(base.Tables["tAA_MAD_Type2"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MAD_Type2 != null)) {
                    this.tabletAA_MAD_Type2.InitVars();
                }
            }
            this.tabletAA_MAD_Type6 = ((tAA_MAD_Type6DataTable)(base.Tables["tAA_MAD_Type6"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MAD_Type6 != null)) {
                    this.tabletAA_MAD_Type6.InitVars();
                }
            }
            this.tabletAA_MA_Type1 = ((tAA_MA_Type1DataTable)(base.Tables["tAA_MA_Type1"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type1 != null)) {
                    this.tabletAA_MA_Type1.InitVars();
                }
            }
            this.tabletAA_MAD_Type10 = ((tAA_MAD_Type10DataTable)(base.Tables["tAA_MAD_Type10"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MAD_Type10 != null)) {
                    this.tabletAA_MAD_Type10.InitVars();
                }
            }
            this.tabletAA_MA_Type10 = ((tAA_MA_Type10DataTable)(base.Tables["tAA_MA_Type10"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type10 != null)) {
                    this.tabletAA_MA_Type10.InitVars();
                }
            }
            this.tabletAA_LandUnit = ((tAA_LandUnitDataTable)(base.Tables["tAA_LandUnit"]));
            if ((initTable == true)) {
                if ((this.tabletAA_LandUnit != null)) {
                    this.tabletAA_LandUnit.InitVars();
                }
            }
            this.tabletTS_CommentTemplate = ((tTS_CommentTemplateDataTable)(base.Tables["tTS_CommentTemplate"]));
            if ((initTable == true)) {
                if ((this.tabletTS_CommentTemplate != null)) {
                    this.tabletTS_CommentTemplate.InitVars();
                }
            }
            this.tabletAA_MA_Type11 = ((tAA_MA_Type11DataTable)(base.Tables["tAA_MA_Type11"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type11 != null)) {
                    this.tabletAA_MA_Type11.InitVars();
                }
            }
            this.tabletAA_MA_Type12 = ((tAA_MA_Type12DataTable)(base.Tables["tAA_MA_Type12"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type12 != null)) {
                    this.tabletAA_MA_Type12.InitVars();
                }
            }
            this.tabletAA_MA_Type3 = ((tAA_MA_Type3DataTable)(base.Tables["tAA_MA_Type3"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type3 != null)) {
                    this.tabletAA_MA_Type3.InitVars();
                }
            }
            this.tabletAA_MA_Type4 = ((tAA_MA_Type4DataTable)(base.Tables["tAA_MA_Type4"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type4 != null)) {
                    this.tabletAA_MA_Type4.InitVars();
                }
            }
            this.tabletAA_MA_Type7 = ((tAA_MA_Type7DataTable)(base.Tables["tAA_MA_Type7"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type7 != null)) {
                    this.tabletAA_MA_Type7.InitVars();
                }
            }
            this.tabletAA_MA_Type8 = ((tAA_MA_Type8DataTable)(base.Tables["tAA_MA_Type8"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MA_Type8 != null)) {
                    this.tabletAA_MA_Type8.InitVars();
                }
            }
            this.tabletAA_MAD_Type11 = ((tAA_MAD_Type11DataTable)(base.Tables["tAA_MAD_Type11"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MAD_Type11 != null)) {
                    this.tabletAA_MAD_Type11.InitVars();
                }
            }
            this.tabletAA_MAD_Type12 = ((tAA_MAD_Type12DataTable)(base.Tables["tAA_MAD_Type12"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MAD_Type12 != null)) {
                    this.tabletAA_MAD_Type12.InitVars();
                }
            }
            this.tabletAA_MAD_Type3 = ((tAA_MAD_Type3DataTable)(base.Tables["tAA_MAD_Type3"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MAD_Type3 != null)) {
                    this.tabletAA_MAD_Type3.InitVars();
                }
            }
            this.tabletAA_MAD_Type4 = ((tAA_MAD_Type4DataTable)(base.Tables["tAA_MAD_Type4"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MAD_Type4 != null)) {
                    this.tabletAA_MAD_Type4.InitVars();
                }
            }
            this.tabletAA_MAD_Type7 = ((tAA_MAD_Type7DataTable)(base.Tables["tAA_MAD_Type7"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MAD_Type7 != null)) {
                    this.tabletAA_MAD_Type7.InitVars();
                }
            }
            this.tabletAA_MAD_Type8 = ((tAA_MAD_Type8DataTable)(base.Tables["tAA_MAD_Type8"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MAD_Type8 != null)) {
                    this.tabletAA_MAD_Type8.InitVars();
                }
            }
            this.tabletTS_TableXML = ((tTS_TableXMLDataTable)(base.Tables["tTS_TableXML"]));
            if ((initTable == true)) {
                if ((this.tabletTS_TableXML != null)) {
                    this.tabletTS_TableXML.InitVars();
                }
            }
            this.tableEstimateComponent = ((EstimateComponentDataTable)(base.Tables["EstimateComponent"]));
            if ((initTable == true)) {
                if ((this.tableEstimateComponent != null)) {
                    this.tableEstimateComponent.InitVars();
                }
            }
            this.tabletAA_LandCode = ((tAA_LandCodeDataTable)(base.Tables["tAA_LandCode"]));
            if ((initTable == true)) {
                if ((this.tabletAA_LandCode != null)) {
                    this.tabletAA_LandCode.InitVars();
                }
            }
            this.tableParcelIDs = ((ParcelIDsDataTable)(base.Tables["ParcelIDs"]));
            if ((initTable == true)) {
                if ((this.tableParcelIDs != null)) {
                    this.tableParcelIDs.InitVars();
                }
            }
            this.tableInsertXml = ((InsertXmlDataTable)(base.Tables["InsertXml"]));
            if ((initTable == true)) {
                if ((this.tableInsertXml != null)) {
                    this.tableInsertXml.InitVars();
                }
            }
            this.tableChecoutDetailsXML = ((ChecoutDetailsXMLDataTable)(base.Tables["ChecoutDetailsXML"]));
            if ((initTable == true)) {
                if ((this.tableChecoutDetailsXML != null)) {
                    this.tableChecoutDetailsXML.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F3230CheckInData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F3230CheckInData.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletTS_Comment = new tTS_CommentDataTable();
            base.Tables.Add(this.tabletTS_Comment);
            this.tableEstimateComponentGroup = new EstimateComponentGroupDataTable();
            base.Tables.Add(this.tableEstimateComponentGroup);
            this.tableEstimate = new EstimateDataTable();
            base.Tables.Add(this.tableEstimate);
            this.tabletTS_File = new tTS_FileDataTable();
            base.Tables.Add(this.tabletTS_File);
            this.tabletAA_LandValues = new tAA_LandValuesDataTable();
            base.Tables.Add(this.tabletAA_LandValues);
            this.tabletAA_Land = new tAA_LandDataTable();
            base.Tables.Add(this.tabletAA_Land);
            this.tabletAA_Misc = new tAA_MiscDataTable();
            base.Tables.Add(this.tabletAA_Misc);
            this.tabletAA_MSC_Estimate = new tAA_MSC_EstimateDataTable();
            base.Tables.Add(this.tabletAA_MSC_Estimate);
            this.tabletAA_NBHD = new tAA_NBHDDataTable();
            base.Tables.Add(this.tabletAA_NBHD);
            this.tabletAA_Object = new tAA_ObjectDataTable();
            base.Tables.Add(this.tabletAA_Object);
            this.tabletAA_ParcelValue = new tAA_ParcelValueDataTable();
            base.Tables.Add(this.tabletAA_ParcelValue);
            this.tabletAA_Parcel = new tAA_ParcelDataTable();
            base.Tables.Add(this.tabletAA_Parcel);
            this.tabletAA_VSTerraGon = new tAA_VSTerraGonDataTable();
            base.Tables.Add(this.tabletAA_VSTerraGon);
            this.tabletAA_MA_Type2 = new tAA_MA_Type2DataTable();
            base.Tables.Add(this.tabletAA_MA_Type2);
            this.tabletAA_MA_Type6 = new tAA_MA_Type6DataTable();
            base.Tables.Add(this.tabletAA_MA_Type6);
            this.tabletAA_DeprItem = new tAA_DeprItemDataTable();
            base.Tables.Add(this.tabletAA_DeprItem);
            this.tabletAA_Misc_Catalog = new tAA_Misc_CatalogDataTable();
            base.Tables.Add(this.tabletAA_Misc_Catalog);
            this.tabletAA_Depr = new tAA_DeprDataTable();
            base.Tables.Add(this.tabletAA_Depr);
            this.tabletAA_ApexPolygon = new tAA_ApexPolygonDataTable();
            base.Tables.Add(this.tabletAA_ApexPolygon);
            this.tabletAA_LandType1 = new tAA_LandType1DataTable();
            base.Tables.Add(this.tabletAA_LandType1);
            this.tabletTS_QueryViewLayout = new tTS_QueryViewLayoutDataTable();
            base.Tables.Add(this.tabletTS_QueryViewLayout);
            this.tabletTS_Exemption_Type1 = new tTS_Exemption_Type1DataTable();
            base.Tables.Add(this.tabletTS_Exemption_Type1);
            this.tabletAA_LandInfluenceItem = new tAA_LandInfluenceItemDataTable();
            base.Tables.Add(this.tabletAA_LandInfluenceItem);
            this.tabletAA_MA_Type9 = new tAA_MA_Type9DataTable();
            base.Tables.Add(this.tabletAA_MA_Type9);
            this.tabletAA_MAD_Type9 = new tAA_MAD_Type9DataTable();
            base.Tables.Add(this.tabletAA_MAD_Type9);
            this.tabletAA_MAD_Type2 = new tAA_MAD_Type2DataTable();
            base.Tables.Add(this.tabletAA_MAD_Type2);
            this.tabletAA_MAD_Type6 = new tAA_MAD_Type6DataTable();
            base.Tables.Add(this.tabletAA_MAD_Type6);
            this.tabletAA_MA_Type1 = new tAA_MA_Type1DataTable();
            base.Tables.Add(this.tabletAA_MA_Type1);
            this.tabletAA_MAD_Type10 = new tAA_MAD_Type10DataTable();
            base.Tables.Add(this.tabletAA_MAD_Type10);
            this.tabletAA_MA_Type10 = new tAA_MA_Type10DataTable();
            base.Tables.Add(this.tabletAA_MA_Type10);
            this.tabletAA_LandUnit = new tAA_LandUnitDataTable();
            base.Tables.Add(this.tabletAA_LandUnit);
            this.tabletTS_CommentTemplate = new tTS_CommentTemplateDataTable();
            base.Tables.Add(this.tabletTS_CommentTemplate);
            this.tabletAA_MA_Type11 = new tAA_MA_Type11DataTable();
            base.Tables.Add(this.tabletAA_MA_Type11);
            this.tabletAA_MA_Type12 = new tAA_MA_Type12DataTable();
            base.Tables.Add(this.tabletAA_MA_Type12);
            this.tabletAA_MA_Type3 = new tAA_MA_Type3DataTable();
            base.Tables.Add(this.tabletAA_MA_Type3);
            this.tabletAA_MA_Type4 = new tAA_MA_Type4DataTable();
            base.Tables.Add(this.tabletAA_MA_Type4);
            this.tabletAA_MA_Type7 = new tAA_MA_Type7DataTable();
            base.Tables.Add(this.tabletAA_MA_Type7);
            this.tabletAA_MA_Type8 = new tAA_MA_Type8DataTable();
            base.Tables.Add(this.tabletAA_MA_Type8);
            this.tabletAA_MAD_Type11 = new tAA_MAD_Type11DataTable();
            base.Tables.Add(this.tabletAA_MAD_Type11);
            this.tabletAA_MAD_Type12 = new tAA_MAD_Type12DataTable();
            base.Tables.Add(this.tabletAA_MAD_Type12);
            this.tabletAA_MAD_Type3 = new tAA_MAD_Type3DataTable();
            base.Tables.Add(this.tabletAA_MAD_Type3);
            this.tabletAA_MAD_Type4 = new tAA_MAD_Type4DataTable();
            base.Tables.Add(this.tabletAA_MAD_Type4);
            this.tabletAA_MAD_Type7 = new tAA_MAD_Type7DataTable();
            base.Tables.Add(this.tabletAA_MAD_Type7);
            this.tabletAA_MAD_Type8 = new tAA_MAD_Type8DataTable();
            base.Tables.Add(this.tabletAA_MAD_Type8);
            this.tabletTS_TableXML = new tTS_TableXMLDataTable();
            base.Tables.Add(this.tabletTS_TableXML);
            this.tableEstimateComponent = new EstimateComponentDataTable();
            base.Tables.Add(this.tableEstimateComponent);
            this.tabletAA_LandCode = new tAA_LandCodeDataTable();
            base.Tables.Add(this.tabletAA_LandCode);
            this.tableParcelIDs = new ParcelIDsDataTable();
            base.Tables.Add(this.tableParcelIDs);
            this.tableInsertXml = new InsertXmlDataTable();
            base.Tables.Add(this.tableInsertXml);
            this.tableChecoutDetailsXML = new ChecoutDetailsXMLDataTable();
            base.Tables.Add(this.tableChecoutDetailsXML);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_Comment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEstimateComponentGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEstimate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_File() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_LandValues() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Land() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Misc() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MSC_Estimate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_NBHD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Object() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_ParcelValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Parcel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_VSTerraGon() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type6() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_DeprItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Misc_Catalog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Depr() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_ApexPolygon() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_LandType1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_QueryViewLayout() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_Exemption_Type1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_LandInfluenceItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type9() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MAD_Type9() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MAD_Type2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MAD_Type6() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MAD_Type10() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type10() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_LandUnit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_CommentTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type11() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type12() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type4() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type7() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MA_Type8() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MAD_Type11() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MAD_Type12() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MAD_Type3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MAD_Type4() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MAD_Type7() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MAD_Type8() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_TableXML() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEstimateComponent() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_LandCode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeParcelIDs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInsertXml() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeChecoutDetailsXML() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F3230CheckInData ds = new F3230CheckInData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tTS_CommentRowChangeEventHandler(object sender, tTS_CommentRowChangeEvent e);
        
        public delegate void EstimateComponentGroupRowChangeEventHandler(object sender, EstimateComponentGroupRowChangeEvent e);
        
        public delegate void EstimateRowChangeEventHandler(object sender, EstimateRowChangeEvent e);
        
        public delegate void tTS_FileRowChangeEventHandler(object sender, tTS_FileRowChangeEvent e);
        
        public delegate void tAA_LandValuesRowChangeEventHandler(object sender, tAA_LandValuesRowChangeEvent e);
        
        public delegate void tAA_LandRowChangeEventHandler(object sender, tAA_LandRowChangeEvent e);
        
        public delegate void tAA_MiscRowChangeEventHandler(object sender, tAA_MiscRowChangeEvent e);
        
        public delegate void tAA_MSC_EstimateRowChangeEventHandler(object sender, tAA_MSC_EstimateRowChangeEvent e);
        
        public delegate void tAA_NBHDRowChangeEventHandler(object sender, tAA_NBHDRowChangeEvent e);
        
        public delegate void tAA_ObjectRowChangeEventHandler(object sender, tAA_ObjectRowChangeEvent e);
        
        public delegate void tAA_ParcelValueRowChangeEventHandler(object sender, tAA_ParcelValueRowChangeEvent e);
        
        public delegate void tAA_ParcelRowChangeEventHandler(object sender, tAA_ParcelRowChangeEvent e);
        
        public delegate void tAA_VSTerraGonRowChangeEventHandler(object sender, tAA_VSTerraGonRowChangeEvent e);
        
        public delegate void tAA_MA_Type2RowChangeEventHandler(object sender, tAA_MA_Type2RowChangeEvent e);
        
        public delegate void tAA_MA_Type6RowChangeEventHandler(object sender, tAA_MA_Type6RowChangeEvent e);
        
        public delegate void tAA_DeprItemRowChangeEventHandler(object sender, tAA_DeprItemRowChangeEvent e);
        
        public delegate void tAA_Misc_CatalogRowChangeEventHandler(object sender, tAA_Misc_CatalogRowChangeEvent e);
        
        public delegate void tAA_DeprRowChangeEventHandler(object sender, tAA_DeprRowChangeEvent e);
        
        public delegate void tAA_ApexPolygonRowChangeEventHandler(object sender, tAA_ApexPolygonRowChangeEvent e);
        
        public delegate void tAA_LandType1RowChangeEventHandler(object sender, tAA_LandType1RowChangeEvent e);
        
        public delegate void tTS_QueryViewLayoutRowChangeEventHandler(object sender, tTS_QueryViewLayoutRowChangeEvent e);
        
        public delegate void tTS_Exemption_Type1RowChangeEventHandler(object sender, tTS_Exemption_Type1RowChangeEvent e);
        
        public delegate void tAA_LandInfluenceItemRowChangeEventHandler(object sender, tAA_LandInfluenceItemRowChangeEvent e);
        
        public delegate void tAA_MA_Type9RowChangeEventHandler(object sender, tAA_MA_Type9RowChangeEvent e);
        
        public delegate void tAA_MAD_Type9RowChangeEventHandler(object sender, tAA_MAD_Type9RowChangeEvent e);
        
        public delegate void tAA_MAD_Type2RowChangeEventHandler(object sender, tAA_MAD_Type2RowChangeEvent e);
        
        public delegate void tAA_MAD_Type6RowChangeEventHandler(object sender, tAA_MAD_Type6RowChangeEvent e);
        
        public delegate void tAA_MA_Type1RowChangeEventHandler(object sender, tAA_MA_Type1RowChangeEvent e);
        
        public delegate void tAA_MAD_Type10RowChangeEventHandler(object sender, tAA_MAD_Type10RowChangeEvent e);
        
        public delegate void tAA_MA_Type10RowChangeEventHandler(object sender, tAA_MA_Type10RowChangeEvent e);
        
        public delegate void tAA_LandUnitRowChangeEventHandler(object sender, tAA_LandUnitRowChangeEvent e);
        
        public delegate void tTS_CommentTemplateRowChangeEventHandler(object sender, tTS_CommentTemplateRowChangeEvent e);
        
        public delegate void tAA_MA_Type11RowChangeEventHandler(object sender, tAA_MA_Type11RowChangeEvent e);
        
        public delegate void tAA_MA_Type12RowChangeEventHandler(object sender, tAA_MA_Type12RowChangeEvent e);
        
        public delegate void tAA_MA_Type3RowChangeEventHandler(object sender, tAA_MA_Type3RowChangeEvent e);
        
        public delegate void tAA_MA_Type4RowChangeEventHandler(object sender, tAA_MA_Type4RowChangeEvent e);
        
        public delegate void tAA_MA_Type7RowChangeEventHandler(object sender, tAA_MA_Type7RowChangeEvent e);
        
        public delegate void tAA_MA_Type8RowChangeEventHandler(object sender, tAA_MA_Type8RowChangeEvent e);
        
        public delegate void tAA_MAD_Type11RowChangeEventHandler(object sender, tAA_MAD_Type11RowChangeEvent e);
        
        public delegate void tAA_MAD_Type12RowChangeEventHandler(object sender, tAA_MAD_Type12RowChangeEvent e);
        
        public delegate void tAA_MAD_Type3RowChangeEventHandler(object sender, tAA_MAD_Type3RowChangeEvent e);
        
        public delegate void tAA_MAD_Type4RowChangeEventHandler(object sender, tAA_MAD_Type4RowChangeEvent e);
        
        public delegate void tAA_MAD_Type7RowChangeEventHandler(object sender, tAA_MAD_Type7RowChangeEvent e);
        
        public delegate void tAA_MAD_Type8RowChangeEventHandler(object sender, tAA_MAD_Type8RowChangeEvent e);
        
        public delegate void tTS_TableXMLRowChangeEventHandler(object sender, tTS_TableXMLRowChangeEvent e);
        
        public delegate void EstimateComponentRowChangeEventHandler(object sender, EstimateComponentRowChangeEvent e);
        
        public delegate void tAA_LandCodeRowChangeEventHandler(object sender, tAA_LandCodeRowChangeEvent e);
        
        public delegate void ParcelIDsRowChangeEventHandler(object sender, ParcelIDsRowChangeEvent e);
        
        public delegate void InsertXmlRowChangeEventHandler(object sender, InsertXmlRowChangeEvent e);
        
        public delegate void ChecoutDetailsXMLRowChangeEventHandler(object sender, ChecoutDetailsXMLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_CommentDataTable : global::System.Data.TypedTableBase<tTS_CommentRow> {
            
            private global::System.Data.DataColumn columnCommentID;
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnKeyID;
            
            private global::System.Data.DataColumn columnCommentDate;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnIsPublic;
            
            private global::System.Data.DataColumn columnWillPrint;
            
            private global::System.Data.DataColumn columnIsRoll;
            
            private global::System.Data.DataColumn columnIsHighPriority;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnCommentPriorityID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentDataTable() {
                this.TableName = "tTS_Comment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_CommentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_CommentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentIDColumn {
                get {
                    return this.columnCommentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeyIDColumn {
                get {
                    return this.columnKeyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentDateColumn {
                get {
                    return this.columnCommentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPublicColumn {
                get {
                    return this.columnIsPublic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WillPrintColumn {
                get {
                    return this.columnWillPrint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRollColumn {
                get {
                    return this.columnIsRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsHighPriorityColumn {
                get {
                    return this.columnIsHighPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentPriorityIDColumn {
                get {
                    return this.columnCommentPriorityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentRow this[int index] {
                get {
                    return ((tTS_CommentRow)(this.Rows[index]));
                }
            }
            
            public event tTS_CommentRowChangeEventHandler tTS_CommentRowChanging;
            
            public event tTS_CommentRowChangeEventHandler tTS_CommentRowChanged;
            
            public event tTS_CommentRowChangeEventHandler tTS_CommentRowDeleting;
            
            public event tTS_CommentRowChangeEventHandler tTS_CommentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_CommentRow(tTS_CommentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentRow AddtTS_CommentRow(
                        int CommentID, 
                        int Form, 
                        int KeyID, 
                        System.DateTime CommentDate, 
                        int UserID, 
                        string Comment, 
                        bool IsPublic, 
                        bool WillPrint, 
                        bool IsRoll, 
                        bool IsHighPriority, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        short CommentPriorityID) {
                tTS_CommentRow rowtTS_CommentRow = ((tTS_CommentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CommentID,
                        Form,
                        KeyID,
                        CommentDate,
                        UserID,
                        Comment,
                        IsPublic,
                        WillPrint,
                        IsRoll,
                        IsHighPriority,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        CommentPriorityID};
                rowtTS_CommentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_CommentRow);
                return rowtTS_CommentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_CommentDataTable cln = ((tTS_CommentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_CommentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCommentID = base.Columns["CommentID"];
                this.columnForm = base.Columns["Form"];
                this.columnKeyID = base.Columns["KeyID"];
                this.columnCommentDate = base.Columns["CommentDate"];
                this.columnUserID = base.Columns["UserID"];
                this.columnComment = base.Columns["Comment"];
                this.columnIsPublic = base.Columns["IsPublic"];
                this.columnWillPrint = base.Columns["WillPrint"];
                this.columnIsRoll = base.Columns["IsRoll"];
                this.columnIsHighPriority = base.Columns["IsHighPriority"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnCommentPriorityID = base.Columns["CommentPriorityID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCommentID = new global::System.Data.DataColumn("CommentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentID);
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnKeyID = new global::System.Data.DataColumn("KeyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyID);
                this.columnCommentDate = new global::System.Data.DataColumn("CommentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentDate);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnIsPublic = new global::System.Data.DataColumn("IsPublic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPublic);
                this.columnWillPrint = new global::System.Data.DataColumn("WillPrint", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWillPrint);
                this.columnIsRoll = new global::System.Data.DataColumn("IsRoll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRoll);
                this.columnIsHighPriority = new global::System.Data.DataColumn("IsHighPriority", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHighPriority);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnCommentPriorityID = new global::System.Data.DataColumn("CommentPriorityID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentPriorityID);
                this.columnCommentID.ReadOnly = true;
                this.columnForm.ReadOnly = true;
                this.columnKeyID.ReadOnly = true;
                this.columnCommentDate.ReadOnly = true;
                this.columnUserID.ReadOnly = true;
                this.columnComment.ReadOnly = true;
                this.columnComment.MaxLength = 2000;
                this.columnIsPublic.ReadOnly = true;
                this.columnWillPrint.ReadOnly = true;
                this.columnIsRoll.ReadOnly = true;
                this.columnIsHighPriority.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnCommentPriorityID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentRow NewtTS_CommentRow() {
                return ((tTS_CommentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_CommentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_CommentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_CommentRowChanged != null)) {
                    this.tTS_CommentRowChanged(this, new tTS_CommentRowChangeEvent(((tTS_CommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_CommentRowChanging != null)) {
                    this.tTS_CommentRowChanging(this, new tTS_CommentRowChangeEvent(((tTS_CommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_CommentRowDeleted != null)) {
                    this.tTS_CommentRowDeleted(this, new tTS_CommentRowChangeEvent(((tTS_CommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_CommentRowDeleting != null)) {
                    this.tTS_CommentRowDeleting(this, new tTS_CommentRowChangeEvent(((tTS_CommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_CommentRow(tTS_CommentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_CommentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EstimateComponentGroupDataTable : global::System.Data.TypedTableBase<EstimateComponentGroupRow> {
            
            private global::System.Data.DataColumn columnGroupID;
            
            private global::System.Data.DataColumn columnEstimateID;
            
            private global::System.Data.DataColumn columnGroupTypeID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnSize;
            
            private global::System.Data.DataColumn columnQualityNumber;
            
            private global::System.Data.DataColumn columnQualityNumberFlag;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeFlag;
            
            private global::System.Data.DataColumn columnLife;
            
            private global::System.Data.DataColumn columnLifeFlag;
            
            private global::System.Data.DataColumn columnDepreciationPercent;
            
            private global::System.Data.DataColumn columnDepreciationPercentFlag;
            
            private global::System.Data.DataColumn columnTagalongWidth;
            
            private global::System.Data.DataColumn columnTagalongLength;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentGroupDataTable() {
                this.TableName = "EstimateComponentGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EstimateComponentGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EstimateComponentGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupIDColumn {
                get {
                    return this.columnGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateIDColumn {
                get {
                    return this.columnEstimateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupTypeIDColumn {
                get {
                    return this.columnGroupTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeColumn {
                get {
                    return this.columnSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualityNumberColumn {
                get {
                    return this.columnQualityNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualityNumberFlagColumn {
                get {
                    return this.columnQualityNumberFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeFlagColumn {
                get {
                    return this.columnAgeFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LifeColumn {
                get {
                    return this.columnLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LifeFlagColumn {
                get {
                    return this.columnLifeFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepreciationPercentColumn {
                get {
                    return this.columnDepreciationPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepreciationPercentFlagColumn {
                get {
                    return this.columnDepreciationPercentFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TagalongWidthColumn {
                get {
                    return this.columnTagalongWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TagalongLengthColumn {
                get {
                    return this.columnTagalongLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentGroupRow this[int index] {
                get {
                    return ((EstimateComponentGroupRow)(this.Rows[index]));
                }
            }
            
            public event EstimateComponentGroupRowChangeEventHandler EstimateComponentGroupRowChanging;
            
            public event EstimateComponentGroupRowChangeEventHandler EstimateComponentGroupRowChanged;
            
            public event EstimateComponentGroupRowChangeEventHandler EstimateComponentGroupRowDeleting;
            
            public event EstimateComponentGroupRowChangeEventHandler EstimateComponentGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEstimateComponentGroupRow(EstimateComponentGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentGroupRow AddEstimateComponentGroupRow(int GroupID, int EstimateID, int GroupTypeID, string Description, int Size, float QualityNumber, bool QualityNumberFlag, float Age, bool AgeFlag, float Life, bool LifeFlag, float DepreciationPercent, bool DepreciationPercentFlag, int TagalongWidth, int TagalongLength) {
                EstimateComponentGroupRow rowEstimateComponentGroupRow = ((EstimateComponentGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GroupID,
                        EstimateID,
                        GroupTypeID,
                        Description,
                        Size,
                        QualityNumber,
                        QualityNumberFlag,
                        Age,
                        AgeFlag,
                        Life,
                        LifeFlag,
                        DepreciationPercent,
                        DepreciationPercentFlag,
                        TagalongWidth,
                        TagalongLength};
                rowEstimateComponentGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEstimateComponentGroupRow);
                return rowEstimateComponentGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EstimateComponentGroupDataTable cln = ((EstimateComponentGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EstimateComponentGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGroupID = base.Columns["GroupID"];
                this.columnEstimateID = base.Columns["EstimateID"];
                this.columnGroupTypeID = base.Columns["GroupTypeID"];
                this.columnDescription = base.Columns["Description"];
                this.columnSize = base.Columns["Size"];
                this.columnQualityNumber = base.Columns["QualityNumber"];
                this.columnQualityNumberFlag = base.Columns["QualityNumberFlag"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeFlag = base.Columns["AgeFlag"];
                this.columnLife = base.Columns["Life"];
                this.columnLifeFlag = base.Columns["LifeFlag"];
                this.columnDepreciationPercent = base.Columns["DepreciationPercent"];
                this.columnDepreciationPercentFlag = base.Columns["DepreciationPercentFlag"];
                this.columnTagalongWidth = base.Columns["TagalongWidth"];
                this.columnTagalongLength = base.Columns["TagalongLength"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGroupID = new global::System.Data.DataColumn("GroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupID);
                this.columnEstimateID = new global::System.Data.DataColumn("EstimateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateID);
                this.columnGroupTypeID = new global::System.Data.DataColumn("GroupTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupTypeID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnSize = new global::System.Data.DataColumn("Size", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnQualityNumber = new global::System.Data.DataColumn("QualityNumber", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualityNumber);
                this.columnQualityNumberFlag = new global::System.Data.DataColumn("QualityNumberFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualityNumberFlag);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeFlag = new global::System.Data.DataColumn("AgeFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeFlag);
                this.columnLife = new global::System.Data.DataColumn("Life", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLife);
                this.columnLifeFlag = new global::System.Data.DataColumn("LifeFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLifeFlag);
                this.columnDepreciationPercent = new global::System.Data.DataColumn("DepreciationPercent", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepreciationPercent);
                this.columnDepreciationPercentFlag = new global::System.Data.DataColumn("DepreciationPercentFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepreciationPercentFlag);
                this.columnTagalongWidth = new global::System.Data.DataColumn("TagalongWidth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTagalongWidth);
                this.columnTagalongLength = new global::System.Data.DataColumn("TagalongLength", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTagalongLength);
                this.columnGroupID.ReadOnly = true;
                this.columnEstimateID.ReadOnly = true;
                this.columnGroupTypeID.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 50;
                this.columnSize.ReadOnly = true;
                this.columnQualityNumber.ReadOnly = true;
                this.columnQualityNumberFlag.ReadOnly = true;
                this.columnAge.ReadOnly = true;
                this.columnAgeFlag.ReadOnly = true;
                this.columnLife.ReadOnly = true;
                this.columnLifeFlag.ReadOnly = true;
                this.columnDepreciationPercent.ReadOnly = true;
                this.columnDepreciationPercentFlag.ReadOnly = true;
                this.columnTagalongWidth.ReadOnly = true;
                this.columnTagalongLength.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentGroupRow NewEstimateComponentGroupRow() {
                return ((EstimateComponentGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EstimateComponentGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EstimateComponentGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EstimateComponentGroupRowChanged != null)) {
                    this.EstimateComponentGroupRowChanged(this, new EstimateComponentGroupRowChangeEvent(((EstimateComponentGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EstimateComponentGroupRowChanging != null)) {
                    this.EstimateComponentGroupRowChanging(this, new EstimateComponentGroupRowChangeEvent(((EstimateComponentGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EstimateComponentGroupRowDeleted != null)) {
                    this.EstimateComponentGroupRowDeleted(this, new EstimateComponentGroupRowChangeEvent(((EstimateComponentGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EstimateComponentGroupRowDeleting != null)) {
                    this.EstimateComponentGroupRowDeleting(this, new EstimateComponentGroupRowChangeEvent(((EstimateComponentGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEstimateComponentGroupRow(EstimateComponentGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EstimateComponentGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EstimateDataTable : global::System.Data.TypedTableBase<EstimateRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columncustomer_id;
            
            private global::System.Data.DataColumn columnEstimateCode;
            
            private global::System.Data.DataColumn columnCategoryID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnPropertyOwner;
            
            private global::System.Data.DataColumn columnPropertyAddress;
            
            private global::System.Data.DataColumn columnPropertyCity;
            
            private global::System.Data.DataColumn columnPropertyState;
            
            private global::System.Data.DataColumn columnPropertyZipcode;
            
            private global::System.Data.DataColumn columnSurveyDateFlag;
            
            private global::System.Data.DataColumn columnConstTypeID;
            
            private global::System.Data.DataColumn columnSurveyDate;
            
            private global::System.Data.DataColumn columnSurveyedBy;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnUserDefined1;
            
            private global::System.Data.DataColumn columnUserDefined2;
            
            private global::System.Data.DataColumn columnUserDefined3;
            
            private global::System.Data.DataColumn columnUserDefined4;
            
            private global::System.Data.DataColumn columnUserDefined5;
            
            private global::System.Data.DataColumn columnUserDefinedDate;
            
            private global::System.Data.DataColumn columnLocalMultiplierFlag;
            
            private global::System.Data.DataColumn columnLocalMultiplier;
            
            private global::System.Data.DataColumn columnLocalMultiplierAdjPctFlag;
            
            private global::System.Data.DataColumn columnLocalMultiplierAdjPct;
            
            private global::System.Data.DataColumn columnArchitectsFeePctFlag;
            
            private global::System.Data.DataColumn columnArchitectsFeePct;
            
            private global::System.Data.DataColumn columnRoundingValueFlag;
            
            private global::System.Data.DataColumn columnRoundingValue;
            
            private global::System.Data.DataColumn columnReportDateFlag;
            
            private global::System.Data.DataColumn columnReportDate;
            
            private global::System.Data.DataColumn columnSingleLineBackDateFlag;
            
            private global::System.Data.DataColumn columnSingleLineBackDate;
            
            private global::System.Data.DataColumn columnBaseDateFlag;
            
            private global::System.Data.DataColumn columnBaseDate;
            
            private global::System.Data.DataColumn columnEffectiveAgeAdjValueFlag;
            
            private global::System.Data.DataColumn columnEffectiveAgeAdjValue;
            
            private global::System.Data.DataColumn columnDepreciationPctAdjValueFlag;
            
            private global::System.Data.DataColumn columnDepreciationPctAdjValue;
            
            private global::System.Data.DataColumn columnEnergyAdjIDFlag;
            
            private global::System.Data.DataColumn columnEnergyAdjID;
            
            private global::System.Data.DataColumn columnFoundationAdjIDFlag;
            
            private global::System.Data.DataColumn columnFoundationAdjID;
            
            private global::System.Data.DataColumn columnFloorInsulAdjIDFlag;
            
            private global::System.Data.DataColumn columnFloorInsulAdjID;
            
            private global::System.Data.DataColumn columnHillsideAdjIDFlag;
            
            private global::System.Data.DataColumn columnHillsideAdjID;
            
            private global::System.Data.DataColumn columnSeismicAdjIDFlag;
            
            private global::System.Data.DataColumn columnSeismicAdjID;
            
            private global::System.Data.DataColumn columnWindAdjIDFlag;
            
            private global::System.Data.DataColumn columnWindAdjID;
            
            private global::System.Data.DataColumn columnStoryHeightFlag;
            
            private global::System.Data.DataColumn columnStoryHeight;
            
            private global::System.Data.DataColumn columnBasementDepthFlag;
            
            private global::System.Data.DataColumn columnBasementDepth;
            
            private global::System.Data.DataColumn columnResTypeNameFlag;
            
            private global::System.Data.DataColumn columnResTypeName;
            
            private global::System.Data.DataColumn columnResidenceTypeID;
            
            private global::System.Data.DataColumn columnStyle1ID;
            
            private global::System.Data.DataColumn columnStyle1Percent;
            
            private global::System.Data.DataColumn columnStyle2ID;
            
            private global::System.Data.DataColumn columnStyle2Percent;
            
            private global::System.Data.DataColumn columnTotalFloorArea;
            
            private global::System.Data.DataColumn columnApartmentUnits;
            
            private global::System.Data.DataColumn columnQualityValue;
            
            private global::System.Data.DataColumn columnConditionValue;
            
            private global::System.Data.DataColumn columnEffectiveAge;
            
            private global::System.Data.DataColumn columnTypicalLife;
            
            private global::System.Data.DataColumn columnDeprecPhyFunDollars;
            
            private global::System.Data.DataColumn columnDeprecPhysicalDollars;
            
            private global::System.Data.DataColumn columnDeprecFunctionalDollars;
            
            private global::System.Data.DataColumn columnDeprecExternalDollars;
            
            private global::System.Data.DataColumn columnDeprecPhyFunPct;
            
            private global::System.Data.DataColumn columnDeprecPhysicalPct;
            
            private global::System.Data.DataColumn columnDeprecFunctionalPct;
            
            private global::System.Data.DataColumn columnDeprecExternalPct;
            
            private global::System.Data.DataColumn columnDeprecTypeID;
            
            private global::System.Data.DataColumn columnDeprecPercentFlag;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnModifyDate;
            
            private global::System.Data.DataColumn columnCalculateDate;
            
            private global::System.Data.DataColumn columnPrintDate;
            
            private global::System.Data.DataColumn columnImportDate;
            
            private global::System.Data.DataColumn columnCalcCostDataDate;
            
            private global::System.Data.DataColumn columnCostAsOf;
            
            private global::System.Data.DataColumn columnLastOpenedDate;
            
            private global::System.Data.DataColumn columnStyle1Length;
            
            private global::System.Data.DataColumn columnStyle1Width;
            
            private global::System.Data.DataColumn columnStyle2Length;
            
            private global::System.Data.DataColumn columnStyle2Width;
            
            private global::System.Data.DataColumn columnWallEnergyAdjIDFlag;
            
            private global::System.Data.DataColumn columnWallEnergyAdjID;
            
            private global::System.Data.DataColumn columnRegionalMultiplierFlag;
            
            private global::System.Data.DataColumn columnRegionalMultiplier;
            
            private global::System.Data.DataColumn columnMfgMultiplierFlag;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateDataTable() {
                this.TableName = "Estimate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EstimateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EstimateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn customer_idColumn {
                get {
                    return this.columncustomer_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateCodeColumn {
                get {
                    return this.columnEstimateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryIDColumn {
                get {
                    return this.columnCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyOwnerColumn {
                get {
                    return this.columnPropertyOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyAddressColumn {
                get {
                    return this.columnPropertyAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyCityColumn {
                get {
                    return this.columnPropertyCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyStateColumn {
                get {
                    return this.columnPropertyState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyZipcodeColumn {
                get {
                    return this.columnPropertyZipcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurveyDateFlagColumn {
                get {
                    return this.columnSurveyDateFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConstTypeIDColumn {
                get {
                    return this.columnConstTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurveyDateColumn {
                get {
                    return this.columnSurveyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurveyedByColumn {
                get {
                    return this.columnSurveyedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserDefined1Column {
                get {
                    return this.columnUserDefined1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserDefined2Column {
                get {
                    return this.columnUserDefined2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserDefined3Column {
                get {
                    return this.columnUserDefined3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserDefined4Column {
                get {
                    return this.columnUserDefined4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserDefined5Column {
                get {
                    return this.columnUserDefined5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserDefinedDateColumn {
                get {
                    return this.columnUserDefinedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalMultiplierFlagColumn {
                get {
                    return this.columnLocalMultiplierFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalMultiplierColumn {
                get {
                    return this.columnLocalMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalMultiplierAdjPctFlagColumn {
                get {
                    return this.columnLocalMultiplierAdjPctFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalMultiplierAdjPctColumn {
                get {
                    return this.columnLocalMultiplierAdjPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchitectsFeePctFlagColumn {
                get {
                    return this.columnArchitectsFeePctFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchitectsFeePctColumn {
                get {
                    return this.columnArchitectsFeePct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoundingValueFlagColumn {
                get {
                    return this.columnRoundingValueFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoundingValueColumn {
                get {
                    return this.columnRoundingValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportDateFlagColumn {
                get {
                    return this.columnReportDateFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SingleLineBackDateFlagColumn {
                get {
                    return this.columnSingleLineBackDateFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SingleLineBackDateColumn {
                get {
                    return this.columnSingleLineBackDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseDateFlagColumn {
                get {
                    return this.columnBaseDateFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseDateColumn {
                get {
                    return this.columnBaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveAgeAdjValueFlagColumn {
                get {
                    return this.columnEffectiveAgeAdjValueFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveAgeAdjValueColumn {
                get {
                    return this.columnEffectiveAgeAdjValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepreciationPctAdjValueFlagColumn {
                get {
                    return this.columnDepreciationPctAdjValueFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepreciationPctAdjValueColumn {
                get {
                    return this.columnDepreciationPctAdjValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnergyAdjIDFlagColumn {
                get {
                    return this.columnEnergyAdjIDFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnergyAdjIDColumn {
                get {
                    return this.columnEnergyAdjID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FoundationAdjIDFlagColumn {
                get {
                    return this.columnFoundationAdjIDFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FoundationAdjIDColumn {
                get {
                    return this.columnFoundationAdjID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FloorInsulAdjIDFlagColumn {
                get {
                    return this.columnFloorInsulAdjIDFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FloorInsulAdjIDColumn {
                get {
                    return this.columnFloorInsulAdjID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HillsideAdjIDFlagColumn {
                get {
                    return this.columnHillsideAdjIDFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HillsideAdjIDColumn {
                get {
                    return this.columnHillsideAdjID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeismicAdjIDFlagColumn {
                get {
                    return this.columnSeismicAdjIDFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeismicAdjIDColumn {
                get {
                    return this.columnSeismicAdjID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindAdjIDFlagColumn {
                get {
                    return this.columnWindAdjIDFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindAdjIDColumn {
                get {
                    return this.columnWindAdjID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoryHeightFlagColumn {
                get {
                    return this.columnStoryHeightFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoryHeightColumn {
                get {
                    return this.columnStoryHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasementDepthFlagColumn {
                get {
                    return this.columnBasementDepthFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasementDepthColumn {
                get {
                    return this.columnBasementDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResTypeNameFlagColumn {
                get {
                    return this.columnResTypeNameFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResTypeNameColumn {
                get {
                    return this.columnResTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidenceTypeIDColumn {
                get {
                    return this.columnResidenceTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Style1IDColumn {
                get {
                    return this.columnStyle1ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Style1PercentColumn {
                get {
                    return this.columnStyle1Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Style2IDColumn {
                get {
                    return this.columnStyle2ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Style2PercentColumn {
                get {
                    return this.columnStyle2Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalFloorAreaColumn {
                get {
                    return this.columnTotalFloorArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApartmentUnitsColumn {
                get {
                    return this.columnApartmentUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualityValueColumn {
                get {
                    return this.columnQualityValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConditionValueColumn {
                get {
                    return this.columnConditionValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveAgeColumn {
                get {
                    return this.columnEffectiveAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypicalLifeColumn {
                get {
                    return this.columnTypicalLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprecPhyFunDollarsColumn {
                get {
                    return this.columnDeprecPhyFunDollars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprecPhysicalDollarsColumn {
                get {
                    return this.columnDeprecPhysicalDollars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprecFunctionalDollarsColumn {
                get {
                    return this.columnDeprecFunctionalDollars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprecExternalDollarsColumn {
                get {
                    return this.columnDeprecExternalDollars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprecPhyFunPctColumn {
                get {
                    return this.columnDeprecPhyFunPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprecPhysicalPctColumn {
                get {
                    return this.columnDeprecPhysicalPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprecFunctionalPctColumn {
                get {
                    return this.columnDeprecFunctionalPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprecExternalPctColumn {
                get {
                    return this.columnDeprecExternalPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprecTypeIDColumn {
                get {
                    return this.columnDeprecTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprecPercentFlagColumn {
                get {
                    return this.columnDeprecPercentFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifyDateColumn {
                get {
                    return this.columnModifyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CalculateDateColumn {
                get {
                    return this.columnCalculateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintDateColumn {
                get {
                    return this.columnPrintDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImportDateColumn {
                get {
                    return this.columnImportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CalcCostDataDateColumn {
                get {
                    return this.columnCalcCostDataDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostAsOfColumn {
                get {
                    return this.columnCostAsOf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastOpenedDateColumn {
                get {
                    return this.columnLastOpenedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Style1LengthColumn {
                get {
                    return this.columnStyle1Length;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Style1WidthColumn {
                get {
                    return this.columnStyle1Width;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Style2LengthColumn {
                get {
                    return this.columnStyle2Length;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Style2WidthColumn {
                get {
                    return this.columnStyle2Width;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WallEnergyAdjIDFlagColumn {
                get {
                    return this.columnWallEnergyAdjIDFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WallEnergyAdjIDColumn {
                get {
                    return this.columnWallEnergyAdjID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionalMultiplierFlagColumn {
                get {
                    return this.columnRegionalMultiplierFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionalMultiplierColumn {
                get {
                    return this.columnRegionalMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MfgMultiplierFlagColumn {
                get {
                    return this.columnMfgMultiplierFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateRow this[int index] {
                get {
                    return ((EstimateRow)(this.Rows[index]));
                }
            }
            
            public event EstimateRowChangeEventHandler EstimateRowChanging;
            
            public event EstimateRowChangeEventHandler EstimateRowChanged;
            
            public event EstimateRowChangeEventHandler EstimateRowDeleting;
            
            public event EstimateRowChangeEventHandler EstimateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEstimateRow(EstimateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateRow AddEstimateRow(
                        int ID, 
                        int customer_id, 
                        string EstimateCode, 
                        int CategoryID, 
                        string UserID, 
                        string PropertyOwner, 
                        string PropertyAddress, 
                        string PropertyCity, 
                        string PropertyState, 
                        string PropertyZipcode, 
                        bool SurveyDateFlag, 
                        int ConstTypeID, 
                        System.DateTime SurveyDate, 
                        string SurveyedBy, 
                        string Comment, 
                        string UserDefined1, 
                        string UserDefined2, 
                        string UserDefined3, 
                        string UserDefined4, 
                        string UserDefined5, 
                        System.DateTime UserDefinedDate, 
                        bool LocalMultiplierFlag, 
                        float LocalMultiplier, 
                        bool LocalMultiplierAdjPctFlag, 
                        float LocalMultiplierAdjPct, 
                        bool ArchitectsFeePctFlag, 
                        float ArchitectsFeePct, 
                        bool RoundingValueFlag, 
                        float RoundingValue, 
                        bool ReportDateFlag, 
                        System.DateTime ReportDate, 
                        bool SingleLineBackDateFlag, 
                        System.DateTime SingleLineBackDate, 
                        bool BaseDateFlag, 
                        System.DateTime BaseDate, 
                        bool EffectiveAgeAdjValueFlag, 
                        float EffectiveAgeAdjValue, 
                        bool DepreciationPctAdjValueFlag, 
                        float DepreciationPctAdjValue, 
                        bool EnergyAdjIDFlag, 
                        short EnergyAdjID, 
                        bool FoundationAdjIDFlag, 
                        short FoundationAdjID, 
                        bool FloorInsulAdjIDFlag, 
                        short FloorInsulAdjID, 
                        bool HillsideAdjIDFlag, 
                        short HillsideAdjID, 
                        bool SeismicAdjIDFlag, 
                        short SeismicAdjID, 
                        bool WindAdjIDFlag, 
                        short WindAdjID, 
                        bool StoryHeightFlag, 
                        float StoryHeight, 
                        bool BasementDepthFlag, 
                        float BasementDepth, 
                        bool ResTypeNameFlag, 
                        string ResTypeName, 
                        int ResidenceTypeID, 
                        short Style1ID, 
                        float Style1Percent, 
                        short Style2ID, 
                        float Style2Percent, 
                        float TotalFloorArea, 
                        short ApartmentUnits, 
                        float QualityValue, 
                        float ConditionValue, 
                        short EffectiveAge, 
                        short TypicalLife, 
                        float DeprecPhyFunDollars, 
                        float DeprecPhysicalDollars, 
                        float DeprecFunctionalDollars, 
                        float DeprecExternalDollars, 
                        float DeprecPhyFunPct, 
                        float DeprecPhysicalPct, 
                        float DeprecFunctionalPct, 
                        float DeprecExternalPct, 
                        short DeprecTypeID, 
                        bool DeprecPercentFlag, 
                        System.DateTime CreateDate, 
                        System.DateTime ModifyDate, 
                        System.DateTime CalculateDate, 
                        System.DateTime PrintDate, 
                        System.DateTime ImportDate, 
                        System.DateTime CalcCostDataDate, 
                        System.DateTime CostAsOf, 
                        System.DateTime LastOpenedDate, 
                        int Style1Length, 
                        int Style1Width, 
                        int Style2Length, 
                        int Style2Width, 
                        bool WallEnergyAdjIDFlag, 
                        short WallEnergyAdjID, 
                        bool RegionalMultiplierFlag, 
                        double RegionalMultiplier, 
                        short MfgMultiplierFlag, 
                        bool IsDeleted) {
                EstimateRow rowEstimateRow = ((EstimateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        customer_id,
                        EstimateCode,
                        CategoryID,
                        UserID,
                        PropertyOwner,
                        PropertyAddress,
                        PropertyCity,
                        PropertyState,
                        PropertyZipcode,
                        SurveyDateFlag,
                        ConstTypeID,
                        SurveyDate,
                        SurveyedBy,
                        Comment,
                        UserDefined1,
                        UserDefined2,
                        UserDefined3,
                        UserDefined4,
                        UserDefined5,
                        UserDefinedDate,
                        LocalMultiplierFlag,
                        LocalMultiplier,
                        LocalMultiplierAdjPctFlag,
                        LocalMultiplierAdjPct,
                        ArchitectsFeePctFlag,
                        ArchitectsFeePct,
                        RoundingValueFlag,
                        RoundingValue,
                        ReportDateFlag,
                        ReportDate,
                        SingleLineBackDateFlag,
                        SingleLineBackDate,
                        BaseDateFlag,
                        BaseDate,
                        EffectiveAgeAdjValueFlag,
                        EffectiveAgeAdjValue,
                        DepreciationPctAdjValueFlag,
                        DepreciationPctAdjValue,
                        EnergyAdjIDFlag,
                        EnergyAdjID,
                        FoundationAdjIDFlag,
                        FoundationAdjID,
                        FloorInsulAdjIDFlag,
                        FloorInsulAdjID,
                        HillsideAdjIDFlag,
                        HillsideAdjID,
                        SeismicAdjIDFlag,
                        SeismicAdjID,
                        WindAdjIDFlag,
                        WindAdjID,
                        StoryHeightFlag,
                        StoryHeight,
                        BasementDepthFlag,
                        BasementDepth,
                        ResTypeNameFlag,
                        ResTypeName,
                        ResidenceTypeID,
                        Style1ID,
                        Style1Percent,
                        Style2ID,
                        Style2Percent,
                        TotalFloorArea,
                        ApartmentUnits,
                        QualityValue,
                        ConditionValue,
                        EffectiveAge,
                        TypicalLife,
                        DeprecPhyFunDollars,
                        DeprecPhysicalDollars,
                        DeprecFunctionalDollars,
                        DeprecExternalDollars,
                        DeprecPhyFunPct,
                        DeprecPhysicalPct,
                        DeprecFunctionalPct,
                        DeprecExternalPct,
                        DeprecTypeID,
                        DeprecPercentFlag,
                        CreateDate,
                        ModifyDate,
                        CalculateDate,
                        PrintDate,
                        ImportDate,
                        CalcCostDataDate,
                        CostAsOf,
                        LastOpenedDate,
                        Style1Length,
                        Style1Width,
                        Style2Length,
                        Style2Width,
                        WallEnergyAdjIDFlag,
                        WallEnergyAdjID,
                        RegionalMultiplierFlag,
                        RegionalMultiplier,
                        MfgMultiplierFlag,
                        IsDeleted};
                rowEstimateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEstimateRow);
                return rowEstimateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EstimateDataTable cln = ((EstimateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EstimateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columncustomer_id = base.Columns["customer_id"];
                this.columnEstimateCode = base.Columns["EstimateCode"];
                this.columnCategoryID = base.Columns["CategoryID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnPropertyOwner = base.Columns["PropertyOwner"];
                this.columnPropertyAddress = base.Columns["PropertyAddress"];
                this.columnPropertyCity = base.Columns["PropertyCity"];
                this.columnPropertyState = base.Columns["PropertyState"];
                this.columnPropertyZipcode = base.Columns["PropertyZipcode"];
                this.columnSurveyDateFlag = base.Columns["SurveyDateFlag"];
                this.columnConstTypeID = base.Columns["ConstTypeID"];
                this.columnSurveyDate = base.Columns["SurveyDate"];
                this.columnSurveyedBy = base.Columns["SurveyedBy"];
                this.columnComment = base.Columns["Comment"];
                this.columnUserDefined1 = base.Columns["UserDefined1"];
                this.columnUserDefined2 = base.Columns["UserDefined2"];
                this.columnUserDefined3 = base.Columns["UserDefined3"];
                this.columnUserDefined4 = base.Columns["UserDefined4"];
                this.columnUserDefined5 = base.Columns["UserDefined5"];
                this.columnUserDefinedDate = base.Columns["UserDefinedDate"];
                this.columnLocalMultiplierFlag = base.Columns["LocalMultiplierFlag"];
                this.columnLocalMultiplier = base.Columns["LocalMultiplier"];
                this.columnLocalMultiplierAdjPctFlag = base.Columns["LocalMultiplierAdjPctFlag"];
                this.columnLocalMultiplierAdjPct = base.Columns["LocalMultiplierAdjPct"];
                this.columnArchitectsFeePctFlag = base.Columns["ArchitectsFeePctFlag"];
                this.columnArchitectsFeePct = base.Columns["ArchitectsFeePct"];
                this.columnRoundingValueFlag = base.Columns["RoundingValueFlag"];
                this.columnRoundingValue = base.Columns["RoundingValue"];
                this.columnReportDateFlag = base.Columns["ReportDateFlag"];
                this.columnReportDate = base.Columns["ReportDate"];
                this.columnSingleLineBackDateFlag = base.Columns["SingleLineBackDateFlag"];
                this.columnSingleLineBackDate = base.Columns["SingleLineBackDate"];
                this.columnBaseDateFlag = base.Columns["BaseDateFlag"];
                this.columnBaseDate = base.Columns["BaseDate"];
                this.columnEffectiveAgeAdjValueFlag = base.Columns["EffectiveAgeAdjValueFlag"];
                this.columnEffectiveAgeAdjValue = base.Columns["EffectiveAgeAdjValue"];
                this.columnDepreciationPctAdjValueFlag = base.Columns["DepreciationPctAdjValueFlag"];
                this.columnDepreciationPctAdjValue = base.Columns["DepreciationPctAdjValue"];
                this.columnEnergyAdjIDFlag = base.Columns["EnergyAdjIDFlag"];
                this.columnEnergyAdjID = base.Columns["EnergyAdjID"];
                this.columnFoundationAdjIDFlag = base.Columns["FoundationAdjIDFlag"];
                this.columnFoundationAdjID = base.Columns["FoundationAdjID"];
                this.columnFloorInsulAdjIDFlag = base.Columns["FloorInsulAdjIDFlag"];
                this.columnFloorInsulAdjID = base.Columns["FloorInsulAdjID"];
                this.columnHillsideAdjIDFlag = base.Columns["HillsideAdjIDFlag"];
                this.columnHillsideAdjID = base.Columns["HillsideAdjID"];
                this.columnSeismicAdjIDFlag = base.Columns["SeismicAdjIDFlag"];
                this.columnSeismicAdjID = base.Columns["SeismicAdjID"];
                this.columnWindAdjIDFlag = base.Columns["WindAdjIDFlag"];
                this.columnWindAdjID = base.Columns["WindAdjID"];
                this.columnStoryHeightFlag = base.Columns["StoryHeightFlag"];
                this.columnStoryHeight = base.Columns["StoryHeight"];
                this.columnBasementDepthFlag = base.Columns["BasementDepthFlag"];
                this.columnBasementDepth = base.Columns["BasementDepth"];
                this.columnResTypeNameFlag = base.Columns["ResTypeNameFlag"];
                this.columnResTypeName = base.Columns["ResTypeName"];
                this.columnResidenceTypeID = base.Columns["ResidenceTypeID"];
                this.columnStyle1ID = base.Columns["Style1ID"];
                this.columnStyle1Percent = base.Columns["Style1Percent"];
                this.columnStyle2ID = base.Columns["Style2ID"];
                this.columnStyle2Percent = base.Columns["Style2Percent"];
                this.columnTotalFloorArea = base.Columns["TotalFloorArea"];
                this.columnApartmentUnits = base.Columns["ApartmentUnits"];
                this.columnQualityValue = base.Columns["QualityValue"];
                this.columnConditionValue = base.Columns["ConditionValue"];
                this.columnEffectiveAge = base.Columns["EffectiveAge"];
                this.columnTypicalLife = base.Columns["TypicalLife"];
                this.columnDeprecPhyFunDollars = base.Columns["DeprecPhyFunDollars"];
                this.columnDeprecPhysicalDollars = base.Columns["DeprecPhysicalDollars"];
                this.columnDeprecFunctionalDollars = base.Columns["DeprecFunctionalDollars"];
                this.columnDeprecExternalDollars = base.Columns["DeprecExternalDollars"];
                this.columnDeprecPhyFunPct = base.Columns["DeprecPhyFunPct"];
                this.columnDeprecPhysicalPct = base.Columns["DeprecPhysicalPct"];
                this.columnDeprecFunctionalPct = base.Columns["DeprecFunctionalPct"];
                this.columnDeprecExternalPct = base.Columns["DeprecExternalPct"];
                this.columnDeprecTypeID = base.Columns["DeprecTypeID"];
                this.columnDeprecPercentFlag = base.Columns["DeprecPercentFlag"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnModifyDate = base.Columns["ModifyDate"];
                this.columnCalculateDate = base.Columns["CalculateDate"];
                this.columnPrintDate = base.Columns["PrintDate"];
                this.columnImportDate = base.Columns["ImportDate"];
                this.columnCalcCostDataDate = base.Columns["CalcCostDataDate"];
                this.columnCostAsOf = base.Columns["CostAsOf"];
                this.columnLastOpenedDate = base.Columns["LastOpenedDate"];
                this.columnStyle1Length = base.Columns["Style1Length"];
                this.columnStyle1Width = base.Columns["Style1Width"];
                this.columnStyle2Length = base.Columns["Style2Length"];
                this.columnStyle2Width = base.Columns["Style2Width"];
                this.columnWallEnergyAdjIDFlag = base.Columns["WallEnergyAdjIDFlag"];
                this.columnWallEnergyAdjID = base.Columns["WallEnergyAdjID"];
                this.columnRegionalMultiplierFlag = base.Columns["RegionalMultiplierFlag"];
                this.columnRegionalMultiplier = base.Columns["RegionalMultiplier"];
                this.columnMfgMultiplierFlag = base.Columns["MfgMultiplierFlag"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columncustomer_id = new global::System.Data.DataColumn("customer_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomer_id);
                this.columnEstimateCode = new global::System.Data.DataColumn("EstimateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateCode);
                this.columnCategoryID = new global::System.Data.DataColumn("CategoryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnPropertyOwner = new global::System.Data.DataColumn("PropertyOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyOwner);
                this.columnPropertyAddress = new global::System.Data.DataColumn("PropertyAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyAddress);
                this.columnPropertyCity = new global::System.Data.DataColumn("PropertyCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyCity);
                this.columnPropertyState = new global::System.Data.DataColumn("PropertyState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyState);
                this.columnPropertyZipcode = new global::System.Data.DataColumn("PropertyZipcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyZipcode);
                this.columnSurveyDateFlag = new global::System.Data.DataColumn("SurveyDateFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyDateFlag);
                this.columnConstTypeID = new global::System.Data.DataColumn("ConstTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstTypeID);
                this.columnSurveyDate = new global::System.Data.DataColumn("SurveyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyDate);
                this.columnSurveyedBy = new global::System.Data.DataColumn("SurveyedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyedBy);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnUserDefined1 = new global::System.Data.DataColumn("UserDefined1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserDefined1);
                this.columnUserDefined2 = new global::System.Data.DataColumn("UserDefined2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserDefined2);
                this.columnUserDefined3 = new global::System.Data.DataColumn("UserDefined3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserDefined3);
                this.columnUserDefined4 = new global::System.Data.DataColumn("UserDefined4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserDefined4);
                this.columnUserDefined5 = new global::System.Data.DataColumn("UserDefined5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserDefined5);
                this.columnUserDefinedDate = new global::System.Data.DataColumn("UserDefinedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserDefinedDate);
                this.columnLocalMultiplierFlag = new global::System.Data.DataColumn("LocalMultiplierFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalMultiplierFlag);
                this.columnLocalMultiplier = new global::System.Data.DataColumn("LocalMultiplier", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalMultiplier);
                this.columnLocalMultiplierAdjPctFlag = new global::System.Data.DataColumn("LocalMultiplierAdjPctFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalMultiplierAdjPctFlag);
                this.columnLocalMultiplierAdjPct = new global::System.Data.DataColumn("LocalMultiplierAdjPct", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalMultiplierAdjPct);
                this.columnArchitectsFeePctFlag = new global::System.Data.DataColumn("ArchitectsFeePctFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchitectsFeePctFlag);
                this.columnArchitectsFeePct = new global::System.Data.DataColumn("ArchitectsFeePct", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchitectsFeePct);
                this.columnRoundingValueFlag = new global::System.Data.DataColumn("RoundingValueFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoundingValueFlag);
                this.columnRoundingValue = new global::System.Data.DataColumn("RoundingValue", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoundingValue);
                this.columnReportDateFlag = new global::System.Data.DataColumn("ReportDateFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDateFlag);
                this.columnReportDate = new global::System.Data.DataColumn("ReportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDate);
                this.columnSingleLineBackDateFlag = new global::System.Data.DataColumn("SingleLineBackDateFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSingleLineBackDateFlag);
                this.columnSingleLineBackDate = new global::System.Data.DataColumn("SingleLineBackDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSingleLineBackDate);
                this.columnBaseDateFlag = new global::System.Data.DataColumn("BaseDateFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseDateFlag);
                this.columnBaseDate = new global::System.Data.DataColumn("BaseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseDate);
                this.columnEffectiveAgeAdjValueFlag = new global::System.Data.DataColumn("EffectiveAgeAdjValueFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveAgeAdjValueFlag);
                this.columnEffectiveAgeAdjValue = new global::System.Data.DataColumn("EffectiveAgeAdjValue", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveAgeAdjValue);
                this.columnDepreciationPctAdjValueFlag = new global::System.Data.DataColumn("DepreciationPctAdjValueFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepreciationPctAdjValueFlag);
                this.columnDepreciationPctAdjValue = new global::System.Data.DataColumn("DepreciationPctAdjValue", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepreciationPctAdjValue);
                this.columnEnergyAdjIDFlag = new global::System.Data.DataColumn("EnergyAdjIDFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyAdjIDFlag);
                this.columnEnergyAdjID = new global::System.Data.DataColumn("EnergyAdjID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyAdjID);
                this.columnFoundationAdjIDFlag = new global::System.Data.DataColumn("FoundationAdjIDFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFoundationAdjIDFlag);
                this.columnFoundationAdjID = new global::System.Data.DataColumn("FoundationAdjID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFoundationAdjID);
                this.columnFloorInsulAdjIDFlag = new global::System.Data.DataColumn("FloorInsulAdjIDFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloorInsulAdjIDFlag);
                this.columnFloorInsulAdjID = new global::System.Data.DataColumn("FloorInsulAdjID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloorInsulAdjID);
                this.columnHillsideAdjIDFlag = new global::System.Data.DataColumn("HillsideAdjIDFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHillsideAdjIDFlag);
                this.columnHillsideAdjID = new global::System.Data.DataColumn("HillsideAdjID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHillsideAdjID);
                this.columnSeismicAdjIDFlag = new global::System.Data.DataColumn("SeismicAdjIDFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeismicAdjIDFlag);
                this.columnSeismicAdjID = new global::System.Data.DataColumn("SeismicAdjID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeismicAdjID);
                this.columnWindAdjIDFlag = new global::System.Data.DataColumn("WindAdjIDFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindAdjIDFlag);
                this.columnWindAdjID = new global::System.Data.DataColumn("WindAdjID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindAdjID);
                this.columnStoryHeightFlag = new global::System.Data.DataColumn("StoryHeightFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoryHeightFlag);
                this.columnStoryHeight = new global::System.Data.DataColumn("StoryHeight", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoryHeight);
                this.columnBasementDepthFlag = new global::System.Data.DataColumn("BasementDepthFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasementDepthFlag);
                this.columnBasementDepth = new global::System.Data.DataColumn("BasementDepth", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasementDepth);
                this.columnResTypeNameFlag = new global::System.Data.DataColumn("ResTypeNameFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResTypeNameFlag);
                this.columnResTypeName = new global::System.Data.DataColumn("ResTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResTypeName);
                this.columnResidenceTypeID = new global::System.Data.DataColumn("ResidenceTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidenceTypeID);
                this.columnStyle1ID = new global::System.Data.DataColumn("Style1ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle1ID);
                this.columnStyle1Percent = new global::System.Data.DataColumn("Style1Percent", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle1Percent);
                this.columnStyle2ID = new global::System.Data.DataColumn("Style2ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle2ID);
                this.columnStyle2Percent = new global::System.Data.DataColumn("Style2Percent", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle2Percent);
                this.columnTotalFloorArea = new global::System.Data.DataColumn("TotalFloorArea", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalFloorArea);
                this.columnApartmentUnits = new global::System.Data.DataColumn("ApartmentUnits", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApartmentUnits);
                this.columnQualityValue = new global::System.Data.DataColumn("QualityValue", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualityValue);
                this.columnConditionValue = new global::System.Data.DataColumn("ConditionValue", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConditionValue);
                this.columnEffectiveAge = new global::System.Data.DataColumn("EffectiveAge", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveAge);
                this.columnTypicalLife = new global::System.Data.DataColumn("TypicalLife", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypicalLife);
                this.columnDeprecPhyFunDollars = new global::System.Data.DataColumn("DeprecPhyFunDollars", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprecPhyFunDollars);
                this.columnDeprecPhysicalDollars = new global::System.Data.DataColumn("DeprecPhysicalDollars", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprecPhysicalDollars);
                this.columnDeprecFunctionalDollars = new global::System.Data.DataColumn("DeprecFunctionalDollars", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprecFunctionalDollars);
                this.columnDeprecExternalDollars = new global::System.Data.DataColumn("DeprecExternalDollars", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprecExternalDollars);
                this.columnDeprecPhyFunPct = new global::System.Data.DataColumn("DeprecPhyFunPct", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprecPhyFunPct);
                this.columnDeprecPhysicalPct = new global::System.Data.DataColumn("DeprecPhysicalPct", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprecPhysicalPct);
                this.columnDeprecFunctionalPct = new global::System.Data.DataColumn("DeprecFunctionalPct", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprecFunctionalPct);
                this.columnDeprecExternalPct = new global::System.Data.DataColumn("DeprecExternalPct", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprecExternalPct);
                this.columnDeprecTypeID = new global::System.Data.DataColumn("DeprecTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprecTypeID);
                this.columnDeprecPercentFlag = new global::System.Data.DataColumn("DeprecPercentFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprecPercentFlag);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnModifyDate = new global::System.Data.DataColumn("ModifyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDate);
                this.columnCalculateDate = new global::System.Data.DataColumn("CalculateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalculateDate);
                this.columnPrintDate = new global::System.Data.DataColumn("PrintDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintDate);
                this.columnImportDate = new global::System.Data.DataColumn("ImportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportDate);
                this.columnCalcCostDataDate = new global::System.Data.DataColumn("CalcCostDataDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalcCostDataDate);
                this.columnCostAsOf = new global::System.Data.DataColumn("CostAsOf", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostAsOf);
                this.columnLastOpenedDate = new global::System.Data.DataColumn("LastOpenedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastOpenedDate);
                this.columnStyle1Length = new global::System.Data.DataColumn("Style1Length", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle1Length);
                this.columnStyle1Width = new global::System.Data.DataColumn("Style1Width", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle1Width);
                this.columnStyle2Length = new global::System.Data.DataColumn("Style2Length", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle2Length);
                this.columnStyle2Width = new global::System.Data.DataColumn("Style2Width", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle2Width);
                this.columnWallEnergyAdjIDFlag = new global::System.Data.DataColumn("WallEnergyAdjIDFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWallEnergyAdjIDFlag);
                this.columnWallEnergyAdjID = new global::System.Data.DataColumn("WallEnergyAdjID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWallEnergyAdjID);
                this.columnRegionalMultiplierFlag = new global::System.Data.DataColumn("RegionalMultiplierFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionalMultiplierFlag);
                this.columnRegionalMultiplier = new global::System.Data.DataColumn("RegionalMultiplier", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionalMultiplier);
                this.columnMfgMultiplierFlag = new global::System.Data.DataColumn("MfgMultiplierFlag", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMfgMultiplierFlag);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnID.ReadOnly = true;
                this.columncustomer_id.ReadOnly = true;
                this.columnEstimateCode.ReadOnly = true;
                this.columnEstimateCode.MaxLength = 50;
                this.columnCategoryID.ReadOnly = true;
                this.columnUserID.ReadOnly = true;
                this.columnUserID.MaxLength = 50;
                this.columnPropertyOwner.ReadOnly = true;
                this.columnPropertyOwner.MaxLength = 50;
                this.columnPropertyAddress.ReadOnly = true;
                this.columnPropertyAddress.MaxLength = 50;
                this.columnPropertyCity.ReadOnly = true;
                this.columnPropertyCity.MaxLength = 50;
                this.columnPropertyState.ReadOnly = true;
                this.columnPropertyState.MaxLength = 50;
                this.columnPropertyZipcode.ReadOnly = true;
                this.columnPropertyZipcode.MaxLength = 50;
                this.columnSurveyDateFlag.ReadOnly = true;
                this.columnConstTypeID.ReadOnly = true;
                this.columnSurveyDate.ReadOnly = true;
                this.columnSurveyedBy.ReadOnly = true;
                this.columnSurveyedBy.MaxLength = 50;
                this.columnComment.ReadOnly = true;
                this.columnComment.MaxLength = 50;
                this.columnUserDefined1.ReadOnly = true;
                this.columnUserDefined1.MaxLength = 50;
                this.columnUserDefined2.ReadOnly = true;
                this.columnUserDefined2.MaxLength = 50;
                this.columnUserDefined3.ReadOnly = true;
                this.columnUserDefined3.MaxLength = 50;
                this.columnUserDefined4.ReadOnly = true;
                this.columnUserDefined4.MaxLength = 50;
                this.columnUserDefined5.ReadOnly = true;
                this.columnUserDefined5.MaxLength = 50;
                this.columnUserDefinedDate.ReadOnly = true;
                this.columnLocalMultiplierFlag.ReadOnly = true;
                this.columnLocalMultiplier.ReadOnly = true;
                this.columnLocalMultiplierAdjPctFlag.ReadOnly = true;
                this.columnLocalMultiplierAdjPct.ReadOnly = true;
                this.columnArchitectsFeePctFlag.ReadOnly = true;
                this.columnArchitectsFeePct.ReadOnly = true;
                this.columnRoundingValueFlag.ReadOnly = true;
                this.columnRoundingValue.ReadOnly = true;
                this.columnReportDateFlag.ReadOnly = true;
                this.columnReportDate.ReadOnly = true;
                this.columnSingleLineBackDateFlag.ReadOnly = true;
                this.columnSingleLineBackDate.ReadOnly = true;
                this.columnBaseDateFlag.ReadOnly = true;
                this.columnBaseDate.ReadOnly = true;
                this.columnEffectiveAgeAdjValueFlag.ReadOnly = true;
                this.columnEffectiveAgeAdjValue.ReadOnly = true;
                this.columnDepreciationPctAdjValueFlag.ReadOnly = true;
                this.columnDepreciationPctAdjValue.ReadOnly = true;
                this.columnEnergyAdjIDFlag.ReadOnly = true;
                this.columnEnergyAdjID.ReadOnly = true;
                this.columnFoundationAdjIDFlag.ReadOnly = true;
                this.columnFoundationAdjID.ReadOnly = true;
                this.columnFloorInsulAdjIDFlag.ReadOnly = true;
                this.columnFloorInsulAdjID.ReadOnly = true;
                this.columnHillsideAdjIDFlag.ReadOnly = true;
                this.columnHillsideAdjID.ReadOnly = true;
                this.columnSeismicAdjIDFlag.ReadOnly = true;
                this.columnSeismicAdjID.ReadOnly = true;
                this.columnWindAdjIDFlag.ReadOnly = true;
                this.columnWindAdjID.ReadOnly = true;
                this.columnStoryHeightFlag.ReadOnly = true;
                this.columnStoryHeight.ReadOnly = true;
                this.columnBasementDepthFlag.ReadOnly = true;
                this.columnBasementDepth.ReadOnly = true;
                this.columnResTypeNameFlag.ReadOnly = true;
                this.columnResTypeName.ReadOnly = true;
                this.columnResTypeName.MaxLength = 50;
                this.columnResidenceTypeID.ReadOnly = true;
                this.columnStyle1ID.ReadOnly = true;
                this.columnStyle1Percent.ReadOnly = true;
                this.columnStyle2ID.ReadOnly = true;
                this.columnStyle2Percent.ReadOnly = true;
                this.columnTotalFloorArea.ReadOnly = true;
                this.columnApartmentUnits.ReadOnly = true;
                this.columnQualityValue.ReadOnly = true;
                this.columnConditionValue.ReadOnly = true;
                this.columnEffectiveAge.ReadOnly = true;
                this.columnTypicalLife.ReadOnly = true;
                this.columnDeprecPhyFunDollars.ReadOnly = true;
                this.columnDeprecPhysicalDollars.ReadOnly = true;
                this.columnDeprecFunctionalDollars.ReadOnly = true;
                this.columnDeprecExternalDollars.ReadOnly = true;
                this.columnDeprecPhyFunPct.ReadOnly = true;
                this.columnDeprecPhysicalPct.ReadOnly = true;
                this.columnDeprecFunctionalPct.ReadOnly = true;
                this.columnDeprecExternalPct.ReadOnly = true;
                this.columnDeprecTypeID.ReadOnly = true;
                this.columnDeprecPercentFlag.ReadOnly = true;
                this.columnCreateDate.ReadOnly = true;
                this.columnModifyDate.ReadOnly = true;
                this.columnCalculateDate.ReadOnly = true;
                this.columnPrintDate.ReadOnly = true;
                this.columnImportDate.ReadOnly = true;
                this.columnCalcCostDataDate.ReadOnly = true;
                this.columnCostAsOf.ReadOnly = true;
                this.columnLastOpenedDate.ReadOnly = true;
                this.columnStyle1Length.ReadOnly = true;
                this.columnStyle1Width.ReadOnly = true;
                this.columnStyle2Length.ReadOnly = true;
                this.columnStyle2Width.ReadOnly = true;
                this.columnWallEnergyAdjIDFlag.ReadOnly = true;
                this.columnWallEnergyAdjID.ReadOnly = true;
                this.columnRegionalMultiplierFlag.ReadOnly = true;
                this.columnRegionalMultiplier.ReadOnly = true;
                this.columnMfgMultiplierFlag.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateRow NewEstimateRow() {
                return ((EstimateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EstimateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EstimateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EstimateRowChanged != null)) {
                    this.EstimateRowChanged(this, new EstimateRowChangeEvent(((EstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EstimateRowChanging != null)) {
                    this.EstimateRowChanging(this, new EstimateRowChangeEvent(((EstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EstimateRowDeleted != null)) {
                    this.EstimateRowDeleted(this, new EstimateRowChangeEvent(((EstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EstimateRowDeleting != null)) {
                    this.EstimateRowDeleting(this, new EstimateRowChangeEvent(((EstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEstimateRow(EstimateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EstimateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_FileDataTable : global::System.Data.TypedTableBase<tTS_FileRow> {
            
            private global::System.Data.DataColumn columnFileID;
            
            private global::System.Data.DataColumn columnExtension;
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnKeyID;
            
            private global::System.Data.DataColumn columnFileTypeID;
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnIsPrimary;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnEventDate;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnIsPublic;
            
            private global::System.Data.DataColumn columnIsRoll;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnLinkType;
            
            private global::System.Data.DataColumn columnAURL;
            
            private global::System.Data.DataColumn columnPFileID;
            
            private global::System.Data.DataColumn columnUpdateDate;
            
            private global::System.Data.DataColumn columnSketchPage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FileDataTable() {
                this.TableName = "tTS_File";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FileDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_FileDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileIDColumn {
                get {
                    return this.columnFileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtensionColumn {
                get {
                    return this.columnExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeyIDColumn {
                get {
                    return this.columnKeyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileTypeIDColumn {
                get {
                    return this.columnFileTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPrimaryColumn {
                get {
                    return this.columnIsPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventDateColumn {
                get {
                    return this.columnEventDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPublicColumn {
                get {
                    return this.columnIsPublic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRollColumn {
                get {
                    return this.columnIsRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinkTypeColumn {
                get {
                    return this.columnLinkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AURLColumn {
                get {
                    return this.columnAURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PFileIDColumn {
                get {
                    return this.columnPFileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateColumn {
                get {
                    return this.columnUpdateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SketchPageColumn {
                get {
                    return this.columnSketchPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FileRow this[int index] {
                get {
                    return ((tTS_FileRow)(this.Rows[index]));
                }
            }
            
            public event tTS_FileRowChangeEventHandler tTS_FileRowChanging;
            
            public event tTS_FileRowChangeEventHandler tTS_FileRowChanged;
            
            public event tTS_FileRowChangeEventHandler tTS_FileRowDeleting;
            
            public event tTS_FileRowChangeEventHandler tTS_FileRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_FileRow(tTS_FileRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FileRow AddtTS_FileRow(
                        int FileID, 
                        string Extension, 
                        int Form, 
                        int KeyID, 
                        short FileTypeID, 
                        string Source, 
                        bool IsPrimary, 
                        string Description, 
                        System.DateTime EventDate, 
                        int UserID, 
                        bool IsPublic, 
                        bool IsRoll, 
                        short ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        byte LinkType, 
                        string AURL, 
                        int PFileID, 
                        System.DateTime UpdateDate, 
                        int SketchPage) {
                tTS_FileRow rowtTS_FileRow = ((tTS_FileRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FileID,
                        Extension,
                        Form,
                        KeyID,
                        FileTypeID,
                        Source,
                        IsPrimary,
                        Description,
                        EventDate,
                        UserID,
                        IsPublic,
                        IsRoll,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        LinkType,
                        AURL,
                        PFileID,
                        UpdateDate,
                        SketchPage};
                rowtTS_FileRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_FileRow);
                return rowtTS_FileRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_FileDataTable cln = ((tTS_FileDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_FileDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFileID = base.Columns["FileID"];
                this.columnExtension = base.Columns["Extension"];
                this.columnForm = base.Columns["Form"];
                this.columnKeyID = base.Columns["KeyID"];
                this.columnFileTypeID = base.Columns["FileTypeID"];
                this.columnSource = base.Columns["Source"];
                this.columnIsPrimary = base.Columns["IsPrimary"];
                this.columnDescription = base.Columns["Description"];
                this.columnEventDate = base.Columns["EventDate"];
                this.columnUserID = base.Columns["UserID"];
                this.columnIsPublic = base.Columns["IsPublic"];
                this.columnIsRoll = base.Columns["IsRoll"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnLinkType = base.Columns["LinkType"];
                this.columnAURL = base.Columns["AURL"];
                this.columnPFileID = base.Columns["PFileID"];
                this.columnUpdateDate = base.Columns["UpdateDate"];
                this.columnSketchPage = base.Columns["SketchPage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFileID = new global::System.Data.DataColumn("FileID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileID);
                this.columnExtension = new global::System.Data.DataColumn("Extension", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtension);
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnKeyID = new global::System.Data.DataColumn("KeyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyID);
                this.columnFileTypeID = new global::System.Data.DataColumn("FileTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileTypeID);
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnIsPrimary = new global::System.Data.DataColumn("IsPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPrimary);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnEventDate = new global::System.Data.DataColumn("EventDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventDate);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnIsPublic = new global::System.Data.DataColumn("IsPublic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPublic);
                this.columnIsRoll = new global::System.Data.DataColumn("IsRoll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRoll);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnLinkType = new global::System.Data.DataColumn("LinkType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkType);
                this.columnAURL = new global::System.Data.DataColumn("AURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAURL);
                this.columnPFileID = new global::System.Data.DataColumn("PFileID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPFileID);
                this.columnUpdateDate = new global::System.Data.DataColumn("UpdateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDate);
                this.columnSketchPage = new global::System.Data.DataColumn("SketchPage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSketchPage);
                this.columnExtension.MaxLength = 6;
                this.columnSource.MaxLength = 500;
                this.columnDescription.MaxLength = 500;
                this.columnAURL.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FileRow NewtTS_FileRow() {
                return ((tTS_FileRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_FileRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_FileRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_FileRowChanged != null)) {
                    this.tTS_FileRowChanged(this, new tTS_FileRowChangeEvent(((tTS_FileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_FileRowChanging != null)) {
                    this.tTS_FileRowChanging(this, new tTS_FileRowChangeEvent(((tTS_FileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_FileRowDeleted != null)) {
                    this.tTS_FileRowDeleted(this, new tTS_FileRowChangeEvent(((tTS_FileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_FileRowDeleting != null)) {
                    this.tTS_FileRowDeleting(this, new tTS_FileRowChangeEvent(((tTS_FileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_FileRow(tTS_FileRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_FileDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_LandValuesDataTable : global::System.Data.TypedTableBase<tAA_LandValuesRow> {
            
            private global::System.Data.DataColumn columnLuVID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnNBHDID;
            
            private global::System.Data.DataColumn columnLandCode;
            
            private global::System.Data.DataColumn columnUnitType;
            
            private global::System.Data.DataColumn columnBaseValue;
            
            private global::System.Data.DataColumn columnBreak1;
            
            private global::System.Data.DataColumn columnValue1;
            
            private global::System.Data.DataColumn columnBreak2;
            
            private global::System.Data.DataColumn columnValue2;
            
            private global::System.Data.DataColumn columnBreak3;
            
            private global::System.Data.DataColumn columnValue3;
            
            private global::System.Data.DataColumn columnBreak4;
            
            private global::System.Data.DataColumn columnValue4;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnUseBaseValue;
            
            private global::System.Data.DataColumn columnMrktMultiplier;
            
            private global::System.Data.DataColumn columnUseMultiplier;
            
            private global::System.Data.DataColumn columnVformula;
            
            private global::System.Data.DataColumn columnIsAgland;
            
            private global::System.Data.DataColumn columnSubClass;
            
            private global::System.Data.DataColumn columnCropRate;
            
            private global::System.Data.DataColumn columnNonCropRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandValuesDataTable() {
                this.TableName = "tAA_LandValues";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandValuesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_LandValuesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LuVIDColumn {
                get {
                    return this.columnLuVID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandCodeColumn {
                get {
                    return this.columnLandCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitTypeColumn {
                get {
                    return this.columnUnitType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseValueColumn {
                get {
                    return this.columnBaseValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Break1Column {
                get {
                    return this.columnBreak1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value1Column {
                get {
                    return this.columnValue1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Break2Column {
                get {
                    return this.columnBreak2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value2Column {
                get {
                    return this.columnValue2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Break3Column {
                get {
                    return this.columnBreak3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value3Column {
                get {
                    return this.columnValue3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Break4Column {
                get {
                    return this.columnBreak4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value4Column {
                get {
                    return this.columnValue4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseBaseValueColumn {
                get {
                    return this.columnUseBaseValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MrktMultiplierColumn {
                get {
                    return this.columnMrktMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseMultiplierColumn {
                get {
                    return this.columnUseMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VformulaColumn {
                get {
                    return this.columnVformula;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAglandColumn {
                get {
                    return this.columnIsAgland;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubClassColumn {
                get {
                    return this.columnSubClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CropRateColumn {
                get {
                    return this.columnCropRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonCropRateColumn {
                get {
                    return this.columnNonCropRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandValuesRow this[int index] {
                get {
                    return ((tAA_LandValuesRow)(this.Rows[index]));
                }
            }
            
            public event tAA_LandValuesRowChangeEventHandler tAA_LandValuesRowChanging;
            
            public event tAA_LandValuesRowChangeEventHandler tAA_LandValuesRowChanged;
            
            public event tAA_LandValuesRowChangeEventHandler tAA_LandValuesRowDeleting;
            
            public event tAA_LandValuesRowChangeEventHandler tAA_LandValuesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_LandValuesRow(tAA_LandValuesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandValuesRow AddtAA_LandValuesRow(
                        int LuVID, 
                        short RollYear, 
                        int NBHDID, 
                        string LandCode, 
                        string UnitType, 
                        decimal BaseValue, 
                        decimal Break1, 
                        decimal Value1, 
                        decimal Break2, 
                        decimal Value2, 
                        decimal Break3, 
                        decimal Value3, 
                        decimal Break4, 
                        decimal Value4, 
                        short ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        decimal UseBaseValue, 
                        decimal MrktMultiplier, 
                        decimal UseMultiplier, 
                        string Vformula, 
                        bool IsAgland, 
                        string SubClass, 
                        decimal CropRate, 
                        decimal NonCropRate) {
                tAA_LandValuesRow rowtAA_LandValuesRow = ((tAA_LandValuesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LuVID,
                        RollYear,
                        NBHDID,
                        LandCode,
                        UnitType,
                        BaseValue,
                        Break1,
                        Value1,
                        Break2,
                        Value2,
                        Break3,
                        Value3,
                        Break4,
                        Value4,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        UseBaseValue,
                        MrktMultiplier,
                        UseMultiplier,
                        Vformula,
                        IsAgland,
                        SubClass,
                        CropRate,
                        NonCropRate};
                rowtAA_LandValuesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_LandValuesRow);
                return rowtAA_LandValuesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_LandValuesDataTable cln = ((tAA_LandValuesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_LandValuesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLuVID = base.Columns["LuVID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnLandCode = base.Columns["LandCode"];
                this.columnUnitType = base.Columns["UnitType"];
                this.columnBaseValue = base.Columns["BaseValue"];
                this.columnBreak1 = base.Columns["Break1"];
                this.columnValue1 = base.Columns["Value1"];
                this.columnBreak2 = base.Columns["Break2"];
                this.columnValue2 = base.Columns["Value2"];
                this.columnBreak3 = base.Columns["Break3"];
                this.columnValue3 = base.Columns["Value3"];
                this.columnBreak4 = base.Columns["Break4"];
                this.columnValue4 = base.Columns["Value4"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnUseBaseValue = base.Columns["UseBaseValue"];
                this.columnMrktMultiplier = base.Columns["MrktMultiplier"];
                this.columnUseMultiplier = base.Columns["UseMultiplier"];
                this.columnVformula = base.Columns["Vformula"];
                this.columnIsAgland = base.Columns["IsAgland"];
                this.columnSubClass = base.Columns["SubClass"];
                this.columnCropRate = base.Columns["CropRate"];
                this.columnNonCropRate = base.Columns["NonCropRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLuVID = new global::System.Data.DataColumn("LuVID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLuVID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnNBHDID = new global::System.Data.DataColumn("NBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnLandCode = new global::System.Data.DataColumn("LandCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCode);
                this.columnUnitType = new global::System.Data.DataColumn("UnitType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitType);
                this.columnBaseValue = new global::System.Data.DataColumn("BaseValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseValue);
                this.columnBreak1 = new global::System.Data.DataColumn("Break1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreak1);
                this.columnValue1 = new global::System.Data.DataColumn("Value1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue1);
                this.columnBreak2 = new global::System.Data.DataColumn("Break2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreak2);
                this.columnValue2 = new global::System.Data.DataColumn("Value2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue2);
                this.columnBreak3 = new global::System.Data.DataColumn("Break3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreak3);
                this.columnValue3 = new global::System.Data.DataColumn("Value3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue3);
                this.columnBreak4 = new global::System.Data.DataColumn("Break4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreak4);
                this.columnValue4 = new global::System.Data.DataColumn("Value4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue4);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnUseBaseValue = new global::System.Data.DataColumn("UseBaseValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseBaseValue);
                this.columnMrktMultiplier = new global::System.Data.DataColumn("MrktMultiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMrktMultiplier);
                this.columnUseMultiplier = new global::System.Data.DataColumn("UseMultiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseMultiplier);
                this.columnVformula = new global::System.Data.DataColumn("Vformula", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVformula);
                this.columnIsAgland = new global::System.Data.DataColumn("IsAgland", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAgland);
                this.columnSubClass = new global::System.Data.DataColumn("SubClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubClass);
                this.columnCropRate = new global::System.Data.DataColumn("CropRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCropRate);
                this.columnNonCropRate = new global::System.Data.DataColumn("NonCropRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonCropRate);
                this.columnLuVID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnNBHDID.ReadOnly = true;
                this.columnLandCode.ReadOnly = true;
                this.columnLandCode.MaxLength = 20;
                this.columnUnitType.ReadOnly = true;
                this.columnUnitType.MaxLength = 20;
                this.columnBaseValue.ReadOnly = true;
                this.columnBreak1.ReadOnly = true;
                this.columnValue1.ReadOnly = true;
                this.columnBreak2.ReadOnly = true;
                this.columnValue2.ReadOnly = true;
                this.columnBreak3.ReadOnly = true;
                this.columnValue3.ReadOnly = true;
                this.columnBreak4.ReadOnly = true;
                this.columnValue4.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnUseBaseValue.ReadOnly = true;
                this.columnMrktMultiplier.ReadOnly = true;
                this.columnUseMultiplier.ReadOnly = true;
                this.columnVformula.ReadOnly = true;
                this.columnVformula.MaxLength = 1000;
                this.columnIsAgland.ReadOnly = true;
                this.columnSubClass.ReadOnly = true;
                this.columnSubClass.MaxLength = 10;
                this.columnCropRate.ReadOnly = true;
                this.columnNonCropRate.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandValuesRow NewtAA_LandValuesRow() {
                return ((tAA_LandValuesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_LandValuesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_LandValuesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_LandValuesRowChanged != null)) {
                    this.tAA_LandValuesRowChanged(this, new tAA_LandValuesRowChangeEvent(((tAA_LandValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_LandValuesRowChanging != null)) {
                    this.tAA_LandValuesRowChanging(this, new tAA_LandValuesRowChangeEvent(((tAA_LandValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_LandValuesRowDeleted != null)) {
                    this.tAA_LandValuesRowDeleted(this, new tAA_LandValuesRowChangeEvent(((tAA_LandValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_LandValuesRowDeleting != null)) {
                    this.tAA_LandValuesRowDeleting(this, new tAA_LandValuesRowChangeEvent(((tAA_LandValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_LandValuesRow(tAA_LandValuesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_LandValuesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_LandDataTable : global::System.Data.TypedTableBase<tAA_LandRow> {
            
            private global::System.Data.DataColumn columnLUID;
            
            private global::System.Data.DataColumn columnValueSliceID;
            
            private global::System.Data.DataColumn columnLandTypeID1;
            
            private global::System.Data.DataColumn columnLandTypeID2;
            
            private global::System.Data.DataColumn columnLandTypeID3;
            
            private global::System.Data.DataColumn columnLandCode;
            
            private global::System.Data.DataColumn columnReportAS;
            
            private global::System.Data.DataColumn columnUnitType;
            
            private global::System.Data.DataColumn columnUnits;
            
            private global::System.Data.DataColumn columnAdjustmentType;
            
            private global::System.Data.DataColumn columnAdjustment;
            
            private global::System.Data.DataColumn columnAdjDescription;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnUseAdjustmentType;
            
            private global::System.Data.DataColumn columnUseAdjustment;
            
            private global::System.Data.DataColumn columnUseAdjDescription;
            
            private global::System.Data.DataColumn columnLotWidth;
            
            private global::System.Data.DataColumn columnLotDepth;
            
            private global::System.Data.DataColumn columnBaseMrktValue;
            
            private global::System.Data.DataColumn columnFinalMrktValue;
            
            private global::System.Data.DataColumn columnFinalUseValue;
            
            private global::System.Data.DataColumn columnLandShape;
            
            private global::System.Data.DataColumn columnFrontage;
            
            private global::System.Data.DataColumn columnProgramID;
            
            private global::System.Data.DataColumn columnLotWidthTemp;
            
            private global::System.Data.DataColumn columnLotDepthTemp;
            
            private global::System.Data.DataColumn columnSrAcres;
            
            private global::System.Data.DataColumn columnWeightedRating;
            
            private global::System.Data.DataColumn columnBaseValuePerUnit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandDataTable() {
                this.TableName = "tAA_Land";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_LandDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LUIDColumn {
                get {
                    return this.columnLUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueSliceIDColumn {
                get {
                    return this.columnValueSliceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID1Column {
                get {
                    return this.columnLandTypeID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID2Column {
                get {
                    return this.columnLandTypeID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID3Column {
                get {
                    return this.columnLandTypeID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandCodeColumn {
                get {
                    return this.columnLandCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportASColumn {
                get {
                    return this.columnReportAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitTypeColumn {
                get {
                    return this.columnUnitType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitsColumn {
                get {
                    return this.columnUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustmentTypeColumn {
                get {
                    return this.columnAdjustmentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustmentColumn {
                get {
                    return this.columnAdjustment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjDescriptionColumn {
                get {
                    return this.columnAdjDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseAdjustmentTypeColumn {
                get {
                    return this.columnUseAdjustmentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseAdjustmentColumn {
                get {
                    return this.columnUseAdjustment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseAdjDescriptionColumn {
                get {
                    return this.columnUseAdjDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LotWidthColumn {
                get {
                    return this.columnLotWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LotDepthColumn {
                get {
                    return this.columnLotDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseMrktValueColumn {
                get {
                    return this.columnBaseMrktValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalMrktValueColumn {
                get {
                    return this.columnFinalMrktValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalUseValueColumn {
                get {
                    return this.columnFinalUseValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandShapeColumn {
                get {
                    return this.columnLandShape;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrontageColumn {
                get {
                    return this.columnFrontage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramIDColumn {
                get {
                    return this.columnProgramID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LotWidthTempColumn {
                get {
                    return this.columnLotWidthTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LotDepthTempColumn {
                get {
                    return this.columnLotDepthTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrAcresColumn {
                get {
                    return this.columnSrAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightedRatingColumn {
                get {
                    return this.columnWeightedRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseValuePerUnitColumn {
                get {
                    return this.columnBaseValuePerUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandRow this[int index] {
                get {
                    return ((tAA_LandRow)(this.Rows[index]));
                }
            }
            
            public event tAA_LandRowChangeEventHandler tAA_LandRowChanging;
            
            public event tAA_LandRowChangeEventHandler tAA_LandRowChanged;
            
            public event tAA_LandRowChangeEventHandler tAA_LandRowDeleting;
            
            public event tAA_LandRowChangeEventHandler tAA_LandRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_LandRow(tAA_LandRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandRow AddtAA_LandRow(
                        int LUID, 
                        int ValueSliceID, 
                        int LandTypeID1, 
                        int LandTypeID2, 
                        int LandTypeID3, 
                        string LandCode, 
                        string ReportAS, 
                        string UnitType, 
                        decimal Units, 
                        byte AdjustmentType, 
                        string Adjustment, 
                        string AdjDescription, 
                        short ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        byte UseAdjustmentType, 
                        string UseAdjustment, 
                        string UseAdjDescription, 
                        decimal LotWidth, 
                        decimal LotDepth, 
                        decimal BaseMrktValue, 
                        decimal FinalMrktValue, 
                        decimal FinalUseValue, 
                        string LandShape, 
                        decimal Frontage, 
                        byte ProgramID, 
                        string LotWidthTemp, 
                        string LotDepthTemp, 
                        decimal SrAcres, 
                        decimal WeightedRating, 
                        decimal BaseValuePerUnit) {
                tAA_LandRow rowtAA_LandRow = ((tAA_LandRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LUID,
                        ValueSliceID,
                        LandTypeID1,
                        LandTypeID2,
                        LandTypeID3,
                        LandCode,
                        ReportAS,
                        UnitType,
                        Units,
                        AdjustmentType,
                        Adjustment,
                        AdjDescription,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        UseAdjustmentType,
                        UseAdjustment,
                        UseAdjDescription,
                        LotWidth,
                        LotDepth,
                        BaseMrktValue,
                        FinalMrktValue,
                        FinalUseValue,
                        LandShape,
                        Frontage,
                        ProgramID,
                        LotWidthTemp,
                        LotDepthTemp,
                        SrAcres,
                        WeightedRating,
                        BaseValuePerUnit};
                rowtAA_LandRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_LandRow);
                return rowtAA_LandRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_LandDataTable cln = ((tAA_LandDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_LandDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLUID = base.Columns["LUID"];
                this.columnValueSliceID = base.Columns["ValueSliceID"];
                this.columnLandTypeID1 = base.Columns["LandTypeID1"];
                this.columnLandTypeID2 = base.Columns["LandTypeID2"];
                this.columnLandTypeID3 = base.Columns["LandTypeID3"];
                this.columnLandCode = base.Columns["LandCode"];
                this.columnReportAS = base.Columns["ReportAS"];
                this.columnUnitType = base.Columns["UnitType"];
                this.columnUnits = base.Columns["Units"];
                this.columnAdjustmentType = base.Columns["AdjustmentType"];
                this.columnAdjustment = base.Columns["Adjustment"];
                this.columnAdjDescription = base.Columns["AdjDescription"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnUseAdjustmentType = base.Columns["UseAdjustmentType"];
                this.columnUseAdjustment = base.Columns["UseAdjustment"];
                this.columnUseAdjDescription = base.Columns["UseAdjDescription"];
                this.columnLotWidth = base.Columns["LotWidth"];
                this.columnLotDepth = base.Columns["LotDepth"];
                this.columnBaseMrktValue = base.Columns["BaseMrktValue"];
                this.columnFinalMrktValue = base.Columns["FinalMrktValue"];
                this.columnFinalUseValue = base.Columns["FinalUseValue"];
                this.columnLandShape = base.Columns["LandShape"];
                this.columnFrontage = base.Columns["Frontage"];
                this.columnProgramID = base.Columns["ProgramID"];
                this.columnLotWidthTemp = base.Columns["LotWidthTemp"];
                this.columnLotDepthTemp = base.Columns["LotDepthTemp"];
                this.columnSrAcres = base.Columns["SrAcres"];
                this.columnWeightedRating = base.Columns["WeightedRating"];
                this.columnBaseValuePerUnit = base.Columns["BaseValuePerUnit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLUID = new global::System.Data.DataColumn("LUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLUID);
                this.columnValueSliceID = new global::System.Data.DataColumn("ValueSliceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueSliceID);
                this.columnLandTypeID1 = new global::System.Data.DataColumn("LandTypeID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID1);
                this.columnLandTypeID2 = new global::System.Data.DataColumn("LandTypeID2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID2);
                this.columnLandTypeID3 = new global::System.Data.DataColumn("LandTypeID3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID3);
                this.columnLandCode = new global::System.Data.DataColumn("LandCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCode);
                this.columnReportAS = new global::System.Data.DataColumn("ReportAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportAS);
                this.columnUnitType = new global::System.Data.DataColumn("UnitType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitType);
                this.columnUnits = new global::System.Data.DataColumn("Units", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnits);
                this.columnAdjustmentType = new global::System.Data.DataColumn("AdjustmentType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustmentType);
                this.columnAdjustment = new global::System.Data.DataColumn("Adjustment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustment);
                this.columnAdjDescription = new global::System.Data.DataColumn("AdjDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjDescription);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnUseAdjustmentType = new global::System.Data.DataColumn("UseAdjustmentType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseAdjustmentType);
                this.columnUseAdjustment = new global::System.Data.DataColumn("UseAdjustment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseAdjustment);
                this.columnUseAdjDescription = new global::System.Data.DataColumn("UseAdjDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseAdjDescription);
                this.columnLotWidth = new global::System.Data.DataColumn("LotWidth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotWidth);
                this.columnLotDepth = new global::System.Data.DataColumn("LotDepth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotDepth);
                this.columnBaseMrktValue = new global::System.Data.DataColumn("BaseMrktValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseMrktValue);
                this.columnFinalMrktValue = new global::System.Data.DataColumn("FinalMrktValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalMrktValue);
                this.columnFinalUseValue = new global::System.Data.DataColumn("FinalUseValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalUseValue);
                this.columnLandShape = new global::System.Data.DataColumn("LandShape", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandShape);
                this.columnFrontage = new global::System.Data.DataColumn("Frontage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontage);
                this.columnProgramID = new global::System.Data.DataColumn("ProgramID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramID);
                this.columnLotWidthTemp = new global::System.Data.DataColumn("LotWidthTemp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotWidthTemp);
                this.columnLotDepthTemp = new global::System.Data.DataColumn("LotDepthTemp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotDepthTemp);
                this.columnSrAcres = new global::System.Data.DataColumn("SrAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrAcres);
                this.columnWeightedRating = new global::System.Data.DataColumn("WeightedRating", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeightedRating);
                this.columnBaseValuePerUnit = new global::System.Data.DataColumn("BaseValuePerUnit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseValuePerUnit);
                this.columnLUID.ReadOnly = true;
                this.columnValueSliceID.ReadOnly = true;
                this.columnLandTypeID1.ReadOnly = true;
                this.columnLandTypeID2.ReadOnly = true;
                this.columnLandTypeID3.ReadOnly = true;
                this.columnLandCode.ReadOnly = true;
                this.columnLandCode.MaxLength = 20;
                this.columnReportAS.ReadOnly = true;
                this.columnReportAS.MaxLength = 20;
                this.columnUnitType.ReadOnly = true;
                this.columnUnitType.MaxLength = 20;
                this.columnUnits.ReadOnly = true;
                this.columnAdjustmentType.ReadOnly = true;
                this.columnAdjustment.ReadOnly = true;
                this.columnAdjustment.MaxLength = 20;
                this.columnAdjDescription.ReadOnly = true;
                this.columnAdjDescription.MaxLength = 50;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnUseAdjustmentType.ReadOnly = true;
                this.columnUseAdjustment.ReadOnly = true;
                this.columnUseAdjustment.MaxLength = 20;
                this.columnUseAdjDescription.ReadOnly = true;
                this.columnUseAdjDescription.MaxLength = 50;
                this.columnLotWidth.ReadOnly = true;
                this.columnLotDepth.ReadOnly = true;
                this.columnBaseMrktValue.ReadOnly = true;
                this.columnFinalMrktValue.ReadOnly = true;
                this.columnFinalUseValue.ReadOnly = true;
                this.columnLandShape.ReadOnly = true;
                this.columnLandShape.MaxLength = 20;
                this.columnFrontage.ReadOnly = true;
                this.columnProgramID.ReadOnly = true;
                this.columnLotWidthTemp.ReadOnly = true;
                this.columnLotWidthTemp.MaxLength = 50;
                this.columnLotDepthTemp.ReadOnly = true;
                this.columnLotDepthTemp.MaxLength = 50;
                this.columnSrAcres.ReadOnly = true;
                this.columnWeightedRating.ReadOnly = true;
                this.columnBaseValuePerUnit.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandRow NewtAA_LandRow() {
                return ((tAA_LandRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_LandRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_LandRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_LandRowChanged != null)) {
                    this.tAA_LandRowChanged(this, new tAA_LandRowChangeEvent(((tAA_LandRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_LandRowChanging != null)) {
                    this.tAA_LandRowChanging(this, new tAA_LandRowChangeEvent(((tAA_LandRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_LandRowDeleted != null)) {
                    this.tAA_LandRowDeleted(this, new tAA_LandRowChangeEvent(((tAA_LandRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_LandRowDeleting != null)) {
                    this.tAA_LandRowDeleting(this, new tAA_LandRowChangeEvent(((tAA_LandRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_LandRow(tAA_LandRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_LandDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MiscDataTable : global::System.Data.TypedTableBase<tAA_MiscRow> {
            
            private global::System.Data.DataColumn columnMID;
            
            private global::System.Data.DataColumn columnValueSliceID;
            
            private global::System.Data.DataColumn columnMICodeID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnValueBase;
            
            private global::System.Data.DataColumn columnValueOveride;
            
            private global::System.Data.DataColumn columnDeprYearin;
            
            private global::System.Data.DataColumn columnDeprTableID;
            
            private global::System.Data.DataColumn columnDeprWithPrimary;
            
            private global::System.Data.DataColumn columnDeprPercent;
            
            private global::System.Data.DataColumn columnV01;
            
            private global::System.Data.DataColumn columnV02;
            
            private global::System.Data.DataColumn columnV03;
            
            private global::System.Data.DataColumn columnV04;
            
            private global::System.Data.DataColumn columnV05;
            
            private global::System.Data.DataColumn columnV06;
            
            private global::System.Data.DataColumn columnV07;
            
            private global::System.Data.DataColumn columnV08;
            
            private global::System.Data.DataColumn columnV09;
            
            private global::System.Data.DataColumn columnV10;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnDeprCondition;
            
            private global::System.Data.DataColumn columnDeprQuality;
            
            private global::System.Data.DataColumn columnDeprEconLife;
            
            private global::System.Data.DataColumn columnDeprEAge;
            
            private global::System.Data.DataColumn columnDeprFuncID;
            
            private global::System.Data.DataColumn columnDeprFuncPercent;
            
            private global::System.Data.DataColumn columnPhysDepr;
            
            private global::System.Data.DataColumn columnFuncDepr;
            
            private global::System.Data.DataColumn columnValueFinal;
            
            private global::System.Data.DataColumn columnV11;
            
            private global::System.Data.DataColumn columnV12;
            
            private global::System.Data.DataColumn columnMIChoiceID01;
            
            private global::System.Data.DataColumn columnMIChoiceID02;
            
            private global::System.Data.DataColumn columnMIChoiceID03;
            
            private global::System.Data.DataColumn columnMIChoiceID04;
            
            private global::System.Data.DataColumn columnMIChoiceID05;
            
            private global::System.Data.DataColumn columnMIChoiceID06;
            
            private global::System.Data.DataColumn columnMIChoiceID07;
            
            private global::System.Data.DataColumn columnMIChoiceID08;
            
            private global::System.Data.DataColumn columnMIChoiceID09;
            
            private global::System.Data.DataColumn columnMIChoiceID10;
            
            private global::System.Data.DataColumn columnMIChoiceID11;
            
            private global::System.Data.DataColumn columnMIChoiceID12;
            
            private global::System.Data.DataColumn columnPolygonID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscDataTable() {
                this.TableName = "tAA_Misc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MiscDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MiscDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIDColumn {
                get {
                    return this.columnMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueSliceIDColumn {
                get {
                    return this.columnValueSliceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MICodeIDColumn {
                get {
                    return this.columnMICodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueBaseColumn {
                get {
                    return this.columnValueBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueOverideColumn {
                get {
                    return this.columnValueOveride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprYearinColumn {
                get {
                    return this.columnDeprYearin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprTableIDColumn {
                get {
                    return this.columnDeprTableID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprWithPrimaryColumn {
                get {
                    return this.columnDeprWithPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprPercentColumn {
                get {
                    return this.columnDeprPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V01Column {
                get {
                    return this.columnV01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V02Column {
                get {
                    return this.columnV02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V03Column {
                get {
                    return this.columnV03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V04Column {
                get {
                    return this.columnV04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V05Column {
                get {
                    return this.columnV05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V06Column {
                get {
                    return this.columnV06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V07Column {
                get {
                    return this.columnV07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V08Column {
                get {
                    return this.columnV08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V09Column {
                get {
                    return this.columnV09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V10Column {
                get {
                    return this.columnV10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprConditionColumn {
                get {
                    return this.columnDeprCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprQualityColumn {
                get {
                    return this.columnDeprQuality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprEconLifeColumn {
                get {
                    return this.columnDeprEconLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprEAgeColumn {
                get {
                    return this.columnDeprEAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprFuncIDColumn {
                get {
                    return this.columnDeprFuncID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprFuncPercentColumn {
                get {
                    return this.columnDeprFuncPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhysDeprColumn {
                get {
                    return this.columnPhysDepr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FuncDeprColumn {
                get {
                    return this.columnFuncDepr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueFinalColumn {
                get {
                    return this.columnValueFinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V11Column {
                get {
                    return this.columnV11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V12Column {
                get {
                    return this.columnV12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID01Column {
                get {
                    return this.columnMIChoiceID01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID02Column {
                get {
                    return this.columnMIChoiceID02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID03Column {
                get {
                    return this.columnMIChoiceID03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID04Column {
                get {
                    return this.columnMIChoiceID04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID05Column {
                get {
                    return this.columnMIChoiceID05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID06Column {
                get {
                    return this.columnMIChoiceID06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID07Column {
                get {
                    return this.columnMIChoiceID07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID08Column {
                get {
                    return this.columnMIChoiceID08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID09Column {
                get {
                    return this.columnMIChoiceID09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID10Column {
                get {
                    return this.columnMIChoiceID10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID11Column {
                get {
                    return this.columnMIChoiceID11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID12Column {
                get {
                    return this.columnMIChoiceID12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PolygonIDColumn {
                get {
                    return this.columnPolygonID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscRow this[int index] {
                get {
                    return ((tAA_MiscRow)(this.Rows[index]));
                }
            }
            
            public event tAA_MiscRowChangeEventHandler tAA_MiscRowChanging;
            
            public event tAA_MiscRowChangeEventHandler tAA_MiscRowChanged;
            
            public event tAA_MiscRowChangeEventHandler tAA_MiscRowDeleting;
            
            public event tAA_MiscRowChangeEventHandler tAA_MiscRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MiscRow(tAA_MiscRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscRow AddtAA_MiscRow(
                        int MID, 
                        int ValueSliceID, 
                        int MICodeID, 
                        string Description, 
                        int ValueBase, 
                        int ValueOveride, 
                        short DeprYearin, 
                        int DeprTableID, 
                        bool DeprWithPrimary, 
                        decimal DeprPercent, 
                        decimal V01, 
                        decimal V02, 
                        decimal V03, 
                        decimal V04, 
                        decimal V05, 
                        decimal V06, 
                        decimal V07, 
                        decimal V08, 
                        decimal V09, 
                        decimal V10, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        decimal DeprCondition, 
                        decimal DeprQuality, 
                        byte DeprEconLife, 
                        byte DeprEAge, 
                        byte DeprFuncID, 
                        decimal DeprFuncPercent, 
                        int PhysDepr, 
                        int FuncDepr, 
                        int ValueFinal, 
                        decimal V11, 
                        decimal V12, 
                        int MIChoiceID01, 
                        int MIChoiceID02, 
                        int MIChoiceID03, 
                        int MIChoiceID04, 
                        int MIChoiceID05, 
                        int MIChoiceID06, 
                        int MIChoiceID07, 
                        int MIChoiceID08, 
                        int MIChoiceID09, 
                        int MIChoiceID10, 
                        int MIChoiceID11, 
                        int MIChoiceID12, 
                        int PolygonID) {
                tAA_MiscRow rowtAA_MiscRow = ((tAA_MiscRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MID,
                        ValueSliceID,
                        MICodeID,
                        Description,
                        ValueBase,
                        ValueOveride,
                        DeprYearin,
                        DeprTableID,
                        DeprWithPrimary,
                        DeprPercent,
                        V01,
                        V02,
                        V03,
                        V04,
                        V05,
                        V06,
                        V07,
                        V08,
                        V09,
                        V10,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        DeprCondition,
                        DeprQuality,
                        DeprEconLife,
                        DeprEAge,
                        DeprFuncID,
                        DeprFuncPercent,
                        PhysDepr,
                        FuncDepr,
                        ValueFinal,
                        V11,
                        V12,
                        MIChoiceID01,
                        MIChoiceID02,
                        MIChoiceID03,
                        MIChoiceID04,
                        MIChoiceID05,
                        MIChoiceID06,
                        MIChoiceID07,
                        MIChoiceID08,
                        MIChoiceID09,
                        MIChoiceID10,
                        MIChoiceID11,
                        MIChoiceID12,
                        PolygonID};
                rowtAA_MiscRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MiscRow);
                return rowtAA_MiscRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MiscDataTable cln = ((tAA_MiscDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MiscDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMID = base.Columns["MID"];
                this.columnValueSliceID = base.Columns["ValueSliceID"];
                this.columnMICodeID = base.Columns["MICodeID"];
                this.columnDescription = base.Columns["Description"];
                this.columnValueBase = base.Columns["ValueBase"];
                this.columnValueOveride = base.Columns["ValueOveride"];
                this.columnDeprYearin = base.Columns["DeprYearin"];
                this.columnDeprTableID = base.Columns["DeprTableID"];
                this.columnDeprWithPrimary = base.Columns["DeprWithPrimary"];
                this.columnDeprPercent = base.Columns["DeprPercent"];
                this.columnV01 = base.Columns["V01"];
                this.columnV02 = base.Columns["V02"];
                this.columnV03 = base.Columns["V03"];
                this.columnV04 = base.Columns["V04"];
                this.columnV05 = base.Columns["V05"];
                this.columnV06 = base.Columns["V06"];
                this.columnV07 = base.Columns["V07"];
                this.columnV08 = base.Columns["V08"];
                this.columnV09 = base.Columns["V09"];
                this.columnV10 = base.Columns["V10"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnDeprCondition = base.Columns["DeprCondition"];
                this.columnDeprQuality = base.Columns["DeprQuality"];
                this.columnDeprEconLife = base.Columns["DeprEconLife"];
                this.columnDeprEAge = base.Columns["DeprEAge"];
                this.columnDeprFuncID = base.Columns["DeprFuncID"];
                this.columnDeprFuncPercent = base.Columns["DeprFuncPercent"];
                this.columnPhysDepr = base.Columns["PhysDepr"];
                this.columnFuncDepr = base.Columns["FuncDepr"];
                this.columnValueFinal = base.Columns["ValueFinal"];
                this.columnV11 = base.Columns["V11"];
                this.columnV12 = base.Columns["V12"];
                this.columnMIChoiceID01 = base.Columns["MIChoiceID01"];
                this.columnMIChoiceID02 = base.Columns["MIChoiceID02"];
                this.columnMIChoiceID03 = base.Columns["MIChoiceID03"];
                this.columnMIChoiceID04 = base.Columns["MIChoiceID04"];
                this.columnMIChoiceID05 = base.Columns["MIChoiceID05"];
                this.columnMIChoiceID06 = base.Columns["MIChoiceID06"];
                this.columnMIChoiceID07 = base.Columns["MIChoiceID07"];
                this.columnMIChoiceID08 = base.Columns["MIChoiceID08"];
                this.columnMIChoiceID09 = base.Columns["MIChoiceID09"];
                this.columnMIChoiceID10 = base.Columns["MIChoiceID10"];
                this.columnMIChoiceID11 = base.Columns["MIChoiceID11"];
                this.columnMIChoiceID12 = base.Columns["MIChoiceID12"];
                this.columnPolygonID = base.Columns["PolygonID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMID = new global::System.Data.DataColumn("MID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID);
                this.columnValueSliceID = new global::System.Data.DataColumn("ValueSliceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueSliceID);
                this.columnMICodeID = new global::System.Data.DataColumn("MICodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMICodeID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnValueBase = new global::System.Data.DataColumn("ValueBase", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueBase);
                this.columnValueOveride = new global::System.Data.DataColumn("ValueOveride", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueOveride);
                this.columnDeprYearin = new global::System.Data.DataColumn("DeprYearin", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprYearin);
                this.columnDeprTableID = new global::System.Data.DataColumn("DeprTableID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprTableID);
                this.columnDeprWithPrimary = new global::System.Data.DataColumn("DeprWithPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprWithPrimary);
                this.columnDeprPercent = new global::System.Data.DataColumn("DeprPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprPercent);
                this.columnV01 = new global::System.Data.DataColumn("V01", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV01);
                this.columnV02 = new global::System.Data.DataColumn("V02", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV02);
                this.columnV03 = new global::System.Data.DataColumn("V03", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV03);
                this.columnV04 = new global::System.Data.DataColumn("V04", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV04);
                this.columnV05 = new global::System.Data.DataColumn("V05", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV05);
                this.columnV06 = new global::System.Data.DataColumn("V06", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV06);
                this.columnV07 = new global::System.Data.DataColumn("V07", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV07);
                this.columnV08 = new global::System.Data.DataColumn("V08", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV08);
                this.columnV09 = new global::System.Data.DataColumn("V09", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV09);
                this.columnV10 = new global::System.Data.DataColumn("V10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV10);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnDeprCondition = new global::System.Data.DataColumn("DeprCondition", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprCondition);
                this.columnDeprQuality = new global::System.Data.DataColumn("DeprQuality", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprQuality);
                this.columnDeprEconLife = new global::System.Data.DataColumn("DeprEconLife", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprEconLife);
                this.columnDeprEAge = new global::System.Data.DataColumn("DeprEAge", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprEAge);
                this.columnDeprFuncID = new global::System.Data.DataColumn("DeprFuncID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprFuncID);
                this.columnDeprFuncPercent = new global::System.Data.DataColumn("DeprFuncPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprFuncPercent);
                this.columnPhysDepr = new global::System.Data.DataColumn("PhysDepr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysDepr);
                this.columnFuncDepr = new global::System.Data.DataColumn("FuncDepr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuncDepr);
                this.columnValueFinal = new global::System.Data.DataColumn("ValueFinal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueFinal);
                this.columnV11 = new global::System.Data.DataColumn("V11", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV11);
                this.columnV12 = new global::System.Data.DataColumn("V12", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV12);
                this.columnMIChoiceID01 = new global::System.Data.DataColumn("MIChoiceID01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID01);
                this.columnMIChoiceID02 = new global::System.Data.DataColumn("MIChoiceID02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID02);
                this.columnMIChoiceID03 = new global::System.Data.DataColumn("MIChoiceID03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID03);
                this.columnMIChoiceID04 = new global::System.Data.DataColumn("MIChoiceID04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID04);
                this.columnMIChoiceID05 = new global::System.Data.DataColumn("MIChoiceID05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID05);
                this.columnMIChoiceID06 = new global::System.Data.DataColumn("MIChoiceID06", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID06);
                this.columnMIChoiceID07 = new global::System.Data.DataColumn("MIChoiceID07", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID07);
                this.columnMIChoiceID08 = new global::System.Data.DataColumn("MIChoiceID08", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID08);
                this.columnMIChoiceID09 = new global::System.Data.DataColumn("MIChoiceID09", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID09);
                this.columnMIChoiceID10 = new global::System.Data.DataColumn("MIChoiceID10", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID10);
                this.columnMIChoiceID11 = new global::System.Data.DataColumn("MIChoiceID11", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID11);
                this.columnMIChoiceID12 = new global::System.Data.DataColumn("MIChoiceID12", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID12);
                this.columnPolygonID = new global::System.Data.DataColumn("PolygonID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolygonID);
                this.columnMID.ReadOnly = true;
                this.columnValueSliceID.ReadOnly = true;
                this.columnMICodeID.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 40;
                this.columnValueBase.ReadOnly = true;
                this.columnValueOveride.ReadOnly = true;
                this.columnDeprYearin.ReadOnly = true;
                this.columnDeprTableID.ReadOnly = true;
                this.columnDeprWithPrimary.ReadOnly = true;
                this.columnDeprPercent.ReadOnly = true;
                this.columnV01.ReadOnly = true;
                this.columnV02.ReadOnly = true;
                this.columnV03.ReadOnly = true;
                this.columnV04.ReadOnly = true;
                this.columnV05.ReadOnly = true;
                this.columnV06.ReadOnly = true;
                this.columnV07.ReadOnly = true;
                this.columnV08.ReadOnly = true;
                this.columnV09.ReadOnly = true;
                this.columnV10.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnDeprCondition.ReadOnly = true;
                this.columnDeprQuality.ReadOnly = true;
                this.columnDeprEconLife.ReadOnly = true;
                this.columnDeprEAge.ReadOnly = true;
                this.columnDeprFuncID.ReadOnly = true;
                this.columnDeprFuncPercent.ReadOnly = true;
                this.columnPhysDepr.ReadOnly = true;
                this.columnFuncDepr.ReadOnly = true;
                this.columnValueFinal.ReadOnly = true;
                this.columnV11.ReadOnly = true;
                this.columnV12.ReadOnly = true;
                this.columnMIChoiceID01.ReadOnly = true;
                this.columnMIChoiceID02.ReadOnly = true;
                this.columnMIChoiceID03.ReadOnly = true;
                this.columnMIChoiceID04.ReadOnly = true;
                this.columnMIChoiceID05.ReadOnly = true;
                this.columnMIChoiceID06.ReadOnly = true;
                this.columnMIChoiceID07.ReadOnly = true;
                this.columnMIChoiceID08.ReadOnly = true;
                this.columnMIChoiceID09.ReadOnly = true;
                this.columnMIChoiceID10.ReadOnly = true;
                this.columnMIChoiceID11.ReadOnly = true;
                this.columnMIChoiceID12.ReadOnly = true;
                this.columnPolygonID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscRow NewtAA_MiscRow() {
                return ((tAA_MiscRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MiscRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MiscRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MiscRowChanged != null)) {
                    this.tAA_MiscRowChanged(this, new tAA_MiscRowChangeEvent(((tAA_MiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MiscRowChanging != null)) {
                    this.tAA_MiscRowChanging(this, new tAA_MiscRowChangeEvent(((tAA_MiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MiscRowDeleted != null)) {
                    this.tAA_MiscRowDeleted(this, new tAA_MiscRowChangeEvent(((tAA_MiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MiscRowDeleting != null)) {
                    this.tAA_MiscRowDeleting(this, new tAA_MiscRowChangeEvent(((tAA_MiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MiscRow(tAA_MiscRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MiscDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MSC_EstimateDataTable : global::System.Data.TypedTableBase<tAA_MSC_EstimateRow> {
            
            private global::System.Data.DataColumn columnEstimateID;
            
            private global::System.Data.DataColumn columnEstimateUserID;
            
            private global::System.Data.DataColumn columnEstimateCode;
            
            private global::System.Data.DataColumn columnVersion_tp;
            
            private global::System.Data.DataColumn columnLocalMultiplier;
            
            private global::System.Data.DataColumn columnArchitectFee;
            
            private global::System.Data.DataColumn columnRounding_nb;
            
            private global::System.Data.DataColumn columnReportDate;
            
            private global::System.Data.DataColumn columnSingleLineBackDate;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnCalculatedDate;
            
            private global::System.Data.DataColumn columnReportedDate;
            
            private global::System.Data.DataColumn columnImportDate;
            
            private global::System.Data.DataColumn columnExportDate;
            
            private global::System.Data.DataColumn columnUserName;
            
            private global::System.Data.DataColumn columnCategoryName;
            
            private global::System.Data.DataColumn columnCompoundedDepreciationFlag;
            
            private global::System.Data.DataColumn columnTFAOverride;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnParcel_number;
            
            private global::System.Data.DataColumn columnResultsXML;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MSC_EstimateDataTable() {
                this.TableName = "tAA_MSC_Estimate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MSC_EstimateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MSC_EstimateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateIDColumn {
                get {
                    return this.columnEstimateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateUserIDColumn {
                get {
                    return this.columnEstimateUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateCodeColumn {
                get {
                    return this.columnEstimateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Version_tpColumn {
                get {
                    return this.columnVersion_tp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalMultiplierColumn {
                get {
                    return this.columnLocalMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArchitectFeeColumn {
                get {
                    return this.columnArchitectFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rounding_nbColumn {
                get {
                    return this.columnRounding_nb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SingleLineBackDateColumn {
                get {
                    return this.columnSingleLineBackDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CalculatedDateColumn {
                get {
                    return this.columnCalculatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportedDateColumn {
                get {
                    return this.columnReportedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImportDateColumn {
                get {
                    return this.columnImportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExportDateColumn {
                get {
                    return this.columnExportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompoundedDepreciationFlagColumn {
                get {
                    return this.columnCompoundedDepreciationFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TFAOverrideColumn {
                get {
                    return this.columnTFAOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Parcel_numberColumn {
                get {
                    return this.columnParcel_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultsXMLColumn {
                get {
                    return this.columnResultsXML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MSC_EstimateRow this[int index] {
                get {
                    return ((tAA_MSC_EstimateRow)(this.Rows[index]));
                }
            }
            
            public event tAA_MSC_EstimateRowChangeEventHandler tAA_MSC_EstimateRowChanging;
            
            public event tAA_MSC_EstimateRowChangeEventHandler tAA_MSC_EstimateRowChanged;
            
            public event tAA_MSC_EstimateRowChangeEventHandler tAA_MSC_EstimateRowDeleting;
            
            public event tAA_MSC_EstimateRowChangeEventHandler tAA_MSC_EstimateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MSC_EstimateRow(tAA_MSC_EstimateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MSC_EstimateRow AddtAA_MSC_EstimateRow(
                        int EstimateID, 
                        string EstimateUserID, 
                        string EstimateCode, 
                        string Version_tp, 
                        double LocalMultiplier, 
                        double ArchitectFee, 
                        int Rounding_nb, 
                        System.DateTime ReportDate, 
                        System.DateTime SingleLineBackDate, 
                        System.DateTime CreatedDate, 
                        System.DateTime ModifiedDate, 
                        System.DateTime CalculatedDate, 
                        System.DateTime ReportedDate, 
                        System.DateTime ImportDate, 
                        System.DateTime ExportDate, 
                        string UserName, 
                        string CategoryName, 
                        short CompoundedDepreciationFlag, 
                        int TFAOverride, 
                        short ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        string Parcel_number, 
                        string ResultsXML) {
                tAA_MSC_EstimateRow rowtAA_MSC_EstimateRow = ((tAA_MSC_EstimateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EstimateID,
                        EstimateUserID,
                        EstimateCode,
                        Version_tp,
                        LocalMultiplier,
                        ArchitectFee,
                        Rounding_nb,
                        ReportDate,
                        SingleLineBackDate,
                        CreatedDate,
                        ModifiedDate,
                        CalculatedDate,
                        ReportedDate,
                        ImportDate,
                        ExportDate,
                        UserName,
                        CategoryName,
                        CompoundedDepreciationFlag,
                        TFAOverride,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        Parcel_number,
                        ResultsXML};
                rowtAA_MSC_EstimateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MSC_EstimateRow);
                return rowtAA_MSC_EstimateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MSC_EstimateDataTable cln = ((tAA_MSC_EstimateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MSC_EstimateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstimateID = base.Columns["EstimateID"];
                this.columnEstimateUserID = base.Columns["EstimateUserID"];
                this.columnEstimateCode = base.Columns["EstimateCode"];
                this.columnVersion_tp = base.Columns["Version_tp"];
                this.columnLocalMultiplier = base.Columns["LocalMultiplier"];
                this.columnArchitectFee = base.Columns["ArchitectFee"];
                this.columnRounding_nb = base.Columns["Rounding_nb"];
                this.columnReportDate = base.Columns["ReportDate"];
                this.columnSingleLineBackDate = base.Columns["SingleLineBackDate"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnCalculatedDate = base.Columns["CalculatedDate"];
                this.columnReportedDate = base.Columns["ReportedDate"];
                this.columnImportDate = base.Columns["ImportDate"];
                this.columnExportDate = base.Columns["ExportDate"];
                this.columnUserName = base.Columns["UserName"];
                this.columnCategoryName = base.Columns["CategoryName"];
                this.columnCompoundedDepreciationFlag = base.Columns["CompoundedDepreciationFlag"];
                this.columnTFAOverride = base.Columns["TFAOverride"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnParcel_number = base.Columns["Parcel_number"];
                this.columnResultsXML = base.Columns["ResultsXML"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstimateID = new global::System.Data.DataColumn("EstimateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateID);
                this.columnEstimateUserID = new global::System.Data.DataColumn("EstimateUserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateUserID);
                this.columnEstimateCode = new global::System.Data.DataColumn("EstimateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateCode);
                this.columnVersion_tp = new global::System.Data.DataColumn("Version_tp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersion_tp);
                this.columnLocalMultiplier = new global::System.Data.DataColumn("LocalMultiplier", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalMultiplier);
                this.columnArchitectFee = new global::System.Data.DataColumn("ArchitectFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchitectFee);
                this.columnRounding_nb = new global::System.Data.DataColumn("Rounding_nb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRounding_nb);
                this.columnReportDate = new global::System.Data.DataColumn("ReportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDate);
                this.columnSingleLineBackDate = new global::System.Data.DataColumn("SingleLineBackDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSingleLineBackDate);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnCalculatedDate = new global::System.Data.DataColumn("CalculatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalculatedDate);
                this.columnReportedDate = new global::System.Data.DataColumn("ReportedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportedDate);
                this.columnImportDate = new global::System.Data.DataColumn("ImportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportDate);
                this.columnExportDate = new global::System.Data.DataColumn("ExportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExportDate);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnCategoryName = new global::System.Data.DataColumn("CategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryName);
                this.columnCompoundedDepreciationFlag = new global::System.Data.DataColumn("CompoundedDepreciationFlag", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompoundedDepreciationFlag);
                this.columnTFAOverride = new global::System.Data.DataColumn("TFAOverride", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTFAOverride);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnParcel_number = new global::System.Data.DataColumn("Parcel_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcel_number);
                this.columnResultsXML = new global::System.Data.DataColumn("ResultsXML", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultsXML);
                this.columnEstimateID.ReadOnly = true;
                this.columnEstimateUserID.ReadOnly = true;
                this.columnEstimateUserID.MaxLength = 50;
                this.columnEstimateCode.ReadOnly = true;
                this.columnEstimateCode.MaxLength = 50;
                this.columnVersion_tp.ReadOnly = true;
                this.columnVersion_tp.MaxLength = 1;
                this.columnLocalMultiplier.ReadOnly = true;
                this.columnArchitectFee.ReadOnly = true;
                this.columnRounding_nb.ReadOnly = true;
                this.columnReportDate.ReadOnly = true;
                this.columnSingleLineBackDate.ReadOnly = true;
                this.columnCreatedDate.ReadOnly = true;
                this.columnModifiedDate.ReadOnly = true;
                this.columnCalculatedDate.ReadOnly = true;
                this.columnReportedDate.ReadOnly = true;
                this.columnImportDate.ReadOnly = true;
                this.columnExportDate.ReadOnly = true;
                this.columnUserName.ReadOnly = true;
                this.columnUserName.MaxLength = 50;
                this.columnCategoryName.ReadOnly = true;
                this.columnCategoryName.MaxLength = 50;
                this.columnCompoundedDepreciationFlag.ReadOnly = true;
                this.columnTFAOverride.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnParcel_number.ReadOnly = true;
                this.columnParcel_number.MaxLength = 50;
                this.columnResultsXML.ReadOnly = true;
                this.columnResultsXML.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MSC_EstimateRow NewtAA_MSC_EstimateRow() {
                return ((tAA_MSC_EstimateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MSC_EstimateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MSC_EstimateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MSC_EstimateRowChanged != null)) {
                    this.tAA_MSC_EstimateRowChanged(this, new tAA_MSC_EstimateRowChangeEvent(((tAA_MSC_EstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MSC_EstimateRowChanging != null)) {
                    this.tAA_MSC_EstimateRowChanging(this, new tAA_MSC_EstimateRowChangeEvent(((tAA_MSC_EstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MSC_EstimateRowDeleted != null)) {
                    this.tAA_MSC_EstimateRowDeleted(this, new tAA_MSC_EstimateRowChangeEvent(((tAA_MSC_EstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MSC_EstimateRowDeleting != null)) {
                    this.tAA_MSC_EstimateRowDeleting(this, new tAA_MSC_EstimateRowChangeEvent(((tAA_MSC_EstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MSC_EstimateRow(tAA_MSC_EstimateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MSC_EstimateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_NBHDDataTable : global::System.Data.TypedTableBase<tAA_NBHDRow> {
            
            private global::System.Data.DataColumn columnNBHDID;
            
            private global::System.Data.DataColumn columnPNBHDID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnNBHDType;
            
            private global::System.Data.DataColumn columnNeighborhood;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnMarketReview;
            
            private global::System.Data.DataColumn columnReviewedBy;
            
            private global::System.Data.DataColumn columnNBHDGroupID;
            
            private global::System.Data.DataColumn columnZoningID;
            
            private global::System.Data.DataColumn columnCAMAModelID;
            
            private global::System.Data.DataColumn columnAAModelID;
            
            private global::System.Data.DataColumn columnMSVersionID;
            
            private global::System.Data.DataColumn columnMSCVersionID;
            
            private global::System.Data.DataColumn columnMSR_Factor;
            
            private global::System.Data.DataColumn columnMSC_Factor;
            
            private global::System.Data.DataColumn columnLockAppraisalBy;
            
            private global::System.Data.DataColumn columnLockAssessmentBy;
            
            private global::System.Data.DataColumn columnLockAdminBy;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDDataTable() {
                this.TableName = "tAA_NBHD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_NBHDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_NBHDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNBHDIDColumn {
                get {
                    return this.columnPNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDTypeColumn {
                get {
                    return this.columnNBHDType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeighborhoodColumn {
                get {
                    return this.columnNeighborhood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketReviewColumn {
                get {
                    return this.columnMarketReview;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewedByColumn {
                get {
                    return this.columnReviewedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDGroupIDColumn {
                get {
                    return this.columnNBHDGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoningIDColumn {
                get {
                    return this.columnZoningID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CAMAModelIDColumn {
                get {
                    return this.columnCAMAModelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AAModelIDColumn {
                get {
                    return this.columnAAModelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSVersionIDColumn {
                get {
                    return this.columnMSVersionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSCVersionIDColumn {
                get {
                    return this.columnMSCVersionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSR_FactorColumn {
                get {
                    return this.columnMSR_Factor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSC_FactorColumn {
                get {
                    return this.columnMSC_Factor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAppraisalByColumn {
                get {
                    return this.columnLockAppraisalBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAssessmentByColumn {
                get {
                    return this.columnLockAssessmentBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAdminByColumn {
                get {
                    return this.columnLockAdminBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDRow this[int index] {
                get {
                    return ((tAA_NBHDRow)(this.Rows[index]));
                }
            }
            
            public event tAA_NBHDRowChangeEventHandler tAA_NBHDRowChanging;
            
            public event tAA_NBHDRowChangeEventHandler tAA_NBHDRowChanged;
            
            public event tAA_NBHDRowChangeEventHandler tAA_NBHDRowDeleting;
            
            public event tAA_NBHDRowChangeEventHandler tAA_NBHDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_NBHDRow(tAA_NBHDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDRow AddtAA_NBHDRow(
                        int NBHDID, 
                        int PNBHDID, 
                        short RollYear, 
                        byte NBHDType, 
                        string Neighborhood, 
                        string Description, 
                        string MarketReview, 
                        int ReviewedBy, 
                        int NBHDGroupID, 
                        int ZoningID, 
                        short CAMAModelID, 
                        short AAModelID, 
                        int MSVersionID, 
                        int MSCVersionID, 
                        decimal MSR_Factor, 
                        decimal MSC_Factor, 
                        int LockAppraisalBy, 
                        int LockAssessmentBy, 
                        int LockAdminBy, 
                        int ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted) {
                tAA_NBHDRow rowtAA_NBHDRow = ((tAA_NBHDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NBHDID,
                        PNBHDID,
                        RollYear,
                        NBHDType,
                        Neighborhood,
                        Description,
                        MarketReview,
                        ReviewedBy,
                        NBHDGroupID,
                        ZoningID,
                        CAMAModelID,
                        AAModelID,
                        MSVersionID,
                        MSCVersionID,
                        MSR_Factor,
                        MSC_Factor,
                        LockAppraisalBy,
                        LockAssessmentBy,
                        LockAdminBy,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_NBHDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_NBHDRow);
                return rowtAA_NBHDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_NBHDDataTable cln = ((tAA_NBHDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_NBHDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnPNBHDID = base.Columns["PNBHDID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnNBHDType = base.Columns["NBHDType"];
                this.columnNeighborhood = base.Columns["Neighborhood"];
                this.columnDescription = base.Columns["Description"];
                this.columnMarketReview = base.Columns["MarketReview"];
                this.columnReviewedBy = base.Columns["ReviewedBy"];
                this.columnNBHDGroupID = base.Columns["NBHDGroupID"];
                this.columnZoningID = base.Columns["ZoningID"];
                this.columnCAMAModelID = base.Columns["CAMAModelID"];
                this.columnAAModelID = base.Columns["AAModelID"];
                this.columnMSVersionID = base.Columns["MSVersionID"];
                this.columnMSCVersionID = base.Columns["MSCVersionID"];
                this.columnMSR_Factor = base.Columns["MSR_Factor"];
                this.columnMSC_Factor = base.Columns["MSC_Factor"];
                this.columnLockAppraisalBy = base.Columns["LockAppraisalBy"];
                this.columnLockAssessmentBy = base.Columns["LockAssessmentBy"];
                this.columnLockAdminBy = base.Columns["LockAdminBy"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNBHDID = new global::System.Data.DataColumn("NBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnPNBHDID = new global::System.Data.DataColumn("PNBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNBHDID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnNBHDType = new global::System.Data.DataColumn("NBHDType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDType);
                this.columnNeighborhood = new global::System.Data.DataColumn("Neighborhood", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhood);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMarketReview = new global::System.Data.DataColumn("MarketReview", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketReview);
                this.columnReviewedBy = new global::System.Data.DataColumn("ReviewedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewedBy);
                this.columnNBHDGroupID = new global::System.Data.DataColumn("NBHDGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDGroupID);
                this.columnZoningID = new global::System.Data.DataColumn("ZoningID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoningID);
                this.columnCAMAModelID = new global::System.Data.DataColumn("CAMAModelID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAMAModelID);
                this.columnAAModelID = new global::System.Data.DataColumn("AAModelID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAAModelID);
                this.columnMSVersionID = new global::System.Data.DataColumn("MSVersionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSVersionID);
                this.columnMSCVersionID = new global::System.Data.DataColumn("MSCVersionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSCVersionID);
                this.columnMSR_Factor = new global::System.Data.DataColumn("MSR_Factor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSR_Factor);
                this.columnMSC_Factor = new global::System.Data.DataColumn("MSC_Factor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSC_Factor);
                this.columnLockAppraisalBy = new global::System.Data.DataColumn("LockAppraisalBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAppraisalBy);
                this.columnLockAssessmentBy = new global::System.Data.DataColumn("LockAssessmentBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAssessmentBy);
                this.columnLockAdminBy = new global::System.Data.DataColumn("LockAdminBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAdminBy);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnNBHDID.ReadOnly = true;
                this.columnPNBHDID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnNBHDType.ReadOnly = true;
                this.columnNeighborhood.ReadOnly = true;
                this.columnNeighborhood.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 2000;
                this.columnMarketReview.ReadOnly = true;
                this.columnMarketReview.MaxLength = 2000;
                this.columnReviewedBy.ReadOnly = true;
                this.columnNBHDGroupID.ReadOnly = true;
                this.columnZoningID.ReadOnly = true;
                this.columnCAMAModelID.ReadOnly = true;
                this.columnAAModelID.ReadOnly = true;
                this.columnMSVersionID.ReadOnly = true;
                this.columnMSCVersionID.ReadOnly = true;
                this.columnMSR_Factor.ReadOnly = true;
                this.columnMSC_Factor.ReadOnly = true;
                this.columnLockAppraisalBy.ReadOnly = true;
                this.columnLockAssessmentBy.ReadOnly = true;
                this.columnLockAdminBy.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDRow NewtAA_NBHDRow() {
                return ((tAA_NBHDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_NBHDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_NBHDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_NBHDRowChanged != null)) {
                    this.tAA_NBHDRowChanged(this, new tAA_NBHDRowChangeEvent(((tAA_NBHDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_NBHDRowChanging != null)) {
                    this.tAA_NBHDRowChanging(this, new tAA_NBHDRowChangeEvent(((tAA_NBHDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_NBHDRowDeleted != null)) {
                    this.tAA_NBHDRowDeleted(this, new tAA_NBHDRowChangeEvent(((tAA_NBHDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_NBHDRowDeleting != null)) {
                    this.tAA_NBHDRowDeleting(this, new tAA_NBHDRowChangeEvent(((tAA_NBHDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_NBHDRow(tAA_NBHDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_NBHDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_ObjectDataTable : global::System.Data.TypedTableBase<tAA_ObjectRow> {
            
            private global::System.Data.DataColumn columnObjectID;
            
            private global::System.Data.DataColumn columnPObjectID;
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnObjectTypeID;
            
            private global::System.Data.DataColumn columnOValue;
            
            private global::System.Data.DataColumn columnIsValue;
            
            private global::System.Data.DataColumn columnIsRoll;
            
            private global::System.Data.DataColumn columnStateCode;
            
            private global::System.Data.DataColumn columnBedrooms;
            
            private global::System.Data.DataColumn columnBathrooms;
            
            private global::System.Data.DataColumn columnRental;
            
            private global::System.Data.DataColumn columnYearSeptic;
            
            private global::System.Data.DataColumn columnYearWater;
            
            private global::System.Data.DataColumn columnYearBuilt;
            
            private global::System.Data.DataColumn columnEffectiveAge;
            
            private global::System.Data.DataColumn columnLife;
            
            private global::System.Data.DataColumn columnYearRemodel;
            
            private global::System.Data.DataColumn columnCondition;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnconversion;
            
            private global::System.Data.DataColumn columnPageID;
            
            private global::System.Data.DataColumn columnIsAgriculture;
            
            private global::System.Data.DataColumn columnClassID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectDataTable() {
                this.TableName = "tAA_Object";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ObjectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_ObjectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectIDColumn {
                get {
                    return this.columnObjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PObjectIDColumn {
                get {
                    return this.columnPObjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectTypeIDColumn {
                get {
                    return this.columnObjectTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OValueColumn {
                get {
                    return this.columnOValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsValueColumn {
                get {
                    return this.columnIsValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRollColumn {
                get {
                    return this.columnIsRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeColumn {
                get {
                    return this.columnStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BedroomsColumn {
                get {
                    return this.columnBedrooms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BathroomsColumn {
                get {
                    return this.columnBathrooms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RentalColumn {
                get {
                    return this.columnRental;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearSepticColumn {
                get {
                    return this.columnYearSeptic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearWaterColumn {
                get {
                    return this.columnYearWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearBuiltColumn {
                get {
                    return this.columnYearBuilt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveAgeColumn {
                get {
                    return this.columnEffectiveAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LifeColumn {
                get {
                    return this.columnLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearRemodelColumn {
                get {
                    return this.columnYearRemodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConditionColumn {
                get {
                    return this.columnCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conversionColumn {
                get {
                    return this.columnconversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageIDColumn {
                get {
                    return this.columnPageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAgricultureColumn {
                get {
                    return this.columnIsAgriculture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassIDColumn {
                get {
                    return this.columnClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectRow this[int index] {
                get {
                    return ((tAA_ObjectRow)(this.Rows[index]));
                }
            }
            
            public event tAA_ObjectRowChangeEventHandler tAA_ObjectRowChanging;
            
            public event tAA_ObjectRowChangeEventHandler tAA_ObjectRowChanged;
            
            public event tAA_ObjectRowChangeEventHandler tAA_ObjectRowDeleting;
            
            public event tAA_ObjectRowChangeEventHandler tAA_ObjectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_ObjectRow(tAA_ObjectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectRow AddtAA_ObjectRow(
                        int ObjectID, 
                        int PObjectID, 
                        int ParcelID, 
                        string Description, 
                        short ObjectTypeID, 
                        decimal OValue, 
                        bool IsValue, 
                        bool IsRoll, 
                        string StateCode, 
                        decimal Bedrooms, 
                        decimal Bathrooms, 
                        bool Rental, 
                        short YearSeptic, 
                        short YearWater, 
                        short YearBuilt, 
                        byte EffectiveAge, 
                        byte Life, 
                        short YearRemodel, 
                        decimal Condition, 
                        int ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        string conversion, 
                        int PageID, 
                        bool IsAgriculture, 
                        int ClassID) {
                tAA_ObjectRow rowtAA_ObjectRow = ((tAA_ObjectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ObjectID,
                        PObjectID,
                        ParcelID,
                        Description,
                        ObjectTypeID,
                        OValue,
                        IsValue,
                        IsRoll,
                        StateCode,
                        Bedrooms,
                        Bathrooms,
                        Rental,
                        YearSeptic,
                        YearWater,
                        YearBuilt,
                        EffectiveAge,
                        Life,
                        YearRemodel,
                        Condition,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        conversion,
                        PageID,
                        IsAgriculture,
                        ClassID};
                rowtAA_ObjectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_ObjectRow);
                return rowtAA_ObjectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_ObjectDataTable cln = ((tAA_ObjectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_ObjectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnObjectID = base.Columns["ObjectID"];
                this.columnPObjectID = base.Columns["PObjectID"];
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnDescription = base.Columns["Description"];
                this.columnObjectTypeID = base.Columns["ObjectTypeID"];
                this.columnOValue = base.Columns["OValue"];
                this.columnIsValue = base.Columns["IsValue"];
                this.columnIsRoll = base.Columns["IsRoll"];
                this.columnStateCode = base.Columns["StateCode"];
                this.columnBedrooms = base.Columns["Bedrooms"];
                this.columnBathrooms = base.Columns["Bathrooms"];
                this.columnRental = base.Columns["Rental"];
                this.columnYearSeptic = base.Columns["YearSeptic"];
                this.columnYearWater = base.Columns["YearWater"];
                this.columnYearBuilt = base.Columns["YearBuilt"];
                this.columnEffectiveAge = base.Columns["EffectiveAge"];
                this.columnLife = base.Columns["Life"];
                this.columnYearRemodel = base.Columns["YearRemodel"];
                this.columnCondition = base.Columns["Condition"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnconversion = base.Columns["conversion"];
                this.columnPageID = base.Columns["PageID"];
                this.columnIsAgriculture = base.Columns["IsAgriculture"];
                this.columnClassID = base.Columns["ClassID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnObjectID = new global::System.Data.DataColumn("ObjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectID);
                this.columnPObjectID = new global::System.Data.DataColumn("PObjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPObjectID);
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnObjectTypeID = new global::System.Data.DataColumn("ObjectTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectTypeID);
                this.columnOValue = new global::System.Data.DataColumn("OValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOValue);
                this.columnIsValue = new global::System.Data.DataColumn("IsValue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsValue);
                this.columnIsRoll = new global::System.Data.DataColumn("IsRoll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRoll);
                this.columnStateCode = new global::System.Data.DataColumn("StateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCode);
                this.columnBedrooms = new global::System.Data.DataColumn("Bedrooms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBedrooms);
                this.columnBathrooms = new global::System.Data.DataColumn("Bathrooms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBathrooms);
                this.columnRental = new global::System.Data.DataColumn("Rental", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRental);
                this.columnYearSeptic = new global::System.Data.DataColumn("YearSeptic", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearSeptic);
                this.columnYearWater = new global::System.Data.DataColumn("YearWater", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearWater);
                this.columnYearBuilt = new global::System.Data.DataColumn("YearBuilt", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearBuilt);
                this.columnEffectiveAge = new global::System.Data.DataColumn("EffectiveAge", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveAge);
                this.columnLife = new global::System.Data.DataColumn("Life", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLife);
                this.columnYearRemodel = new global::System.Data.DataColumn("YearRemodel", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearRemodel);
                this.columnCondition = new global::System.Data.DataColumn("Condition", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnconversion = new global::System.Data.DataColumn("conversion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconversion);
                this.columnPageID = new global::System.Data.DataColumn("PageID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageID);
                this.columnIsAgriculture = new global::System.Data.DataColumn("IsAgriculture", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAgriculture);
                this.columnClassID = new global::System.Data.DataColumn("ClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassID);
                this.columnObjectID.ReadOnly = true;
                this.columnPObjectID.ReadOnly = true;
                this.columnParcelID.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 200;
                this.columnObjectTypeID.ReadOnly = true;
                this.columnOValue.ReadOnly = true;
                this.columnIsValue.ReadOnly = true;
                this.columnIsRoll.ReadOnly = true;
                this.columnStateCode.ReadOnly = true;
                this.columnStateCode.MaxLength = 50;
                this.columnBedrooms.ReadOnly = true;
                this.columnBathrooms.ReadOnly = true;
                this.columnRental.ReadOnly = true;
                this.columnYearSeptic.ReadOnly = true;
                this.columnYearWater.ReadOnly = true;
                this.columnYearBuilt.ReadOnly = true;
                this.columnEffectiveAge.ReadOnly = true;
                this.columnLife.ReadOnly = true;
                this.columnYearRemodel.ReadOnly = true;
                this.columnCondition.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnconversion.ReadOnly = true;
                this.columnconversion.MaxLength = 50;
                this.columnPageID.ReadOnly = true;
                this.columnIsAgriculture.ReadOnly = true;
                this.columnClassID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectRow NewtAA_ObjectRow() {
                return ((tAA_ObjectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_ObjectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_ObjectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_ObjectRowChanged != null)) {
                    this.tAA_ObjectRowChanged(this, new tAA_ObjectRowChangeEvent(((tAA_ObjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_ObjectRowChanging != null)) {
                    this.tAA_ObjectRowChanging(this, new tAA_ObjectRowChangeEvent(((tAA_ObjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_ObjectRowDeleted != null)) {
                    this.tAA_ObjectRowDeleted(this, new tAA_ObjectRowChangeEvent(((tAA_ObjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_ObjectRowDeleting != null)) {
                    this.tAA_ObjectRowDeleting(this, new tAA_ObjectRowChangeEvent(((tAA_ObjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_ObjectRow(tAA_ObjectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_ObjectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_ParcelValueDataTable : global::System.Data.TypedTableBase<tAA_ParcelValueRow> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnO1ValueA;
            
            private global::System.Data.DataColumn columnO1ValueB;
            
            private global::System.Data.DataColumn columnO1ValueC;
            
            private global::System.Data.DataColumn columnO1ValueD;
            
            private global::System.Data.DataColumn columnO1ValueE;
            
            private global::System.Data.DataColumn columnO2ValueA;
            
            private global::System.Data.DataColumn columnO2ValueB;
            
            private global::System.Data.DataColumn columnO2ValueC;
            
            private global::System.Data.DataColumn columnO2ValueD;
            
            private global::System.Data.DataColumn columnO2ValueE;
            
            private global::System.Data.DataColumn columnO3ValueA;
            
            private global::System.Data.DataColumn columnO3ValueB;
            
            private global::System.Data.DataColumn columnO3ValueC;
            
            private global::System.Data.DataColumn columnO3ValueD;
            
            private global::System.Data.DataColumn columnO3ValueE;
            
            private global::System.Data.DataColumn columnResultingTaxable;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelValueDataTable() {
                this.TableName = "tAA_ParcelValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ParcelValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_ParcelValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O1ValueAColumn {
                get {
                    return this.columnO1ValueA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O1ValueBColumn {
                get {
                    return this.columnO1ValueB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O1ValueCColumn {
                get {
                    return this.columnO1ValueC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O1ValueDColumn {
                get {
                    return this.columnO1ValueD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O1ValueEColumn {
                get {
                    return this.columnO1ValueE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O2ValueAColumn {
                get {
                    return this.columnO2ValueA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O2ValueBColumn {
                get {
                    return this.columnO2ValueB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O2ValueCColumn {
                get {
                    return this.columnO2ValueC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O2ValueDColumn {
                get {
                    return this.columnO2ValueD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O2ValueEColumn {
                get {
                    return this.columnO2ValueE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O3ValueAColumn {
                get {
                    return this.columnO3ValueA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O3ValueBColumn {
                get {
                    return this.columnO3ValueB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O3ValueCColumn {
                get {
                    return this.columnO3ValueC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O3ValueDColumn {
                get {
                    return this.columnO3ValueD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O3ValueEColumn {
                get {
                    return this.columnO3ValueE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultingTaxableColumn {
                get {
                    return this.columnResultingTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelValueRow this[int index] {
                get {
                    return ((tAA_ParcelValueRow)(this.Rows[index]));
                }
            }
            
            public event tAA_ParcelValueRowChangeEventHandler tAA_ParcelValueRowChanging;
            
            public event tAA_ParcelValueRowChangeEventHandler tAA_ParcelValueRowChanged;
            
            public event tAA_ParcelValueRowChangeEventHandler tAA_ParcelValueRowDeleting;
            
            public event tAA_ParcelValueRowChangeEventHandler tAA_ParcelValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_ParcelValueRow(tAA_ParcelValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelValueRow AddtAA_ParcelValueRow(
                        int ParcelID, 
                        decimal O1ValueA, 
                        decimal O1ValueB, 
                        decimal O1ValueC, 
                        decimal O1ValueD, 
                        decimal O1ValueE, 
                        decimal O2ValueA, 
                        decimal O2ValueB, 
                        decimal O2ValueC, 
                        decimal O2ValueD, 
                        decimal O2ValueE, 
                        decimal O3ValueA, 
                        decimal O3ValueB, 
                        decimal O3ValueC, 
                        decimal O3ValueD, 
                        decimal O3ValueE, 
                        decimal ResultingTaxable, 
                        short ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted) {
                tAA_ParcelValueRow rowtAA_ParcelValueRow = ((tAA_ParcelValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        O1ValueA,
                        O1ValueB,
                        O1ValueC,
                        O1ValueD,
                        O1ValueE,
                        O2ValueA,
                        O2ValueB,
                        O2ValueC,
                        O2ValueD,
                        O2ValueE,
                        O3ValueA,
                        O3ValueB,
                        O3ValueC,
                        O3ValueD,
                        O3ValueE,
                        ResultingTaxable,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_ParcelValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_ParcelValueRow);
                return rowtAA_ParcelValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_ParcelValueDataTable cln = ((tAA_ParcelValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_ParcelValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnO1ValueA = base.Columns["O1ValueA"];
                this.columnO1ValueB = base.Columns["O1ValueB"];
                this.columnO1ValueC = base.Columns["O1ValueC"];
                this.columnO1ValueD = base.Columns["O1ValueD"];
                this.columnO1ValueE = base.Columns["O1ValueE"];
                this.columnO2ValueA = base.Columns["O2ValueA"];
                this.columnO2ValueB = base.Columns["O2ValueB"];
                this.columnO2ValueC = base.Columns["O2ValueC"];
                this.columnO2ValueD = base.Columns["O2ValueD"];
                this.columnO2ValueE = base.Columns["O2ValueE"];
                this.columnO3ValueA = base.Columns["O3ValueA"];
                this.columnO3ValueB = base.Columns["O3ValueB"];
                this.columnO3ValueC = base.Columns["O3ValueC"];
                this.columnO3ValueD = base.Columns["O3ValueD"];
                this.columnO3ValueE = base.Columns["O3ValueE"];
                this.columnResultingTaxable = base.Columns["ResultingTaxable"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnO1ValueA = new global::System.Data.DataColumn("O1ValueA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO1ValueA);
                this.columnO1ValueB = new global::System.Data.DataColumn("O1ValueB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO1ValueB);
                this.columnO1ValueC = new global::System.Data.DataColumn("O1ValueC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO1ValueC);
                this.columnO1ValueD = new global::System.Data.DataColumn("O1ValueD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO1ValueD);
                this.columnO1ValueE = new global::System.Data.DataColumn("O1ValueE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO1ValueE);
                this.columnO2ValueA = new global::System.Data.DataColumn("O2ValueA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2ValueA);
                this.columnO2ValueB = new global::System.Data.DataColumn("O2ValueB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2ValueB);
                this.columnO2ValueC = new global::System.Data.DataColumn("O2ValueC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2ValueC);
                this.columnO2ValueD = new global::System.Data.DataColumn("O2ValueD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2ValueD);
                this.columnO2ValueE = new global::System.Data.DataColumn("O2ValueE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2ValueE);
                this.columnO3ValueA = new global::System.Data.DataColumn("O3ValueA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO3ValueA);
                this.columnO3ValueB = new global::System.Data.DataColumn("O3ValueB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO3ValueB);
                this.columnO3ValueC = new global::System.Data.DataColumn("O3ValueC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO3ValueC);
                this.columnO3ValueD = new global::System.Data.DataColumn("O3ValueD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO3ValueD);
                this.columnO3ValueE = new global::System.Data.DataColumn("O3ValueE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO3ValueE);
                this.columnResultingTaxable = new global::System.Data.DataColumn("ResultingTaxable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultingTaxable);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnParcelID.ReadOnly = true;
                this.columnO1ValueA.ReadOnly = true;
                this.columnO1ValueB.ReadOnly = true;
                this.columnO1ValueC.ReadOnly = true;
                this.columnO1ValueD.ReadOnly = true;
                this.columnO1ValueE.ReadOnly = true;
                this.columnO2ValueA.ReadOnly = true;
                this.columnO2ValueB.ReadOnly = true;
                this.columnO2ValueC.ReadOnly = true;
                this.columnO2ValueD.ReadOnly = true;
                this.columnO2ValueE.ReadOnly = true;
                this.columnO3ValueA.ReadOnly = true;
                this.columnO3ValueB.ReadOnly = true;
                this.columnO3ValueC.ReadOnly = true;
                this.columnO3ValueD.ReadOnly = true;
                this.columnO3ValueE.ReadOnly = true;
                this.columnResultingTaxable.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelValueRow NewtAA_ParcelValueRow() {
                return ((tAA_ParcelValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_ParcelValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_ParcelValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_ParcelValueRowChanged != null)) {
                    this.tAA_ParcelValueRowChanged(this, new tAA_ParcelValueRowChangeEvent(((tAA_ParcelValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_ParcelValueRowChanging != null)) {
                    this.tAA_ParcelValueRowChanging(this, new tAA_ParcelValueRowChangeEvent(((tAA_ParcelValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_ParcelValueRowDeleted != null)) {
                    this.tAA_ParcelValueRowDeleted(this, new tAA_ParcelValueRowChangeEvent(((tAA_ParcelValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_ParcelValueRowDeleting != null)) {
                    this.tAA_ParcelValueRowDeleting(this, new tAA_ParcelValueRowChangeEvent(((tAA_ParcelValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_ParcelValueRow(tAA_ParcelValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_ParcelValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_ParcelDataTable : global::System.Data.TypedTableBase<tAA_ParcelRow> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnFIPS;
            
            private global::System.Data.DataColumn columnParcelTypeID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnIsRetired;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnLockAppraisalBy;
            
            private global::System.Data.DataColumn columnLockAssessmentBy;
            
            private global::System.Data.DataColumn columnLockValueBy;
            
            private global::System.Data.DataColumn columnLockAdminBy;
            
            private global::System.Data.DataColumn columnO1Value;
            
            private global::System.Data.DataColumn columnO2Value;
            
            private global::System.Data.DataColumn columnO3Value;
            
            private global::System.Data.DataColumn columnNBHDID;
            
            private global::System.Data.DataColumn columnTaxDistrictID;
            
            private global::System.Data.DataColumn columnStateCode;
            
            private global::System.Data.DataColumn columnMID1;
            
            private global::System.Data.DataColumn columnMID2;
            
            private global::System.Data.DataColumn columnMID3;
            
            private global::System.Data.DataColumn columnMID4;
            
            private global::System.Data.DataColumn columnMID5;
            
            private global::System.Data.DataColumn columnMapNumber;
            
            private global::System.Data.DataColumn columnCAMAModelID;
            
            private global::System.Data.DataColumn columnAAModelID;
            
            private global::System.Data.DataColumn columnMortgageID;
            
            private global::System.Data.DataColumn columnLoanNumber;
            
            private global::System.Data.DataColumn columnIsOwnerPrimary;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnField1;
            
            private global::System.Data.DataColumn columnField2;
            
            private global::System.Data.DataColumn columnField3;
            
            private global::System.Data.DataColumn columnField4;
            
            private global::System.Data.DataColumn columnField5;
            
            private global::System.Data.DataColumn columnAssessmentTypeID;
            
            private global::System.Data.DataColumn columnMID6;
            
            private global::System.Data.DataColumn columnMID7;
            
            private global::System.Data.DataColumn columnMID8;
            
            private global::System.Data.DataColumn columnImprovementID;
            
            private global::System.Data.DataColumn columnLandTypeID;
            
            private global::System.Data.DataColumn columnFieldStatusID;
            
            private global::System.Data.DataColumn columnInspectedByUserID;
            
            private global::System.Data.DataColumn columnDateInspected;
            
            private global::System.Data.DataColumn columnInspectionTypeID;
            
            private global::System.Data.DataColumn columnReviewedByUserID;
            
            private global::System.Data.DataColumn columnReviewDate;
            
            private global::System.Data.DataColumn columnLat;
            
            private global::System.Data.DataColumn columnLong;
            
            private global::System.Data.DataColumn columnUndividedOwnershipID;
            
            private global::System.Data.DataColumn columnAglandImprovementClass;
            
            private global::System.Data.DataColumn columnNonAgImprovementClass;
            
            private global::System.Data.DataColumn columnClassAgLandID;
            
            private global::System.Data.DataColumn columnClassNonAgLandID;
            
            private global::System.Data.DataColumn columnClassAgImprovementID;
            
            private global::System.Data.DataColumn columnClassNonAgImprovementID;
            
            private global::System.Data.DataColumn columnClassNonAgResidentialID;
            
            private global::System.Data.DataColumn columnOwnerOccupiedID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelDataTable() {
                this.TableName = "tAA_Parcel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ParcelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_ParcelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIPSColumn {
                get {
                    return this.columnFIPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelTypeIDColumn {
                get {
                    return this.columnParcelTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRetiredColumn {
                get {
                    return this.columnIsRetired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAppraisalByColumn {
                get {
                    return this.columnLockAppraisalBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAssessmentByColumn {
                get {
                    return this.columnLockAssessmentBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockValueByColumn {
                get {
                    return this.columnLockValueBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAdminByColumn {
                get {
                    return this.columnLockAdminBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O1ValueColumn {
                get {
                    return this.columnO1Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O2ValueColumn {
                get {
                    return this.columnO2Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O3ValueColumn {
                get {
                    return this.columnO3Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxDistrictIDColumn {
                get {
                    return this.columnTaxDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeColumn {
                get {
                    return this.columnStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID1Column {
                get {
                    return this.columnMID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID2Column {
                get {
                    return this.columnMID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID3Column {
                get {
                    return this.columnMID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID4Column {
                get {
                    return this.columnMID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID5Column {
                get {
                    return this.columnMID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapNumberColumn {
                get {
                    return this.columnMapNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CAMAModelIDColumn {
                get {
                    return this.columnCAMAModelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AAModelIDColumn {
                get {
                    return this.columnAAModelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MortgageIDColumn {
                get {
                    return this.columnMortgageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoanNumberColumn {
                get {
                    return this.columnLoanNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOwnerPrimaryColumn {
                get {
                    return this.columnIsOwnerPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field1Column {
                get {
                    return this.columnField1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field2Column {
                get {
                    return this.columnField2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field3Column {
                get {
                    return this.columnField3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field4Column {
                get {
                    return this.columnField4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field5Column {
                get {
                    return this.columnField5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessmentTypeIDColumn {
                get {
                    return this.columnAssessmentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID6Column {
                get {
                    return this.columnMID6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID7Column {
                get {
                    return this.columnMID7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID8Column {
                get {
                    return this.columnMID8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImprovementIDColumn {
                get {
                    return this.columnImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeIDColumn {
                get {
                    return this.columnLandTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldStatusIDColumn {
                get {
                    return this.columnFieldStatusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectedByUserIDColumn {
                get {
                    return this.columnInspectedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateInspectedColumn {
                get {
                    return this.columnDateInspected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectionTypeIDColumn {
                get {
                    return this.columnInspectionTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewedByUserIDColumn {
                get {
                    return this.columnReviewedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewDateColumn {
                get {
                    return this.columnReviewDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatColumn {
                get {
                    return this.columnLat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongColumn {
                get {
                    return this.columnLong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UndividedOwnershipIDColumn {
                get {
                    return this.columnUndividedOwnershipID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AglandImprovementClassColumn {
                get {
                    return this.columnAglandImprovementClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonAgImprovementClassColumn {
                get {
                    return this.columnNonAgImprovementClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassAgLandIDColumn {
                get {
                    return this.columnClassAgLandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAgLandIDColumn {
                get {
                    return this.columnClassNonAgLandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassAgImprovementIDColumn {
                get {
                    return this.columnClassAgImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAgImprovementIDColumn {
                get {
                    return this.columnClassNonAgImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAgResidentialIDColumn {
                get {
                    return this.columnClassNonAgResidentialID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerOccupiedIDColumn {
                get {
                    return this.columnOwnerOccupiedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelRow this[int index] {
                get {
                    return ((tAA_ParcelRow)(this.Rows[index]));
                }
            }
            
            public event tAA_ParcelRowChangeEventHandler tAA_ParcelRowChanging;
            
            public event tAA_ParcelRowChangeEventHandler tAA_ParcelRowChanged;
            
            public event tAA_ParcelRowChangeEventHandler tAA_ParcelRowDeleting;
            
            public event tAA_ParcelRowChangeEventHandler tAA_ParcelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_ParcelRow(tAA_ParcelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelRow AddtAA_ParcelRow(
                        int ParcelID, 
                        string ParcelNumber, 
                        short RollYear, 
                        int FIPS, 
                        byte ParcelTypeID, 
                        string Description, 
                        bool IsRetired, 
                        bool IsExempt, 
                        int LockAppraisalBy, 
                        int LockAssessmentBy, 
                        int LockValueBy, 
                        int LockAdminBy, 
                        decimal O1Value, 
                        decimal O2Value, 
                        decimal O3Value, 
                        int NBHDID, 
                        int TaxDistrictID, 
                        string StateCode, 
                        string MID1, 
                        string MID2, 
                        string MID3, 
                        string MID4, 
                        string MID5, 
                        string MapNumber, 
                        short CAMAModelID, 
                        short AAModelID, 
                        int MortgageID, 
                        int LoanNumber, 
                        bool IsOwnerPrimary, 
                        int ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        bool Field1, 
                        bool Field2, 
                        bool Field3, 
                        bool Field4, 
                        bool Field5, 
                        short AssessmentTypeID, 
                        string MID6, 
                        string MID7, 
                        string MID8, 
                        int ImprovementID, 
                        int LandTypeID, 
                        byte FieldStatusID, 
                        int InspectedByUserID, 
                        System.DateTime DateInspected, 
                        short InspectionTypeID, 
                        int ReviewedByUserID, 
                        System.DateTime ReviewDate, 
                        decimal Lat, 
                        decimal Long, 
                        byte UndividedOwnershipID, 
                        string AglandImprovementClass, 
                        string NonAgImprovementClass, 
                        int ClassAgLandID, 
                        int ClassNonAgLandID, 
                        int ClassAgImprovementID, 
                        int ClassNonAgImprovementID, 
                        int ClassNonAgResidentialID, 
                        int OwnerOccupiedID) {
                tAA_ParcelRow rowtAA_ParcelRow = ((tAA_ParcelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        ParcelNumber,
                        RollYear,
                        FIPS,
                        ParcelTypeID,
                        Description,
                        IsRetired,
                        IsExempt,
                        LockAppraisalBy,
                        LockAssessmentBy,
                        LockValueBy,
                        LockAdminBy,
                        O1Value,
                        O2Value,
                        O3Value,
                        NBHDID,
                        TaxDistrictID,
                        StateCode,
                        MID1,
                        MID2,
                        MID3,
                        MID4,
                        MID5,
                        MapNumber,
                        CAMAModelID,
                        AAModelID,
                        MortgageID,
                        LoanNumber,
                        IsOwnerPrimary,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        Field1,
                        Field2,
                        Field3,
                        Field4,
                        Field5,
                        AssessmentTypeID,
                        MID6,
                        MID7,
                        MID8,
                        ImprovementID,
                        LandTypeID,
                        FieldStatusID,
                        InspectedByUserID,
                        DateInspected,
                        InspectionTypeID,
                        ReviewedByUserID,
                        ReviewDate,
                        Lat,
                        Long,
                        UndividedOwnershipID,
                        AglandImprovementClass,
                        NonAgImprovementClass,
                        ClassAgLandID,
                        ClassNonAgLandID,
                        ClassAgImprovementID,
                        ClassNonAgImprovementID,
                        ClassNonAgResidentialID,
                        OwnerOccupiedID};
                rowtAA_ParcelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_ParcelRow);
                return rowtAA_ParcelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_ParcelDataTable cln = ((tAA_ParcelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_ParcelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnFIPS = base.Columns["FIPS"];
                this.columnParcelTypeID = base.Columns["ParcelTypeID"];
                this.columnDescription = base.Columns["Description"];
                this.columnIsRetired = base.Columns["IsRetired"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnLockAppraisalBy = base.Columns["LockAppraisalBy"];
                this.columnLockAssessmentBy = base.Columns["LockAssessmentBy"];
                this.columnLockValueBy = base.Columns["LockValueBy"];
                this.columnLockAdminBy = base.Columns["LockAdminBy"];
                this.columnO1Value = base.Columns["O1Value"];
                this.columnO2Value = base.Columns["O2Value"];
                this.columnO3Value = base.Columns["O3Value"];
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnTaxDistrictID = base.Columns["TaxDistrictID"];
                this.columnStateCode = base.Columns["StateCode"];
                this.columnMID1 = base.Columns["MID1"];
                this.columnMID2 = base.Columns["MID2"];
                this.columnMID3 = base.Columns["MID3"];
                this.columnMID4 = base.Columns["MID4"];
                this.columnMID5 = base.Columns["MID5"];
                this.columnMapNumber = base.Columns["MapNumber"];
                this.columnCAMAModelID = base.Columns["CAMAModelID"];
                this.columnAAModelID = base.Columns["AAModelID"];
                this.columnMortgageID = base.Columns["MortgageID"];
                this.columnLoanNumber = base.Columns["LoanNumber"];
                this.columnIsOwnerPrimary = base.Columns["IsOwnerPrimary"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnField1 = base.Columns["Field1"];
                this.columnField2 = base.Columns["Field2"];
                this.columnField3 = base.Columns["Field3"];
                this.columnField4 = base.Columns["Field4"];
                this.columnField5 = base.Columns["Field5"];
                this.columnAssessmentTypeID = base.Columns["AssessmentTypeID"];
                this.columnMID6 = base.Columns["MID6"];
                this.columnMID7 = base.Columns["MID7"];
                this.columnMID8 = base.Columns["MID8"];
                this.columnImprovementID = base.Columns["ImprovementID"];
                this.columnLandTypeID = base.Columns["LandTypeID"];
                this.columnFieldStatusID = base.Columns["FieldStatusID"];
                this.columnInspectedByUserID = base.Columns["InspectedByUserID"];
                this.columnDateInspected = base.Columns["DateInspected"];
                this.columnInspectionTypeID = base.Columns["InspectionTypeID"];
                this.columnReviewedByUserID = base.Columns["ReviewedByUserID"];
                this.columnReviewDate = base.Columns["ReviewDate"];
                this.columnLat = base.Columns["Lat"];
                this.columnLong = base.Columns["Long"];
                this.columnUndividedOwnershipID = base.Columns["UndividedOwnershipID"];
                this.columnAglandImprovementClass = base.Columns["AglandImprovementClass"];
                this.columnNonAgImprovementClass = base.Columns["NonAgImprovementClass"];
                this.columnClassAgLandID = base.Columns["ClassAgLandID"];
                this.columnClassNonAgLandID = base.Columns["ClassNonAgLandID"];
                this.columnClassAgImprovementID = base.Columns["ClassAgImprovementID"];
                this.columnClassNonAgImprovementID = base.Columns["ClassNonAgImprovementID"];
                this.columnClassNonAgResidentialID = base.Columns["ClassNonAgResidentialID"];
                this.columnOwnerOccupiedID = base.Columns["OwnerOccupiedID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnFIPS = new global::System.Data.DataColumn("FIPS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIPS);
                this.columnParcelTypeID = new global::System.Data.DataColumn("ParcelTypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelTypeID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnIsRetired = new global::System.Data.DataColumn("IsRetired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRetired);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnLockAppraisalBy = new global::System.Data.DataColumn("LockAppraisalBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAppraisalBy);
                this.columnLockAssessmentBy = new global::System.Data.DataColumn("LockAssessmentBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAssessmentBy);
                this.columnLockValueBy = new global::System.Data.DataColumn("LockValueBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockValueBy);
                this.columnLockAdminBy = new global::System.Data.DataColumn("LockAdminBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAdminBy);
                this.columnO1Value = new global::System.Data.DataColumn("O1Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO1Value);
                this.columnO2Value = new global::System.Data.DataColumn("O2Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2Value);
                this.columnO3Value = new global::System.Data.DataColumn("O3Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO3Value);
                this.columnNBHDID = new global::System.Data.DataColumn("NBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnTaxDistrictID = new global::System.Data.DataColumn("TaxDistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxDistrictID);
                this.columnStateCode = new global::System.Data.DataColumn("StateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCode);
                this.columnMID1 = new global::System.Data.DataColumn("MID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID1);
                this.columnMID2 = new global::System.Data.DataColumn("MID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID2);
                this.columnMID3 = new global::System.Data.DataColumn("MID3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID3);
                this.columnMID4 = new global::System.Data.DataColumn("MID4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID4);
                this.columnMID5 = new global::System.Data.DataColumn("MID5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID5);
                this.columnMapNumber = new global::System.Data.DataColumn("MapNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapNumber);
                this.columnCAMAModelID = new global::System.Data.DataColumn("CAMAModelID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAMAModelID);
                this.columnAAModelID = new global::System.Data.DataColumn("AAModelID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAAModelID);
                this.columnMortgageID = new global::System.Data.DataColumn("MortgageID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMortgageID);
                this.columnLoanNumber = new global::System.Data.DataColumn("LoanNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoanNumber);
                this.columnIsOwnerPrimary = new global::System.Data.DataColumn("IsOwnerPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOwnerPrimary);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnField1 = new global::System.Data.DataColumn("Field1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField1);
                this.columnField2 = new global::System.Data.DataColumn("Field2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField2);
                this.columnField3 = new global::System.Data.DataColumn("Field3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField3);
                this.columnField4 = new global::System.Data.DataColumn("Field4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField4);
                this.columnField5 = new global::System.Data.DataColumn("Field5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField5);
                this.columnAssessmentTypeID = new global::System.Data.DataColumn("AssessmentTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessmentTypeID);
                this.columnMID6 = new global::System.Data.DataColumn("MID6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID6);
                this.columnMID7 = new global::System.Data.DataColumn("MID7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID7);
                this.columnMID8 = new global::System.Data.DataColumn("MID8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID8);
                this.columnImprovementID = new global::System.Data.DataColumn("ImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImprovementID);
                this.columnLandTypeID = new global::System.Data.DataColumn("LandTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID);
                this.columnFieldStatusID = new global::System.Data.DataColumn("FieldStatusID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldStatusID);
                this.columnInspectedByUserID = new global::System.Data.DataColumn("InspectedByUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectedByUserID);
                this.columnDateInspected = new global::System.Data.DataColumn("DateInspected", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateInspected);
                this.columnInspectionTypeID = new global::System.Data.DataColumn("InspectionTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionTypeID);
                this.columnReviewedByUserID = new global::System.Data.DataColumn("ReviewedByUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewedByUserID);
                this.columnReviewDate = new global::System.Data.DataColumn("ReviewDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewDate);
                this.columnLat = new global::System.Data.DataColumn("Lat", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLat);
                this.columnLong = new global::System.Data.DataColumn("Long", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLong);
                this.columnUndividedOwnershipID = new global::System.Data.DataColumn("UndividedOwnershipID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUndividedOwnershipID);
                this.columnAglandImprovementClass = new global::System.Data.DataColumn("AglandImprovementClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAglandImprovementClass);
                this.columnNonAgImprovementClass = new global::System.Data.DataColumn("NonAgImprovementClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonAgImprovementClass);
                this.columnClassAgLandID = new global::System.Data.DataColumn("ClassAgLandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassAgLandID);
                this.columnClassNonAgLandID = new global::System.Data.DataColumn("ClassNonAgLandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAgLandID);
                this.columnClassAgImprovementID = new global::System.Data.DataColumn("ClassAgImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassAgImprovementID);
                this.columnClassNonAgImprovementID = new global::System.Data.DataColumn("ClassNonAgImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAgImprovementID);
                this.columnClassNonAgResidentialID = new global::System.Data.DataColumn("ClassNonAgResidentialID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAgResidentialID);
                this.columnOwnerOccupiedID = new global::System.Data.DataColumn("OwnerOccupiedID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerOccupiedID);
                this.columnParcelID.ReadOnly = true;
                this.columnParcelNumber.ReadOnly = true;
                this.columnParcelNumber.MaxLength = 50;
                this.columnRollYear.ReadOnly = true;
                this.columnFIPS.ReadOnly = true;
                this.columnParcelTypeID.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 50;
                this.columnIsRetired.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnLockAppraisalBy.ReadOnly = true;
                this.columnLockAssessmentBy.ReadOnly = true;
                this.columnLockValueBy.ReadOnly = true;
                this.columnLockAdminBy.ReadOnly = true;
                this.columnO1Value.ReadOnly = true;
                this.columnO2Value.ReadOnly = true;
                this.columnO3Value.ReadOnly = true;
                this.columnNBHDID.ReadOnly = true;
                this.columnTaxDistrictID.ReadOnly = true;
                this.columnStateCode.ReadOnly = true;
                this.columnStateCode.MaxLength = 50;
                this.columnMID1.ReadOnly = true;
                this.columnMID1.MaxLength = 50;
                this.columnMID2.ReadOnly = true;
                this.columnMID2.MaxLength = 50;
                this.columnMID3.ReadOnly = true;
                this.columnMID3.MaxLength = 50;
                this.columnMID4.ReadOnly = true;
                this.columnMID4.MaxLength = 50;
                this.columnMID5.ReadOnly = true;
                this.columnMID5.MaxLength = 50;
                this.columnMapNumber.ReadOnly = true;
                this.columnMapNumber.MaxLength = 50;
                this.columnCAMAModelID.ReadOnly = true;
                this.columnAAModelID.ReadOnly = true;
                this.columnMortgageID.ReadOnly = true;
                this.columnLoanNumber.ReadOnly = true;
                this.columnIsOwnerPrimary.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnField1.ReadOnly = true;
                this.columnField2.ReadOnly = true;
                this.columnField3.ReadOnly = true;
                this.columnField4.ReadOnly = true;
                this.columnField5.ReadOnly = true;
                this.columnAssessmentTypeID.ReadOnly = true;
                this.columnMID6.ReadOnly = true;
                this.columnMID6.MaxLength = 50;
                this.columnMID7.ReadOnly = true;
                this.columnMID7.MaxLength = 50;
                this.columnMID8.ReadOnly = true;
                this.columnMID8.MaxLength = 50;
                this.columnImprovementID.ReadOnly = true;
                this.columnLandTypeID.ReadOnly = true;
                this.columnFieldStatusID.ReadOnly = true;
                this.columnInspectedByUserID.ReadOnly = true;
                this.columnDateInspected.ReadOnly = true;
                this.columnInspectionTypeID.ReadOnly = true;
                this.columnReviewedByUserID.ReadOnly = true;
                this.columnReviewDate.ReadOnly = true;
                this.columnLat.ReadOnly = true;
                this.columnLong.ReadOnly = true;
                this.columnUndividedOwnershipID.ReadOnly = true;
                this.columnAglandImprovementClass.ReadOnly = true;
                this.columnAglandImprovementClass.MaxLength = 20;
                this.columnNonAgImprovementClass.ReadOnly = true;
                this.columnNonAgImprovementClass.MaxLength = 20;
                this.columnClassAgLandID.ReadOnly = true;
                this.columnClassNonAgLandID.ReadOnly = true;
                this.columnClassAgImprovementID.ReadOnly = true;
                this.columnClassNonAgImprovementID.ReadOnly = true;
                this.columnClassNonAgResidentialID.ReadOnly = true;
                this.columnOwnerOccupiedID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelRow NewtAA_ParcelRow() {
                return ((tAA_ParcelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_ParcelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_ParcelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_ParcelRowChanged != null)) {
                    this.tAA_ParcelRowChanged(this, new tAA_ParcelRowChangeEvent(((tAA_ParcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_ParcelRowChanging != null)) {
                    this.tAA_ParcelRowChanging(this, new tAA_ParcelRowChangeEvent(((tAA_ParcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_ParcelRowDeleted != null)) {
                    this.tAA_ParcelRowDeleted(this, new tAA_ParcelRowChangeEvent(((tAA_ParcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_ParcelRowDeleting != null)) {
                    this.tAA_ParcelRowDeleting(this, new tAA_ParcelRowChangeEvent(((tAA_ParcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_ParcelRow(tAA_ParcelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_ParcelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_VSTerraGonDataTable : global::System.Data.TypedTableBase<tAA_VSTerraGonRow> {
            
            private global::System.Data.DataColumn columnTerraGonID;
            
            private global::System.Data.DataColumn columnObjectID;
            
            private global::System.Data.DataColumn columnShapeID;
            
            private global::System.Data.DataColumn columnVSTypeID;
            
            private global::System.Data.DataColumn columnKeyID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnBaseArea;
            
            private global::System.Data.DataColumn columnMultiplier;
            
            private global::System.Data.DataColumn columnTotalArea;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnWidth;
            
            private global::System.Data.DataColumn columnYearBuilt;
            
            private global::System.Data.DataColumn columnEstimated;
            
            private global::System.Data.DataColumn columnCLQuality;
            
            private global::System.Data.DataColumn columnORQuality;
            
            private global::System.Data.DataColumn columnCLCondition;
            
            private global::System.Data.DataColumn columnORCondition;
            
            private global::System.Data.DataColumn columnRemodelTypeID;
            
            private global::System.Data.DataColumn columnRemodelYear;
            
            private global::System.Data.DataColumn columnFactor;
            
            private global::System.Data.DataColumn columnThrough;
            
            private global::System.Data.DataColumn columnEconLife;
            
            private global::System.Data.DataColumn columnEffectiveAge;
            
            private global::System.Data.DataColumn columnOREAge;
            
            private global::System.Data.DataColumn columnEYearBuilt;
            
            private global::System.Data.DataColumn columnPhysDepr;
            
            private global::System.Data.DataColumn columnPhysDeprOR;
            
            private global::System.Data.DataColumn columnFunctionalID;
            
            private global::System.Data.DataColumn columnFunctionalDepr;
            
            private global::System.Data.DataColumn columnFunctionalDeprOR;
            
            private global::System.Data.DataColumn columnFunctionalReason;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnIsPrimary;
            
            private global::System.Data.DataColumn columnPolygonID;
            
            private global::System.Data.DataColumn columnSketchBaseArea;
            
            private global::System.Data.DataColumn columnSketchMultiplier;
            
            private global::System.Data.DataColumn columnSketchTotalArea;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_VSTerraGonDataTable() {
                this.TableName = "tAA_VSTerraGon";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_VSTerraGonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_VSTerraGonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TerraGonIDColumn {
                get {
                    return this.columnTerraGonID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectIDColumn {
                get {
                    return this.columnObjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShapeIDColumn {
                get {
                    return this.columnShapeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VSTypeIDColumn {
                get {
                    return this.columnVSTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeyIDColumn {
                get {
                    return this.columnKeyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseAreaColumn {
                get {
                    return this.columnBaseArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MultiplierColumn {
                get {
                    return this.columnMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAreaColumn {
                get {
                    return this.columnTotalArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WidthColumn {
                get {
                    return this.columnWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearBuiltColumn {
                get {
                    return this.columnYearBuilt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimatedColumn {
                get {
                    return this.columnEstimated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLQualityColumn {
                get {
                    return this.columnCLQuality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORQualityColumn {
                get {
                    return this.columnORQuality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLConditionColumn {
                get {
                    return this.columnCLCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORConditionColumn {
                get {
                    return this.columnORCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemodelTypeIDColumn {
                get {
                    return this.columnRemodelTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemodelYearColumn {
                get {
                    return this.columnRemodelYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FactorColumn {
                get {
                    return this.columnFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThroughColumn {
                get {
                    return this.columnThrough;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EconLifeColumn {
                get {
                    return this.columnEconLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveAgeColumn {
                get {
                    return this.columnEffectiveAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OREAgeColumn {
                get {
                    return this.columnOREAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EYearBuiltColumn {
                get {
                    return this.columnEYearBuilt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhysDeprColumn {
                get {
                    return this.columnPhysDepr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhysDeprORColumn {
                get {
                    return this.columnPhysDeprOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FunctionalIDColumn {
                get {
                    return this.columnFunctionalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FunctionalDeprColumn {
                get {
                    return this.columnFunctionalDepr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FunctionalDeprORColumn {
                get {
                    return this.columnFunctionalDeprOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FunctionalReasonColumn {
                get {
                    return this.columnFunctionalReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPrimaryColumn {
                get {
                    return this.columnIsPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PolygonIDColumn {
                get {
                    return this.columnPolygonID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SketchBaseAreaColumn {
                get {
                    return this.columnSketchBaseArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SketchMultiplierColumn {
                get {
                    return this.columnSketchMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SketchTotalAreaColumn {
                get {
                    return this.columnSketchTotalArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_VSTerraGonRow this[int index] {
                get {
                    return ((tAA_VSTerraGonRow)(this.Rows[index]));
                }
            }
            
            public event tAA_VSTerraGonRowChangeEventHandler tAA_VSTerraGonRowChanging;
            
            public event tAA_VSTerraGonRowChangeEventHandler tAA_VSTerraGonRowChanged;
            
            public event tAA_VSTerraGonRowChangeEventHandler tAA_VSTerraGonRowDeleting;
            
            public event tAA_VSTerraGonRowChangeEventHandler tAA_VSTerraGonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_VSTerraGonRow(tAA_VSTerraGonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_VSTerraGonRow AddtAA_VSTerraGonRow(
                        int TerraGonID, 
                        int ObjectID, 
                        int ShapeID, 
                        short VSTypeID, 
                        int KeyID, 
                        string Description, 
                        decimal BaseArea, 
                        decimal Multiplier, 
                        decimal TotalArea, 
                        decimal Length, 
                        decimal Width, 
                        short YearBuilt, 
                        bool Estimated, 
                        decimal CLQuality, 
                        decimal ORQuality, 
                        decimal CLCondition, 
                        decimal ORCondition, 
                        int RemodelTypeID, 
                        short RemodelYear, 
                        decimal Factor, 
                        short Through, 
                        byte EconLife, 
                        byte EffectiveAge, 
                        byte OREAge, 
                        short EYearBuilt, 
                        decimal PhysDepr, 
                        decimal PhysDeprOR, 
                        int FunctionalID, 
                        decimal FunctionalDepr, 
                        decimal FunctionalDeprOR, 
                        string FunctionalReason, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        int ModuleID, 
                        bool IsPrimary, 
                        int PolygonID, 
                        decimal SketchBaseArea, 
                        decimal SketchMultiplier, 
                        decimal SketchTotalArea) {
                tAA_VSTerraGonRow rowtAA_VSTerraGonRow = ((tAA_VSTerraGonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TerraGonID,
                        ObjectID,
                        ShapeID,
                        VSTypeID,
                        KeyID,
                        Description,
                        BaseArea,
                        Multiplier,
                        TotalArea,
                        Length,
                        Width,
                        YearBuilt,
                        Estimated,
                        CLQuality,
                        ORQuality,
                        CLCondition,
                        ORCondition,
                        RemodelTypeID,
                        RemodelYear,
                        Factor,
                        Through,
                        EconLife,
                        EffectiveAge,
                        OREAge,
                        EYearBuilt,
                        PhysDepr,
                        PhysDeprOR,
                        FunctionalID,
                        FunctionalDepr,
                        FunctionalDeprOR,
                        FunctionalReason,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        IsPrimary,
                        PolygonID,
                        SketchBaseArea,
                        SketchMultiplier,
                        SketchTotalArea};
                rowtAA_VSTerraGonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_VSTerraGonRow);
                return rowtAA_VSTerraGonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_VSTerraGonDataTable cln = ((tAA_VSTerraGonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_VSTerraGonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTerraGonID = base.Columns["TerraGonID"];
                this.columnObjectID = base.Columns["ObjectID"];
                this.columnShapeID = base.Columns["ShapeID"];
                this.columnVSTypeID = base.Columns["VSTypeID"];
                this.columnKeyID = base.Columns["KeyID"];
                this.columnDescription = base.Columns["Description"];
                this.columnBaseArea = base.Columns["BaseArea"];
                this.columnMultiplier = base.Columns["Multiplier"];
                this.columnTotalArea = base.Columns["TotalArea"];
                this.columnLength = base.Columns["Length"];
                this.columnWidth = base.Columns["Width"];
                this.columnYearBuilt = base.Columns["YearBuilt"];
                this.columnEstimated = base.Columns["Estimated"];
                this.columnCLQuality = base.Columns["CLQuality"];
                this.columnORQuality = base.Columns["ORQuality"];
                this.columnCLCondition = base.Columns["CLCondition"];
                this.columnORCondition = base.Columns["ORCondition"];
                this.columnRemodelTypeID = base.Columns["RemodelTypeID"];
                this.columnRemodelYear = base.Columns["RemodelYear"];
                this.columnFactor = base.Columns["Factor"];
                this.columnThrough = base.Columns["Through"];
                this.columnEconLife = base.Columns["EconLife"];
                this.columnEffectiveAge = base.Columns["EffectiveAge"];
                this.columnOREAge = base.Columns["OREAge"];
                this.columnEYearBuilt = base.Columns["EYearBuilt"];
                this.columnPhysDepr = base.Columns["PhysDepr"];
                this.columnPhysDeprOR = base.Columns["PhysDeprOR"];
                this.columnFunctionalID = base.Columns["FunctionalID"];
                this.columnFunctionalDepr = base.Columns["FunctionalDepr"];
                this.columnFunctionalDeprOR = base.Columns["FunctionalDeprOR"];
                this.columnFunctionalReason = base.Columns["FunctionalReason"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnIsPrimary = base.Columns["IsPrimary"];
                this.columnPolygonID = base.Columns["PolygonID"];
                this.columnSketchBaseArea = base.Columns["SketchBaseArea"];
                this.columnSketchMultiplier = base.Columns["SketchMultiplier"];
                this.columnSketchTotalArea = base.Columns["SketchTotalArea"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTerraGonID = new global::System.Data.DataColumn("TerraGonID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerraGonID);
                this.columnObjectID = new global::System.Data.DataColumn("ObjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectID);
                this.columnShapeID = new global::System.Data.DataColumn("ShapeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShapeID);
                this.columnVSTypeID = new global::System.Data.DataColumn("VSTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVSTypeID);
                this.columnKeyID = new global::System.Data.DataColumn("KeyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnBaseArea = new global::System.Data.DataColumn("BaseArea", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseArea);
                this.columnMultiplier = new global::System.Data.DataColumn("Multiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultiplier);
                this.columnTotalArea = new global::System.Data.DataColumn("TotalArea", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalArea);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnWidth = new global::System.Data.DataColumn("Width", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWidth);
                this.columnYearBuilt = new global::System.Data.DataColumn("YearBuilt", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearBuilt);
                this.columnEstimated = new global::System.Data.DataColumn("Estimated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimated);
                this.columnCLQuality = new global::System.Data.DataColumn("CLQuality", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLQuality);
                this.columnORQuality = new global::System.Data.DataColumn("ORQuality", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORQuality);
                this.columnCLCondition = new global::System.Data.DataColumn("CLCondition", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLCondition);
                this.columnORCondition = new global::System.Data.DataColumn("ORCondition", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORCondition);
                this.columnRemodelTypeID = new global::System.Data.DataColumn("RemodelTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemodelTypeID);
                this.columnRemodelYear = new global::System.Data.DataColumn("RemodelYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemodelYear);
                this.columnFactor = new global::System.Data.DataColumn("Factor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactor);
                this.columnThrough = new global::System.Data.DataColumn("Through", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThrough);
                this.columnEconLife = new global::System.Data.DataColumn("EconLife", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEconLife);
                this.columnEffectiveAge = new global::System.Data.DataColumn("EffectiveAge", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveAge);
                this.columnOREAge = new global::System.Data.DataColumn("OREAge", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOREAge);
                this.columnEYearBuilt = new global::System.Data.DataColumn("EYearBuilt", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEYearBuilt);
                this.columnPhysDepr = new global::System.Data.DataColumn("PhysDepr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysDepr);
                this.columnPhysDeprOR = new global::System.Data.DataColumn("PhysDeprOR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysDeprOR);
                this.columnFunctionalID = new global::System.Data.DataColumn("FunctionalID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalID);
                this.columnFunctionalDepr = new global::System.Data.DataColumn("FunctionalDepr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalDepr);
                this.columnFunctionalDeprOR = new global::System.Data.DataColumn("FunctionalDeprOR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalDeprOR);
                this.columnFunctionalReason = new global::System.Data.DataColumn("FunctionalReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalReason);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnIsPrimary = new global::System.Data.DataColumn("IsPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPrimary);
                this.columnPolygonID = new global::System.Data.DataColumn("PolygonID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolygonID);
                this.columnSketchBaseArea = new global::System.Data.DataColumn("SketchBaseArea", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSketchBaseArea);
                this.columnSketchMultiplier = new global::System.Data.DataColumn("SketchMultiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSketchMultiplier);
                this.columnSketchTotalArea = new global::System.Data.DataColumn("SketchTotalArea", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSketchTotalArea);
                this.columnTerraGonID.ReadOnly = true;
                this.columnObjectID.ReadOnly = true;
                this.columnShapeID.ReadOnly = true;
                this.columnVSTypeID.ReadOnly = true;
                this.columnKeyID.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 50;
                this.columnBaseArea.ReadOnly = true;
                this.columnMultiplier.ReadOnly = true;
                this.columnTotalArea.ReadOnly = true;
                this.columnLength.ReadOnly = true;
                this.columnWidth.ReadOnly = true;
                this.columnYearBuilt.ReadOnly = true;
                this.columnEstimated.ReadOnly = true;
                this.columnCLQuality.ReadOnly = true;
                this.columnORQuality.ReadOnly = true;
                this.columnCLCondition.ReadOnly = true;
                this.columnORCondition.ReadOnly = true;
                this.columnRemodelTypeID.ReadOnly = true;
                this.columnRemodelYear.ReadOnly = true;
                this.columnFactor.ReadOnly = true;
                this.columnThrough.ReadOnly = true;
                this.columnEconLife.ReadOnly = true;
                this.columnEffectiveAge.ReadOnly = true;
                this.columnOREAge.ReadOnly = true;
                this.columnEYearBuilt.ReadOnly = true;
                this.columnPhysDepr.ReadOnly = true;
                this.columnPhysDeprOR.ReadOnly = true;
                this.columnFunctionalID.ReadOnly = true;
                this.columnFunctionalDepr.ReadOnly = true;
                this.columnFunctionalDeprOR.ReadOnly = true;
                this.columnFunctionalReason.ReadOnly = true;
                this.columnFunctionalReason.MaxLength = 50;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnIsPrimary.ReadOnly = true;
                this.columnPolygonID.ReadOnly = true;
                this.columnSketchBaseArea.ReadOnly = true;
                this.columnSketchMultiplier.ReadOnly = true;
                this.columnSketchTotalArea.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_VSTerraGonRow NewtAA_VSTerraGonRow() {
                return ((tAA_VSTerraGonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_VSTerraGonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_VSTerraGonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_VSTerraGonRowChanged != null)) {
                    this.tAA_VSTerraGonRowChanged(this, new tAA_VSTerraGonRowChangeEvent(((tAA_VSTerraGonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_VSTerraGonRowChanging != null)) {
                    this.tAA_VSTerraGonRowChanging(this, new tAA_VSTerraGonRowChangeEvent(((tAA_VSTerraGonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_VSTerraGonRowDeleted != null)) {
                    this.tAA_VSTerraGonRowDeleted(this, new tAA_VSTerraGonRowChangeEvent(((tAA_VSTerraGonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_VSTerraGonRowDeleting != null)) {
                    this.tAA_VSTerraGonRowDeleting(this, new tAA_VSTerraGonRowChangeEvent(((tAA_VSTerraGonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_VSTerraGonRow(tAA_VSTerraGonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_VSTerraGonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type2DataTable : global::System.Data.TypedTableBase<tAA_MA_Type2Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnSiteAcres;
            
            private global::System.Data.DataColumn columnDryAcres;
            
            private global::System.Data.DataColumn columnIrrigatedAcres;
            
            private global::System.Data.DataColumn columnTimberAcres;
            
            private global::System.Data.DataColumn columnOtherAcres;
            
            private global::System.Data.DataColumn columnBaseAcres;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type2DataTable() {
                this.TableName = "tAA_MA_Type2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteAcresColumn {
                get {
                    return this.columnSiteAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DryAcresColumn {
                get {
                    return this.columnDryAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IrrigatedAcresColumn {
                get {
                    return this.columnIrrigatedAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimberAcresColumn {
                get {
                    return this.columnTimberAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherAcresColumn {
                get {
                    return this.columnOtherAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseAcresColumn {
                get {
                    return this.columnBaseAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type2Row this[int index] {
                get {
                    return ((tAA_MA_Type2Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type2RowChangeEventHandler tAA_MA_Type2RowChanging;
            
            public event tAA_MA_Type2RowChangeEventHandler tAA_MA_Type2RowChanged;
            
            public event tAA_MA_Type2RowChangeEventHandler tAA_MA_Type2RowDeleting;
            
            public event tAA_MA_Type2RowChangeEventHandler tAA_MA_Type2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type2Row(tAA_MA_Type2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type2Row AddtAA_MA_Type2Row(
                        int ParcelID, 
                        int MADistrictID, 
                        decimal SiteAcres, 
                        decimal DryAcres, 
                        decimal IrrigatedAcres, 
                        decimal TimberAcres, 
                        decimal OtherAcres, 
                        decimal BaseAcres, 
                        decimal TaxAmount, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        string amount, 
                        decimal OverrideAmount, 
                        bool IsExempt, 
                        bool IsOverride) {
                tAA_MA_Type2Row rowtAA_MA_Type2Row = ((tAA_MA_Type2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        SiteAcres,
                        DryAcres,
                        IrrigatedAcres,
                        TimberAcres,
                        OtherAcres,
                        BaseAcres,
                        TaxAmount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        amount,
                        OverrideAmount,
                        IsExempt,
                        IsOverride};
                rowtAA_MA_Type2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type2Row);
                return rowtAA_MA_Type2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type2DataTable cln = ((tAA_MA_Type2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnSiteAcres = base.Columns["SiteAcres"];
                this.columnDryAcres = base.Columns["DryAcres"];
                this.columnIrrigatedAcres = base.Columns["IrrigatedAcres"];
                this.columnTimberAcres = base.Columns["TimberAcres"];
                this.columnOtherAcres = base.Columns["OtherAcres"];
                this.columnBaseAcres = base.Columns["BaseAcres"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnamount = base.Columns["amount"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnSiteAcres = new global::System.Data.DataColumn("SiteAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteAcres);
                this.columnDryAcres = new global::System.Data.DataColumn("DryAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDryAcres);
                this.columnIrrigatedAcres = new global::System.Data.DataColumn("IrrigatedAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigatedAcres);
                this.columnTimberAcres = new global::System.Data.DataColumn("TimberAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimberAcres);
                this.columnOtherAcres = new global::System.Data.DataColumn("OtherAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAcres);
                this.columnBaseAcres = new global::System.Data.DataColumn("BaseAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseAcres);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnSiteAcres.ReadOnly = true;
                this.columnDryAcres.ReadOnly = true;
                this.columnIrrigatedAcres.ReadOnly = true;
                this.columnTimberAcres.ReadOnly = true;
                this.columnOtherAcres.ReadOnly = true;
                this.columnBaseAcres.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnamount.ReadOnly = true;
                this.columnamount.MaxLength = 50;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type2Row NewtAA_MA_Type2Row() {
                return ((tAA_MA_Type2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type2RowChanged != null)) {
                    this.tAA_MA_Type2RowChanged(this, new tAA_MA_Type2RowChangeEvent(((tAA_MA_Type2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type2RowChanging != null)) {
                    this.tAA_MA_Type2RowChanging(this, new tAA_MA_Type2RowChangeEvent(((tAA_MA_Type2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type2RowDeleted != null)) {
                    this.tAA_MA_Type2RowDeleted(this, new tAA_MA_Type2RowChangeEvent(((tAA_MA_Type2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type2RowDeleting != null)) {
                    this.tAA_MA_Type2RowDeleting(this, new tAA_MA_Type2RowChangeEvent(((tAA_MA_Type2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type2Row(tAA_MA_Type2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type6DataTable : global::System.Data.TypedTableBase<tAA_MA_Type6Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnFirePatrolAcres;
            
            private global::System.Data.DataColumn columnCountyFee;
            
            private global::System.Data.DataColumn columnFPAFee;
            
            private global::System.Data.DataColumn columnLCFFee;
            
            private global::System.Data.DataColumn columnFPARate;
            
            private global::System.Data.DataColumn columnLCFRate;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type6DataTable() {
                this.TableName = "tAA_MA_Type6";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type6DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type6DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirePatrolAcresColumn {
                get {
                    return this.columnFirePatrolAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyFeeColumn {
                get {
                    return this.columnCountyFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FPAFeeColumn {
                get {
                    return this.columnFPAFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCFFeeColumn {
                get {
                    return this.columnLCFFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FPARateColumn {
                get {
                    return this.columnFPARate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCFRateColumn {
                get {
                    return this.columnLCFRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type6Row this[int index] {
                get {
                    return ((tAA_MA_Type6Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type6RowChangeEventHandler tAA_MA_Type6RowChanging;
            
            public event tAA_MA_Type6RowChangeEventHandler tAA_MA_Type6RowChanged;
            
            public event tAA_MA_Type6RowChangeEventHandler tAA_MA_Type6RowDeleting;
            
            public event tAA_MA_Type6RowChangeEventHandler tAA_MA_Type6RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type6Row(tAA_MA_Type6Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type6Row AddtAA_MA_Type6Row(
                        int ParcelID, 
                        int MADistrictID, 
                        decimal FirePatrolAcres, 
                        decimal CountyFee, 
                        decimal FPAFee, 
                        decimal LCFFee, 
                        decimal FPARate, 
                        decimal LCFRate, 
                        decimal TaxAmount, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        string amount, 
                        decimal OverrideAmount, 
                        bool IsExempt, 
                        bool IsOverride) {
                tAA_MA_Type6Row rowtAA_MA_Type6Row = ((tAA_MA_Type6Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        FirePatrolAcres,
                        CountyFee,
                        FPAFee,
                        LCFFee,
                        FPARate,
                        LCFRate,
                        TaxAmount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        amount,
                        OverrideAmount,
                        IsExempt,
                        IsOverride};
                rowtAA_MA_Type6Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type6Row);
                return rowtAA_MA_Type6Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type6DataTable cln = ((tAA_MA_Type6DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type6DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnFirePatrolAcres = base.Columns["FirePatrolAcres"];
                this.columnCountyFee = base.Columns["CountyFee"];
                this.columnFPAFee = base.Columns["FPAFee"];
                this.columnLCFFee = base.Columns["LCFFee"];
                this.columnFPARate = base.Columns["FPARate"];
                this.columnLCFRate = base.Columns["LCFRate"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnamount = base.Columns["amount"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnFirePatrolAcres = new global::System.Data.DataColumn("FirePatrolAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirePatrolAcres);
                this.columnCountyFee = new global::System.Data.DataColumn("CountyFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyFee);
                this.columnFPAFee = new global::System.Data.DataColumn("FPAFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFPAFee);
                this.columnLCFFee = new global::System.Data.DataColumn("LCFFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCFFee);
                this.columnFPARate = new global::System.Data.DataColumn("FPARate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFPARate);
                this.columnLCFRate = new global::System.Data.DataColumn("LCFRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCFRate);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnFirePatrolAcres.ReadOnly = true;
                this.columnCountyFee.ReadOnly = true;
                this.columnFPAFee.ReadOnly = true;
                this.columnLCFFee.ReadOnly = true;
                this.columnFPARate.ReadOnly = true;
                this.columnLCFRate.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnamount.ReadOnly = true;
                this.columnamount.MaxLength = 50;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type6Row NewtAA_MA_Type6Row() {
                return ((tAA_MA_Type6Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type6Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type6Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type6RowChanged != null)) {
                    this.tAA_MA_Type6RowChanged(this, new tAA_MA_Type6RowChangeEvent(((tAA_MA_Type6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type6RowChanging != null)) {
                    this.tAA_MA_Type6RowChanging(this, new tAA_MA_Type6RowChangeEvent(((tAA_MA_Type6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type6RowDeleted != null)) {
                    this.tAA_MA_Type6RowDeleted(this, new tAA_MA_Type6RowChangeEvent(((tAA_MA_Type6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type6RowDeleting != null)) {
                    this.tAA_MA_Type6RowDeleting(this, new tAA_MA_Type6RowChangeEvent(((tAA_MA_Type6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type6Row(tAA_MA_Type6Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type6DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_DeprItemDataTable : global::System.Data.TypedTableBase<tAA_DeprItemRow> {
            
            private global::System.Data.DataColumn columnDeprItemID;
            
            private global::System.Data.DataColumn columnDeprTableID;
            
            private global::System.Data.DataColumn columnEffectiveAge;
            
            private global::System.Data.DataColumn columnDepr1;
            
            private global::System.Data.DataColumn columnDepr2;
            
            private global::System.Data.DataColumn columnDepr3;
            
            private global::System.Data.DataColumn columnDepr4;
            
            private global::System.Data.DataColumn columnDepr5;
            
            private global::System.Data.DataColumn columnDepr6;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprItemDataTable() {
                this.TableName = "tAA_DeprItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_DeprItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_DeprItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprItemIDColumn {
                get {
                    return this.columnDeprItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprTableIDColumn {
                get {
                    return this.columnDeprTableID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveAgeColumn {
                get {
                    return this.columnEffectiveAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr1Column {
                get {
                    return this.columnDepr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr2Column {
                get {
                    return this.columnDepr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr3Column {
                get {
                    return this.columnDepr3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr4Column {
                get {
                    return this.columnDepr4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr5Column {
                get {
                    return this.columnDepr5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr6Column {
                get {
                    return this.columnDepr6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprItemRow this[int index] {
                get {
                    return ((tAA_DeprItemRow)(this.Rows[index]));
                }
            }
            
            public event tAA_DeprItemRowChangeEventHandler tAA_DeprItemRowChanging;
            
            public event tAA_DeprItemRowChangeEventHandler tAA_DeprItemRowChanged;
            
            public event tAA_DeprItemRowChangeEventHandler tAA_DeprItemRowDeleting;
            
            public event tAA_DeprItemRowChangeEventHandler tAA_DeprItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_DeprItemRow(tAA_DeprItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprItemRow AddtAA_DeprItemRow(int DeprItemID, int DeprTableID, byte EffectiveAge, decimal Depr1, decimal Depr2, decimal Depr3, decimal Depr4, decimal Depr5, decimal Depr6, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, short ModuleID, bool IsDeleted) {
                tAA_DeprItemRow rowtAA_DeprItemRow = ((tAA_DeprItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeprItemID,
                        DeprTableID,
                        EffectiveAge,
                        Depr1,
                        Depr2,
                        Depr3,
                        Depr4,
                        Depr5,
                        Depr6,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        ModuleID,
                        IsDeleted};
                rowtAA_DeprItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_DeprItemRow);
                return rowtAA_DeprItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_DeprItemDataTable cln = ((tAA_DeprItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_DeprItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeprItemID = base.Columns["DeprItemID"];
                this.columnDeprTableID = base.Columns["DeprTableID"];
                this.columnEffectiveAge = base.Columns["EffectiveAge"];
                this.columnDepr1 = base.Columns["Depr1"];
                this.columnDepr2 = base.Columns["Depr2"];
                this.columnDepr3 = base.Columns["Depr3"];
                this.columnDepr4 = base.Columns["Depr4"];
                this.columnDepr5 = base.Columns["Depr5"];
                this.columnDepr6 = base.Columns["Depr6"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeprItemID = new global::System.Data.DataColumn("DeprItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprItemID);
                this.columnDeprTableID = new global::System.Data.DataColumn("DeprTableID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprTableID);
                this.columnEffectiveAge = new global::System.Data.DataColumn("EffectiveAge", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveAge);
                this.columnDepr1 = new global::System.Data.DataColumn("Depr1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr1);
                this.columnDepr2 = new global::System.Data.DataColumn("Depr2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr2);
                this.columnDepr3 = new global::System.Data.DataColumn("Depr3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr3);
                this.columnDepr4 = new global::System.Data.DataColumn("Depr4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr4);
                this.columnDepr5 = new global::System.Data.DataColumn("Depr5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr5);
                this.columnDepr6 = new global::System.Data.DataColumn("Depr6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr6);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnDeprItemID.ReadOnly = true;
                this.columnDeprTableID.ReadOnly = true;
                this.columnEffectiveAge.ReadOnly = true;
                this.columnDepr1.ReadOnly = true;
                this.columnDepr2.ReadOnly = true;
                this.columnDepr3.ReadOnly = true;
                this.columnDepr4.ReadOnly = true;
                this.columnDepr5.ReadOnly = true;
                this.columnDepr6.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprItemRow NewtAA_DeprItemRow() {
                return ((tAA_DeprItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_DeprItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_DeprItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_DeprItemRowChanged != null)) {
                    this.tAA_DeprItemRowChanged(this, new tAA_DeprItemRowChangeEvent(((tAA_DeprItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_DeprItemRowChanging != null)) {
                    this.tAA_DeprItemRowChanging(this, new tAA_DeprItemRowChangeEvent(((tAA_DeprItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_DeprItemRowDeleted != null)) {
                    this.tAA_DeprItemRowDeleted(this, new tAA_DeprItemRowChangeEvent(((tAA_DeprItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_DeprItemRowDeleting != null)) {
                    this.tAA_DeprItemRowDeleting(this, new tAA_DeprItemRowChangeEvent(((tAA_DeprItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_DeprItemRow(tAA_DeprItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_DeprItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_Misc_CatalogDataTable : global::System.Data.TypedTableBase<tAA_Misc_CatalogRow> {
            
            private global::System.Data.DataColumn columnMICodeID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnMICode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnVFormula;
            
            private global::System.Data.DataColumn columnL01;
            
            private global::System.Data.DataColumn columnD01;
            
            private global::System.Data.DataColumn columnF01;
            
            private global::System.Data.DataColumn columnL02;
            
            private global::System.Data.DataColumn columnD02;
            
            private global::System.Data.DataColumn columnF02;
            
            private global::System.Data.DataColumn columnL03;
            
            private global::System.Data.DataColumn columnD03;
            
            private global::System.Data.DataColumn columnF03;
            
            private global::System.Data.DataColumn columnL04;
            
            private global::System.Data.DataColumn columnD04;
            
            private global::System.Data.DataColumn columnF04;
            
            private global::System.Data.DataColumn columnL05;
            
            private global::System.Data.DataColumn columnD05;
            
            private global::System.Data.DataColumn columnF05;
            
            private global::System.Data.DataColumn columnL06;
            
            private global::System.Data.DataColumn columnD06;
            
            private global::System.Data.DataColumn columnF06;
            
            private global::System.Data.DataColumn columnL07;
            
            private global::System.Data.DataColumn columnD07;
            
            private global::System.Data.DataColumn columnF07;
            
            private global::System.Data.DataColumn columnL08;
            
            private global::System.Data.DataColumn columnD08;
            
            private global::System.Data.DataColumn columnF08;
            
            private global::System.Data.DataColumn columnL09;
            
            private global::System.Data.DataColumn columnD09;
            
            private global::System.Data.DataColumn columnF09;
            
            private global::System.Data.DataColumn columnL10;
            
            private global::System.Data.DataColumn columnD10;
            
            private global::System.Data.DataColumn columnF10;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnS01;
            
            private global::System.Data.DataColumn columnS02;
            
            private global::System.Data.DataColumn columnS03;
            
            private global::System.Data.DataColumn columnS04;
            
            private global::System.Data.DataColumn columnS05;
            
            private global::System.Data.DataColumn columnS06;
            
            private global::System.Data.DataColumn columnS07;
            
            private global::System.Data.DataColumn columnS08;
            
            private global::System.Data.DataColumn columnS09;
            
            private global::System.Data.DataColumn columnS10;
            
            private global::System.Data.DataColumn columnconversion;
            
            private global::System.Data.DataColumn columnC01;
            
            private global::System.Data.DataColumn columnC02;
            
            private global::System.Data.DataColumn columnC03;
            
            private global::System.Data.DataColumn columnC04;
            
            private global::System.Data.DataColumn columnC05;
            
            private global::System.Data.DataColumn columnC06;
            
            private global::System.Data.DataColumn columnC07;
            
            private global::System.Data.DataColumn columnC08;
            
            private global::System.Data.DataColumn columnC09;
            
            private global::System.Data.DataColumn columnC10;
            
            private global::System.Data.DataColumn columnL11;
            
            private global::System.Data.DataColumn columnD11;
            
            private global::System.Data.DataColumn columnS11;
            
            private global::System.Data.DataColumn columnC11;
            
            private global::System.Data.DataColumn columnF11;
            
            private global::System.Data.DataColumn columnL12;
            
            private global::System.Data.DataColumn columnD12;
            
            private global::System.Data.DataColumn columnS12;
            
            private global::System.Data.DataColumn columnC12;
            
            private global::System.Data.DataColumn columnF12;
            
            private global::System.Data.DataColumn columnDeprTableID;
            
            private global::System.Data.DataColumn columnWithPrimary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogDataTable() {
                this.TableName = "tAA_Misc_Catalog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_Misc_CatalogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_Misc_CatalogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MICodeIDColumn {
                get {
                    return this.columnMICodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MICodeColumn {
                get {
                    return this.columnMICode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VFormulaColumn {
                get {
                    return this.columnVFormula;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L01Column {
                get {
                    return this.columnL01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D01Column {
                get {
                    return this.columnD01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F01Column {
                get {
                    return this.columnF01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L02Column {
                get {
                    return this.columnL02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D02Column {
                get {
                    return this.columnD02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F02Column {
                get {
                    return this.columnF02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L03Column {
                get {
                    return this.columnL03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D03Column {
                get {
                    return this.columnD03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F03Column {
                get {
                    return this.columnF03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L04Column {
                get {
                    return this.columnL04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D04Column {
                get {
                    return this.columnD04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F04Column {
                get {
                    return this.columnF04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L05Column {
                get {
                    return this.columnL05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D05Column {
                get {
                    return this.columnD05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F05Column {
                get {
                    return this.columnF05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L06Column {
                get {
                    return this.columnL06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D06Column {
                get {
                    return this.columnD06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F06Column {
                get {
                    return this.columnF06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L07Column {
                get {
                    return this.columnL07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D07Column {
                get {
                    return this.columnD07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F07Column {
                get {
                    return this.columnF07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L08Column {
                get {
                    return this.columnL08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D08Column {
                get {
                    return this.columnD08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F08Column {
                get {
                    return this.columnF08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L09Column {
                get {
                    return this.columnL09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D09Column {
                get {
                    return this.columnD09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F09Column {
                get {
                    return this.columnF09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L10Column {
                get {
                    return this.columnL10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D10Column {
                get {
                    return this.columnD10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F10Column {
                get {
                    return this.columnF10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S01Column {
                get {
                    return this.columnS01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S02Column {
                get {
                    return this.columnS02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S03Column {
                get {
                    return this.columnS03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S04Column {
                get {
                    return this.columnS04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S05Column {
                get {
                    return this.columnS05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S06Column {
                get {
                    return this.columnS06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S07Column {
                get {
                    return this.columnS07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S08Column {
                get {
                    return this.columnS08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S09Column {
                get {
                    return this.columnS09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S10Column {
                get {
                    return this.columnS10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conversionColumn {
                get {
                    return this.columnconversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C01Column {
                get {
                    return this.columnC01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C02Column {
                get {
                    return this.columnC02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C03Column {
                get {
                    return this.columnC03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C04Column {
                get {
                    return this.columnC04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C05Column {
                get {
                    return this.columnC05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C06Column {
                get {
                    return this.columnC06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C07Column {
                get {
                    return this.columnC07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C08Column {
                get {
                    return this.columnC08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C09Column {
                get {
                    return this.columnC09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C10Column {
                get {
                    return this.columnC10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L11Column {
                get {
                    return this.columnL11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D11Column {
                get {
                    return this.columnD11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S11Column {
                get {
                    return this.columnS11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C11Column {
                get {
                    return this.columnC11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F11Column {
                get {
                    return this.columnF11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L12Column {
                get {
                    return this.columnL12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D12Column {
                get {
                    return this.columnD12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S12Column {
                get {
                    return this.columnS12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C12Column {
                get {
                    return this.columnC12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F12Column {
                get {
                    return this.columnF12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprTableIDColumn {
                get {
                    return this.columnDeprTableID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WithPrimaryColumn {
                get {
                    return this.columnWithPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogRow this[int index] {
                get {
                    return ((tAA_Misc_CatalogRow)(this.Rows[index]));
                }
            }
            
            public event tAA_Misc_CatalogRowChangeEventHandler tAA_Misc_CatalogRowChanging;
            
            public event tAA_Misc_CatalogRowChangeEventHandler tAA_Misc_CatalogRowChanged;
            
            public event tAA_Misc_CatalogRowChangeEventHandler tAA_Misc_CatalogRowDeleting;
            
            public event tAA_Misc_CatalogRowChangeEventHandler tAA_Misc_CatalogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_Misc_CatalogRow(tAA_Misc_CatalogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogRow AddtAA_Misc_CatalogRow(
                        int MICodeID, 
                        short RollYear, 
                        string MICode, 
                        string Description, 
                        string VFormula, 
                        string L01, 
                        byte D01, 
                        string F01, 
                        string L02, 
                        byte D02, 
                        string F02, 
                        string L03, 
                        byte D03, 
                        string F03, 
                        string L04, 
                        byte D04, 
                        string F04, 
                        string L05, 
                        byte D05, 
                        string F05, 
                        string L06, 
                        byte D06, 
                        string F06, 
                        string L07, 
                        byte D07, 
                        string F07, 
                        string L08, 
                        byte D08, 
                        string F08, 
                        string L09, 
                        byte D09, 
                        string F09, 
                        string L10, 
                        byte D10, 
                        string F10, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        bool S01, 
                        bool S02, 
                        bool S03, 
                        bool S04, 
                        bool S05, 
                        bool S06, 
                        bool S07, 
                        bool S08, 
                        bool S09, 
                        bool S10, 
                        string conversion, 
                        bool C01, 
                        bool C02, 
                        bool C03, 
                        bool C04, 
                        bool C05, 
                        bool C06, 
                        bool C07, 
                        bool C08, 
                        bool C09, 
                        bool C10, 
                        string L11, 
                        byte D11, 
                        bool S11, 
                        bool C11, 
                        string F11, 
                        string L12, 
                        byte D12, 
                        bool S12, 
                        bool C12, 
                        string F12, 
                        int DeprTableID, 
                        bool WithPrimary) {
                tAA_Misc_CatalogRow rowtAA_Misc_CatalogRow = ((tAA_Misc_CatalogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MICodeID,
                        RollYear,
                        MICode,
                        Description,
                        VFormula,
                        L01,
                        D01,
                        F01,
                        L02,
                        D02,
                        F02,
                        L03,
                        D03,
                        F03,
                        L04,
                        D04,
                        F04,
                        L05,
                        D05,
                        F05,
                        L06,
                        D06,
                        F06,
                        L07,
                        D07,
                        F07,
                        L08,
                        D08,
                        F08,
                        L09,
                        D09,
                        F09,
                        L10,
                        D10,
                        F10,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        S01,
                        S02,
                        S03,
                        S04,
                        S05,
                        S06,
                        S07,
                        S08,
                        S09,
                        S10,
                        conversion,
                        C01,
                        C02,
                        C03,
                        C04,
                        C05,
                        C06,
                        C07,
                        C08,
                        C09,
                        C10,
                        L11,
                        D11,
                        S11,
                        C11,
                        F11,
                        L12,
                        D12,
                        S12,
                        C12,
                        F12,
                        DeprTableID,
                        WithPrimary};
                rowtAA_Misc_CatalogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_Misc_CatalogRow);
                return rowtAA_Misc_CatalogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_Misc_CatalogDataTable cln = ((tAA_Misc_CatalogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_Misc_CatalogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMICodeID = base.Columns["MICodeID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnMICode = base.Columns["MICode"];
                this.columnDescription = base.Columns["Description"];
                this.columnVFormula = base.Columns["VFormula"];
                this.columnL01 = base.Columns["L01"];
                this.columnD01 = base.Columns["D01"];
                this.columnF01 = base.Columns["F01"];
                this.columnL02 = base.Columns["L02"];
                this.columnD02 = base.Columns["D02"];
                this.columnF02 = base.Columns["F02"];
                this.columnL03 = base.Columns["L03"];
                this.columnD03 = base.Columns["D03"];
                this.columnF03 = base.Columns["F03"];
                this.columnL04 = base.Columns["L04"];
                this.columnD04 = base.Columns["D04"];
                this.columnF04 = base.Columns["F04"];
                this.columnL05 = base.Columns["L05"];
                this.columnD05 = base.Columns["D05"];
                this.columnF05 = base.Columns["F05"];
                this.columnL06 = base.Columns["L06"];
                this.columnD06 = base.Columns["D06"];
                this.columnF06 = base.Columns["F06"];
                this.columnL07 = base.Columns["L07"];
                this.columnD07 = base.Columns["D07"];
                this.columnF07 = base.Columns["F07"];
                this.columnL08 = base.Columns["L08"];
                this.columnD08 = base.Columns["D08"];
                this.columnF08 = base.Columns["F08"];
                this.columnL09 = base.Columns["L09"];
                this.columnD09 = base.Columns["D09"];
                this.columnF09 = base.Columns["F09"];
                this.columnL10 = base.Columns["L10"];
                this.columnD10 = base.Columns["D10"];
                this.columnF10 = base.Columns["F10"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnS01 = base.Columns["S01"];
                this.columnS02 = base.Columns["S02"];
                this.columnS03 = base.Columns["S03"];
                this.columnS04 = base.Columns["S04"];
                this.columnS05 = base.Columns["S05"];
                this.columnS06 = base.Columns["S06"];
                this.columnS07 = base.Columns["S07"];
                this.columnS08 = base.Columns["S08"];
                this.columnS09 = base.Columns["S09"];
                this.columnS10 = base.Columns["S10"];
                this.columnconversion = base.Columns["conversion"];
                this.columnC01 = base.Columns["C01"];
                this.columnC02 = base.Columns["C02"];
                this.columnC03 = base.Columns["C03"];
                this.columnC04 = base.Columns["C04"];
                this.columnC05 = base.Columns["C05"];
                this.columnC06 = base.Columns["C06"];
                this.columnC07 = base.Columns["C07"];
                this.columnC08 = base.Columns["C08"];
                this.columnC09 = base.Columns["C09"];
                this.columnC10 = base.Columns["C10"];
                this.columnL11 = base.Columns["L11"];
                this.columnD11 = base.Columns["D11"];
                this.columnS11 = base.Columns["S11"];
                this.columnC11 = base.Columns["C11"];
                this.columnF11 = base.Columns["F11"];
                this.columnL12 = base.Columns["L12"];
                this.columnD12 = base.Columns["D12"];
                this.columnS12 = base.Columns["S12"];
                this.columnC12 = base.Columns["C12"];
                this.columnF12 = base.Columns["F12"];
                this.columnDeprTableID = base.Columns["DeprTableID"];
                this.columnWithPrimary = base.Columns["WithPrimary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMICodeID = new global::System.Data.DataColumn("MICodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMICodeID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnMICode = new global::System.Data.DataColumn("MICode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMICode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnVFormula = new global::System.Data.DataColumn("VFormula", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVFormula);
                this.columnL01 = new global::System.Data.DataColumn("L01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL01);
                this.columnD01 = new global::System.Data.DataColumn("D01", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD01);
                this.columnF01 = new global::System.Data.DataColumn("F01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF01);
                this.columnL02 = new global::System.Data.DataColumn("L02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL02);
                this.columnD02 = new global::System.Data.DataColumn("D02", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD02);
                this.columnF02 = new global::System.Data.DataColumn("F02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF02);
                this.columnL03 = new global::System.Data.DataColumn("L03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL03);
                this.columnD03 = new global::System.Data.DataColumn("D03", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD03);
                this.columnF03 = new global::System.Data.DataColumn("F03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF03);
                this.columnL04 = new global::System.Data.DataColumn("L04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL04);
                this.columnD04 = new global::System.Data.DataColumn("D04", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD04);
                this.columnF04 = new global::System.Data.DataColumn("F04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF04);
                this.columnL05 = new global::System.Data.DataColumn("L05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL05);
                this.columnD05 = new global::System.Data.DataColumn("D05", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD05);
                this.columnF05 = new global::System.Data.DataColumn("F05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF05);
                this.columnL06 = new global::System.Data.DataColumn("L06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL06);
                this.columnD06 = new global::System.Data.DataColumn("D06", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD06);
                this.columnF06 = new global::System.Data.DataColumn("F06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF06);
                this.columnL07 = new global::System.Data.DataColumn("L07", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL07);
                this.columnD07 = new global::System.Data.DataColumn("D07", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD07);
                this.columnF07 = new global::System.Data.DataColumn("F07", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF07);
                this.columnL08 = new global::System.Data.DataColumn("L08", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL08);
                this.columnD08 = new global::System.Data.DataColumn("D08", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD08);
                this.columnF08 = new global::System.Data.DataColumn("F08", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF08);
                this.columnL09 = new global::System.Data.DataColumn("L09", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL09);
                this.columnD09 = new global::System.Data.DataColumn("D09", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD09);
                this.columnF09 = new global::System.Data.DataColumn("F09", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF09);
                this.columnL10 = new global::System.Data.DataColumn("L10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL10);
                this.columnD10 = new global::System.Data.DataColumn("D10", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD10);
                this.columnF10 = new global::System.Data.DataColumn("F10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF10);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnS01 = new global::System.Data.DataColumn("S01", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS01);
                this.columnS02 = new global::System.Data.DataColumn("S02", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS02);
                this.columnS03 = new global::System.Data.DataColumn("S03", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS03);
                this.columnS04 = new global::System.Data.DataColumn("S04", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS04);
                this.columnS05 = new global::System.Data.DataColumn("S05", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS05);
                this.columnS06 = new global::System.Data.DataColumn("S06", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS06);
                this.columnS07 = new global::System.Data.DataColumn("S07", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS07);
                this.columnS08 = new global::System.Data.DataColumn("S08", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS08);
                this.columnS09 = new global::System.Data.DataColumn("S09", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS09);
                this.columnS10 = new global::System.Data.DataColumn("S10", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS10);
                this.columnconversion = new global::System.Data.DataColumn("conversion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconversion);
                this.columnC01 = new global::System.Data.DataColumn("C01", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC01);
                this.columnC02 = new global::System.Data.DataColumn("C02", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC02);
                this.columnC03 = new global::System.Data.DataColumn("C03", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC03);
                this.columnC04 = new global::System.Data.DataColumn("C04", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC04);
                this.columnC05 = new global::System.Data.DataColumn("C05", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC05);
                this.columnC06 = new global::System.Data.DataColumn("C06", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC06);
                this.columnC07 = new global::System.Data.DataColumn("C07", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC07);
                this.columnC08 = new global::System.Data.DataColumn("C08", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC08);
                this.columnC09 = new global::System.Data.DataColumn("C09", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC09);
                this.columnC10 = new global::System.Data.DataColumn("C10", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC10);
                this.columnL11 = new global::System.Data.DataColumn("L11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL11);
                this.columnD11 = new global::System.Data.DataColumn("D11", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD11);
                this.columnS11 = new global::System.Data.DataColumn("S11", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS11);
                this.columnC11 = new global::System.Data.DataColumn("C11", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC11);
                this.columnF11 = new global::System.Data.DataColumn("F11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF11);
                this.columnL12 = new global::System.Data.DataColumn("L12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL12);
                this.columnD12 = new global::System.Data.DataColumn("D12", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD12);
                this.columnS12 = new global::System.Data.DataColumn("S12", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS12);
                this.columnC12 = new global::System.Data.DataColumn("C12", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC12);
                this.columnF12 = new global::System.Data.DataColumn("F12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF12);
                this.columnDeprTableID = new global::System.Data.DataColumn("DeprTableID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprTableID);
                this.columnWithPrimary = new global::System.Data.DataColumn("WithPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithPrimary);
                this.columnMICodeID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnMICode.ReadOnly = true;
                this.columnMICode.MaxLength = 10;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 40;
                this.columnVFormula.ReadOnly = true;
                this.columnVFormula.MaxLength = 1500;
                this.columnL01.ReadOnly = true;
                this.columnL01.MaxLength = 12;
                this.columnD01.ReadOnly = true;
                this.columnF01.ReadOnly = true;
                this.columnF01.MaxLength = 1500;
                this.columnL02.ReadOnly = true;
                this.columnL02.MaxLength = 12;
                this.columnD02.ReadOnly = true;
                this.columnF02.ReadOnly = true;
                this.columnF02.MaxLength = 1500;
                this.columnL03.ReadOnly = true;
                this.columnL03.MaxLength = 12;
                this.columnD03.ReadOnly = true;
                this.columnF03.ReadOnly = true;
                this.columnF03.MaxLength = 1500;
                this.columnL04.ReadOnly = true;
                this.columnL04.MaxLength = 12;
                this.columnD04.ReadOnly = true;
                this.columnF04.ReadOnly = true;
                this.columnF04.MaxLength = 1500;
                this.columnL05.ReadOnly = true;
                this.columnL05.MaxLength = 12;
                this.columnD05.ReadOnly = true;
                this.columnF05.ReadOnly = true;
                this.columnF05.MaxLength = 1500;
                this.columnL06.ReadOnly = true;
                this.columnL06.MaxLength = 12;
                this.columnD06.ReadOnly = true;
                this.columnF06.ReadOnly = true;
                this.columnF06.MaxLength = 1500;
                this.columnL07.ReadOnly = true;
                this.columnL07.MaxLength = 12;
                this.columnD07.ReadOnly = true;
                this.columnF07.ReadOnly = true;
                this.columnF07.MaxLength = 1500;
                this.columnL08.ReadOnly = true;
                this.columnL08.MaxLength = 12;
                this.columnD08.ReadOnly = true;
                this.columnF08.ReadOnly = true;
                this.columnF08.MaxLength = 1500;
                this.columnL09.ReadOnly = true;
                this.columnL09.MaxLength = 12;
                this.columnD09.ReadOnly = true;
                this.columnF09.ReadOnly = true;
                this.columnF09.MaxLength = 1500;
                this.columnL10.ReadOnly = true;
                this.columnL10.MaxLength = 12;
                this.columnD10.ReadOnly = true;
                this.columnF10.ReadOnly = true;
                this.columnF10.MaxLength = 1500;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnS01.ReadOnly = true;
                this.columnS02.ReadOnly = true;
                this.columnS03.ReadOnly = true;
                this.columnS04.ReadOnly = true;
                this.columnS05.ReadOnly = true;
                this.columnS06.ReadOnly = true;
                this.columnS07.ReadOnly = true;
                this.columnS08.ReadOnly = true;
                this.columnS09.ReadOnly = true;
                this.columnS10.ReadOnly = true;
                this.columnconversion.ReadOnly = true;
                this.columnconversion.MaxLength = 50;
                this.columnC01.ReadOnly = true;
                this.columnC02.ReadOnly = true;
                this.columnC03.ReadOnly = true;
                this.columnC04.ReadOnly = true;
                this.columnC05.ReadOnly = true;
                this.columnC06.ReadOnly = true;
                this.columnC07.ReadOnly = true;
                this.columnC08.ReadOnly = true;
                this.columnC09.ReadOnly = true;
                this.columnC10.ReadOnly = true;
                this.columnL11.ReadOnly = true;
                this.columnL11.MaxLength = 12;
                this.columnD11.ReadOnly = true;
                this.columnS11.ReadOnly = true;
                this.columnC11.ReadOnly = true;
                this.columnF11.ReadOnly = true;
                this.columnF11.MaxLength = 1500;
                this.columnL12.ReadOnly = true;
                this.columnL12.MaxLength = 12;
                this.columnD12.ReadOnly = true;
                this.columnS12.ReadOnly = true;
                this.columnC12.ReadOnly = true;
                this.columnF12.ReadOnly = true;
                this.columnF12.MaxLength = 1500;
                this.columnDeprTableID.ReadOnly = true;
                this.columnWithPrimary.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogRow NewtAA_Misc_CatalogRow() {
                return ((tAA_Misc_CatalogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_Misc_CatalogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_Misc_CatalogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_Misc_CatalogRowChanged != null)) {
                    this.tAA_Misc_CatalogRowChanged(this, new tAA_Misc_CatalogRowChangeEvent(((tAA_Misc_CatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_Misc_CatalogRowChanging != null)) {
                    this.tAA_Misc_CatalogRowChanging(this, new tAA_Misc_CatalogRowChangeEvent(((tAA_Misc_CatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_Misc_CatalogRowDeleted != null)) {
                    this.tAA_Misc_CatalogRowDeleted(this, new tAA_Misc_CatalogRowChangeEvent(((tAA_Misc_CatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_Misc_CatalogRowDeleting != null)) {
                    this.tAA_Misc_CatalogRowDeleting(this, new tAA_Misc_CatalogRowChangeEvent(((tAA_Misc_CatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_Misc_CatalogRow(tAA_Misc_CatalogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_Misc_CatalogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_DeprDataTable : global::System.Data.TypedTableBase<tAA_DeprRow> {
            
            private global::System.Data.DataColumn columnDeprTableID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDeprName;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnLife;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnDesc1;
            
            private global::System.Data.DataColumn columnCond1;
            
            private global::System.Data.DataColumn columnDesc2;
            
            private global::System.Data.DataColumn columnCond2;
            
            private global::System.Data.DataColumn columnDesc3;
            
            private global::System.Data.DataColumn columnCond3;
            
            private global::System.Data.DataColumn columnDesc4;
            
            private global::System.Data.DataColumn columnCond4;
            
            private global::System.Data.DataColumn columnDesc5;
            
            private global::System.Data.DataColumn columnCond5;
            
            private global::System.Data.DataColumn columnDesc6;
            
            private global::System.Data.DataColumn columnCond6;
            
            private global::System.Data.DataColumn columnIsPersonalProperty;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnIsdeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprDataTable() {
                this.TableName = "tAA_Depr";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_DeprDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_DeprDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprTableIDColumn {
                get {
                    return this.columnDeprTableID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprNameColumn {
                get {
                    return this.columnDeprName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LifeColumn {
                get {
                    return this.columnLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc1Column {
                get {
                    return this.columnDesc1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond1Column {
                get {
                    return this.columnCond1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc2Column {
                get {
                    return this.columnDesc2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond2Column {
                get {
                    return this.columnCond2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc3Column {
                get {
                    return this.columnDesc3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond3Column {
                get {
                    return this.columnCond3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc4Column {
                get {
                    return this.columnDesc4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond4Column {
                get {
                    return this.columnCond4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc5Column {
                get {
                    return this.columnDesc5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond5Column {
                get {
                    return this.columnCond5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc6Column {
                get {
                    return this.columnDesc6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond6Column {
                get {
                    return this.columnCond6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPersonalPropertyColumn {
                get {
                    return this.columnIsPersonalProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsdeletedColumn {
                get {
                    return this.columnIsdeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprRow this[int index] {
                get {
                    return ((tAA_DeprRow)(this.Rows[index]));
                }
            }
            
            public event tAA_DeprRowChangeEventHandler tAA_DeprRowChanging;
            
            public event tAA_DeprRowChangeEventHandler tAA_DeprRowChanged;
            
            public event tAA_DeprRowChangeEventHandler tAA_DeprRowDeleting;
            
            public event tAA_DeprRowChangeEventHandler tAA_DeprRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_DeprRow(tAA_DeprRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprRow AddtAA_DeprRow(
                        int DeprTableID, 
                        short RollYear, 
                        string DeprName, 
                        bool IsActive, 
                        byte Life, 
                        string Description, 
                        string Desc1, 
                        decimal Cond1, 
                        string Desc2, 
                        decimal Cond2, 
                        string Desc3, 
                        decimal Cond3, 
                        string Desc4, 
                        decimal Cond4, 
                        string Desc5, 
                        decimal Cond5, 
                        string Desc6, 
                        decimal Cond6, 
                        bool IsPersonalProperty, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        short ModuleID, 
                        bool Isdeleted) {
                tAA_DeprRow rowtAA_DeprRow = ((tAA_DeprRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeprTableID,
                        RollYear,
                        DeprName,
                        IsActive,
                        Life,
                        Description,
                        Desc1,
                        Cond1,
                        Desc2,
                        Cond2,
                        Desc3,
                        Cond3,
                        Desc4,
                        Cond4,
                        Desc5,
                        Cond5,
                        Desc6,
                        Cond6,
                        IsPersonalProperty,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        ModuleID,
                        Isdeleted};
                rowtAA_DeprRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_DeprRow);
                return rowtAA_DeprRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_DeprDataTable cln = ((tAA_DeprDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_DeprDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeprTableID = base.Columns["DeprTableID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDeprName = base.Columns["DeprName"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnLife = base.Columns["Life"];
                this.columnDescription = base.Columns["Description"];
                this.columnDesc1 = base.Columns["Desc1"];
                this.columnCond1 = base.Columns["Cond1"];
                this.columnDesc2 = base.Columns["Desc2"];
                this.columnCond2 = base.Columns["Cond2"];
                this.columnDesc3 = base.Columns["Desc3"];
                this.columnCond3 = base.Columns["Cond3"];
                this.columnDesc4 = base.Columns["Desc4"];
                this.columnCond4 = base.Columns["Cond4"];
                this.columnDesc5 = base.Columns["Desc5"];
                this.columnCond5 = base.Columns["Cond5"];
                this.columnDesc6 = base.Columns["Desc6"];
                this.columnCond6 = base.Columns["Cond6"];
                this.columnIsPersonalProperty = base.Columns["IsPersonalProperty"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnIsdeleted = base.Columns["Isdeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeprTableID = new global::System.Data.DataColumn("DeprTableID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprTableID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDeprName = new global::System.Data.DataColumn("DeprName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprName);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnLife = new global::System.Data.DataColumn("Life", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLife);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDesc1 = new global::System.Data.DataColumn("Desc1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc1);
                this.columnCond1 = new global::System.Data.DataColumn("Cond1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond1);
                this.columnDesc2 = new global::System.Data.DataColumn("Desc2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc2);
                this.columnCond2 = new global::System.Data.DataColumn("Cond2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond2);
                this.columnDesc3 = new global::System.Data.DataColumn("Desc3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc3);
                this.columnCond3 = new global::System.Data.DataColumn("Cond3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond3);
                this.columnDesc4 = new global::System.Data.DataColumn("Desc4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc4);
                this.columnCond4 = new global::System.Data.DataColumn("Cond4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond4);
                this.columnDesc5 = new global::System.Data.DataColumn("Desc5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc5);
                this.columnCond5 = new global::System.Data.DataColumn("Cond5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond5);
                this.columnDesc6 = new global::System.Data.DataColumn("Desc6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc6);
                this.columnCond6 = new global::System.Data.DataColumn("Cond6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond6);
                this.columnIsPersonalProperty = new global::System.Data.DataColumn("IsPersonalProperty", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPersonalProperty);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnIsdeleted = new global::System.Data.DataColumn("Isdeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsdeleted);
                this.columnDeprTableID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDeprName.ReadOnly = true;
                this.columnDeprName.MaxLength = 50;
                this.columnIsActive.ReadOnly = true;
                this.columnLife.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 100;
                this.columnDesc1.ReadOnly = true;
                this.columnDesc1.MaxLength = 20;
                this.columnCond1.ReadOnly = true;
                this.columnDesc2.ReadOnly = true;
                this.columnDesc2.MaxLength = 20;
                this.columnCond2.ReadOnly = true;
                this.columnDesc3.ReadOnly = true;
                this.columnDesc3.MaxLength = 20;
                this.columnCond3.ReadOnly = true;
                this.columnDesc4.ReadOnly = true;
                this.columnDesc4.MaxLength = 20;
                this.columnCond4.ReadOnly = true;
                this.columnDesc5.ReadOnly = true;
                this.columnDesc5.MaxLength = 20;
                this.columnCond5.ReadOnly = true;
                this.columnDesc6.ReadOnly = true;
                this.columnDesc6.MaxLength = 20;
                this.columnCond6.ReadOnly = true;
                this.columnIsPersonalProperty.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnIsdeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprRow NewtAA_DeprRow() {
                return ((tAA_DeprRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_DeprRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_DeprRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_DeprRowChanged != null)) {
                    this.tAA_DeprRowChanged(this, new tAA_DeprRowChangeEvent(((tAA_DeprRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_DeprRowChanging != null)) {
                    this.tAA_DeprRowChanging(this, new tAA_DeprRowChangeEvent(((tAA_DeprRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_DeprRowDeleted != null)) {
                    this.tAA_DeprRowDeleted(this, new tAA_DeprRowChangeEvent(((tAA_DeprRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_DeprRowDeleting != null)) {
                    this.tAA_DeprRowDeleting(this, new tAA_DeprRowChangeEvent(((tAA_DeprRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_DeprRow(tAA_DeprRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_DeprDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_ApexPolygonDataTable : global::System.Data.TypedTableBase<tAA_ApexPolygonRow> {
            
            private global::System.Data.DataColumn columnPolygonID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnUniqueID;
            
            private global::System.Data.DataColumn columnAreaCode;
            
            private global::System.Data.DataColumn columnAreaSize;
            
            private global::System.Data.DataColumn columnMultiplier;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPage;
            
            private global::System.Data.DataColumn columnPerimeter;
            
            private global::System.Data.DataColumn columnIsAssociated;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ApexPolygonDataTable() {
                this.TableName = "tAA_ApexPolygon";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ApexPolygonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_ApexPolygonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PolygonIDColumn {
                get {
                    return this.columnPolygonID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UniqueIDColumn {
                get {
                    return this.columnUniqueID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaCodeColumn {
                get {
                    return this.columnAreaCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaSizeColumn {
                get {
                    return this.columnAreaSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MultiplierColumn {
                get {
                    return this.columnMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageColumn {
                get {
                    return this.columnPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerimeterColumn {
                get {
                    return this.columnPerimeter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAssociatedColumn {
                get {
                    return this.columnIsAssociated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ApexPolygonRow this[int index] {
                get {
                    return ((tAA_ApexPolygonRow)(this.Rows[index]));
                }
            }
            
            public event tAA_ApexPolygonRowChangeEventHandler tAA_ApexPolygonRowChanging;
            
            public event tAA_ApexPolygonRowChangeEventHandler tAA_ApexPolygonRowChanged;
            
            public event tAA_ApexPolygonRowChangeEventHandler tAA_ApexPolygonRowDeleting;
            
            public event tAA_ApexPolygonRowChangeEventHandler tAA_ApexPolygonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_ApexPolygonRow(tAA_ApexPolygonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ApexPolygonRow AddtAA_ApexPolygonRow(int PolygonID, string ParcelNumber, int UniqueID, string AreaCode, decimal AreaSize, decimal Multiplier, string Description, int Page, decimal Perimeter, bool IsAssociated, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tAA_ApexPolygonRow rowtAA_ApexPolygonRow = ((tAA_ApexPolygonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PolygonID,
                        ParcelNumber,
                        UniqueID,
                        AreaCode,
                        AreaSize,
                        Multiplier,
                        Description,
                        Page,
                        Perimeter,
                        IsAssociated,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_ApexPolygonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_ApexPolygonRow);
                return rowtAA_ApexPolygonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_ApexPolygonDataTable cln = ((tAA_ApexPolygonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_ApexPolygonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPolygonID = base.Columns["PolygonID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnUniqueID = base.Columns["UniqueID"];
                this.columnAreaCode = base.Columns["AreaCode"];
                this.columnAreaSize = base.Columns["AreaSize"];
                this.columnMultiplier = base.Columns["Multiplier"];
                this.columnDescription = base.Columns["Description"];
                this.columnPage = base.Columns["Page"];
                this.columnPerimeter = base.Columns["Perimeter"];
                this.columnIsAssociated = base.Columns["IsAssociated"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPolygonID = new global::System.Data.DataColumn("PolygonID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolygonID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnUniqueID = new global::System.Data.DataColumn("UniqueID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUniqueID);
                this.columnAreaCode = new global::System.Data.DataColumn("AreaCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaCode);
                this.columnAreaSize = new global::System.Data.DataColumn("AreaSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaSize);
                this.columnMultiplier = new global::System.Data.DataColumn("Multiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultiplier);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPage = new global::System.Data.DataColumn("Page", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPage);
                this.columnPerimeter = new global::System.Data.DataColumn("Perimeter", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerimeter);
                this.columnIsAssociated = new global::System.Data.DataColumn("IsAssociated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAssociated);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnPolygonID.ReadOnly = true;
                this.columnParcelNumber.ReadOnly = true;
                this.columnParcelNumber.MaxLength = 50;
                this.columnUniqueID.ReadOnly = true;
                this.columnAreaCode.ReadOnly = true;
                this.columnAreaCode.MaxLength = 25;
                this.columnAreaSize.ReadOnly = true;
                this.columnMultiplier.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnPage.ReadOnly = true;
                this.columnPerimeter.ReadOnly = true;
                this.columnIsAssociated.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ApexPolygonRow NewtAA_ApexPolygonRow() {
                return ((tAA_ApexPolygonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_ApexPolygonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_ApexPolygonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_ApexPolygonRowChanged != null)) {
                    this.tAA_ApexPolygonRowChanged(this, new tAA_ApexPolygonRowChangeEvent(((tAA_ApexPolygonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_ApexPolygonRowChanging != null)) {
                    this.tAA_ApexPolygonRowChanging(this, new tAA_ApexPolygonRowChangeEvent(((tAA_ApexPolygonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_ApexPolygonRowDeleted != null)) {
                    this.tAA_ApexPolygonRowDeleted(this, new tAA_ApexPolygonRowChangeEvent(((tAA_ApexPolygonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_ApexPolygonRowDeleting != null)) {
                    this.tAA_ApexPolygonRowDeleting(this, new tAA_ApexPolygonRowChangeEvent(((tAA_ApexPolygonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_ApexPolygonRow(tAA_ApexPolygonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_ApexPolygonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_LandType1DataTable : global::System.Data.TypedTableBase<tAA_LandType1Row> {
            
            private global::System.Data.DataColumn columnLandTypeID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnLandType;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandType1DataTable() {
                this.TableName = "tAA_LandType1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandType1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_LandType1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeIDColumn {
                get {
                    return this.columnLandTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeColumn {
                get {
                    return this.columnLandType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandType1Row this[int index] {
                get {
                    return ((tAA_LandType1Row)(this.Rows[index]));
                }
            }
            
            public event tAA_LandType1RowChangeEventHandler tAA_LandType1RowChanging;
            
            public event tAA_LandType1RowChangeEventHandler tAA_LandType1RowChanged;
            
            public event tAA_LandType1RowChangeEventHandler tAA_LandType1RowDeleting;
            
            public event tAA_LandType1RowChangeEventHandler tAA_LandType1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_LandType1Row(tAA_LandType1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandType1Row AddtAA_LandType1Row(int LandTypeID, short RollYear, string LandType, string Description, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tAA_LandType1Row rowtAA_LandType1Row = ((tAA_LandType1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LandTypeID,
                        RollYear,
                        LandType,
                        Description,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_LandType1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_LandType1Row);
                return rowtAA_LandType1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_LandType1DataTable cln = ((tAA_LandType1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_LandType1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLandTypeID = base.Columns["LandTypeID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnLandType = base.Columns["LandType"];
                this.columnDescription = base.Columns["Description"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLandTypeID = new global::System.Data.DataColumn("LandTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnLandType = new global::System.Data.DataColumn("LandType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnLandTypeID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnLandType.ReadOnly = true;
                this.columnLandType.MaxLength = 20;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 50;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandType1Row NewtAA_LandType1Row() {
                return ((tAA_LandType1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_LandType1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_LandType1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_LandType1RowChanged != null)) {
                    this.tAA_LandType1RowChanged(this, new tAA_LandType1RowChangeEvent(((tAA_LandType1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_LandType1RowChanging != null)) {
                    this.tAA_LandType1RowChanging(this, new tAA_LandType1RowChangeEvent(((tAA_LandType1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_LandType1RowDeleted != null)) {
                    this.tAA_LandType1RowDeleted(this, new tAA_LandType1RowChangeEvent(((tAA_LandType1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_LandType1RowDeleting != null)) {
                    this.tAA_LandType1RowDeleting(this, new tAA_LandType1RowChangeEvent(((tAA_LandType1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_LandType1Row(tAA_LandType1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_LandType1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_QueryViewLayoutDataTable : global::System.Data.TypedTableBase<tTS_QueryViewLayoutRow> {
            
            private global::System.Data.DataColumn columnQueryLayoutID;
            
            private global::System.Data.DataColumn columnQueryViewID;
            
            private global::System.Data.DataColumn columnQueryView;
            
            private global::System.Data.DataColumn columnLayoutName;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnIsAllUsers;
            
            private global::System.Data.DataColumn columnIsDefault;
            
            private global::System.Data.DataColumn columnIsTSOnly;
            
            private global::System.Data.DataColumn columnLayoutXML;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewLayoutDataTable() {
                this.TableName = "tTS_QueryViewLayout";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_QueryViewLayoutDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_QueryViewLayoutDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QueryLayoutIDColumn {
                get {
                    return this.columnQueryLayoutID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QueryViewIDColumn {
                get {
                    return this.columnQueryViewID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QueryViewColumn {
                get {
                    return this.columnQueryView;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayoutNameColumn {
                get {
                    return this.columnLayoutName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAllUsersColumn {
                get {
                    return this.columnIsAllUsers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDefaultColumn {
                get {
                    return this.columnIsDefault;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsTSOnlyColumn {
                get {
                    return this.columnIsTSOnly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LayoutXMLColumn {
                get {
                    return this.columnLayoutXML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewLayoutRow this[int index] {
                get {
                    return ((tTS_QueryViewLayoutRow)(this.Rows[index]));
                }
            }
            
            public event tTS_QueryViewLayoutRowChangeEventHandler tTS_QueryViewLayoutRowChanging;
            
            public event tTS_QueryViewLayoutRowChangeEventHandler tTS_QueryViewLayoutRowChanged;
            
            public event tTS_QueryViewLayoutRowChangeEventHandler tTS_QueryViewLayoutRowDeleting;
            
            public event tTS_QueryViewLayoutRowChangeEventHandler tTS_QueryViewLayoutRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_QueryViewLayoutRow(tTS_QueryViewLayoutRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewLayoutRow AddtTS_QueryViewLayoutRow(int QueryLayoutID, int QueryViewID, string QueryView, string LayoutName, int UserID, bool IsAllUsers, bool IsDefault, bool IsTSOnly, string LayoutXML, int ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_QueryViewLayoutRow rowtTS_QueryViewLayoutRow = ((tTS_QueryViewLayoutRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        QueryLayoutID,
                        QueryViewID,
                        QueryView,
                        LayoutName,
                        UserID,
                        IsAllUsers,
                        IsDefault,
                        IsTSOnly,
                        LayoutXML,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_QueryViewLayoutRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_QueryViewLayoutRow);
                return rowtTS_QueryViewLayoutRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_QueryViewLayoutDataTable cln = ((tTS_QueryViewLayoutDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_QueryViewLayoutDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnQueryLayoutID = base.Columns["QueryLayoutID"];
                this.columnQueryViewID = base.Columns["QueryViewID"];
                this.columnQueryView = base.Columns["QueryView"];
                this.columnLayoutName = base.Columns["LayoutName"];
                this.columnUserID = base.Columns["UserID"];
                this.columnIsAllUsers = base.Columns["IsAllUsers"];
                this.columnIsDefault = base.Columns["IsDefault"];
                this.columnIsTSOnly = base.Columns["IsTSOnly"];
                this.columnLayoutXML = base.Columns["LayoutXML"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnQueryLayoutID = new global::System.Data.DataColumn("QueryLayoutID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueryLayoutID);
                this.columnQueryViewID = new global::System.Data.DataColumn("QueryViewID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueryViewID);
                this.columnQueryView = new global::System.Data.DataColumn("QueryView", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueryView);
                this.columnLayoutName = new global::System.Data.DataColumn("LayoutName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayoutName);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnIsAllUsers = new global::System.Data.DataColumn("IsAllUsers", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAllUsers);
                this.columnIsDefault = new global::System.Data.DataColumn("IsDefault", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDefault);
                this.columnIsTSOnly = new global::System.Data.DataColumn("IsTSOnly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTSOnly);
                this.columnLayoutXML = new global::System.Data.DataColumn("LayoutXML", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLayoutXML);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnQueryLayoutID.ReadOnly = true;
                this.columnQueryViewID.ReadOnly = true;
                this.columnQueryView.ReadOnly = true;
                this.columnQueryView.MaxLength = 50;
                this.columnLayoutName.ReadOnly = true;
                this.columnLayoutName.MaxLength = 50;
                this.columnUserID.ReadOnly = true;
                this.columnIsAllUsers.ReadOnly = true;
                this.columnIsDefault.ReadOnly = true;
                this.columnIsTSOnly.ReadOnly = true;
                this.columnLayoutXML.ReadOnly = true;
                this.columnLayoutXML.MaxLength = 2147483647;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewLayoutRow NewtTS_QueryViewLayoutRow() {
                return ((tTS_QueryViewLayoutRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_QueryViewLayoutRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_QueryViewLayoutRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_QueryViewLayoutRowChanged != null)) {
                    this.tTS_QueryViewLayoutRowChanged(this, new tTS_QueryViewLayoutRowChangeEvent(((tTS_QueryViewLayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_QueryViewLayoutRowChanging != null)) {
                    this.tTS_QueryViewLayoutRowChanging(this, new tTS_QueryViewLayoutRowChangeEvent(((tTS_QueryViewLayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_QueryViewLayoutRowDeleted != null)) {
                    this.tTS_QueryViewLayoutRowDeleted(this, new tTS_QueryViewLayoutRowChangeEvent(((tTS_QueryViewLayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_QueryViewLayoutRowDeleting != null)) {
                    this.tTS_QueryViewLayoutRowDeleting(this, new tTS_QueryViewLayoutRowChangeEvent(((tTS_QueryViewLayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_QueryViewLayoutRow(tTS_QueryViewLayoutRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_QueryViewLayoutDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_Exemption_Type1DataTable : global::System.Data.TypedTableBase<tTS_Exemption_Type1Row> {
            
            private global::System.Data.DataColumn columnExemptionID;
            
            private global::System.Data.DataColumn columnExemptionCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnExemptionPercent;
            
            private global::System.Data.DataColumn columnMinimum;
            
            private global::System.Data.DataColumn columnMaximum;
            
            private global::System.Data.DataColumn columnAbstractCode;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnIncomeMin;
            
            private global::System.Data.DataColumn columnIncomeMax;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_Exemption_Type1DataTable() {
                this.TableName = "tTS_Exemption_Type1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_Exemption_Type1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_Exemption_Type1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionIDColumn {
                get {
                    return this.columnExemptionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionCodeColumn {
                get {
                    return this.columnExemptionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptionPercentColumn {
                get {
                    return this.columnExemptionPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinimumColumn {
                get {
                    return this.columnMinimum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaximumColumn {
                get {
                    return this.columnMaximum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbstractCodeColumn {
                get {
                    return this.columnAbstractCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeMinColumn {
                get {
                    return this.columnIncomeMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeMaxColumn {
                get {
                    return this.columnIncomeMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_Exemption_Type1Row this[int index] {
                get {
                    return ((tTS_Exemption_Type1Row)(this.Rows[index]));
                }
            }
            
            public event tTS_Exemption_Type1RowChangeEventHandler tTS_Exemption_Type1RowChanging;
            
            public event tTS_Exemption_Type1RowChangeEventHandler tTS_Exemption_Type1RowChanged;
            
            public event tTS_Exemption_Type1RowChangeEventHandler tTS_Exemption_Type1RowDeleting;
            
            public event tTS_Exemption_Type1RowChangeEventHandler tTS_Exemption_Type1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_Exemption_Type1Row(tTS_Exemption_Type1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_Exemption_Type1Row AddtTS_Exemption_Type1Row(int ExemptionID, string ExemptionCode, string Description, decimal ExemptionPercent, decimal Minimum, decimal Maximum, string AbstractCode, int ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, int IncomeMin, int IncomeMax) {
                tTS_Exemption_Type1Row rowtTS_Exemption_Type1Row = ((tTS_Exemption_Type1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ExemptionID,
                        ExemptionCode,
                        Description,
                        ExemptionPercent,
                        Minimum,
                        Maximum,
                        AbstractCode,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        IncomeMin,
                        IncomeMax};
                rowtTS_Exemption_Type1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_Exemption_Type1Row);
                return rowtTS_Exemption_Type1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_Exemption_Type1DataTable cln = ((tTS_Exemption_Type1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_Exemption_Type1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnExemptionID = base.Columns["ExemptionID"];
                this.columnExemptionCode = base.Columns["ExemptionCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnExemptionPercent = base.Columns["ExemptionPercent"];
                this.columnMinimum = base.Columns["Minimum"];
                this.columnMaximum = base.Columns["Maximum"];
                this.columnAbstractCode = base.Columns["AbstractCode"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnIncomeMin = base.Columns["IncomeMin"];
                this.columnIncomeMax = base.Columns["IncomeMax"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnExemptionID = new global::System.Data.DataColumn("ExemptionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionID);
                this.columnExemptionCode = new global::System.Data.DataColumn("ExemptionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnExemptionPercent = new global::System.Data.DataColumn("ExemptionPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExemptionPercent);
                this.columnMinimum = new global::System.Data.DataColumn("Minimum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimum);
                this.columnMaximum = new global::System.Data.DataColumn("Maximum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaximum);
                this.columnAbstractCode = new global::System.Data.DataColumn("AbstractCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbstractCode);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnIncomeMin = new global::System.Data.DataColumn("IncomeMin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeMin);
                this.columnIncomeMax = new global::System.Data.DataColumn("IncomeMax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncomeMax);
                this.columnExemptionID.ReadOnly = true;
                this.columnExemptionCode.ReadOnly = true;
                this.columnExemptionCode.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnExemptionPercent.ReadOnly = true;
                this.columnMinimum.ReadOnly = true;
                this.columnMaximum.ReadOnly = true;
                this.columnAbstractCode.ReadOnly = true;
                this.columnAbstractCode.MaxLength = 250;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnIncomeMin.ReadOnly = true;
                this.columnIncomeMax.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_Exemption_Type1Row NewtTS_Exemption_Type1Row() {
                return ((tTS_Exemption_Type1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_Exemption_Type1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_Exemption_Type1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_Exemption_Type1RowChanged != null)) {
                    this.tTS_Exemption_Type1RowChanged(this, new tTS_Exemption_Type1RowChangeEvent(((tTS_Exemption_Type1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_Exemption_Type1RowChanging != null)) {
                    this.tTS_Exemption_Type1RowChanging(this, new tTS_Exemption_Type1RowChangeEvent(((tTS_Exemption_Type1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_Exemption_Type1RowDeleted != null)) {
                    this.tTS_Exemption_Type1RowDeleted(this, new tTS_Exemption_Type1RowChangeEvent(((tTS_Exemption_Type1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_Exemption_Type1RowDeleting != null)) {
                    this.tTS_Exemption_Type1RowDeleting(this, new tTS_Exemption_Type1RowChangeEvent(((tTS_Exemption_Type1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_Exemption_Type1Row(tTS_Exemption_Type1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_Exemption_Type1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_LandInfluenceItemDataTable : global::System.Data.TypedTableBase<tAA_LandInfluenceItemRow> {
            
            private global::System.Data.DataColumn columnInfluenceItemID;
            
            private global::System.Data.DataColumn columnLUID;
            
            private global::System.Data.DataColumn columnInfluenceTypeID;
            
            private global::System.Data.DataColumn columnInfluence;
            
            private global::System.Data.DataColumn columnInfluenceDesc;
            
            private global::System.Data.DataColumn columnInfluenceValue;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandInfluenceItemDataTable() {
                this.TableName = "tAA_LandInfluenceItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandInfluenceItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_LandInfluenceItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InfluenceItemIDColumn {
                get {
                    return this.columnInfluenceItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LUIDColumn {
                get {
                    return this.columnLUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InfluenceTypeIDColumn {
                get {
                    return this.columnInfluenceTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InfluenceColumn {
                get {
                    return this.columnInfluence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InfluenceDescColumn {
                get {
                    return this.columnInfluenceDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InfluenceValueColumn {
                get {
                    return this.columnInfluenceValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandInfluenceItemRow this[int index] {
                get {
                    return ((tAA_LandInfluenceItemRow)(this.Rows[index]));
                }
            }
            
            public event tAA_LandInfluenceItemRowChangeEventHandler tAA_LandInfluenceItemRowChanging;
            
            public event tAA_LandInfluenceItemRowChangeEventHandler tAA_LandInfluenceItemRowChanged;
            
            public event tAA_LandInfluenceItemRowChangeEventHandler tAA_LandInfluenceItemRowDeleting;
            
            public event tAA_LandInfluenceItemRowChangeEventHandler tAA_LandInfluenceItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_LandInfluenceItemRow(tAA_LandInfluenceItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandInfluenceItemRow AddtAA_LandInfluenceItemRow(int InfluenceItemID, int LUID, int InfluenceTypeID, decimal Influence, string InfluenceDesc, decimal InfluenceValue, int ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tAA_LandInfluenceItemRow rowtAA_LandInfluenceItemRow = ((tAA_LandInfluenceItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InfluenceItemID,
                        LUID,
                        InfluenceTypeID,
                        Influence,
                        InfluenceDesc,
                        InfluenceValue,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_LandInfluenceItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_LandInfluenceItemRow);
                return rowtAA_LandInfluenceItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_LandInfluenceItemDataTable cln = ((tAA_LandInfluenceItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_LandInfluenceItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInfluenceItemID = base.Columns["InfluenceItemID"];
                this.columnLUID = base.Columns["LUID"];
                this.columnInfluenceTypeID = base.Columns["InfluenceTypeID"];
                this.columnInfluence = base.Columns["Influence"];
                this.columnInfluenceDesc = base.Columns["InfluenceDesc"];
                this.columnInfluenceValue = base.Columns["InfluenceValue"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInfluenceItemID = new global::System.Data.DataColumn("InfluenceItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfluenceItemID);
                this.columnLUID = new global::System.Data.DataColumn("LUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLUID);
                this.columnInfluenceTypeID = new global::System.Data.DataColumn("InfluenceTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfluenceTypeID);
                this.columnInfluence = new global::System.Data.DataColumn("Influence", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfluence);
                this.columnInfluenceDesc = new global::System.Data.DataColumn("InfluenceDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfluenceDesc);
                this.columnInfluenceValue = new global::System.Data.DataColumn("InfluenceValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfluenceValue);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnInfluenceItemID.ReadOnly = true;
                this.columnLUID.ReadOnly = true;
                this.columnInfluenceTypeID.ReadOnly = true;
                this.columnInfluence.ReadOnly = true;
                this.columnInfluenceDesc.ReadOnly = true;
                this.columnInfluenceDesc.MaxLength = 50;
                this.columnInfluenceValue.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandInfluenceItemRow NewtAA_LandInfluenceItemRow() {
                return ((tAA_LandInfluenceItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_LandInfluenceItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_LandInfluenceItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_LandInfluenceItemRowChanged != null)) {
                    this.tAA_LandInfluenceItemRowChanged(this, new tAA_LandInfluenceItemRowChangeEvent(((tAA_LandInfluenceItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_LandInfluenceItemRowChanging != null)) {
                    this.tAA_LandInfluenceItemRowChanging(this, new tAA_LandInfluenceItemRowChangeEvent(((tAA_LandInfluenceItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_LandInfluenceItemRowDeleted != null)) {
                    this.tAA_LandInfluenceItemRowDeleted(this, new tAA_LandInfluenceItemRowChangeEvent(((tAA_LandInfluenceItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_LandInfluenceItemRowDeleting != null)) {
                    this.tAA_LandInfluenceItemRowDeleting(this, new tAA_LandInfluenceItemRowChangeEvent(((tAA_LandInfluenceItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_LandInfluenceItemRow(tAA_LandInfluenceItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_LandInfluenceItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type9DataTable : global::System.Data.TypedTableBase<tAA_MA_Type9Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnAssessedValue;
            
            private global::System.Data.DataColumn columnrate;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            private global::System.Data.DataColumn columnunits;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type9DataTable() {
                this.TableName = "tAA_MA_Type9";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type9DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type9DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessedValueColumn {
                get {
                    return this.columnAssessedValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rateColumn {
                get {
                    return this.columnrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unitsColumn {
                get {
                    return this.columnunits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type9Row this[int index] {
                get {
                    return ((tAA_MA_Type9Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type9RowChangeEventHandler tAA_MA_Type9RowChanging;
            
            public event tAA_MA_Type9RowChangeEventHandler tAA_MA_Type9RowChanged;
            
            public event tAA_MA_Type9RowChangeEventHandler tAA_MA_Type9RowDeleting;
            
            public event tAA_MA_Type9RowChangeEventHandler tAA_MA_Type9RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type9Row(tAA_MA_Type9Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type9Row AddtAA_MA_Type9Row(int ParcelID, int MADistrictID, decimal AssessedValue, decimal rate, decimal TaxAmount, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID, string amount, decimal OverrideAmount, bool IsExempt, bool IsOverride, decimal units) {
                tAA_MA_Type9Row rowtAA_MA_Type9Row = ((tAA_MA_Type9Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        AssessedValue,
                        rate,
                        TaxAmount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        amount,
                        OverrideAmount,
                        IsExempt,
                        IsOverride,
                        units};
                rowtAA_MA_Type9Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type9Row);
                return rowtAA_MA_Type9Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type9DataTable cln = ((tAA_MA_Type9DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type9DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnAssessedValue = base.Columns["AssessedValue"];
                this.columnrate = base.Columns["rate"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnamount = base.Columns["amount"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
                this.columnunits = base.Columns["units"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnAssessedValue = new global::System.Data.DataColumn("AssessedValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessedValue);
                this.columnrate = new global::System.Data.DataColumn("rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrate);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnunits = new global::System.Data.DataColumn("units", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunits);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnAssessedValue.ReadOnly = true;
                this.columnrate.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnamount.ReadOnly = true;
                this.columnamount.MaxLength = 50;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
                this.columnunits.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type9Row NewtAA_MA_Type9Row() {
                return ((tAA_MA_Type9Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type9Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type9Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type9RowChanged != null)) {
                    this.tAA_MA_Type9RowChanged(this, new tAA_MA_Type9RowChangeEvent(((tAA_MA_Type9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type9RowChanging != null)) {
                    this.tAA_MA_Type9RowChanging(this, new tAA_MA_Type9RowChangeEvent(((tAA_MA_Type9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type9RowDeleted != null)) {
                    this.tAA_MA_Type9RowDeleted(this, new tAA_MA_Type9RowChangeEvent(((tAA_MA_Type9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type9RowDeleting != null)) {
                    this.tAA_MA_Type9RowDeleting(this, new tAA_MA_Type9RowChangeEvent(((tAA_MA_Type9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type9Row(tAA_MA_Type9Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type9DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MAD_Type9DataTable : global::System.Data.TypedTableBase<tAA_MAD_Type9Row> {
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type9DataTable() {
                this.TableName = "tAA_MAD_Type9";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type9DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MAD_Type9DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type9Row this[int index] {
                get {
                    return ((tAA_MAD_Type9Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MAD_Type9RowChangeEventHandler tAA_MAD_Type9RowChanging;
            
            public event tAA_MAD_Type9RowChangeEventHandler tAA_MAD_Type9RowChanged;
            
            public event tAA_MAD_Type9RowChangeEventHandler tAA_MAD_Type9RowDeleting;
            
            public event tAA_MAD_Type9RowChangeEventHandler tAA_MAD_Type9RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MAD_Type9Row(tAA_MAD_Type9Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type9Row AddtAA_MAD_Type9Row(int MADistrictID, short RollYear, string DistrictNumber, string Description, decimal Rate, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID) {
                tAA_MAD_Type9Row rowtAA_MAD_Type9Row = ((tAA_MAD_Type9Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADistrictID,
                        RollYear,
                        DistrictNumber,
                        Description,
                        Rate,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID};
                rowtAA_MAD_Type9Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MAD_Type9Row);
                return rowtAA_MAD_Type9Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MAD_Type9DataTable cln = ((tAA_MAD_Type9DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MAD_Type9DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnRate = base.Columns["Rate"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnMADistrictID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDistrictNumber.ReadOnly = true;
                this.columnDistrictNumber.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnRate.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type9Row NewtAA_MAD_Type9Row() {
                return ((tAA_MAD_Type9Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MAD_Type9Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MAD_Type9Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MAD_Type9RowChanged != null)) {
                    this.tAA_MAD_Type9RowChanged(this, new tAA_MAD_Type9RowChangeEvent(((tAA_MAD_Type9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MAD_Type9RowChanging != null)) {
                    this.tAA_MAD_Type9RowChanging(this, new tAA_MAD_Type9RowChangeEvent(((tAA_MAD_Type9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MAD_Type9RowDeleted != null)) {
                    this.tAA_MAD_Type9RowDeleted(this, new tAA_MAD_Type9RowChangeEvent(((tAA_MAD_Type9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MAD_Type9RowDeleting != null)) {
                    this.tAA_MAD_Type9RowDeleting(this, new tAA_MAD_Type9RowChangeEvent(((tAA_MAD_Type9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MAD_Type9Row(tAA_MAD_Type9Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MAD_Type9DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MAD_Type2DataTable : global::System.Data.TypedTableBase<tAA_MAD_Type2Row> {
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnMinimumCharge;
            
            private global::System.Data.DataColumn columnIsOwnerAssessed;
            
            private global::System.Data.DataColumn columnBaseFee;
            
            private global::System.Data.DataColumn columnBaseAcres;
            
            private global::System.Data.DataColumn columnSiteBase;
            
            private global::System.Data.DataColumn columnSiteRate;
            
            private global::System.Data.DataColumn columnDryBase;
            
            private global::System.Data.DataColumn columnDryRate;
            
            private global::System.Data.DataColumn columnIrrigatedBase;
            
            private global::System.Data.DataColumn columnIrrigatedRate;
            
            private global::System.Data.DataColumn columnTimberBase;
            
            private global::System.Data.DataColumn columnTimberRate;
            
            private global::System.Data.DataColumn columnOtherBase;
            
            private global::System.Data.DataColumn columnOtherRate;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnMinSiteAcres;
            
            private global::System.Data.DataColumn columnMinDryAcres;
            
            private global::System.Data.DataColumn columnMinIrrigatedAcres;
            
            private global::System.Data.DataColumn columnMinTimberAcres;
            
            private global::System.Data.DataColumn columnMinOtherAcres;
            
            private global::System.Data.DataColumn columnBaseRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type2DataTable() {
                this.TableName = "tAA_MAD_Type2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MAD_Type2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinimumChargeColumn {
                get {
                    return this.columnMinimumCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOwnerAssessedColumn {
                get {
                    return this.columnIsOwnerAssessed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseFeeColumn {
                get {
                    return this.columnBaseFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseAcresColumn {
                get {
                    return this.columnBaseAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteBaseColumn {
                get {
                    return this.columnSiteBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteRateColumn {
                get {
                    return this.columnSiteRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DryBaseColumn {
                get {
                    return this.columnDryBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DryRateColumn {
                get {
                    return this.columnDryRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IrrigatedBaseColumn {
                get {
                    return this.columnIrrigatedBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IrrigatedRateColumn {
                get {
                    return this.columnIrrigatedRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimberBaseColumn {
                get {
                    return this.columnTimberBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimberRateColumn {
                get {
                    return this.columnTimberRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherBaseColumn {
                get {
                    return this.columnOtherBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherRateColumn {
                get {
                    return this.columnOtherRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinSiteAcresColumn {
                get {
                    return this.columnMinSiteAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinDryAcresColumn {
                get {
                    return this.columnMinDryAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinIrrigatedAcresColumn {
                get {
                    return this.columnMinIrrigatedAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinTimberAcresColumn {
                get {
                    return this.columnMinTimberAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinOtherAcresColumn {
                get {
                    return this.columnMinOtherAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseRateColumn {
                get {
                    return this.columnBaseRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type2Row this[int index] {
                get {
                    return ((tAA_MAD_Type2Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MAD_Type2RowChangeEventHandler tAA_MAD_Type2RowChanging;
            
            public event tAA_MAD_Type2RowChangeEventHandler tAA_MAD_Type2RowChanged;
            
            public event tAA_MAD_Type2RowChangeEventHandler tAA_MAD_Type2RowDeleting;
            
            public event tAA_MAD_Type2RowChangeEventHandler tAA_MAD_Type2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MAD_Type2Row(tAA_MAD_Type2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type2Row AddtAA_MAD_Type2Row(
                        int MADistrictID, 
                        short RollYear, 
                        string DistrictNumber, 
                        string Description, 
                        decimal MinimumCharge, 
                        bool IsOwnerAssessed, 
                        decimal BaseFee, 
                        short BaseAcres, 
                        decimal SiteBase, 
                        decimal SiteRate, 
                        decimal DryBase, 
                        decimal DryRate, 
                        decimal IrrigatedBase, 
                        decimal IrrigatedRate, 
                        decimal TimberBase, 
                        decimal TimberRate, 
                        decimal OtherBase, 
                        decimal OtherRate, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        int MinSiteAcres, 
                        int MinDryAcres, 
                        int MinIrrigatedAcres, 
                        int MinTimberAcres, 
                        int MinOtherAcres, 
                        decimal BaseRate) {
                tAA_MAD_Type2Row rowtAA_MAD_Type2Row = ((tAA_MAD_Type2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADistrictID,
                        RollYear,
                        DistrictNumber,
                        Description,
                        MinimumCharge,
                        IsOwnerAssessed,
                        BaseFee,
                        BaseAcres,
                        SiteBase,
                        SiteRate,
                        DryBase,
                        DryRate,
                        IrrigatedBase,
                        IrrigatedRate,
                        TimberBase,
                        TimberRate,
                        OtherBase,
                        OtherRate,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        MinSiteAcres,
                        MinDryAcres,
                        MinIrrigatedAcres,
                        MinTimberAcres,
                        MinOtherAcres,
                        BaseRate};
                rowtAA_MAD_Type2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MAD_Type2Row);
                return rowtAA_MAD_Type2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MAD_Type2DataTable cln = ((tAA_MAD_Type2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MAD_Type2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnMinimumCharge = base.Columns["MinimumCharge"];
                this.columnIsOwnerAssessed = base.Columns["IsOwnerAssessed"];
                this.columnBaseFee = base.Columns["BaseFee"];
                this.columnBaseAcres = base.Columns["BaseAcres"];
                this.columnSiteBase = base.Columns["SiteBase"];
                this.columnSiteRate = base.Columns["SiteRate"];
                this.columnDryBase = base.Columns["DryBase"];
                this.columnDryRate = base.Columns["DryRate"];
                this.columnIrrigatedBase = base.Columns["IrrigatedBase"];
                this.columnIrrigatedRate = base.Columns["IrrigatedRate"];
                this.columnTimberBase = base.Columns["TimberBase"];
                this.columnTimberRate = base.Columns["TimberRate"];
                this.columnOtherBase = base.Columns["OtherBase"];
                this.columnOtherRate = base.Columns["OtherRate"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnMinSiteAcres = base.Columns["MinSiteAcres"];
                this.columnMinDryAcres = base.Columns["MinDryAcres"];
                this.columnMinIrrigatedAcres = base.Columns["MinIrrigatedAcres"];
                this.columnMinTimberAcres = base.Columns["MinTimberAcres"];
                this.columnMinOtherAcres = base.Columns["MinOtherAcres"];
                this.columnBaseRate = base.Columns["BaseRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMinimumCharge = new global::System.Data.DataColumn("MinimumCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimumCharge);
                this.columnIsOwnerAssessed = new global::System.Data.DataColumn("IsOwnerAssessed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOwnerAssessed);
                this.columnBaseFee = new global::System.Data.DataColumn("BaseFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseFee);
                this.columnBaseAcres = new global::System.Data.DataColumn("BaseAcres", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseAcres);
                this.columnSiteBase = new global::System.Data.DataColumn("SiteBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteBase);
                this.columnSiteRate = new global::System.Data.DataColumn("SiteRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteRate);
                this.columnDryBase = new global::System.Data.DataColumn("DryBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDryBase);
                this.columnDryRate = new global::System.Data.DataColumn("DryRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDryRate);
                this.columnIrrigatedBase = new global::System.Data.DataColumn("IrrigatedBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigatedBase);
                this.columnIrrigatedRate = new global::System.Data.DataColumn("IrrigatedRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigatedRate);
                this.columnTimberBase = new global::System.Data.DataColumn("TimberBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimberBase);
                this.columnTimberRate = new global::System.Data.DataColumn("TimberRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimberRate);
                this.columnOtherBase = new global::System.Data.DataColumn("OtherBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherBase);
                this.columnOtherRate = new global::System.Data.DataColumn("OtherRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherRate);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnMinSiteAcres = new global::System.Data.DataColumn("MinSiteAcres", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinSiteAcres);
                this.columnMinDryAcres = new global::System.Data.DataColumn("MinDryAcres", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinDryAcres);
                this.columnMinIrrigatedAcres = new global::System.Data.DataColumn("MinIrrigatedAcres", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinIrrigatedAcres);
                this.columnMinTimberAcres = new global::System.Data.DataColumn("MinTimberAcres", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinTimberAcres);
                this.columnMinOtherAcres = new global::System.Data.DataColumn("MinOtherAcres", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinOtherAcres);
                this.columnBaseRate = new global::System.Data.DataColumn("BaseRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseRate);
                this.columnMADistrictID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDistrictNumber.ReadOnly = true;
                this.columnDistrictNumber.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnMinimumCharge.ReadOnly = true;
                this.columnIsOwnerAssessed.ReadOnly = true;
                this.columnBaseFee.ReadOnly = true;
                this.columnBaseAcres.ReadOnly = true;
                this.columnSiteBase.ReadOnly = true;
                this.columnSiteRate.ReadOnly = true;
                this.columnDryBase.ReadOnly = true;
                this.columnDryRate.ReadOnly = true;
                this.columnIrrigatedBase.ReadOnly = true;
                this.columnIrrigatedRate.ReadOnly = true;
                this.columnTimberBase.ReadOnly = true;
                this.columnTimberRate.ReadOnly = true;
                this.columnOtherBase.ReadOnly = true;
                this.columnOtherRate.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnMinSiteAcres.ReadOnly = true;
                this.columnMinDryAcres.ReadOnly = true;
                this.columnMinIrrigatedAcres.ReadOnly = true;
                this.columnMinTimberAcres.ReadOnly = true;
                this.columnMinOtherAcres.ReadOnly = true;
                this.columnBaseRate.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type2Row NewtAA_MAD_Type2Row() {
                return ((tAA_MAD_Type2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MAD_Type2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MAD_Type2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MAD_Type2RowChanged != null)) {
                    this.tAA_MAD_Type2RowChanged(this, new tAA_MAD_Type2RowChangeEvent(((tAA_MAD_Type2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MAD_Type2RowChanging != null)) {
                    this.tAA_MAD_Type2RowChanging(this, new tAA_MAD_Type2RowChangeEvent(((tAA_MAD_Type2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MAD_Type2RowDeleted != null)) {
                    this.tAA_MAD_Type2RowDeleted(this, new tAA_MAD_Type2RowChangeEvent(((tAA_MAD_Type2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MAD_Type2RowDeleting != null)) {
                    this.tAA_MAD_Type2RowDeleting(this, new tAA_MAD_Type2RowChangeEvent(((tAA_MAD_Type2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MAD_Type2Row(tAA_MAD_Type2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MAD_Type2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MAD_Type6DataTable : global::System.Data.TypedTableBase<tAA_MAD_Type6Row> {
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCountyFee;
            
            private global::System.Data.DataColumn columnMaxLotSize;
            
            private global::System.Data.DataColumn columnFPAFee;
            
            private global::System.Data.DataColumn columnLCFFee;
            
            private global::System.Data.DataColumn columnFPARate;
            
            private global::System.Data.DataColumn columnLCFRate;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type6DataTable() {
                this.TableName = "tAA_MAD_Type6";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type6DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MAD_Type6DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyFeeColumn {
                get {
                    return this.columnCountyFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaxLotSizeColumn {
                get {
                    return this.columnMaxLotSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FPAFeeColumn {
                get {
                    return this.columnFPAFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCFFeeColumn {
                get {
                    return this.columnLCFFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FPARateColumn {
                get {
                    return this.columnFPARate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCFRateColumn {
                get {
                    return this.columnLCFRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type6Row this[int index] {
                get {
                    return ((tAA_MAD_Type6Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MAD_Type6RowChangeEventHandler tAA_MAD_Type6RowChanging;
            
            public event tAA_MAD_Type6RowChangeEventHandler tAA_MAD_Type6RowChanged;
            
            public event tAA_MAD_Type6RowChangeEventHandler tAA_MAD_Type6RowDeleting;
            
            public event tAA_MAD_Type6RowChangeEventHandler tAA_MAD_Type6RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MAD_Type6Row(tAA_MAD_Type6Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type6Row AddtAA_MAD_Type6Row(int MADistrictID, short RollYear, string DistrictNumber, string Description, decimal CountyFee, decimal MaxLotSize, decimal FPAFee, decimal LCFFee, decimal FPARate, decimal LCFRate, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID) {
                tAA_MAD_Type6Row rowtAA_MAD_Type6Row = ((tAA_MAD_Type6Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADistrictID,
                        RollYear,
                        DistrictNumber,
                        Description,
                        CountyFee,
                        MaxLotSize,
                        FPAFee,
                        LCFFee,
                        FPARate,
                        LCFRate,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID};
                rowtAA_MAD_Type6Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MAD_Type6Row);
                return rowtAA_MAD_Type6Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MAD_Type6DataTable cln = ((tAA_MAD_Type6DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MAD_Type6DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnCountyFee = base.Columns["CountyFee"];
                this.columnMaxLotSize = base.Columns["MaxLotSize"];
                this.columnFPAFee = base.Columns["FPAFee"];
                this.columnLCFFee = base.Columns["LCFFee"];
                this.columnFPARate = base.Columns["FPARate"];
                this.columnLCFRate = base.Columns["LCFRate"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCountyFee = new global::System.Data.DataColumn("CountyFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyFee);
                this.columnMaxLotSize = new global::System.Data.DataColumn("MaxLotSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxLotSize);
                this.columnFPAFee = new global::System.Data.DataColumn("FPAFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFPAFee);
                this.columnLCFFee = new global::System.Data.DataColumn("LCFFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCFFee);
                this.columnFPARate = new global::System.Data.DataColumn("FPARate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFPARate);
                this.columnLCFRate = new global::System.Data.DataColumn("LCFRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCFRate);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnMADistrictID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDistrictNumber.ReadOnly = true;
                this.columnDistrictNumber.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnCountyFee.ReadOnly = true;
                this.columnMaxLotSize.ReadOnly = true;
                this.columnFPAFee.ReadOnly = true;
                this.columnLCFFee.ReadOnly = true;
                this.columnFPARate.ReadOnly = true;
                this.columnLCFRate.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type6Row NewtAA_MAD_Type6Row() {
                return ((tAA_MAD_Type6Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MAD_Type6Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MAD_Type6Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MAD_Type6RowChanged != null)) {
                    this.tAA_MAD_Type6RowChanged(this, new tAA_MAD_Type6RowChangeEvent(((tAA_MAD_Type6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MAD_Type6RowChanging != null)) {
                    this.tAA_MAD_Type6RowChanging(this, new tAA_MAD_Type6RowChangeEvent(((tAA_MAD_Type6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MAD_Type6RowDeleted != null)) {
                    this.tAA_MAD_Type6RowDeleted(this, new tAA_MAD_Type6RowChangeEvent(((tAA_MAD_Type6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MAD_Type6RowDeleting != null)) {
                    this.tAA_MAD_Type6RowDeleting(this, new tAA_MAD_Type6RowChangeEvent(((tAA_MAD_Type6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MAD_Type6Row(tAA_MAD_Type6Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MAD_Type6DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type1DataTable : global::System.Data.TypedTableBase<tAA_MA_Type1Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnSiteAcres;
            
            private global::System.Data.DataColumn columnDryAcres;
            
            private global::System.Data.DataColumn columnIrrigatedAcres;
            
            private global::System.Data.DataColumn columnTimberAcres;
            
            private global::System.Data.DataColumn columnOtherAcres;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            private global::System.Data.DataColumn columnBaseAcres;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type1DataTable() {
                this.TableName = "tAA_MA_Type1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteAcresColumn {
                get {
                    return this.columnSiteAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DryAcresColumn {
                get {
                    return this.columnDryAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IrrigatedAcresColumn {
                get {
                    return this.columnIrrigatedAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimberAcresColumn {
                get {
                    return this.columnTimberAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherAcresColumn {
                get {
                    return this.columnOtherAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseAcresColumn {
                get {
                    return this.columnBaseAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type1Row this[int index] {
                get {
                    return ((tAA_MA_Type1Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type1RowChangeEventHandler tAA_MA_Type1RowChanging;
            
            public event tAA_MA_Type1RowChangeEventHandler tAA_MA_Type1RowChanged;
            
            public event tAA_MA_Type1RowChangeEventHandler tAA_MA_Type1RowDeleting;
            
            public event tAA_MA_Type1RowChangeEventHandler tAA_MA_Type1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type1Row(tAA_MA_Type1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type1Row AddtAA_MA_Type1Row(
                        int ParcelID, 
                        int MADistrictID, 
                        decimal SiteAcres, 
                        decimal DryAcres, 
                        decimal IrrigatedAcres, 
                        decimal TimberAcres, 
                        decimal OtherAcres, 
                        decimal TaxAmount, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        string amount, 
                        decimal OverrideAmount, 
                        bool IsExempt, 
                        bool IsOverride, 
                        decimal BaseAcres) {
                tAA_MA_Type1Row rowtAA_MA_Type1Row = ((tAA_MA_Type1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        SiteAcres,
                        DryAcres,
                        IrrigatedAcres,
                        TimberAcres,
                        OtherAcres,
                        TaxAmount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        amount,
                        OverrideAmount,
                        IsExempt,
                        IsOverride,
                        BaseAcres};
                rowtAA_MA_Type1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type1Row);
                return rowtAA_MA_Type1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type1DataTable cln = ((tAA_MA_Type1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnSiteAcres = base.Columns["SiteAcres"];
                this.columnDryAcres = base.Columns["DryAcres"];
                this.columnIrrigatedAcres = base.Columns["IrrigatedAcres"];
                this.columnTimberAcres = base.Columns["TimberAcres"];
                this.columnOtherAcres = base.Columns["OtherAcres"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnamount = base.Columns["amount"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
                this.columnBaseAcres = base.Columns["BaseAcres"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnSiteAcres = new global::System.Data.DataColumn("SiteAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteAcres);
                this.columnDryAcres = new global::System.Data.DataColumn("DryAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDryAcres);
                this.columnIrrigatedAcres = new global::System.Data.DataColumn("IrrigatedAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigatedAcres);
                this.columnTimberAcres = new global::System.Data.DataColumn("TimberAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimberAcres);
                this.columnOtherAcres = new global::System.Data.DataColumn("OtherAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAcres);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnBaseAcres = new global::System.Data.DataColumn("BaseAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseAcres);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnSiteAcres.ReadOnly = true;
                this.columnDryAcres.ReadOnly = true;
                this.columnIrrigatedAcres.ReadOnly = true;
                this.columnTimberAcres.ReadOnly = true;
                this.columnOtherAcres.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnamount.ReadOnly = true;
                this.columnamount.MaxLength = 50;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
                this.columnBaseAcres.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type1Row NewtAA_MA_Type1Row() {
                return ((tAA_MA_Type1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type1RowChanged != null)) {
                    this.tAA_MA_Type1RowChanged(this, new tAA_MA_Type1RowChangeEvent(((tAA_MA_Type1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type1RowChanging != null)) {
                    this.tAA_MA_Type1RowChanging(this, new tAA_MA_Type1RowChangeEvent(((tAA_MA_Type1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type1RowDeleted != null)) {
                    this.tAA_MA_Type1RowDeleted(this, new tAA_MA_Type1RowChangeEvent(((tAA_MA_Type1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type1RowDeleting != null)) {
                    this.tAA_MA_Type1RowDeleting(this, new tAA_MA_Type1RowChangeEvent(((tAA_MA_Type1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type1Row(tAA_MA_Type1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MAD_Type10DataTable : global::System.Data.TypedTableBase<tAA_MAD_Type10Row> {
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnBase;
            
            private global::System.Data.DataColumn columnMinimum;
            
            private global::System.Data.DataColumn columnMaximum;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type10DataTable() {
                this.TableName = "tAA_MAD_Type10";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type10DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MAD_Type10DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseColumn {
                get {
                    return this.columnBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinimumColumn {
                get {
                    return this.columnMinimum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaximumColumn {
                get {
                    return this.columnMaximum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type10Row this[int index] {
                get {
                    return ((tAA_MAD_Type10Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MAD_Type10RowChangeEventHandler tAA_MAD_Type10RowChanging;
            
            public event tAA_MAD_Type10RowChangeEventHandler tAA_MAD_Type10RowChanged;
            
            public event tAA_MAD_Type10RowChangeEventHandler tAA_MAD_Type10RowDeleting;
            
            public event tAA_MAD_Type10RowChangeEventHandler tAA_MAD_Type10RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MAD_Type10Row(tAA_MAD_Type10Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type10Row AddtAA_MAD_Type10Row(int MADistrictID, short RollYear, string DistrictNumber, string Description, decimal Rate, decimal Base, decimal Minimum, decimal Maximum, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID) {
                tAA_MAD_Type10Row rowtAA_MAD_Type10Row = ((tAA_MAD_Type10Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADistrictID,
                        RollYear,
                        DistrictNumber,
                        Description,
                        Rate,
                        Base,
                        Minimum,
                        Maximum,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID};
                rowtAA_MAD_Type10Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MAD_Type10Row);
                return rowtAA_MAD_Type10Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MAD_Type10DataTable cln = ((tAA_MAD_Type10DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MAD_Type10DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnRate = base.Columns["Rate"];
                this.columnBase = base.Columns["Base"];
                this.columnMinimum = base.Columns["Minimum"];
                this.columnMaximum = base.Columns["Maximum"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnBase = new global::System.Data.DataColumn("Base", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBase);
                this.columnMinimum = new global::System.Data.DataColumn("Minimum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimum);
                this.columnMaximum = new global::System.Data.DataColumn("Maximum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaximum);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnMADistrictID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDistrictNumber.ReadOnly = true;
                this.columnDistrictNumber.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnRate.ReadOnly = true;
                this.columnBase.ReadOnly = true;
                this.columnMinimum.ReadOnly = true;
                this.columnMaximum.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type10Row NewtAA_MAD_Type10Row() {
                return ((tAA_MAD_Type10Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MAD_Type10Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MAD_Type10Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MAD_Type10RowChanged != null)) {
                    this.tAA_MAD_Type10RowChanged(this, new tAA_MAD_Type10RowChangeEvent(((tAA_MAD_Type10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MAD_Type10RowChanging != null)) {
                    this.tAA_MAD_Type10RowChanging(this, new tAA_MAD_Type10RowChangeEvent(((tAA_MAD_Type10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MAD_Type10RowDeleted != null)) {
                    this.tAA_MAD_Type10RowDeleted(this, new tAA_MAD_Type10RowChangeEvent(((tAA_MAD_Type10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MAD_Type10RowDeleting != null)) {
                    this.tAA_MAD_Type10RowDeleting(this, new tAA_MAD_Type10RowChangeEvent(((tAA_MAD_Type10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MAD_Type10Row(tAA_MAD_Type10Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MAD_Type10DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type10DataTable : global::System.Data.TypedTableBase<tAA_MA_Type10Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnAssessedValue;
            
            private global::System.Data.DataColumn columnrate;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            private global::System.Data.DataColumn columnunits;
            
            private global::System.Data.DataColumn columnFactor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type10DataTable() {
                this.TableName = "tAA_MA_Type10";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type10DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type10DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessedValueColumn {
                get {
                    return this.columnAssessedValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rateColumn {
                get {
                    return this.columnrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unitsColumn {
                get {
                    return this.columnunits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FactorColumn {
                get {
                    return this.columnFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type10Row this[int index] {
                get {
                    return ((tAA_MA_Type10Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type10RowChangeEventHandler tAA_MA_Type10RowChanging;
            
            public event tAA_MA_Type10RowChangeEventHandler tAA_MA_Type10RowChanged;
            
            public event tAA_MA_Type10RowChangeEventHandler tAA_MA_Type10RowDeleting;
            
            public event tAA_MA_Type10RowChangeEventHandler tAA_MA_Type10RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type10Row(tAA_MA_Type10Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type10Row AddtAA_MA_Type10Row(
                        int ParcelID, 
                        int MADistrictID, 
                        decimal AssessedValue, 
                        decimal rate, 
                        decimal TaxAmount, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        string amount, 
                        decimal OverrideAmount, 
                        bool IsExempt, 
                        bool IsOverride, 
                        decimal units, 
                        int Factor) {
                tAA_MA_Type10Row rowtAA_MA_Type10Row = ((tAA_MA_Type10Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        AssessedValue,
                        rate,
                        TaxAmount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        amount,
                        OverrideAmount,
                        IsExempt,
                        IsOverride,
                        units,
                        Factor};
                rowtAA_MA_Type10Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type10Row);
                return rowtAA_MA_Type10Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type10DataTable cln = ((tAA_MA_Type10DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type10DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnAssessedValue = base.Columns["AssessedValue"];
                this.columnrate = base.Columns["rate"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnamount = base.Columns["amount"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
                this.columnunits = base.Columns["units"];
                this.columnFactor = base.Columns["Factor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnAssessedValue = new global::System.Data.DataColumn("AssessedValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessedValue);
                this.columnrate = new global::System.Data.DataColumn("rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrate);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnunits = new global::System.Data.DataColumn("units", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunits);
                this.columnFactor = new global::System.Data.DataColumn("Factor", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactor);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnAssessedValue.ReadOnly = true;
                this.columnrate.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnamount.ReadOnly = true;
                this.columnamount.MaxLength = 50;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
                this.columnunits.ReadOnly = true;
                this.columnFactor.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type10Row NewtAA_MA_Type10Row() {
                return ((tAA_MA_Type10Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type10Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type10Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type10RowChanged != null)) {
                    this.tAA_MA_Type10RowChanged(this, new tAA_MA_Type10RowChangeEvent(((tAA_MA_Type10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type10RowChanging != null)) {
                    this.tAA_MA_Type10RowChanging(this, new tAA_MA_Type10RowChangeEvent(((tAA_MA_Type10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type10RowDeleted != null)) {
                    this.tAA_MA_Type10RowDeleted(this, new tAA_MA_Type10RowChangeEvent(((tAA_MA_Type10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type10RowDeleting != null)) {
                    this.tAA_MA_Type10RowDeleting(this, new tAA_MA_Type10RowChangeEvent(((tAA_MA_Type10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type10Row(tAA_MA_Type10Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type10DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_LandUnitDataTable : global::System.Data.TypedTableBase<tAA_LandUnitRow> {
            
            private global::System.Data.DataColumn columnUnitType;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnUnitsPerAcre;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandUnitDataTable() {
                this.TableName = "tAA_LandUnit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandUnitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_LandUnitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitTypeColumn {
                get {
                    return this.columnUnitType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitsPerAcreColumn {
                get {
                    return this.columnUnitsPerAcre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandUnitRow this[int index] {
                get {
                    return ((tAA_LandUnitRow)(this.Rows[index]));
                }
            }
            
            public event tAA_LandUnitRowChangeEventHandler tAA_LandUnitRowChanging;
            
            public event tAA_LandUnitRowChangeEventHandler tAA_LandUnitRowChanged;
            
            public event tAA_LandUnitRowChangeEventHandler tAA_LandUnitRowDeleting;
            
            public event tAA_LandUnitRowChangeEventHandler tAA_LandUnitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_LandUnitRow(tAA_LandUnitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandUnitRow AddtAA_LandUnitRow(string UnitType, bool IsActive, decimal UnitsPerAcre) {
                tAA_LandUnitRow rowtAA_LandUnitRow = ((tAA_LandUnitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UnitType,
                        IsActive,
                        UnitsPerAcre};
                rowtAA_LandUnitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_LandUnitRow);
                return rowtAA_LandUnitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_LandUnitDataTable cln = ((tAA_LandUnitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_LandUnitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUnitType = base.Columns["UnitType"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnUnitsPerAcre = base.Columns["UnitsPerAcre"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUnitType = new global::System.Data.DataColumn("UnitType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitType);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnUnitsPerAcre = new global::System.Data.DataColumn("UnitsPerAcre", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitsPerAcre);
                this.columnUnitType.ReadOnly = true;
                this.columnUnitType.MaxLength = 20;
                this.columnIsActive.ReadOnly = true;
                this.columnUnitsPerAcre.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandUnitRow NewtAA_LandUnitRow() {
                return ((tAA_LandUnitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_LandUnitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_LandUnitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_LandUnitRowChanged != null)) {
                    this.tAA_LandUnitRowChanged(this, new tAA_LandUnitRowChangeEvent(((tAA_LandUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_LandUnitRowChanging != null)) {
                    this.tAA_LandUnitRowChanging(this, new tAA_LandUnitRowChangeEvent(((tAA_LandUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_LandUnitRowDeleted != null)) {
                    this.tAA_LandUnitRowDeleted(this, new tAA_LandUnitRowChangeEvent(((tAA_LandUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_LandUnitRowDeleting != null)) {
                    this.tAA_LandUnitRowDeleting(this, new tAA_LandUnitRowChangeEvent(((tAA_LandUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_LandUnitRow(tAA_LandUnitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_LandUnitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_CommentTemplateDataTable : global::System.Data.TypedTableBase<tTS_CommentTemplateRow> {
            
            private global::System.Data.DataColumn columnTemplateID;
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnTemplate;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnIsPublic;
            
            private global::System.Data.DataColumn columnWillPrint;
            
            private global::System.Data.DataColumn columnIsHighPriority;
            
            private global::System.Data.DataColumn columnWillRoll;
            
            private global::System.Data.DataColumn columnCommentPriorityID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentTemplateDataTable() {
                this.TableName = "tTS_CommentTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_CommentTemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_CommentTemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateIDColumn {
                get {
                    return this.columnTemplateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateColumn {
                get {
                    return this.columnTemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPublicColumn {
                get {
                    return this.columnIsPublic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WillPrintColumn {
                get {
                    return this.columnWillPrint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsHighPriorityColumn {
                get {
                    return this.columnIsHighPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WillRollColumn {
                get {
                    return this.columnWillRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentPriorityIDColumn {
                get {
                    return this.columnCommentPriorityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentTemplateRow this[int index] {
                get {
                    return ((tTS_CommentTemplateRow)(this.Rows[index]));
                }
            }
            
            public event tTS_CommentTemplateRowChangeEventHandler tTS_CommentTemplateRowChanging;
            
            public event tTS_CommentTemplateRowChangeEventHandler tTS_CommentTemplateRowChanged;
            
            public event tTS_CommentTemplateRowChangeEventHandler tTS_CommentTemplateRowDeleting;
            
            public event tTS_CommentTemplateRowChangeEventHandler tTS_CommentTemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_CommentTemplateRow(tTS_CommentTemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentTemplateRow AddtTS_CommentTemplateRow(int TemplateID, int Form, string Template, string Comment, bool IsPublic, bool WillPrint, bool IsHighPriority, bool WillRoll, short CommentPriorityID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_CommentTemplateRow rowtTS_CommentTemplateRow = ((tTS_CommentTemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TemplateID,
                        Form,
                        Template,
                        Comment,
                        IsPublic,
                        WillPrint,
                        IsHighPriority,
                        WillRoll,
                        CommentPriorityID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_CommentTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_CommentTemplateRow);
                return rowtTS_CommentTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_CommentTemplateDataTable cln = ((tTS_CommentTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_CommentTemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTemplateID = base.Columns["TemplateID"];
                this.columnForm = base.Columns["Form"];
                this.columnTemplate = base.Columns["Template"];
                this.columnComment = base.Columns["Comment"];
                this.columnIsPublic = base.Columns["IsPublic"];
                this.columnWillPrint = base.Columns["WillPrint"];
                this.columnIsHighPriority = base.Columns["IsHighPriority"];
                this.columnWillRoll = base.Columns["WillRoll"];
                this.columnCommentPriorityID = base.Columns["CommentPriorityID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTemplateID = new global::System.Data.DataColumn("TemplateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplateID);
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnTemplate = new global::System.Data.DataColumn("Template", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplate);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnIsPublic = new global::System.Data.DataColumn("IsPublic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPublic);
                this.columnWillPrint = new global::System.Data.DataColumn("WillPrint", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWillPrint);
                this.columnIsHighPriority = new global::System.Data.DataColumn("IsHighPriority", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHighPriority);
                this.columnWillRoll = new global::System.Data.DataColumn("WillRoll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWillRoll);
                this.columnCommentPriorityID = new global::System.Data.DataColumn("CommentPriorityID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentPriorityID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnTemplateID.ReadOnly = true;
                this.columnForm.ReadOnly = true;
                this.columnTemplate.ReadOnly = true;
                this.columnTemplate.MaxLength = 50;
                this.columnComment.ReadOnly = true;
                this.columnComment.MaxLength = 2000;
                this.columnIsPublic.ReadOnly = true;
                this.columnWillPrint.ReadOnly = true;
                this.columnIsHighPriority.ReadOnly = true;
                this.columnWillRoll.ReadOnly = true;
                this.columnCommentPriorityID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentTemplateRow NewtTS_CommentTemplateRow() {
                return ((tTS_CommentTemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_CommentTemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_CommentTemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_CommentTemplateRowChanged != null)) {
                    this.tTS_CommentTemplateRowChanged(this, new tTS_CommentTemplateRowChangeEvent(((tTS_CommentTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_CommentTemplateRowChanging != null)) {
                    this.tTS_CommentTemplateRowChanging(this, new tTS_CommentTemplateRowChangeEvent(((tTS_CommentTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_CommentTemplateRowDeleted != null)) {
                    this.tTS_CommentTemplateRowDeleted(this, new tTS_CommentTemplateRowChangeEvent(((tTS_CommentTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_CommentTemplateRowDeleting != null)) {
                    this.tTS_CommentTemplateRowDeleting(this, new tTS_CommentTemplateRowChangeEvent(((tTS_CommentTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_CommentTemplateRow(tTS_CommentTemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_CommentTemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type11DataTable : global::System.Data.TypedTableBase<tAA_MA_Type11Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type11DataTable() {
                this.TableName = "tAA_MA_Type11";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type11DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type11DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type11Row this[int index] {
                get {
                    return ((tAA_MA_Type11Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type11RowChangeEventHandler tAA_MA_Type11RowChanging;
            
            public event tAA_MA_Type11RowChangeEventHandler tAA_MA_Type11RowChanged;
            
            public event tAA_MA_Type11RowChangeEventHandler tAA_MA_Type11RowDeleting;
            
            public event tAA_MA_Type11RowChangeEventHandler tAA_MA_Type11RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type11Row(tAA_MA_Type11Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type11Row AddtAA_MA_Type11Row(int ParcelID, int MADistrictID, decimal TaxAmount, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID, decimal OverrideAmount, bool IsExempt, bool IsOverride) {
                tAA_MA_Type11Row rowtAA_MA_Type11Row = ((tAA_MA_Type11Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        TaxAmount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        OverrideAmount,
                        IsExempt,
                        IsOverride};
                rowtAA_MA_Type11Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type11Row);
                return rowtAA_MA_Type11Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type11DataTable cln = ((tAA_MA_Type11DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type11DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type11Row NewtAA_MA_Type11Row() {
                return ((tAA_MA_Type11Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type11Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type11Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type11RowChanged != null)) {
                    this.tAA_MA_Type11RowChanged(this, new tAA_MA_Type11RowChangeEvent(((tAA_MA_Type11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type11RowChanging != null)) {
                    this.tAA_MA_Type11RowChanging(this, new tAA_MA_Type11RowChangeEvent(((tAA_MA_Type11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type11RowDeleted != null)) {
                    this.tAA_MA_Type11RowDeleted(this, new tAA_MA_Type11RowChangeEvent(((tAA_MA_Type11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type11RowDeleting != null)) {
                    this.tAA_MA_Type11RowDeleting(this, new tAA_MA_Type11RowChangeEvent(((tAA_MA_Type11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type11Row(tAA_MA_Type11Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type11DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type12DataTable : global::System.Data.TypedTableBase<tAA_MA_Type12Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type12DataTable() {
                this.TableName = "tAA_MA_Type12";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type12DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type12DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type12Row this[int index] {
                get {
                    return ((tAA_MA_Type12Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type12RowChangeEventHandler tAA_MA_Type12RowChanging;
            
            public event tAA_MA_Type12RowChangeEventHandler tAA_MA_Type12RowChanged;
            
            public event tAA_MA_Type12RowChangeEventHandler tAA_MA_Type12RowDeleting;
            
            public event tAA_MA_Type12RowChangeEventHandler tAA_MA_Type12RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type12Row(tAA_MA_Type12Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type12Row AddtAA_MA_Type12Row(int ParcelID, int MADistrictID, decimal TaxAmount, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID, decimal OverrideAmount, bool IsExempt, bool IsOverride) {
                tAA_MA_Type12Row rowtAA_MA_Type12Row = ((tAA_MA_Type12Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        TaxAmount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        OverrideAmount,
                        IsExempt,
                        IsOverride};
                rowtAA_MA_Type12Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type12Row);
                return rowtAA_MA_Type12Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type12DataTable cln = ((tAA_MA_Type12DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type12DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type12Row NewtAA_MA_Type12Row() {
                return ((tAA_MA_Type12Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type12Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type12Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type12RowChanged != null)) {
                    this.tAA_MA_Type12RowChanged(this, new tAA_MA_Type12RowChangeEvent(((tAA_MA_Type12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type12RowChanging != null)) {
                    this.tAA_MA_Type12RowChanging(this, new tAA_MA_Type12RowChangeEvent(((tAA_MA_Type12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type12RowDeleted != null)) {
                    this.tAA_MA_Type12RowDeleted(this, new tAA_MA_Type12RowChangeEvent(((tAA_MA_Type12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type12RowDeleting != null)) {
                    this.tAA_MA_Type12RowDeleting(this, new tAA_MA_Type12RowChangeEvent(((tAA_MA_Type12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type12Row(tAA_MA_Type12Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type12DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type3DataTable : global::System.Data.TypedTableBase<tAA_MA_Type3Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnSiteAcres;
            
            private global::System.Data.DataColumn columnDryAcres;
            
            private global::System.Data.DataColumn columnIrrigatedAcres;
            
            private global::System.Data.DataColumn columnTimberAcres;
            
            private global::System.Data.DataColumn columnOtherAcres;
            
            private global::System.Data.DataColumn columnBaseAcres;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type3DataTable() {
                this.TableName = "tAA_MA_Type3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteAcresColumn {
                get {
                    return this.columnSiteAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DryAcresColumn {
                get {
                    return this.columnDryAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IrrigatedAcresColumn {
                get {
                    return this.columnIrrigatedAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimberAcresColumn {
                get {
                    return this.columnTimberAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherAcresColumn {
                get {
                    return this.columnOtherAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseAcresColumn {
                get {
                    return this.columnBaseAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type3Row this[int index] {
                get {
                    return ((tAA_MA_Type3Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type3RowChangeEventHandler tAA_MA_Type3RowChanging;
            
            public event tAA_MA_Type3RowChangeEventHandler tAA_MA_Type3RowChanged;
            
            public event tAA_MA_Type3RowChangeEventHandler tAA_MA_Type3RowDeleting;
            
            public event tAA_MA_Type3RowChangeEventHandler tAA_MA_Type3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type3Row(tAA_MA_Type3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type3Row AddtAA_MA_Type3Row(
                        int ParcelID, 
                        int MADistrictID, 
                        decimal SiteAcres, 
                        decimal DryAcres, 
                        decimal IrrigatedAcres, 
                        decimal TimberAcres, 
                        decimal OtherAcres, 
                        decimal BaseAcres, 
                        decimal TaxAmount, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        string amount, 
                        decimal OverrideAmount, 
                        bool IsExempt, 
                        bool IsOverride) {
                tAA_MA_Type3Row rowtAA_MA_Type3Row = ((tAA_MA_Type3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        SiteAcres,
                        DryAcres,
                        IrrigatedAcres,
                        TimberAcres,
                        OtherAcres,
                        BaseAcres,
                        TaxAmount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        amount,
                        OverrideAmount,
                        IsExempt,
                        IsOverride};
                rowtAA_MA_Type3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type3Row);
                return rowtAA_MA_Type3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type3DataTable cln = ((tAA_MA_Type3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnSiteAcres = base.Columns["SiteAcres"];
                this.columnDryAcres = base.Columns["DryAcres"];
                this.columnIrrigatedAcres = base.Columns["IrrigatedAcres"];
                this.columnTimberAcres = base.Columns["TimberAcres"];
                this.columnOtherAcres = base.Columns["OtherAcres"];
                this.columnBaseAcres = base.Columns["BaseAcres"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnamount = base.Columns["amount"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnSiteAcres = new global::System.Data.DataColumn("SiteAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteAcres);
                this.columnDryAcres = new global::System.Data.DataColumn("DryAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDryAcres);
                this.columnIrrigatedAcres = new global::System.Data.DataColumn("IrrigatedAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigatedAcres);
                this.columnTimberAcres = new global::System.Data.DataColumn("TimberAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimberAcres);
                this.columnOtherAcres = new global::System.Data.DataColumn("OtherAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAcres);
                this.columnBaseAcres = new global::System.Data.DataColumn("BaseAcres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseAcres);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnSiteAcres.ReadOnly = true;
                this.columnDryAcres.ReadOnly = true;
                this.columnIrrigatedAcres.ReadOnly = true;
                this.columnTimberAcres.ReadOnly = true;
                this.columnOtherAcres.ReadOnly = true;
                this.columnBaseAcres.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnamount.ReadOnly = true;
                this.columnamount.MaxLength = 50;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type3Row NewtAA_MA_Type3Row() {
                return ((tAA_MA_Type3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type3RowChanged != null)) {
                    this.tAA_MA_Type3RowChanged(this, new tAA_MA_Type3RowChangeEvent(((tAA_MA_Type3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type3RowChanging != null)) {
                    this.tAA_MA_Type3RowChanging(this, new tAA_MA_Type3RowChangeEvent(((tAA_MA_Type3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type3RowDeleted != null)) {
                    this.tAA_MA_Type3RowDeleted(this, new tAA_MA_Type3RowChangeEvent(((tAA_MA_Type3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type3RowDeleting != null)) {
                    this.tAA_MA_Type3RowDeleting(this, new tAA_MA_Type3RowChangeEvent(((tAA_MA_Type3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type3Row(tAA_MA_Type3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type4DataTable : global::System.Data.TypedTableBase<tAA_MA_Type4Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type4DataTable() {
                this.TableName = "tAA_MA_Type4";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type4DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type4DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type4Row this[int index] {
                get {
                    return ((tAA_MA_Type4Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type4RowChangeEventHandler tAA_MA_Type4RowChanging;
            
            public event tAA_MA_Type4RowChangeEventHandler tAA_MA_Type4RowChanged;
            
            public event tAA_MA_Type4RowChangeEventHandler tAA_MA_Type4RowDeleting;
            
            public event tAA_MA_Type4RowChangeEventHandler tAA_MA_Type4RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type4Row(tAA_MA_Type4Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type4Row AddtAA_MA_Type4Row(int ParcelID, int MADistrictID, decimal TaxAmount, decimal Amount, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID, decimal OverrideAmount, bool IsExempt, bool IsOverride) {
                tAA_MA_Type4Row rowtAA_MA_Type4Row = ((tAA_MA_Type4Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        TaxAmount,
                        Amount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        OverrideAmount,
                        IsExempt,
                        IsOverride};
                rowtAA_MA_Type4Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type4Row);
                return rowtAA_MA_Type4Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type4DataTable cln = ((tAA_MA_Type4DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type4DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type4Row NewtAA_MA_Type4Row() {
                return ((tAA_MA_Type4Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type4Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type4Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type4RowChanged != null)) {
                    this.tAA_MA_Type4RowChanged(this, new tAA_MA_Type4RowChangeEvent(((tAA_MA_Type4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type4RowChanging != null)) {
                    this.tAA_MA_Type4RowChanging(this, new tAA_MA_Type4RowChangeEvent(((tAA_MA_Type4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type4RowDeleted != null)) {
                    this.tAA_MA_Type4RowDeleted(this, new tAA_MA_Type4RowChangeEvent(((tAA_MA_Type4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type4RowDeleting != null)) {
                    this.tAA_MA_Type4RowDeleting(this, new tAA_MA_Type4RowChangeEvent(((tAA_MA_Type4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type4Row(tAA_MA_Type4Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type4DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type7DataTable : global::System.Data.TypedTableBase<tAA_MA_Type7Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnBenefitCharge;
            
            private global::System.Data.DataColumn columnAssessedValue;
            
            private global::System.Data.DataColumn columnResidentialRate;
            
            private global::System.Data.DataColumn columnCommercialRate;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type7DataTable() {
                this.TableName = "tAA_MA_Type7";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type7DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type7DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitChargeColumn {
                get {
                    return this.columnBenefitCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessedValueColumn {
                get {
                    return this.columnAssessedValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidentialRateColumn {
                get {
                    return this.columnResidentialRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommercialRateColumn {
                get {
                    return this.columnCommercialRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type7Row this[int index] {
                get {
                    return ((tAA_MA_Type7Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type7RowChangeEventHandler tAA_MA_Type7RowChanging;
            
            public event tAA_MA_Type7RowChangeEventHandler tAA_MA_Type7RowChanged;
            
            public event tAA_MA_Type7RowChangeEventHandler tAA_MA_Type7RowDeleting;
            
            public event tAA_MA_Type7RowChangeEventHandler tAA_MA_Type7RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type7Row(tAA_MA_Type7Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type7Row AddtAA_MA_Type7Row(
                        int ParcelID, 
                        int MADistrictID, 
                        decimal BenefitCharge, 
                        decimal AssessedValue, 
                        decimal ResidentialRate, 
                        decimal CommercialRate, 
                        decimal TaxAmount, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        string amount, 
                        decimal OverrideAmount, 
                        bool IsExempt, 
                        bool IsOverride) {
                tAA_MA_Type7Row rowtAA_MA_Type7Row = ((tAA_MA_Type7Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        BenefitCharge,
                        AssessedValue,
                        ResidentialRate,
                        CommercialRate,
                        TaxAmount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        amount,
                        OverrideAmount,
                        IsExempt,
                        IsOverride};
                rowtAA_MA_Type7Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type7Row);
                return rowtAA_MA_Type7Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type7DataTable cln = ((tAA_MA_Type7DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type7DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnBenefitCharge = base.Columns["BenefitCharge"];
                this.columnAssessedValue = base.Columns["AssessedValue"];
                this.columnResidentialRate = base.Columns["ResidentialRate"];
                this.columnCommercialRate = base.Columns["CommercialRate"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnamount = base.Columns["amount"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnBenefitCharge = new global::System.Data.DataColumn("BenefitCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefitCharge);
                this.columnAssessedValue = new global::System.Data.DataColumn("AssessedValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessedValue);
                this.columnResidentialRate = new global::System.Data.DataColumn("ResidentialRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidentialRate);
                this.columnCommercialRate = new global::System.Data.DataColumn("CommercialRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommercialRate);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnBenefitCharge.ReadOnly = true;
                this.columnAssessedValue.ReadOnly = true;
                this.columnResidentialRate.ReadOnly = true;
                this.columnCommercialRate.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnamount.ReadOnly = true;
                this.columnamount.MaxLength = 50;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type7Row NewtAA_MA_Type7Row() {
                return ((tAA_MA_Type7Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type7Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type7Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type7RowChanged != null)) {
                    this.tAA_MA_Type7RowChanged(this, new tAA_MA_Type7RowChangeEvent(((tAA_MA_Type7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type7RowChanging != null)) {
                    this.tAA_MA_Type7RowChanging(this, new tAA_MA_Type7RowChangeEvent(((tAA_MA_Type7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type7RowDeleted != null)) {
                    this.tAA_MA_Type7RowDeleted(this, new tAA_MA_Type7RowChangeEvent(((tAA_MA_Type7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type7RowDeleting != null)) {
                    this.tAA_MA_Type7RowDeleting(this, new tAA_MA_Type7RowChangeEvent(((tAA_MA_Type7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type7Row(tAA_MA_Type7Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type7DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MA_Type8DataTable : global::System.Data.TypedTableBase<tAA_MA_Type8Row> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnBaseFee;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnOverrideAmount;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnIsOverride;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type8DataTable() {
                this.TableName = "tAA_MA_Type8";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type8DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MA_Type8DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseFeeColumn {
                get {
                    return this.columnBaseFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverrideAmountColumn {
                get {
                    return this.columnOverrideAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOverrideColumn {
                get {
                    return this.columnIsOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type8Row this[int index] {
                get {
                    return ((tAA_MA_Type8Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MA_Type8RowChangeEventHandler tAA_MA_Type8RowChanging;
            
            public event tAA_MA_Type8RowChangeEventHandler tAA_MA_Type8RowChanged;
            
            public event tAA_MA_Type8RowChangeEventHandler tAA_MA_Type8RowDeleting;
            
            public event tAA_MA_Type8RowChangeEventHandler tAA_MA_Type8RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MA_Type8Row(tAA_MA_Type8Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type8Row AddtAA_MA_Type8Row(int ParcelID, int MADistrictID, decimal BaseFee, decimal TaxAmount, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID, string amount, decimal OverrideAmount, bool IsExempt, bool IsOverride) {
                tAA_MA_Type8Row rowtAA_MA_Type8Row = ((tAA_MA_Type8Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        MADistrictID,
                        BaseFee,
                        TaxAmount,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        amount,
                        OverrideAmount,
                        IsExempt,
                        IsOverride};
                rowtAA_MA_Type8Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MA_Type8Row);
                return rowtAA_MA_Type8Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MA_Type8DataTable cln = ((tAA_MA_Type8DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MA_Type8DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnBaseFee = base.Columns["BaseFee"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnamount = base.Columns["amount"];
                this.columnOverrideAmount = base.Columns["OverrideAmount"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnIsOverride = base.Columns["IsOverride"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnBaseFee = new global::System.Data.DataColumn("BaseFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseFee);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnOverrideAmount = new global::System.Data.DataColumn("OverrideAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverrideAmount);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnIsOverride = new global::System.Data.DataColumn("IsOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOverride);
                this.columnParcelID.ReadOnly = true;
                this.columnMADistrictID.ReadOnly = true;
                this.columnBaseFee.ReadOnly = true;
                this.columnTaxAmount.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnamount.ReadOnly = true;
                this.columnamount.MaxLength = 50;
                this.columnOverrideAmount.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnIsOverride.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type8Row NewtAA_MA_Type8Row() {
                return ((tAA_MA_Type8Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MA_Type8Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MA_Type8Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MA_Type8RowChanged != null)) {
                    this.tAA_MA_Type8RowChanged(this, new tAA_MA_Type8RowChangeEvent(((tAA_MA_Type8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MA_Type8RowChanging != null)) {
                    this.tAA_MA_Type8RowChanging(this, new tAA_MA_Type8RowChangeEvent(((tAA_MA_Type8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MA_Type8RowDeleted != null)) {
                    this.tAA_MA_Type8RowDeleted(this, new tAA_MA_Type8RowChangeEvent(((tAA_MA_Type8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MA_Type8RowDeleting != null)) {
                    this.tAA_MA_Type8RowDeleting(this, new tAA_MA_Type8RowChangeEvent(((tAA_MA_Type8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MA_Type8Row(tAA_MA_Type8Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MA_Type8DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MAD_Type11DataTable : global::System.Data.TypedTableBase<tAA_MAD_Type11Row> {
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnPerAcre;
            
            private global::System.Data.DataColumn columnPerParcel;
            
            private global::System.Data.DataColumn columnMarketRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type11DataTable() {
                this.TableName = "tAA_MAD_Type11";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type11DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MAD_Type11DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerAcreColumn {
                get {
                    return this.columnPerAcre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerParcelColumn {
                get {
                    return this.columnPerParcel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketRateColumn {
                get {
                    return this.columnMarketRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type11Row this[int index] {
                get {
                    return ((tAA_MAD_Type11Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MAD_Type11RowChangeEventHandler tAA_MAD_Type11RowChanging;
            
            public event tAA_MAD_Type11RowChangeEventHandler tAA_MAD_Type11RowChanged;
            
            public event tAA_MAD_Type11RowChangeEventHandler tAA_MAD_Type11RowDeleting;
            
            public event tAA_MAD_Type11RowChangeEventHandler tAA_MAD_Type11RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MAD_Type11Row(tAA_MAD_Type11Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type11Row AddtAA_MAD_Type11Row(int MADistrictID, short RollYear, string DistrictNumber, string Description, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID, decimal PerAcre, decimal PerParcel, decimal MarketRate) {
                tAA_MAD_Type11Row rowtAA_MAD_Type11Row = ((tAA_MAD_Type11Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADistrictID,
                        RollYear,
                        DistrictNumber,
                        Description,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        PerAcre,
                        PerParcel,
                        MarketRate};
                rowtAA_MAD_Type11Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MAD_Type11Row);
                return rowtAA_MAD_Type11Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MAD_Type11DataTable cln = ((tAA_MAD_Type11DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MAD_Type11DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnPerAcre = base.Columns["PerAcre"];
                this.columnPerParcel = base.Columns["PerParcel"];
                this.columnMarketRate = base.Columns["MarketRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnPerAcre = new global::System.Data.DataColumn("PerAcre", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerAcre);
                this.columnPerParcel = new global::System.Data.DataColumn("PerParcel", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerParcel);
                this.columnMarketRate = new global::System.Data.DataColumn("MarketRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketRate);
                this.columnMADistrictID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDistrictNumber.ReadOnly = true;
                this.columnDistrictNumber.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnPerAcre.ReadOnly = true;
                this.columnPerParcel.ReadOnly = true;
                this.columnMarketRate.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type11Row NewtAA_MAD_Type11Row() {
                return ((tAA_MAD_Type11Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MAD_Type11Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MAD_Type11Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MAD_Type11RowChanged != null)) {
                    this.tAA_MAD_Type11RowChanged(this, new tAA_MAD_Type11RowChangeEvent(((tAA_MAD_Type11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MAD_Type11RowChanging != null)) {
                    this.tAA_MAD_Type11RowChanging(this, new tAA_MAD_Type11RowChangeEvent(((tAA_MAD_Type11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MAD_Type11RowDeleted != null)) {
                    this.tAA_MAD_Type11RowDeleted(this, new tAA_MAD_Type11RowChangeEvent(((tAA_MAD_Type11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MAD_Type11RowDeleting != null)) {
                    this.tAA_MAD_Type11RowDeleting(this, new tAA_MAD_Type11RowChangeEvent(((tAA_MAD_Type11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MAD_Type11Row(tAA_MAD_Type11Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MAD_Type11DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MAD_Type12DataTable : global::System.Data.TypedTableBase<tAA_MAD_Type12Row> {
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnBaseFee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type12DataTable() {
                this.TableName = "tAA_MAD_Type12";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type12DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MAD_Type12DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseFeeColumn {
                get {
                    return this.columnBaseFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type12Row this[int index] {
                get {
                    return ((tAA_MAD_Type12Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MAD_Type12RowChangeEventHandler tAA_MAD_Type12RowChanging;
            
            public event tAA_MAD_Type12RowChangeEventHandler tAA_MAD_Type12RowChanged;
            
            public event tAA_MAD_Type12RowChangeEventHandler tAA_MAD_Type12RowDeleting;
            
            public event tAA_MAD_Type12RowChangeEventHandler tAA_MAD_Type12RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MAD_Type12Row(tAA_MAD_Type12Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type12Row AddtAA_MAD_Type12Row(int MADistrictID, short RollYear, string DistrictNumber, string Description, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID, decimal BaseFee) {
                tAA_MAD_Type12Row rowtAA_MAD_Type12Row = ((tAA_MAD_Type12Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADistrictID,
                        RollYear,
                        DistrictNumber,
                        Description,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        BaseFee};
                rowtAA_MAD_Type12Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MAD_Type12Row);
                return rowtAA_MAD_Type12Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MAD_Type12DataTable cln = ((tAA_MAD_Type12DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MAD_Type12DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnBaseFee = base.Columns["BaseFee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnBaseFee = new global::System.Data.DataColumn("BaseFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseFee);
                this.columnMADistrictID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDistrictNumber.ReadOnly = true;
                this.columnDistrictNumber.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnBaseFee.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type12Row NewtAA_MAD_Type12Row() {
                return ((tAA_MAD_Type12Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MAD_Type12Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MAD_Type12Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MAD_Type12RowChanged != null)) {
                    this.tAA_MAD_Type12RowChanged(this, new tAA_MAD_Type12RowChangeEvent(((tAA_MAD_Type12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MAD_Type12RowChanging != null)) {
                    this.tAA_MAD_Type12RowChanging(this, new tAA_MAD_Type12RowChangeEvent(((tAA_MAD_Type12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MAD_Type12RowDeleted != null)) {
                    this.tAA_MAD_Type12RowDeleted(this, new tAA_MAD_Type12RowChangeEvent(((tAA_MAD_Type12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MAD_Type12RowDeleting != null)) {
                    this.tAA_MAD_Type12RowDeleting(this, new tAA_MAD_Type12RowChangeEvent(((tAA_MAD_Type12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MAD_Type12Row(tAA_MAD_Type12Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MAD_Type12DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MAD_Type3DataTable : global::System.Data.TypedTableBase<tAA_MAD_Type3Row> {
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnMinimumCharge;
            
            private global::System.Data.DataColumn columnIsOwnerAssessed;
            
            private global::System.Data.DataColumn columnBaseFee;
            
            private global::System.Data.DataColumn columnBaseRate;
            
            private global::System.Data.DataColumn columnSiteBase;
            
            private global::System.Data.DataColumn columnSiteRate;
            
            private global::System.Data.DataColumn columnDryBase;
            
            private global::System.Data.DataColumn columnDryRate;
            
            private global::System.Data.DataColumn columnIrrigatedBase;
            
            private global::System.Data.DataColumn columnIrrigatedRate;
            
            private global::System.Data.DataColumn columnTimberBase;
            
            private global::System.Data.DataColumn columnTimberRate;
            
            private global::System.Data.DataColumn columnOtherBase;
            
            private global::System.Data.DataColumn columnOtherRate;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type3DataTable() {
                this.TableName = "tAA_MAD_Type3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MAD_Type3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinimumChargeColumn {
                get {
                    return this.columnMinimumCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOwnerAssessedColumn {
                get {
                    return this.columnIsOwnerAssessed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseFeeColumn {
                get {
                    return this.columnBaseFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseRateColumn {
                get {
                    return this.columnBaseRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteBaseColumn {
                get {
                    return this.columnSiteBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteRateColumn {
                get {
                    return this.columnSiteRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DryBaseColumn {
                get {
                    return this.columnDryBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DryRateColumn {
                get {
                    return this.columnDryRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IrrigatedBaseColumn {
                get {
                    return this.columnIrrigatedBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IrrigatedRateColumn {
                get {
                    return this.columnIrrigatedRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimberBaseColumn {
                get {
                    return this.columnTimberBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimberRateColumn {
                get {
                    return this.columnTimberRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherBaseColumn {
                get {
                    return this.columnOtherBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherRateColumn {
                get {
                    return this.columnOtherRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type3Row this[int index] {
                get {
                    return ((tAA_MAD_Type3Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MAD_Type3RowChangeEventHandler tAA_MAD_Type3RowChanging;
            
            public event tAA_MAD_Type3RowChangeEventHandler tAA_MAD_Type3RowChanged;
            
            public event tAA_MAD_Type3RowChangeEventHandler tAA_MAD_Type3RowDeleting;
            
            public event tAA_MAD_Type3RowChangeEventHandler tAA_MAD_Type3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MAD_Type3Row(tAA_MAD_Type3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type3Row AddtAA_MAD_Type3Row(
                        int MADistrictID, 
                        short RollYear, 
                        string DistrictNumber, 
                        string Description, 
                        decimal MinimumCharge, 
                        bool IsOwnerAssessed, 
                        decimal BaseFee, 
                        decimal BaseRate, 
                        decimal SiteBase, 
                        decimal SiteRate, 
                        decimal DryBase, 
                        decimal DryRate, 
                        decimal IrrigatedBase, 
                        decimal IrrigatedRate, 
                        decimal TimberBase, 
                        decimal TimberRate, 
                        decimal OtherBase, 
                        decimal OtherRate, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID) {
                tAA_MAD_Type3Row rowtAA_MAD_Type3Row = ((tAA_MAD_Type3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADistrictID,
                        RollYear,
                        DistrictNumber,
                        Description,
                        MinimumCharge,
                        IsOwnerAssessed,
                        BaseFee,
                        BaseRate,
                        SiteBase,
                        SiteRate,
                        DryBase,
                        DryRate,
                        IrrigatedBase,
                        IrrigatedRate,
                        TimberBase,
                        TimberRate,
                        OtherBase,
                        OtherRate,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID};
                rowtAA_MAD_Type3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MAD_Type3Row);
                return rowtAA_MAD_Type3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MAD_Type3DataTable cln = ((tAA_MAD_Type3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MAD_Type3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnMinimumCharge = base.Columns["MinimumCharge"];
                this.columnIsOwnerAssessed = base.Columns["IsOwnerAssessed"];
                this.columnBaseFee = base.Columns["BaseFee"];
                this.columnBaseRate = base.Columns["BaseRate"];
                this.columnSiteBase = base.Columns["SiteBase"];
                this.columnSiteRate = base.Columns["SiteRate"];
                this.columnDryBase = base.Columns["DryBase"];
                this.columnDryRate = base.Columns["DryRate"];
                this.columnIrrigatedBase = base.Columns["IrrigatedBase"];
                this.columnIrrigatedRate = base.Columns["IrrigatedRate"];
                this.columnTimberBase = base.Columns["TimberBase"];
                this.columnTimberRate = base.Columns["TimberRate"];
                this.columnOtherBase = base.Columns["OtherBase"];
                this.columnOtherRate = base.Columns["OtherRate"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMinimumCharge = new global::System.Data.DataColumn("MinimumCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimumCharge);
                this.columnIsOwnerAssessed = new global::System.Data.DataColumn("IsOwnerAssessed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOwnerAssessed);
                this.columnBaseFee = new global::System.Data.DataColumn("BaseFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseFee);
                this.columnBaseRate = new global::System.Data.DataColumn("BaseRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseRate);
                this.columnSiteBase = new global::System.Data.DataColumn("SiteBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteBase);
                this.columnSiteRate = new global::System.Data.DataColumn("SiteRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteRate);
                this.columnDryBase = new global::System.Data.DataColumn("DryBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDryBase);
                this.columnDryRate = new global::System.Data.DataColumn("DryRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDryRate);
                this.columnIrrigatedBase = new global::System.Data.DataColumn("IrrigatedBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigatedBase);
                this.columnIrrigatedRate = new global::System.Data.DataColumn("IrrigatedRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigatedRate);
                this.columnTimberBase = new global::System.Data.DataColumn("TimberBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimberBase);
                this.columnTimberRate = new global::System.Data.DataColumn("TimberRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimberRate);
                this.columnOtherBase = new global::System.Data.DataColumn("OtherBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherBase);
                this.columnOtherRate = new global::System.Data.DataColumn("OtherRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherRate);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnMADistrictID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDistrictNumber.ReadOnly = true;
                this.columnDistrictNumber.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnMinimumCharge.ReadOnly = true;
                this.columnIsOwnerAssessed.ReadOnly = true;
                this.columnBaseFee.ReadOnly = true;
                this.columnBaseRate.ReadOnly = true;
                this.columnSiteBase.ReadOnly = true;
                this.columnSiteRate.ReadOnly = true;
                this.columnDryBase.ReadOnly = true;
                this.columnDryRate.ReadOnly = true;
                this.columnIrrigatedBase.ReadOnly = true;
                this.columnIrrigatedRate.ReadOnly = true;
                this.columnTimberBase.ReadOnly = true;
                this.columnTimberRate.ReadOnly = true;
                this.columnOtherBase.ReadOnly = true;
                this.columnOtherRate.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type3Row NewtAA_MAD_Type3Row() {
                return ((tAA_MAD_Type3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MAD_Type3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MAD_Type3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MAD_Type3RowChanged != null)) {
                    this.tAA_MAD_Type3RowChanged(this, new tAA_MAD_Type3RowChangeEvent(((tAA_MAD_Type3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MAD_Type3RowChanging != null)) {
                    this.tAA_MAD_Type3RowChanging(this, new tAA_MAD_Type3RowChangeEvent(((tAA_MAD_Type3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MAD_Type3RowDeleted != null)) {
                    this.tAA_MAD_Type3RowDeleted(this, new tAA_MAD_Type3RowChangeEvent(((tAA_MAD_Type3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MAD_Type3RowDeleting != null)) {
                    this.tAA_MAD_Type3RowDeleting(this, new tAA_MAD_Type3RowChangeEvent(((tAA_MAD_Type3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MAD_Type3Row(tAA_MAD_Type3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MAD_Type3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MAD_Type4DataTable : global::System.Data.TypedTableBase<tAA_MAD_Type4Row> {
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type4DataTable() {
                this.TableName = "tAA_MAD_Type4";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type4DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MAD_Type4DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type4Row this[int index] {
                get {
                    return ((tAA_MAD_Type4Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MAD_Type4RowChangeEventHandler tAA_MAD_Type4RowChanging;
            
            public event tAA_MAD_Type4RowChangeEventHandler tAA_MAD_Type4RowChanged;
            
            public event tAA_MAD_Type4RowChangeEventHandler tAA_MAD_Type4RowDeleting;
            
            public event tAA_MAD_Type4RowChangeEventHandler tAA_MAD_Type4RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MAD_Type4Row(tAA_MAD_Type4Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type4Row AddtAA_MAD_Type4Row(int MADistrictID, short RollYear, string DistrictNumber, string Description, decimal Rate, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID) {
                tAA_MAD_Type4Row rowtAA_MAD_Type4Row = ((tAA_MAD_Type4Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADistrictID,
                        RollYear,
                        DistrictNumber,
                        Description,
                        Rate,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID};
                rowtAA_MAD_Type4Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MAD_Type4Row);
                return rowtAA_MAD_Type4Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MAD_Type4DataTable cln = ((tAA_MAD_Type4DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MAD_Type4DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnRate = base.Columns["Rate"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnMADistrictID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDistrictNumber.ReadOnly = true;
                this.columnDistrictNumber.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnRate.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type4Row NewtAA_MAD_Type4Row() {
                return ((tAA_MAD_Type4Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MAD_Type4Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MAD_Type4Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MAD_Type4RowChanged != null)) {
                    this.tAA_MAD_Type4RowChanged(this, new tAA_MAD_Type4RowChangeEvent(((tAA_MAD_Type4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MAD_Type4RowChanging != null)) {
                    this.tAA_MAD_Type4RowChanging(this, new tAA_MAD_Type4RowChangeEvent(((tAA_MAD_Type4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MAD_Type4RowDeleted != null)) {
                    this.tAA_MAD_Type4RowDeleted(this, new tAA_MAD_Type4RowChangeEvent(((tAA_MAD_Type4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MAD_Type4RowDeleting != null)) {
                    this.tAA_MAD_Type4RowDeleting(this, new tAA_MAD_Type4RowChangeEvent(((tAA_MAD_Type4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MAD_Type4Row(tAA_MAD_Type4Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MAD_Type4DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MAD_Type7DataTable : global::System.Data.TypedTableBase<tAA_MAD_Type7Row> {
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnResidentialRate;
            
            private global::System.Data.DataColumn columnCommercialRate;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type7DataTable() {
                this.TableName = "tAA_MAD_Type7";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type7DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MAD_Type7DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidentialRateColumn {
                get {
                    return this.columnResidentialRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommercialRateColumn {
                get {
                    return this.columnCommercialRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type7Row this[int index] {
                get {
                    return ((tAA_MAD_Type7Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MAD_Type7RowChangeEventHandler tAA_MAD_Type7RowChanging;
            
            public event tAA_MAD_Type7RowChangeEventHandler tAA_MAD_Type7RowChanged;
            
            public event tAA_MAD_Type7RowChangeEventHandler tAA_MAD_Type7RowDeleting;
            
            public event tAA_MAD_Type7RowChangeEventHandler tAA_MAD_Type7RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MAD_Type7Row(tAA_MAD_Type7Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type7Row AddtAA_MAD_Type7Row(int MADistrictID, short RollYear, string DistrictNumber, string Description, decimal ResidentialRate, decimal CommercialRate, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID) {
                tAA_MAD_Type7Row rowtAA_MAD_Type7Row = ((tAA_MAD_Type7Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADistrictID,
                        RollYear,
                        DistrictNumber,
                        Description,
                        ResidentialRate,
                        CommercialRate,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID};
                rowtAA_MAD_Type7Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MAD_Type7Row);
                return rowtAA_MAD_Type7Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MAD_Type7DataTable cln = ((tAA_MAD_Type7DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MAD_Type7DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnResidentialRate = base.Columns["ResidentialRate"];
                this.columnCommercialRate = base.Columns["CommercialRate"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnResidentialRate = new global::System.Data.DataColumn("ResidentialRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidentialRate);
                this.columnCommercialRate = new global::System.Data.DataColumn("CommercialRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommercialRate);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnMADistrictID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDistrictNumber.ReadOnly = true;
                this.columnDistrictNumber.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnResidentialRate.ReadOnly = true;
                this.columnCommercialRate.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type7Row NewtAA_MAD_Type7Row() {
                return ((tAA_MAD_Type7Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MAD_Type7Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MAD_Type7Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MAD_Type7RowChanged != null)) {
                    this.tAA_MAD_Type7RowChanged(this, new tAA_MAD_Type7RowChangeEvent(((tAA_MAD_Type7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MAD_Type7RowChanging != null)) {
                    this.tAA_MAD_Type7RowChanging(this, new tAA_MAD_Type7RowChangeEvent(((tAA_MAD_Type7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MAD_Type7RowDeleted != null)) {
                    this.tAA_MAD_Type7RowDeleted(this, new tAA_MAD_Type7RowChangeEvent(((tAA_MAD_Type7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MAD_Type7RowDeleting != null)) {
                    this.tAA_MAD_Type7RowDeleting(this, new tAA_MAD_Type7RowChangeEvent(((tAA_MAD_Type7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MAD_Type7Row(tAA_MAD_Type7Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MAD_Type7DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MAD_Type8DataTable : global::System.Data.TypedTableBase<tAA_MAD_Type8Row> {
            
            private global::System.Data.DataColumn columnMADistrictID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnBaseFee;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type8DataTable() {
                this.TableName = "tAA_MAD_Type8";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type8DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MAD_Type8DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADistrictIDColumn {
                get {
                    return this.columnMADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseFeeColumn {
                get {
                    return this.columnBaseFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type8Row this[int index] {
                get {
                    return ((tAA_MAD_Type8Row)(this.Rows[index]));
                }
            }
            
            public event tAA_MAD_Type8RowChangeEventHandler tAA_MAD_Type8RowChanging;
            
            public event tAA_MAD_Type8RowChangeEventHandler tAA_MAD_Type8RowChanged;
            
            public event tAA_MAD_Type8RowChangeEventHandler tAA_MAD_Type8RowDeleting;
            
            public event tAA_MAD_Type8RowChangeEventHandler tAA_MAD_Type8RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MAD_Type8Row(tAA_MAD_Type8Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type8Row AddtAA_MAD_Type8Row(int MADistrictID, short RollYear, string DistrictNumber, string Description, decimal BaseFee, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, short ModuleID) {
                tAA_MAD_Type8Row rowtAA_MAD_Type8Row = ((tAA_MAD_Type8Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADistrictID,
                        RollYear,
                        DistrictNumber,
                        Description,
                        BaseFee,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID};
                rowtAA_MAD_Type8Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MAD_Type8Row);
                return rowtAA_MAD_Type8Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MAD_Type8DataTable cln = ((tAA_MAD_Type8DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MAD_Type8DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADistrictID = base.Columns["MADistrictID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnBaseFee = base.Columns["BaseFee"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADistrictID = new global::System.Data.DataColumn("MADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADistrictID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnBaseFee = new global::System.Data.DataColumn("BaseFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseFee);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnMADistrictID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnDistrictNumber.ReadOnly = true;
                this.columnDistrictNumber.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 250;
                this.columnBaseFee.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type8Row NewtAA_MAD_Type8Row() {
                return ((tAA_MAD_Type8Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MAD_Type8Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MAD_Type8Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MAD_Type8RowChanged != null)) {
                    this.tAA_MAD_Type8RowChanged(this, new tAA_MAD_Type8RowChangeEvent(((tAA_MAD_Type8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MAD_Type8RowChanging != null)) {
                    this.tAA_MAD_Type8RowChanging(this, new tAA_MAD_Type8RowChangeEvent(((tAA_MAD_Type8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MAD_Type8RowDeleted != null)) {
                    this.tAA_MAD_Type8RowDeleted(this, new tAA_MAD_Type8RowChangeEvent(((tAA_MAD_Type8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MAD_Type8RowDeleting != null)) {
                    this.tAA_MAD_Type8RowDeleting(this, new tAA_MAD_Type8RowChangeEvent(((tAA_MAD_Type8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MAD_Type8Row(tAA_MAD_Type8Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MAD_Type8DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_TableXMLDataTable : global::System.Data.TypedTableBase<tTS_TableXMLRow> {
            
            private global::System.Data.DataColumn columnTableXML;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_TableXMLDataTable() {
                this.TableName = "tTS_TableXML";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_TableXMLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_TableXMLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TableXMLColumn {
                get {
                    return this.columnTableXML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_TableXMLRow this[int index] {
                get {
                    return ((tTS_TableXMLRow)(this.Rows[index]));
                }
            }
            
            public event tTS_TableXMLRowChangeEventHandler tTS_TableXMLRowChanging;
            
            public event tTS_TableXMLRowChangeEventHandler tTS_TableXMLRowChanged;
            
            public event tTS_TableXMLRowChangeEventHandler tTS_TableXMLRowDeleting;
            
            public event tTS_TableXMLRowChangeEventHandler tTS_TableXMLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_TableXMLRow(tTS_TableXMLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_TableXMLRow AddtTS_TableXMLRow(string TableXML) {
                tTS_TableXMLRow rowtTS_TableXMLRow = ((tTS_TableXMLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TableXML};
                rowtTS_TableXMLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_TableXMLRow);
                return rowtTS_TableXMLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_TableXMLDataTable cln = ((tTS_TableXMLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_TableXMLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTableXML = base.Columns["TableXML"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTableXML = new global::System.Data.DataColumn("TableXML", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableXML);
                this.columnTableXML.ReadOnly = true;
                this.columnTableXML.MaxLength = 426;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_TableXMLRow NewtTS_TableXMLRow() {
                return ((tTS_TableXMLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_TableXMLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_TableXMLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_TableXMLRowChanged != null)) {
                    this.tTS_TableXMLRowChanged(this, new tTS_TableXMLRowChangeEvent(((tTS_TableXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_TableXMLRowChanging != null)) {
                    this.tTS_TableXMLRowChanging(this, new tTS_TableXMLRowChangeEvent(((tTS_TableXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_TableXMLRowDeleted != null)) {
                    this.tTS_TableXMLRowDeleted(this, new tTS_TableXMLRowChangeEvent(((tTS_TableXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_TableXMLRowDeleting != null)) {
                    this.tTS_TableXMLRowDeleting(this, new tTS_TableXMLRowChangeEvent(((tTS_TableXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_TableXMLRow(tTS_TableXMLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_TableXMLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EstimateComponentDataTable : global::System.Data.TypedTableBase<EstimateComponentRow> {
            
            private global::System.Data.DataColumn columnEstimateID;
            
            private global::System.Data.DataColumn columnGroupID;
            
            private global::System.Data.DataColumn columnComponentID;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnUnits;
            
            private global::System.Data.DataColumn columnPercent;
            
            private global::System.Data.DataColumn columnQualityNumber;
            
            private global::System.Data.DataColumn columnQualityNumberFlag;
            
            private global::System.Data.DataColumn columnDeprPct;
            
            private global::System.Data.DataColumn columnDeprPctFlag;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeFlag;
            
            private global::System.Data.DataColumn columnLife;
            
            private global::System.Data.DataColumn columnLifeFlag;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnCalcDeprPct;
            
            private global::System.Data.DataColumn columnCalcCost;
            
            private global::System.Data.DataColumn columnCalcDeprCost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentDataTable() {
                this.TableName = "EstimateComponent";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EstimateComponentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EstimateComponentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateIDColumn {
                get {
                    return this.columnEstimateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupIDColumn {
                get {
                    return this.columnGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComponentIDColumn {
                get {
                    return this.columnComponentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitsColumn {
                get {
                    return this.columnUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentColumn {
                get {
                    return this.columnPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualityNumberColumn {
                get {
                    return this.columnQualityNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualityNumberFlagColumn {
                get {
                    return this.columnQualityNumberFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprPctColumn {
                get {
                    return this.columnDeprPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprPctFlagColumn {
                get {
                    return this.columnDeprPctFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeFlagColumn {
                get {
                    return this.columnAgeFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LifeColumn {
                get {
                    return this.columnLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LifeFlagColumn {
                get {
                    return this.columnLifeFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CalcDeprPctColumn {
                get {
                    return this.columnCalcDeprPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CalcCostColumn {
                get {
                    return this.columnCalcCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CalcDeprCostColumn {
                get {
                    return this.columnCalcDeprCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentRow this[int index] {
                get {
                    return ((EstimateComponentRow)(this.Rows[index]));
                }
            }
            
            public event EstimateComponentRowChangeEventHandler EstimateComponentRowChanging;
            
            public event EstimateComponentRowChangeEventHandler EstimateComponentRowChanged;
            
            public event EstimateComponentRowChangeEventHandler EstimateComponentRowDeleting;
            
            public event EstimateComponentRowChangeEventHandler EstimateComponentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEstimateComponentRow(EstimateComponentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentRow AddEstimateComponentRow(
                        int EstimateID, 
                        int GroupID, 
                        int ComponentID, 
                        int ItemID, 
                        int Units, 
                        float Percent, 
                        float QualityNumber, 
                        bool QualityNumberFlag, 
                        float DeprPct, 
                        bool DeprPctFlag, 
                        short Age, 
                        bool AgeFlag, 
                        short Life, 
                        bool LifeFlag, 
                        int ModuleID, 
                        bool IsDeleted, 
                        decimal CalcDeprPct, 
                        decimal CalcCost, 
                        decimal CalcDeprCost) {
                EstimateComponentRow rowEstimateComponentRow = ((EstimateComponentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EstimateID,
                        GroupID,
                        ComponentID,
                        ItemID,
                        Units,
                        Percent,
                        QualityNumber,
                        QualityNumberFlag,
                        DeprPct,
                        DeprPctFlag,
                        Age,
                        AgeFlag,
                        Life,
                        LifeFlag,
                        ModuleID,
                        IsDeleted,
                        CalcDeprPct,
                        CalcCost,
                        CalcDeprCost};
                rowEstimateComponentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEstimateComponentRow);
                return rowEstimateComponentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EstimateComponentDataTable cln = ((EstimateComponentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EstimateComponentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstimateID = base.Columns["EstimateID"];
                this.columnGroupID = base.Columns["GroupID"];
                this.columnComponentID = base.Columns["ComponentID"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnUnits = base.Columns["Units"];
                this.columnPercent = base.Columns["Percent"];
                this.columnQualityNumber = base.Columns["QualityNumber"];
                this.columnQualityNumberFlag = base.Columns["QualityNumberFlag"];
                this.columnDeprPct = base.Columns["DeprPct"];
                this.columnDeprPctFlag = base.Columns["DeprPctFlag"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeFlag = base.Columns["AgeFlag"];
                this.columnLife = base.Columns["Life"];
                this.columnLifeFlag = base.Columns["LifeFlag"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnCalcDeprPct = base.Columns["CalcDeprPct"];
                this.columnCalcCost = base.Columns["CalcCost"];
                this.columnCalcDeprCost = base.Columns["CalcDeprCost"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstimateID = new global::System.Data.DataColumn("EstimateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateID);
                this.columnGroupID = new global::System.Data.DataColumn("GroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupID);
                this.columnComponentID = new global::System.Data.DataColumn("ComponentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComponentID);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnUnits = new global::System.Data.DataColumn("Units", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnits);
                this.columnPercent = new global::System.Data.DataColumn("Percent", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercent);
                this.columnQualityNumber = new global::System.Data.DataColumn("QualityNumber", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualityNumber);
                this.columnQualityNumberFlag = new global::System.Data.DataColumn("QualityNumberFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualityNumberFlag);
                this.columnDeprPct = new global::System.Data.DataColumn("DeprPct", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprPct);
                this.columnDeprPctFlag = new global::System.Data.DataColumn("DeprPctFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprPctFlag);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeFlag = new global::System.Data.DataColumn("AgeFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeFlag);
                this.columnLife = new global::System.Data.DataColumn("Life", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLife);
                this.columnLifeFlag = new global::System.Data.DataColumn("LifeFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLifeFlag);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnCalcDeprPct = new global::System.Data.DataColumn("CalcDeprPct", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalcDeprPct);
                this.columnCalcCost = new global::System.Data.DataColumn("CalcCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalcCost);
                this.columnCalcDeprCost = new global::System.Data.DataColumn("CalcDeprCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalcDeprCost);
                this.columnEstimateID.ReadOnly = true;
                this.columnGroupID.ReadOnly = true;
                this.columnComponentID.ReadOnly = true;
                this.columnItemID.ReadOnly = true;
                this.columnUnits.ReadOnly = true;
                this.columnPercent.ReadOnly = true;
                this.columnQualityNumber.ReadOnly = true;
                this.columnQualityNumberFlag.ReadOnly = true;
                this.columnDeprPct.ReadOnly = true;
                this.columnDeprPctFlag.ReadOnly = true;
                this.columnAge.ReadOnly = true;
                this.columnAgeFlag.ReadOnly = true;
                this.columnLife.ReadOnly = true;
                this.columnLifeFlag.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnCalcDeprPct.ReadOnly = true;
                this.columnCalcCost.ReadOnly = true;
                this.columnCalcDeprCost.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentRow NewEstimateComponentRow() {
                return ((EstimateComponentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EstimateComponentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EstimateComponentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EstimateComponentRowChanged != null)) {
                    this.EstimateComponentRowChanged(this, new EstimateComponentRowChangeEvent(((EstimateComponentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EstimateComponentRowChanging != null)) {
                    this.EstimateComponentRowChanging(this, new EstimateComponentRowChangeEvent(((EstimateComponentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EstimateComponentRowDeleted != null)) {
                    this.EstimateComponentRowDeleted(this, new EstimateComponentRowChangeEvent(((EstimateComponentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EstimateComponentRowDeleting != null)) {
                    this.EstimateComponentRowDeleting(this, new EstimateComponentRowChangeEvent(((EstimateComponentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEstimateComponentRow(EstimateComponentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EstimateComponentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_LandCodeDataTable : global::System.Data.TypedTableBase<tAA_LandCodeRow> {
            
            private global::System.Data.DataColumn columnLandCodeID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnLandTypeID1;
            
            private global::System.Data.DataColumn columnLandTypeID2;
            
            private global::System.Data.DataColumn columnLandTypeID3;
            
            private global::System.Data.DataColumn columnLandCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnReportAS;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandCodeDataTable() {
                this.TableName = "tAA_LandCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandCodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_LandCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandCodeIDColumn {
                get {
                    return this.columnLandCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID1Column {
                get {
                    return this.columnLandTypeID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID2Column {
                get {
                    return this.columnLandTypeID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID3Column {
                get {
                    return this.columnLandTypeID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandCodeColumn {
                get {
                    return this.columnLandCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportASColumn {
                get {
                    return this.columnReportAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandCodeRow this[int index] {
                get {
                    return ((tAA_LandCodeRow)(this.Rows[index]));
                }
            }
            
            public event tAA_LandCodeRowChangeEventHandler tAA_LandCodeRowChanging;
            
            public event tAA_LandCodeRowChangeEventHandler tAA_LandCodeRowChanged;
            
            public event tAA_LandCodeRowChangeEventHandler tAA_LandCodeRowDeleting;
            
            public event tAA_LandCodeRowChangeEventHandler tAA_LandCodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_LandCodeRow(tAA_LandCodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandCodeRow AddtAA_LandCodeRow(int LandCodeID, short RollYear, int LandTypeID1, int LandTypeID2, int LandTypeID3, string LandCode, string Description, string ReportAS, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tAA_LandCodeRow rowtAA_LandCodeRow = ((tAA_LandCodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LandCodeID,
                        RollYear,
                        LandTypeID1,
                        LandTypeID2,
                        LandTypeID3,
                        LandCode,
                        Description,
                        ReportAS,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_LandCodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_LandCodeRow);
                return rowtAA_LandCodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_LandCodeDataTable cln = ((tAA_LandCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_LandCodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLandCodeID = base.Columns["LandCodeID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnLandTypeID1 = base.Columns["LandTypeID1"];
                this.columnLandTypeID2 = base.Columns["LandTypeID2"];
                this.columnLandTypeID3 = base.Columns["LandTypeID3"];
                this.columnLandCode = base.Columns["LandCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnReportAS = base.Columns["ReportAS"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLandCodeID = new global::System.Data.DataColumn("LandCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCodeID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnLandTypeID1 = new global::System.Data.DataColumn("LandTypeID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID1);
                this.columnLandTypeID2 = new global::System.Data.DataColumn("LandTypeID2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID2);
                this.columnLandTypeID3 = new global::System.Data.DataColumn("LandTypeID3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID3);
                this.columnLandCode = new global::System.Data.DataColumn("LandCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnReportAS = new global::System.Data.DataColumn("ReportAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportAS);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnLandCodeID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnLandTypeID1.ReadOnly = true;
                this.columnLandTypeID2.ReadOnly = true;
                this.columnLandTypeID3.ReadOnly = true;
                this.columnLandCode.ReadOnly = true;
                this.columnLandCode.MaxLength = 20;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 50;
                this.columnReportAS.ReadOnly = true;
                this.columnReportAS.MaxLength = 20;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandCodeRow NewtAA_LandCodeRow() {
                return ((tAA_LandCodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_LandCodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_LandCodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_LandCodeRowChanged != null)) {
                    this.tAA_LandCodeRowChanged(this, new tAA_LandCodeRowChangeEvent(((tAA_LandCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_LandCodeRowChanging != null)) {
                    this.tAA_LandCodeRowChanging(this, new tAA_LandCodeRowChangeEvent(((tAA_LandCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_LandCodeRowDeleted != null)) {
                    this.tAA_LandCodeRowDeleted(this, new tAA_LandCodeRowChangeEvent(((tAA_LandCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_LandCodeRowDeleting != null)) {
                    this.tAA_LandCodeRowDeleting(this, new tAA_LandCodeRowChangeEvent(((tAA_LandCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_LandCodeRow(tAA_LandCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_LandCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ParcelIDsDataTable : global::System.Data.TypedTableBase<ParcelIDsRow> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParcelIDsDataTable() {
                this.TableName = "ParcelIDs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ParcelIDsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ParcelIDsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParcelIDsRow this[int index] {
                get {
                    return ((ParcelIDsRow)(this.Rows[index]));
                }
            }
            
            public event ParcelIDsRowChangeEventHandler ParcelIDsRowChanging;
            
            public event ParcelIDsRowChangeEventHandler ParcelIDsRowChanged;
            
            public event ParcelIDsRowChangeEventHandler ParcelIDsRowDeleting;
            
            public event ParcelIDsRowChangeEventHandler ParcelIDsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddParcelIDsRow(ParcelIDsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParcelIDsRow AddParcelIDsRow() {
                ParcelIDsRow rowParcelIDsRow = ((ParcelIDsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                rowParcelIDsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowParcelIDsRow);
                return rowParcelIDsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ParcelIDsDataTable cln = ((ParcelIDsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ParcelIDsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnParcelID.AutoIncrement = true;
                this.columnParcelID.AllowDBNull = false;
                this.columnParcelID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParcelIDsRow NewParcelIDsRow() {
                return ((ParcelIDsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ParcelIDsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ParcelIDsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ParcelIDsRowChanged != null)) {
                    this.ParcelIDsRowChanged(this, new ParcelIDsRowChangeEvent(((ParcelIDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ParcelIDsRowChanging != null)) {
                    this.ParcelIDsRowChanging(this, new ParcelIDsRowChangeEvent(((ParcelIDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ParcelIDsRowDeleted != null)) {
                    this.ParcelIDsRowDeleted(this, new ParcelIDsRowChangeEvent(((ParcelIDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ParcelIDsRowDeleting != null)) {
                    this.ParcelIDsRowDeleting(this, new ParcelIDsRowChangeEvent(((ParcelIDsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveParcelIDsRow(ParcelIDsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ParcelIDsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InsertXmlDataTable : global::System.Data.TypedTableBase<InsertXmlRow> {
            
            private global::System.Data.DataColumn columnChkInInsertXML;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsertXmlDataTable() {
                this.TableName = "InsertXml";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InsertXmlDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InsertXmlDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChkInInsertXMLColumn {
                get {
                    return this.columnChkInInsertXML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsertXmlRow this[int index] {
                get {
                    return ((InsertXmlRow)(this.Rows[index]));
                }
            }
            
            public event InsertXmlRowChangeEventHandler InsertXmlRowChanging;
            
            public event InsertXmlRowChangeEventHandler InsertXmlRowChanged;
            
            public event InsertXmlRowChangeEventHandler InsertXmlRowDeleting;
            
            public event InsertXmlRowChangeEventHandler InsertXmlRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInsertXmlRow(InsertXmlRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsertXmlRow AddInsertXmlRow(string ChkInInsertXML) {
                InsertXmlRow rowInsertXmlRow = ((InsertXmlRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChkInInsertXML};
                rowInsertXmlRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInsertXmlRow);
                return rowInsertXmlRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InsertXmlDataTable cln = ((InsertXmlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InsertXmlDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnChkInInsertXML = base.Columns["ChkInInsertXML"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnChkInInsertXML = new global::System.Data.DataColumn("ChkInInsertXML", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChkInInsertXML);
                this.columnChkInInsertXML.ReadOnly = true;
                this.columnChkInInsertXML.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsertXmlRow NewInsertXmlRow() {
                return ((InsertXmlRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InsertXmlRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InsertXmlRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InsertXmlRowChanged != null)) {
                    this.InsertXmlRowChanged(this, new InsertXmlRowChangeEvent(((InsertXmlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InsertXmlRowChanging != null)) {
                    this.InsertXmlRowChanging(this, new InsertXmlRowChangeEvent(((InsertXmlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InsertXmlRowDeleted != null)) {
                    this.InsertXmlRowDeleted(this, new InsertXmlRowChangeEvent(((InsertXmlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InsertXmlRowDeleting != null)) {
                    this.InsertXmlRowDeleting(this, new InsertXmlRowChangeEvent(((InsertXmlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInsertXmlRow(InsertXmlRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InsertXmlDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ChecoutDetailsXMLDataTable : global::System.Data.TypedTableBase<ChecoutDetailsXMLRow> {
            
            private global::System.Data.DataColumn columnCheckOutDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChecoutDetailsXMLDataTable() {
                this.TableName = "ChecoutDetailsXML";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ChecoutDetailsXMLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ChecoutDetailsXMLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckOutDetailsColumn {
                get {
                    return this.columnCheckOutDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChecoutDetailsXMLRow this[int index] {
                get {
                    return ((ChecoutDetailsXMLRow)(this.Rows[index]));
                }
            }
            
            public event ChecoutDetailsXMLRowChangeEventHandler ChecoutDetailsXMLRowChanging;
            
            public event ChecoutDetailsXMLRowChangeEventHandler ChecoutDetailsXMLRowChanged;
            
            public event ChecoutDetailsXMLRowChangeEventHandler ChecoutDetailsXMLRowDeleting;
            
            public event ChecoutDetailsXMLRowChangeEventHandler ChecoutDetailsXMLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddChecoutDetailsXMLRow(ChecoutDetailsXMLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChecoutDetailsXMLRow AddChecoutDetailsXMLRow(string CheckOutDetails) {
                ChecoutDetailsXMLRow rowChecoutDetailsXMLRow = ((ChecoutDetailsXMLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CheckOutDetails};
                rowChecoutDetailsXMLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowChecoutDetailsXMLRow);
                return rowChecoutDetailsXMLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ChecoutDetailsXMLDataTable cln = ((ChecoutDetailsXMLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ChecoutDetailsXMLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCheckOutDetails = base.Columns["CheckOutDetails"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCheckOutDetails = new global::System.Data.DataColumn("CheckOutDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckOutDetails);
                this.columnCheckOutDetails.ReadOnly = true;
                this.columnCheckOutDetails.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChecoutDetailsXMLRow NewChecoutDetailsXMLRow() {
                return ((ChecoutDetailsXMLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ChecoutDetailsXMLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ChecoutDetailsXMLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ChecoutDetailsXMLRowChanged != null)) {
                    this.ChecoutDetailsXMLRowChanged(this, new ChecoutDetailsXMLRowChangeEvent(((ChecoutDetailsXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ChecoutDetailsXMLRowChanging != null)) {
                    this.ChecoutDetailsXMLRowChanging(this, new ChecoutDetailsXMLRowChangeEvent(((ChecoutDetailsXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ChecoutDetailsXMLRowDeleted != null)) {
                    this.ChecoutDetailsXMLRowDeleted(this, new ChecoutDetailsXMLRowChangeEvent(((ChecoutDetailsXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ChecoutDetailsXMLRowDeleting != null)) {
                    this.ChecoutDetailsXMLRowDeleting(this, new ChecoutDetailsXMLRowChangeEvent(((ChecoutDetailsXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveChecoutDetailsXMLRow(ChecoutDetailsXMLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3230CheckInData ds = new F3230CheckInData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ChecoutDetailsXMLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_CommentRow : global::System.Data.DataRow {
            
            private tTS_CommentDataTable tabletTS_Comment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_CommentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_Comment = ((tTS_CommentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CommentID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Comment.CommentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommentID\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.CommentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Comment.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KeyID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Comment.KeyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeyID\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.KeyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CommentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_Comment.CommentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommentDate\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.CommentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Comment.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Comment.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPublic {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Comment.IsPublicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPublic\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.IsPublicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WillPrint {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Comment.WillPrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WillPrint\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.WillPrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoll {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Comment.IsRollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRoll\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.IsRollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHighPriority {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Comment.IsHighPriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHighPriority\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.IsHighPriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Comment.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_Comment.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Comment.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Comment.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_Comment.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CommentPriorityID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_Comment.CommentPriorityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommentPriorityID\' in table \'tTS_Comment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Comment.CommentPriorityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentIDNull() {
                return this.IsNull(this.tabletTS_Comment.CommentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentIDNull() {
                this[this.tabletTS_Comment.CommentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tabletTS_Comment.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tabletTS_Comment.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeyIDNull() {
                return this.IsNull(this.tabletTS_Comment.KeyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeyIDNull() {
                this[this.tabletTS_Comment.KeyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentDateNull() {
                return this.IsNull(this.tabletTS_Comment.CommentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentDateNull() {
                this[this.tabletTS_Comment.CommentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tabletTS_Comment.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tabletTS_Comment.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tabletTS_Comment.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tabletTS_Comment.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPublicNull() {
                return this.IsNull(this.tabletTS_Comment.IsPublicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPublicNull() {
                this[this.tabletTS_Comment.IsPublicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWillPrintNull() {
                return this.IsNull(this.tabletTS_Comment.WillPrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWillPrintNull() {
                this[this.tabletTS_Comment.WillPrintColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRollNull() {
                return this.IsNull(this.tabletTS_Comment.IsRollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRollNull() {
                this[this.tabletTS_Comment.IsRollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsHighPriorityNull() {
                return this.IsNull(this.tabletTS_Comment.IsHighPriorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsHighPriorityNull() {
                this[this.tabletTS_Comment.IsHighPriorityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_Comment.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_Comment.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_Comment.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_Comment.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_Comment.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_Comment.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_Comment.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_Comment.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_Comment.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_Comment.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentPriorityIDNull() {
                return this.IsNull(this.tabletTS_Comment.CommentPriorityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentPriorityIDNull() {
                this[this.tabletTS_Comment.CommentPriorityIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EstimateComponentGroupRow : global::System.Data.DataRow {
            
            private EstimateComponentGroupDataTable tableEstimateComponentGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EstimateComponentGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEstimateComponentGroup = ((EstimateComponentGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GroupID {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponentGroup.GroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupID\' in table \'EstimateComponentGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.GroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimateID {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponentGroup.EstimateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateID\' in table \'EstimateComponentGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.EstimateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GroupTypeID {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponentGroup.GroupTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupTypeID\' in table \'EstimateComponentGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.GroupTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableEstimateComponentGroup.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'EstimateComponentGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Size {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponentGroup.SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size\' in table \'EstimateComponentGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float QualityNumber {
                get {
                    try {
                        return ((float)(this[this.tableEstimateComponentGroup.QualityNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QualityNumber\' in table \'EstimateComponentGroup\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.QualityNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool QualityNumberFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimateComponentGroup.QualityNumberFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QualityNumberFlag\' in table \'EstimateComponentGroup\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.QualityNumberFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Age {
                get {
                    try {
                        return ((float)(this[this.tableEstimateComponentGroup.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'EstimateComponentGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AgeFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimateComponentGroup.AgeFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeFlag\' in table \'EstimateComponentGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.AgeFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Life {
                get {
                    try {
                        return ((float)(this[this.tableEstimateComponentGroup.LifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Life\' in table \'EstimateComponentGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.LifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LifeFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimateComponentGroup.LifeFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LifeFlag\' in table \'EstimateComponentGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.LifeFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DepreciationPercent {
                get {
                    try {
                        return ((float)(this[this.tableEstimateComponentGroup.DepreciationPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepreciationPercent\' in table \'EstimateComponentGroup\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.DepreciationPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DepreciationPercentFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimateComponentGroup.DepreciationPercentFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepreciationPercentFlag\' in table \'EstimateComponentGroup\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.DepreciationPercentFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TagalongWidth {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponentGroup.TagalongWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TagalongWidth\' in table \'EstimateComponentGroup\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.TagalongWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TagalongLength {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponentGroup.TagalongLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TagalongLength\' in table \'EstimateComponentGroup\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableEstimateComponentGroup.TagalongLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupIDNull() {
                return this.IsNull(this.tableEstimateComponentGroup.GroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupIDNull() {
                this[this.tableEstimateComponentGroup.GroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateIDNull() {
                return this.IsNull(this.tableEstimateComponentGroup.EstimateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateIDNull() {
                this[this.tableEstimateComponentGroup.EstimateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupTypeIDNull() {
                return this.IsNull(this.tableEstimateComponentGroup.GroupTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupTypeIDNull() {
                this[this.tableEstimateComponentGroup.GroupTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableEstimateComponentGroup.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableEstimateComponentGroup.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeNull() {
                return this.IsNull(this.tableEstimateComponentGroup.SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeNull() {
                this[this.tableEstimateComponentGroup.SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualityNumberNull() {
                return this.IsNull(this.tableEstimateComponentGroup.QualityNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualityNumberNull() {
                this[this.tableEstimateComponentGroup.QualityNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualityNumberFlagNull() {
                return this.IsNull(this.tableEstimateComponentGroup.QualityNumberFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualityNumberFlagNull() {
                this[this.tableEstimateComponentGroup.QualityNumberFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeNull() {
                return this.IsNull(this.tableEstimateComponentGroup.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeNull() {
                this[this.tableEstimateComponentGroup.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeFlagNull() {
                return this.IsNull(this.tableEstimateComponentGroup.AgeFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeFlagNull() {
                this[this.tableEstimateComponentGroup.AgeFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLifeNull() {
                return this.IsNull(this.tableEstimateComponentGroup.LifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLifeNull() {
                this[this.tableEstimateComponentGroup.LifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLifeFlagNull() {
                return this.IsNull(this.tableEstimateComponentGroup.LifeFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLifeFlagNull() {
                this[this.tableEstimateComponentGroup.LifeFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepreciationPercentNull() {
                return this.IsNull(this.tableEstimateComponentGroup.DepreciationPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepreciationPercentNull() {
                this[this.tableEstimateComponentGroup.DepreciationPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepreciationPercentFlagNull() {
                return this.IsNull(this.tableEstimateComponentGroup.DepreciationPercentFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepreciationPercentFlagNull() {
                this[this.tableEstimateComponentGroup.DepreciationPercentFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTagalongWidthNull() {
                return this.IsNull(this.tableEstimateComponentGroup.TagalongWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTagalongWidthNull() {
                this[this.tableEstimateComponentGroup.TagalongWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTagalongLengthNull() {
                return this.IsNull(this.tableEstimateComponentGroup.TagalongLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTagalongLengthNull() {
                this[this.tableEstimateComponentGroup.TagalongLengthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EstimateRow : global::System.Data.DataRow {
            
            private EstimateDataTable tableEstimate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EstimateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEstimate = ((EstimateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableEstimate.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int customer_id {
                get {
                    try {
                        return ((int)(this[this.tableEstimate.customer_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'customer_id\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.customer_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EstimateCode {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.EstimateCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateCode\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.EstimateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CategoryID {
                get {
                    try {
                        return ((int)(this[this.tableEstimate.CategoryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.CategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyOwner {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.PropertyOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyOwner\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.PropertyOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyAddress {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.PropertyAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyAddress\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.PropertyAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyCity {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.PropertyCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyCity\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.PropertyCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyState {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.PropertyStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyState\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.PropertyStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyZipcode {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.PropertyZipcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyZipcode\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.PropertyZipcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SurveyDateFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.SurveyDateFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyDateFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.SurveyDateFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConstTypeID {
                get {
                    try {
                        return ((int)(this[this.tableEstimate.ConstTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConstTypeID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ConstTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SurveyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.SurveyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.SurveyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SurveyedBy {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.SurveyedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyedBy\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.SurveyedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserDefined1 {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.UserDefined1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserDefined1\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.UserDefined1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserDefined2 {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.UserDefined2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserDefined2\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.UserDefined2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserDefined3 {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.UserDefined3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserDefined3\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.UserDefined3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserDefined4 {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.UserDefined4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserDefined4\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.UserDefined4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserDefined5 {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.UserDefined5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserDefined5\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.UserDefined5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UserDefinedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.UserDefinedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserDefinedDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.UserDefinedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LocalMultiplierFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.LocalMultiplierFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalMultiplierFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.LocalMultiplierFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float LocalMultiplier {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.LocalMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalMultiplier\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.LocalMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LocalMultiplierAdjPctFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.LocalMultiplierAdjPctFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalMultiplierAdjPctFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.LocalMultiplierAdjPctFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float LocalMultiplierAdjPct {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.LocalMultiplierAdjPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalMultiplierAdjPct\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.LocalMultiplierAdjPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ArchitectsFeePctFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.ArchitectsFeePctFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArchitectsFeePctFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ArchitectsFeePctFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ArchitectsFeePct {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.ArchitectsFeePctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArchitectsFeePct\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ArchitectsFeePctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RoundingValueFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.RoundingValueFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoundingValueFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.RoundingValueFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float RoundingValue {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.RoundingValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoundingValue\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.RoundingValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ReportDateFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.ReportDateFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportDateFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ReportDateFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.ReportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ReportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SingleLineBackDateFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.SingleLineBackDateFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SingleLineBackDateFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.SingleLineBackDateFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SingleLineBackDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.SingleLineBackDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SingleLineBackDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.SingleLineBackDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BaseDateFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.BaseDateFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseDateFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.BaseDateFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BaseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.BaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.BaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EffectiveAgeAdjValueFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.EffectiveAgeAdjValueFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveAgeAdjValueFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.EffectiveAgeAdjValueFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float EffectiveAgeAdjValue {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.EffectiveAgeAdjValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveAgeAdjValue\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.EffectiveAgeAdjValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DepreciationPctAdjValueFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.DepreciationPctAdjValueFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepreciationPctAdjValueFlag\' in table \'Estimate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEstimate.DepreciationPctAdjValueFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DepreciationPctAdjValue {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.DepreciationPctAdjValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepreciationPctAdjValue\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DepreciationPctAdjValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EnergyAdjIDFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.EnergyAdjIDFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyAdjIDFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.EnergyAdjIDFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short EnergyAdjID {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.EnergyAdjIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyAdjID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.EnergyAdjIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FoundationAdjIDFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.FoundationAdjIDFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FoundationAdjIDFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.FoundationAdjIDFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FoundationAdjID {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.FoundationAdjIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FoundationAdjID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.FoundationAdjIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FloorInsulAdjIDFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.FloorInsulAdjIDFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FloorInsulAdjIDFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.FloorInsulAdjIDFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FloorInsulAdjID {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.FloorInsulAdjIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FloorInsulAdjID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.FloorInsulAdjIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HillsideAdjIDFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.HillsideAdjIDFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HillsideAdjIDFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.HillsideAdjIDFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short HillsideAdjID {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.HillsideAdjIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HillsideAdjID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.HillsideAdjIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SeismicAdjIDFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.SeismicAdjIDFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeismicAdjIDFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.SeismicAdjIDFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SeismicAdjID {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.SeismicAdjIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeismicAdjID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.SeismicAdjIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WindAdjIDFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.WindAdjIDFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindAdjIDFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.WindAdjIDFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short WindAdjID {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.WindAdjIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindAdjID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.WindAdjIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StoryHeightFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.StoryHeightFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoryHeightFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.StoryHeightFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float StoryHeight {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.StoryHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoryHeight\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.StoryHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BasementDepthFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.BasementDepthFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BasementDepthFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.BasementDepthFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float BasementDepth {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.BasementDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BasementDepth\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.BasementDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ResTypeNameFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.ResTypeNameFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResTypeNameFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ResTypeNameFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResTypeName {
                get {
                    try {
                        return ((string)(this[this.tableEstimate.ResTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResTypeName\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ResTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResidenceTypeID {
                get {
                    try {
                        return ((int)(this[this.tableEstimate.ResidenceTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidenceTypeID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ResidenceTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Style1ID {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.Style1IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style1ID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.Style1IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Style1Percent {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.Style1PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style1Percent\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.Style1PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Style2ID {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.Style2IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style2ID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.Style2IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Style2Percent {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.Style2PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style2Percent\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.Style2PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float TotalFloorArea {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.TotalFloorAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalFloorArea\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.TotalFloorAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ApartmentUnits {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.ApartmentUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApartmentUnits\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ApartmentUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float QualityValue {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.QualityValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QualityValue\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.QualityValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ConditionValue {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.ConditionValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConditionValue\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ConditionValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short EffectiveAge {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.EffectiveAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveAge\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.EffectiveAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short TypicalLife {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.TypicalLifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypicalLife\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.TypicalLifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DeprecPhyFunDollars {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.DeprecPhyFunDollarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprecPhyFunDollars\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DeprecPhyFunDollarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DeprecPhysicalDollars {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.DeprecPhysicalDollarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprecPhysicalDollars\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DeprecPhysicalDollarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DeprecFunctionalDollars {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.DeprecFunctionalDollarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprecFunctionalDollars\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DeprecFunctionalDollarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DeprecExternalDollars {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.DeprecExternalDollarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprecExternalDollars\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DeprecExternalDollarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DeprecPhyFunPct {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.DeprecPhyFunPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprecPhyFunPct\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DeprecPhyFunPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DeprecPhysicalPct {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.DeprecPhysicalPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprecPhysicalPct\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DeprecPhysicalPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DeprecFunctionalPct {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.DeprecFunctionalPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprecFunctionalPct\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DeprecFunctionalPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DeprecExternalPct {
                get {
                    try {
                        return ((float)(this[this.tableEstimate.DeprecExternalPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprecExternalPct\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DeprecExternalPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DeprecTypeID {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.DeprecTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprecTypeID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DeprecTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DeprecPercentFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.DeprecPercentFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprecPercentFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.DeprecPercentFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.CreateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.ModifyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifyDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ModifyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CalculateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.CalculateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalculateDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.CalculateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PrintDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.PrintDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.PrintDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ImportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.ImportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.ImportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CalcCostDataDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.CalcCostDataDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalcCostDataDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.CalcCostDataDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CostAsOf {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.CostAsOfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostAsOf\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.CostAsOfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastOpenedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEstimate.LastOpenedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastOpenedDate\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.LastOpenedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Style1Length {
                get {
                    try {
                        return ((int)(this[this.tableEstimate.Style1LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style1Length\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.Style1LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Style1Width {
                get {
                    try {
                        return ((int)(this[this.tableEstimate.Style1WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style1Width\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.Style1WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Style2Length {
                get {
                    try {
                        return ((int)(this[this.tableEstimate.Style2LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style2Length\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.Style2LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Style2Width {
                get {
                    try {
                        return ((int)(this[this.tableEstimate.Style2WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style2Width\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.Style2WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WallEnergyAdjIDFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.WallEnergyAdjIDFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WallEnergyAdjIDFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.WallEnergyAdjIDFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short WallEnergyAdjID {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.WallEnergyAdjIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WallEnergyAdjID\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.WallEnergyAdjIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RegionalMultiplierFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.RegionalMultiplierFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionalMultiplierFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.RegionalMultiplierFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RegionalMultiplier {
                get {
                    try {
                        return ((double)(this[this.tableEstimate.RegionalMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionalMultiplier\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.RegionalMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MfgMultiplierFlag {
                get {
                    try {
                        return ((short)(this[this.tableEstimate.MfgMultiplierFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MfgMultiplierFlag\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.MfgMultiplierFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tableEstimate.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimate.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableEstimate.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableEstimate.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscustomer_idNull() {
                return this.IsNull(this.tableEstimate.customer_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcustomer_idNull() {
                this[this.tableEstimate.customer_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateCodeNull() {
                return this.IsNull(this.tableEstimate.EstimateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateCodeNull() {
                this[this.tableEstimate.EstimateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryIDNull() {
                return this.IsNull(this.tableEstimate.CategoryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryIDNull() {
                this[this.tableEstimate.CategoryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableEstimate.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableEstimate.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyOwnerNull() {
                return this.IsNull(this.tableEstimate.PropertyOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyOwnerNull() {
                this[this.tableEstimate.PropertyOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyAddressNull() {
                return this.IsNull(this.tableEstimate.PropertyAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyAddressNull() {
                this[this.tableEstimate.PropertyAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyCityNull() {
                return this.IsNull(this.tableEstimate.PropertyCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyCityNull() {
                this[this.tableEstimate.PropertyCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyStateNull() {
                return this.IsNull(this.tableEstimate.PropertyStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyStateNull() {
                this[this.tableEstimate.PropertyStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyZipcodeNull() {
                return this.IsNull(this.tableEstimate.PropertyZipcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyZipcodeNull() {
                this[this.tableEstimate.PropertyZipcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurveyDateFlagNull() {
                return this.IsNull(this.tableEstimate.SurveyDateFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurveyDateFlagNull() {
                this[this.tableEstimate.SurveyDateFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConstTypeIDNull() {
                return this.IsNull(this.tableEstimate.ConstTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConstTypeIDNull() {
                this[this.tableEstimate.ConstTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurveyDateNull() {
                return this.IsNull(this.tableEstimate.SurveyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurveyDateNull() {
                this[this.tableEstimate.SurveyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurveyedByNull() {
                return this.IsNull(this.tableEstimate.SurveyedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurveyedByNull() {
                this[this.tableEstimate.SurveyedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableEstimate.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableEstimate.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserDefined1Null() {
                return this.IsNull(this.tableEstimate.UserDefined1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserDefined1Null() {
                this[this.tableEstimate.UserDefined1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserDefined2Null() {
                return this.IsNull(this.tableEstimate.UserDefined2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserDefined2Null() {
                this[this.tableEstimate.UserDefined2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserDefined3Null() {
                return this.IsNull(this.tableEstimate.UserDefined3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserDefined3Null() {
                this[this.tableEstimate.UserDefined3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserDefined4Null() {
                return this.IsNull(this.tableEstimate.UserDefined4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserDefined4Null() {
                this[this.tableEstimate.UserDefined4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserDefined5Null() {
                return this.IsNull(this.tableEstimate.UserDefined5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserDefined5Null() {
                this[this.tableEstimate.UserDefined5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserDefinedDateNull() {
                return this.IsNull(this.tableEstimate.UserDefinedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserDefinedDateNull() {
                this[this.tableEstimate.UserDefinedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalMultiplierFlagNull() {
                return this.IsNull(this.tableEstimate.LocalMultiplierFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalMultiplierFlagNull() {
                this[this.tableEstimate.LocalMultiplierFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalMultiplierNull() {
                return this.IsNull(this.tableEstimate.LocalMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalMultiplierNull() {
                this[this.tableEstimate.LocalMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalMultiplierAdjPctFlagNull() {
                return this.IsNull(this.tableEstimate.LocalMultiplierAdjPctFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalMultiplierAdjPctFlagNull() {
                this[this.tableEstimate.LocalMultiplierAdjPctFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalMultiplierAdjPctNull() {
                return this.IsNull(this.tableEstimate.LocalMultiplierAdjPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalMultiplierAdjPctNull() {
                this[this.tableEstimate.LocalMultiplierAdjPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchitectsFeePctFlagNull() {
                return this.IsNull(this.tableEstimate.ArchitectsFeePctFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchitectsFeePctFlagNull() {
                this[this.tableEstimate.ArchitectsFeePctFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchitectsFeePctNull() {
                return this.IsNull(this.tableEstimate.ArchitectsFeePctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchitectsFeePctNull() {
                this[this.tableEstimate.ArchitectsFeePctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoundingValueFlagNull() {
                return this.IsNull(this.tableEstimate.RoundingValueFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoundingValueFlagNull() {
                this[this.tableEstimate.RoundingValueFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoundingValueNull() {
                return this.IsNull(this.tableEstimate.RoundingValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoundingValueNull() {
                this[this.tableEstimate.RoundingValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportDateFlagNull() {
                return this.IsNull(this.tableEstimate.ReportDateFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportDateFlagNull() {
                this[this.tableEstimate.ReportDateFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportDateNull() {
                return this.IsNull(this.tableEstimate.ReportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportDateNull() {
                this[this.tableEstimate.ReportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSingleLineBackDateFlagNull() {
                return this.IsNull(this.tableEstimate.SingleLineBackDateFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSingleLineBackDateFlagNull() {
                this[this.tableEstimate.SingleLineBackDateFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSingleLineBackDateNull() {
                return this.IsNull(this.tableEstimate.SingleLineBackDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSingleLineBackDateNull() {
                this[this.tableEstimate.SingleLineBackDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseDateFlagNull() {
                return this.IsNull(this.tableEstimate.BaseDateFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseDateFlagNull() {
                this[this.tableEstimate.BaseDateFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseDateNull() {
                return this.IsNull(this.tableEstimate.BaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseDateNull() {
                this[this.tableEstimate.BaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveAgeAdjValueFlagNull() {
                return this.IsNull(this.tableEstimate.EffectiveAgeAdjValueFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveAgeAdjValueFlagNull() {
                this[this.tableEstimate.EffectiveAgeAdjValueFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveAgeAdjValueNull() {
                return this.IsNull(this.tableEstimate.EffectiveAgeAdjValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveAgeAdjValueNull() {
                this[this.tableEstimate.EffectiveAgeAdjValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepreciationPctAdjValueFlagNull() {
                return this.IsNull(this.tableEstimate.DepreciationPctAdjValueFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepreciationPctAdjValueFlagNull() {
                this[this.tableEstimate.DepreciationPctAdjValueFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepreciationPctAdjValueNull() {
                return this.IsNull(this.tableEstimate.DepreciationPctAdjValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepreciationPctAdjValueNull() {
                this[this.tableEstimate.DepreciationPctAdjValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnergyAdjIDFlagNull() {
                return this.IsNull(this.tableEstimate.EnergyAdjIDFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnergyAdjIDFlagNull() {
                this[this.tableEstimate.EnergyAdjIDFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnergyAdjIDNull() {
                return this.IsNull(this.tableEstimate.EnergyAdjIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnergyAdjIDNull() {
                this[this.tableEstimate.EnergyAdjIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFoundationAdjIDFlagNull() {
                return this.IsNull(this.tableEstimate.FoundationAdjIDFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFoundationAdjIDFlagNull() {
                this[this.tableEstimate.FoundationAdjIDFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFoundationAdjIDNull() {
                return this.IsNull(this.tableEstimate.FoundationAdjIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFoundationAdjIDNull() {
                this[this.tableEstimate.FoundationAdjIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFloorInsulAdjIDFlagNull() {
                return this.IsNull(this.tableEstimate.FloorInsulAdjIDFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFloorInsulAdjIDFlagNull() {
                this[this.tableEstimate.FloorInsulAdjIDFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFloorInsulAdjIDNull() {
                return this.IsNull(this.tableEstimate.FloorInsulAdjIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFloorInsulAdjIDNull() {
                this[this.tableEstimate.FloorInsulAdjIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHillsideAdjIDFlagNull() {
                return this.IsNull(this.tableEstimate.HillsideAdjIDFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHillsideAdjIDFlagNull() {
                this[this.tableEstimate.HillsideAdjIDFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHillsideAdjIDNull() {
                return this.IsNull(this.tableEstimate.HillsideAdjIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHillsideAdjIDNull() {
                this[this.tableEstimate.HillsideAdjIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeismicAdjIDFlagNull() {
                return this.IsNull(this.tableEstimate.SeismicAdjIDFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeismicAdjIDFlagNull() {
                this[this.tableEstimate.SeismicAdjIDFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeismicAdjIDNull() {
                return this.IsNull(this.tableEstimate.SeismicAdjIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeismicAdjIDNull() {
                this[this.tableEstimate.SeismicAdjIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindAdjIDFlagNull() {
                return this.IsNull(this.tableEstimate.WindAdjIDFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindAdjIDFlagNull() {
                this[this.tableEstimate.WindAdjIDFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindAdjIDNull() {
                return this.IsNull(this.tableEstimate.WindAdjIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindAdjIDNull() {
                this[this.tableEstimate.WindAdjIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoryHeightFlagNull() {
                return this.IsNull(this.tableEstimate.StoryHeightFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoryHeightFlagNull() {
                this[this.tableEstimate.StoryHeightFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoryHeightNull() {
                return this.IsNull(this.tableEstimate.StoryHeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoryHeightNull() {
                this[this.tableEstimate.StoryHeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBasementDepthFlagNull() {
                return this.IsNull(this.tableEstimate.BasementDepthFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBasementDepthFlagNull() {
                this[this.tableEstimate.BasementDepthFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBasementDepthNull() {
                return this.IsNull(this.tableEstimate.BasementDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBasementDepthNull() {
                this[this.tableEstimate.BasementDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResTypeNameFlagNull() {
                return this.IsNull(this.tableEstimate.ResTypeNameFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResTypeNameFlagNull() {
                this[this.tableEstimate.ResTypeNameFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResTypeNameNull() {
                return this.IsNull(this.tableEstimate.ResTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResTypeNameNull() {
                this[this.tableEstimate.ResTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidenceTypeIDNull() {
                return this.IsNull(this.tableEstimate.ResidenceTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidenceTypeIDNull() {
                this[this.tableEstimate.ResidenceTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyle1IDNull() {
                return this.IsNull(this.tableEstimate.Style1IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyle1IDNull() {
                this[this.tableEstimate.Style1IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyle1PercentNull() {
                return this.IsNull(this.tableEstimate.Style1PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyle1PercentNull() {
                this[this.tableEstimate.Style1PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyle2IDNull() {
                return this.IsNull(this.tableEstimate.Style2IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyle2IDNull() {
                this[this.tableEstimate.Style2IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyle2PercentNull() {
                return this.IsNull(this.tableEstimate.Style2PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyle2PercentNull() {
                this[this.tableEstimate.Style2PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalFloorAreaNull() {
                return this.IsNull(this.tableEstimate.TotalFloorAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalFloorAreaNull() {
                this[this.tableEstimate.TotalFloorAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApartmentUnitsNull() {
                return this.IsNull(this.tableEstimate.ApartmentUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApartmentUnitsNull() {
                this[this.tableEstimate.ApartmentUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualityValueNull() {
                return this.IsNull(this.tableEstimate.QualityValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualityValueNull() {
                this[this.tableEstimate.QualityValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConditionValueNull() {
                return this.IsNull(this.tableEstimate.ConditionValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConditionValueNull() {
                this[this.tableEstimate.ConditionValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveAgeNull() {
                return this.IsNull(this.tableEstimate.EffectiveAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveAgeNull() {
                this[this.tableEstimate.EffectiveAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypicalLifeNull() {
                return this.IsNull(this.tableEstimate.TypicalLifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypicalLifeNull() {
                this[this.tableEstimate.TypicalLifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprecPhyFunDollarsNull() {
                return this.IsNull(this.tableEstimate.DeprecPhyFunDollarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprecPhyFunDollarsNull() {
                this[this.tableEstimate.DeprecPhyFunDollarsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprecPhysicalDollarsNull() {
                return this.IsNull(this.tableEstimate.DeprecPhysicalDollarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprecPhysicalDollarsNull() {
                this[this.tableEstimate.DeprecPhysicalDollarsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprecFunctionalDollarsNull() {
                return this.IsNull(this.tableEstimate.DeprecFunctionalDollarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprecFunctionalDollarsNull() {
                this[this.tableEstimate.DeprecFunctionalDollarsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprecExternalDollarsNull() {
                return this.IsNull(this.tableEstimate.DeprecExternalDollarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprecExternalDollarsNull() {
                this[this.tableEstimate.DeprecExternalDollarsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprecPhyFunPctNull() {
                return this.IsNull(this.tableEstimate.DeprecPhyFunPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprecPhyFunPctNull() {
                this[this.tableEstimate.DeprecPhyFunPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprecPhysicalPctNull() {
                return this.IsNull(this.tableEstimate.DeprecPhysicalPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprecPhysicalPctNull() {
                this[this.tableEstimate.DeprecPhysicalPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprecFunctionalPctNull() {
                return this.IsNull(this.tableEstimate.DeprecFunctionalPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprecFunctionalPctNull() {
                this[this.tableEstimate.DeprecFunctionalPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprecExternalPctNull() {
                return this.IsNull(this.tableEstimate.DeprecExternalPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprecExternalPctNull() {
                this[this.tableEstimate.DeprecExternalPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprecTypeIDNull() {
                return this.IsNull(this.tableEstimate.DeprecTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprecTypeIDNull() {
                this[this.tableEstimate.DeprecTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprecPercentFlagNull() {
                return this.IsNull(this.tableEstimate.DeprecPercentFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprecPercentFlagNull() {
                this[this.tableEstimate.DeprecPercentFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateDateNull() {
                return this.IsNull(this.tableEstimate.CreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateDateNull() {
                this[this.tableEstimate.CreateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifyDateNull() {
                return this.IsNull(this.tableEstimate.ModifyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifyDateNull() {
                this[this.tableEstimate.ModifyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCalculateDateNull() {
                return this.IsNull(this.tableEstimate.CalculateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCalculateDateNull() {
                this[this.tableEstimate.CalculateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintDateNull() {
                return this.IsNull(this.tableEstimate.PrintDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintDateNull() {
                this[this.tableEstimate.PrintDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImportDateNull() {
                return this.IsNull(this.tableEstimate.ImportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImportDateNull() {
                this[this.tableEstimate.ImportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCalcCostDataDateNull() {
                return this.IsNull(this.tableEstimate.CalcCostDataDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCalcCostDataDateNull() {
                this[this.tableEstimate.CalcCostDataDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostAsOfNull() {
                return this.IsNull(this.tableEstimate.CostAsOfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostAsOfNull() {
                this[this.tableEstimate.CostAsOfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastOpenedDateNull() {
                return this.IsNull(this.tableEstimate.LastOpenedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastOpenedDateNull() {
                this[this.tableEstimate.LastOpenedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyle1LengthNull() {
                return this.IsNull(this.tableEstimate.Style1LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyle1LengthNull() {
                this[this.tableEstimate.Style1LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyle1WidthNull() {
                return this.IsNull(this.tableEstimate.Style1WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyle1WidthNull() {
                this[this.tableEstimate.Style1WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyle2LengthNull() {
                return this.IsNull(this.tableEstimate.Style2LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyle2LengthNull() {
                this[this.tableEstimate.Style2LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyle2WidthNull() {
                return this.IsNull(this.tableEstimate.Style2WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyle2WidthNull() {
                this[this.tableEstimate.Style2WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWallEnergyAdjIDFlagNull() {
                return this.IsNull(this.tableEstimate.WallEnergyAdjIDFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWallEnergyAdjIDFlagNull() {
                this[this.tableEstimate.WallEnergyAdjIDFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWallEnergyAdjIDNull() {
                return this.IsNull(this.tableEstimate.WallEnergyAdjIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWallEnergyAdjIDNull() {
                this[this.tableEstimate.WallEnergyAdjIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionalMultiplierFlagNull() {
                return this.IsNull(this.tableEstimate.RegionalMultiplierFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionalMultiplierFlagNull() {
                this[this.tableEstimate.RegionalMultiplierFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionalMultiplierNull() {
                return this.IsNull(this.tableEstimate.RegionalMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionalMultiplierNull() {
                this[this.tableEstimate.RegionalMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMfgMultiplierFlagNull() {
                return this.IsNull(this.tableEstimate.MfgMultiplierFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMfgMultiplierFlagNull() {
                this[this.tableEstimate.MfgMultiplierFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tableEstimate.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tableEstimate.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_FileRow : global::System.Data.DataRow {
            
            private tTS_FileDataTable tabletTS_File;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FileRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_File = ((tTS_FileDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FileID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_File.FileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileID\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.FileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Extension {
                get {
                    try {
                        return ((string)(this[this.tabletTS_File.ExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Extension\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.ExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tabletTS_File.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KeyID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_File.KeyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeyID\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.KeyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FileTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_File.FileTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileTypeID\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.FileTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Source {
                get {
                    try {
                        return ((string)(this[this.tabletTS_File.SourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Source\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimary {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_File.IsPrimaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPrimary\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.IsPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletTS_File.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EventDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_File.EventDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventDate\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.EventDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_File.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPublic {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_File.IsPublicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPublic\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.IsPublicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoll {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_File.IsRollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRoll\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.IsRollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_File.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_File.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_File.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_File.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_File.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte LinkType {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_File.LinkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkType\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.LinkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AURL {
                get {
                    try {
                        return ((string)(this[this.tabletTS_File.AURLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AURL\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.AURLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PFileID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_File.PFileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PFileID\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.PFileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_File.UpdateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateDate\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.UpdateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SketchPage {
                get {
                    try {
                        return ((int)(this[this.tabletTS_File.SketchPageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SketchPage\' in table \'tTS_File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_File.SketchPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileIDNull() {
                return this.IsNull(this.tabletTS_File.FileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileIDNull() {
                this[this.tabletTS_File.FileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtensionNull() {
                return this.IsNull(this.tabletTS_File.ExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtensionNull() {
                this[this.tabletTS_File.ExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tabletTS_File.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tabletTS_File.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeyIDNull() {
                return this.IsNull(this.tabletTS_File.KeyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeyIDNull() {
                this[this.tabletTS_File.KeyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileTypeIDNull() {
                return this.IsNull(this.tabletTS_File.FileTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileTypeIDNull() {
                this[this.tabletTS_File.FileTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceNull() {
                return this.IsNull(this.tabletTS_File.SourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceNull() {
                this[this.tabletTS_File.SourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPrimaryNull() {
                return this.IsNull(this.tabletTS_File.IsPrimaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPrimaryNull() {
                this[this.tabletTS_File.IsPrimaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletTS_File.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletTS_File.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventDateNull() {
                return this.IsNull(this.tabletTS_File.EventDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventDateNull() {
                this[this.tabletTS_File.EventDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tabletTS_File.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tabletTS_File.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPublicNull() {
                return this.IsNull(this.tabletTS_File.IsPublicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPublicNull() {
                this[this.tabletTS_File.IsPublicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRollNull() {
                return this.IsNull(this.tabletTS_File.IsRollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRollNull() {
                this[this.tabletTS_File.IsRollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_File.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_File.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_File.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_File.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_File.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_File.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_File.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_File.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_File.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_File.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinkTypeNull() {
                return this.IsNull(this.tabletTS_File.LinkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinkTypeNull() {
                this[this.tabletTS_File.LinkTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAURLNull() {
                return this.IsNull(this.tabletTS_File.AURLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAURLNull() {
                this[this.tabletTS_File.AURLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPFileIDNull() {
                return this.IsNull(this.tabletTS_File.PFileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPFileIDNull() {
                this[this.tabletTS_File.PFileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateNull() {
                return this.IsNull(this.tabletTS_File.UpdateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateNull() {
                this[this.tabletTS_File.UpdateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSketchPageNull() {
                return this.IsNull(this.tabletTS_File.SketchPageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSketchPageNull() {
                this[this.tabletTS_File.SketchPageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_LandValuesRow : global::System.Data.DataRow {
            
            private tAA_LandValuesDataTable tabletAA_LandValues;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandValuesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_LandValues = ((tAA_LandValuesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LuVID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandValues.LuVIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LuVID\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.LuVIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_LandValues.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandValues.NBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.NBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandCode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandValues.LandCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandCode\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.LandCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitType {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandValues.UnitTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitType\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.UnitTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.BaseValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseValue\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.BaseValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Break1 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.Break1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Break1\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.Break1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Value1 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.Value1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value1\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.Value1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Break2 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.Break2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Break2\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.Break2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Value2 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.Value2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value2\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.Value2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Break3 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.Break3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Break3\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.Break3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Value3 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.Value3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value3\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.Value3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Break4 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.Break4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Break4\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.Break4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Value4 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.Value4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value4\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.Value4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_LandValues.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandValues.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_LandValues.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandValues.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_LandValues.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UseBaseValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.UseBaseValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseBaseValue\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.UseBaseValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MrktMultiplier {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.MrktMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MrktMultiplier\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.MrktMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UseMultiplier {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.UseMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseMultiplier\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.UseMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vformula {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandValues.VformulaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vformula\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.VformulaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgland {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_LandValues.IsAglandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAgland\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.IsAglandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubClass {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandValues.SubClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubClass\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.SubClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CropRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.CropRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CropRate\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.CropRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NonCropRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandValues.NonCropRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonCropRate\' in table \'tAA_LandValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandValues.NonCropRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLuVIDNull() {
                return this.IsNull(this.tabletAA_LandValues.LuVIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLuVIDNull() {
                this[this.tabletAA_LandValues.LuVIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_LandValues.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_LandValues.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tabletAA_LandValues.NBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tabletAA_LandValues.NBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandCodeNull() {
                return this.IsNull(this.tabletAA_LandValues.LandCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandCodeNull() {
                this[this.tabletAA_LandValues.LandCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitTypeNull() {
                return this.IsNull(this.tabletAA_LandValues.UnitTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitTypeNull() {
                this[this.tabletAA_LandValues.UnitTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseValueNull() {
                return this.IsNull(this.tabletAA_LandValues.BaseValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseValueNull() {
                this[this.tabletAA_LandValues.BaseValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBreak1Null() {
                return this.IsNull(this.tabletAA_LandValues.Break1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBreak1Null() {
                this[this.tabletAA_LandValues.Break1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue1Null() {
                return this.IsNull(this.tabletAA_LandValues.Value1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue1Null() {
                this[this.tabletAA_LandValues.Value1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBreak2Null() {
                return this.IsNull(this.tabletAA_LandValues.Break2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBreak2Null() {
                this[this.tabletAA_LandValues.Break2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue2Null() {
                return this.IsNull(this.tabletAA_LandValues.Value2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue2Null() {
                this[this.tabletAA_LandValues.Value2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBreak3Null() {
                return this.IsNull(this.tabletAA_LandValues.Break3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBreak3Null() {
                this[this.tabletAA_LandValues.Break3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue3Null() {
                return this.IsNull(this.tabletAA_LandValues.Value3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue3Null() {
                this[this.tabletAA_LandValues.Value3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBreak4Null() {
                return this.IsNull(this.tabletAA_LandValues.Break4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBreak4Null() {
                this[this.tabletAA_LandValues.Break4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue4Null() {
                return this.IsNull(this.tabletAA_LandValues.Value4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue4Null() {
                this[this.tabletAA_LandValues.Value4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_LandValues.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_LandValues.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_LandValues.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_LandValues.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_LandValues.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_LandValues.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_LandValues.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_LandValues.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_LandValues.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_LandValues.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseBaseValueNull() {
                return this.IsNull(this.tabletAA_LandValues.UseBaseValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseBaseValueNull() {
                this[this.tabletAA_LandValues.UseBaseValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMrktMultiplierNull() {
                return this.IsNull(this.tabletAA_LandValues.MrktMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMrktMultiplierNull() {
                this[this.tabletAA_LandValues.MrktMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseMultiplierNull() {
                return this.IsNull(this.tabletAA_LandValues.UseMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseMultiplierNull() {
                this[this.tabletAA_LandValues.UseMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVformulaNull() {
                return this.IsNull(this.tabletAA_LandValues.VformulaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVformulaNull() {
                this[this.tabletAA_LandValues.VformulaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAglandNull() {
                return this.IsNull(this.tabletAA_LandValues.IsAglandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAglandNull() {
                this[this.tabletAA_LandValues.IsAglandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubClassNull() {
                return this.IsNull(this.tabletAA_LandValues.SubClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubClassNull() {
                this[this.tabletAA_LandValues.SubClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCropRateNull() {
                return this.IsNull(this.tabletAA_LandValues.CropRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCropRateNull() {
                this[this.tabletAA_LandValues.CropRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonCropRateNull() {
                return this.IsNull(this.tabletAA_LandValues.NonCropRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonCropRateNull() {
                this[this.tabletAA_LandValues.NonCropRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_LandRow : global::System.Data.DataRow {
            
            private tAA_LandDataTable tabletAA_Land;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Land = ((tAA_LandDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LUID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Land.LUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LUID\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.LUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueSliceID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Land.ValueSliceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueSliceID\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.ValueSliceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID1 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Land.LandTypeID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID1\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.LandTypeID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID2 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Land.LandTypeID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID2\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.LandTypeID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID3 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Land.LandTypeID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID3\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.LandTypeID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandCode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Land.LandCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandCode\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.LandCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportAS {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Land.ReportASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportAS\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.ReportASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitType {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Land.UnitTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitType\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.UnitTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Units {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Land.UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Units\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte AdjustmentType {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Land.AdjustmentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjustmentType\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.AdjustmentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Adjustment {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Land.AdjustmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adjustment\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.AdjustmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AdjDescription {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Land.AdjDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjDescription\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.AdjDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Land.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Land.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Land.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Land.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Land.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte UseAdjustmentType {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Land.UseAdjustmentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseAdjustmentType\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.UseAdjustmentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UseAdjustment {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Land.UseAdjustmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseAdjustment\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.UseAdjustmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UseAdjDescription {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Land.UseAdjDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseAdjDescription\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.UseAdjDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LotWidth {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Land.LotWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LotWidth\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.LotWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LotDepth {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Land.LotDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LotDepth\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.LotDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseMrktValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Land.BaseMrktValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseMrktValue\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.BaseMrktValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FinalMrktValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Land.FinalMrktValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalMrktValue\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.FinalMrktValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FinalUseValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Land.FinalUseValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalUseValue\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.FinalUseValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandShape {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Land.LandShapeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandShape\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.LandShapeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Frontage {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Land.FrontageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Frontage\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.FrontageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ProgramID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Land.ProgramIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramID\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.ProgramIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LotWidthTemp {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Land.LotWidthTempColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LotWidthTemp\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.LotWidthTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LotDepthTemp {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Land.LotDepthTempColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LotDepthTemp\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.LotDepthTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SrAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Land.SrAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrAcres\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.SrAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WeightedRating {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Land.WeightedRatingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeightedRating\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.WeightedRatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseValuePerUnit {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Land.BaseValuePerUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseValuePerUnit\' in table \'tAA_Land\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Land.BaseValuePerUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLUIDNull() {
                return this.IsNull(this.tabletAA_Land.LUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLUIDNull() {
                this[this.tabletAA_Land.LUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueSliceIDNull() {
                return this.IsNull(this.tabletAA_Land.ValueSliceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueSliceIDNull() {
                this[this.tabletAA_Land.ValueSliceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID1Null() {
                return this.IsNull(this.tabletAA_Land.LandTypeID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID1Null() {
                this[this.tabletAA_Land.LandTypeID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID2Null() {
                return this.IsNull(this.tabletAA_Land.LandTypeID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID2Null() {
                this[this.tabletAA_Land.LandTypeID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID3Null() {
                return this.IsNull(this.tabletAA_Land.LandTypeID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID3Null() {
                this[this.tabletAA_Land.LandTypeID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandCodeNull() {
                return this.IsNull(this.tabletAA_Land.LandCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandCodeNull() {
                this[this.tabletAA_Land.LandCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportASNull() {
                return this.IsNull(this.tabletAA_Land.ReportASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportASNull() {
                this[this.tabletAA_Land.ReportASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitTypeNull() {
                return this.IsNull(this.tabletAA_Land.UnitTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitTypeNull() {
                this[this.tabletAA_Land.UnitTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsNull() {
                return this.IsNull(this.tabletAA_Land.UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsNull() {
                this[this.tabletAA_Land.UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustmentTypeNull() {
                return this.IsNull(this.tabletAA_Land.AdjustmentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustmentTypeNull() {
                this[this.tabletAA_Land.AdjustmentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustmentNull() {
                return this.IsNull(this.tabletAA_Land.AdjustmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustmentNull() {
                this[this.tabletAA_Land.AdjustmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjDescriptionNull() {
                return this.IsNull(this.tabletAA_Land.AdjDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjDescriptionNull() {
                this[this.tabletAA_Land.AdjDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Land.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Land.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Land.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Land.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Land.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Land.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Land.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Land.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_Land.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_Land.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseAdjustmentTypeNull() {
                return this.IsNull(this.tabletAA_Land.UseAdjustmentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseAdjustmentTypeNull() {
                this[this.tabletAA_Land.UseAdjustmentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseAdjustmentNull() {
                return this.IsNull(this.tabletAA_Land.UseAdjustmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseAdjustmentNull() {
                this[this.tabletAA_Land.UseAdjustmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseAdjDescriptionNull() {
                return this.IsNull(this.tabletAA_Land.UseAdjDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseAdjDescriptionNull() {
                this[this.tabletAA_Land.UseAdjDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLotWidthNull() {
                return this.IsNull(this.tabletAA_Land.LotWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLotWidthNull() {
                this[this.tabletAA_Land.LotWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLotDepthNull() {
                return this.IsNull(this.tabletAA_Land.LotDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLotDepthNull() {
                this[this.tabletAA_Land.LotDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseMrktValueNull() {
                return this.IsNull(this.tabletAA_Land.BaseMrktValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseMrktValueNull() {
                this[this.tabletAA_Land.BaseMrktValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalMrktValueNull() {
                return this.IsNull(this.tabletAA_Land.FinalMrktValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalMrktValueNull() {
                this[this.tabletAA_Land.FinalMrktValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalUseValueNull() {
                return this.IsNull(this.tabletAA_Land.FinalUseValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalUseValueNull() {
                this[this.tabletAA_Land.FinalUseValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandShapeNull() {
                return this.IsNull(this.tabletAA_Land.LandShapeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandShapeNull() {
                this[this.tabletAA_Land.LandShapeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrontageNull() {
                return this.IsNull(this.tabletAA_Land.FrontageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrontageNull() {
                this[this.tabletAA_Land.FrontageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramIDNull() {
                return this.IsNull(this.tabletAA_Land.ProgramIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramIDNull() {
                this[this.tabletAA_Land.ProgramIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLotWidthTempNull() {
                return this.IsNull(this.tabletAA_Land.LotWidthTempColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLotWidthTempNull() {
                this[this.tabletAA_Land.LotWidthTempColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLotDepthTempNull() {
                return this.IsNull(this.tabletAA_Land.LotDepthTempColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLotDepthTempNull() {
                this[this.tabletAA_Land.LotDepthTempColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrAcresNull() {
                return this.IsNull(this.tabletAA_Land.SrAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrAcresNull() {
                this[this.tabletAA_Land.SrAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightedRatingNull() {
                return this.IsNull(this.tabletAA_Land.WeightedRatingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightedRatingNull() {
                this[this.tabletAA_Land.WeightedRatingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseValuePerUnitNull() {
                return this.IsNull(this.tabletAA_Land.BaseValuePerUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseValuePerUnitNull() {
                this[this.tabletAA_Land.BaseValuePerUnitColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MiscRow : global::System.Data.DataRow {
            
            private tAA_MiscDataTable tabletAA_Misc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MiscRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Misc = ((tAA_MiscDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueSliceID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.ValueSliceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueSliceID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.ValueSliceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MICodeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MICodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MICodeID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MICodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueBase {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.ValueBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueBase\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.ValueBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueOveride {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.ValueOverideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueOveride\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.ValueOverideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DeprYearin {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Misc.DeprYearinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprYearin\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprYearinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeprTableID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.DeprTableIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprTableID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprTableIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DeprWithPrimary {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc.DeprWithPrimaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprWithPrimary\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprWithPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeprPercent {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.DeprPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprPercent\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V01 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V01\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V02 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V02\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V03 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V03\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V04 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V04\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V05 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V05\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V06 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V06\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V07 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V07\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V08 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V08\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V09 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V09\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V10 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V10\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Misc.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Misc.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeprCondition {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.DeprConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprCondition\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeprQuality {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.DeprQualityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprQuality\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprQualityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte DeprEconLife {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc.DeprEconLifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprEconLife\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprEconLifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte DeprEAge {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc.DeprEAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprEAge\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprEAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte DeprFuncID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc.DeprFuncIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprFuncID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprFuncIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeprFuncPercent {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.DeprFuncPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprFuncPercent\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprFuncPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PhysDepr {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.PhysDeprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysDepr\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.PhysDeprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FuncDepr {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.FuncDeprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuncDepr\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.FuncDeprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueFinal {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.ValueFinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueFinal\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.ValueFinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V11 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V11\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V12 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V12\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID01 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID01\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID02 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID02\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID03 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID03\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID04 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID04\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID05 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID05\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID06 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID06\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID07 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID07\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID08 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID08\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID09 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID09\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID10 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID10\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID11 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID11\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID12 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID12\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PolygonID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.PolygonIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PolygonID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.PolygonIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDNull() {
                return this.IsNull(this.tabletAA_Misc.MIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDNull() {
                this[this.tabletAA_Misc.MIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueSliceIDNull() {
                return this.IsNull(this.tabletAA_Misc.ValueSliceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueSliceIDNull() {
                this[this.tabletAA_Misc.ValueSliceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMICodeIDNull() {
                return this.IsNull(this.tabletAA_Misc.MICodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMICodeIDNull() {
                this[this.tabletAA_Misc.MICodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_Misc.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_Misc.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueBaseNull() {
                return this.IsNull(this.tabletAA_Misc.ValueBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueBaseNull() {
                this[this.tabletAA_Misc.ValueBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueOverideNull() {
                return this.IsNull(this.tabletAA_Misc.ValueOverideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueOverideNull() {
                this[this.tabletAA_Misc.ValueOverideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprYearinNull() {
                return this.IsNull(this.tabletAA_Misc.DeprYearinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprYearinNull() {
                this[this.tabletAA_Misc.DeprYearinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprTableIDNull() {
                return this.IsNull(this.tabletAA_Misc.DeprTableIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprTableIDNull() {
                this[this.tabletAA_Misc.DeprTableIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprWithPrimaryNull() {
                return this.IsNull(this.tabletAA_Misc.DeprWithPrimaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprWithPrimaryNull() {
                this[this.tabletAA_Misc.DeprWithPrimaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprPercentNull() {
                return this.IsNull(this.tabletAA_Misc.DeprPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprPercentNull() {
                this[this.tabletAA_Misc.DeprPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV01Null() {
                return this.IsNull(this.tabletAA_Misc.V01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV01Null() {
                this[this.tabletAA_Misc.V01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV02Null() {
                return this.IsNull(this.tabletAA_Misc.V02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV02Null() {
                this[this.tabletAA_Misc.V02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV03Null() {
                return this.IsNull(this.tabletAA_Misc.V03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV03Null() {
                this[this.tabletAA_Misc.V03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV04Null() {
                return this.IsNull(this.tabletAA_Misc.V04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV04Null() {
                this[this.tabletAA_Misc.V04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV05Null() {
                return this.IsNull(this.tabletAA_Misc.V05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV05Null() {
                this[this.tabletAA_Misc.V05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV06Null() {
                return this.IsNull(this.tabletAA_Misc.V06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV06Null() {
                this[this.tabletAA_Misc.V06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV07Null() {
                return this.IsNull(this.tabletAA_Misc.V07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV07Null() {
                this[this.tabletAA_Misc.V07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV08Null() {
                return this.IsNull(this.tabletAA_Misc.V08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV08Null() {
                this[this.tabletAA_Misc.V08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV09Null() {
                return this.IsNull(this.tabletAA_Misc.V09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV09Null() {
                this[this.tabletAA_Misc.V09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV10Null() {
                return this.IsNull(this.tabletAA_Misc.V10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV10Null() {
                this[this.tabletAA_Misc.V10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Misc.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Misc.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Misc.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Misc.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Misc.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Misc.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_Misc.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_Misc.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Misc.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Misc.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprConditionNull() {
                return this.IsNull(this.tabletAA_Misc.DeprConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprConditionNull() {
                this[this.tabletAA_Misc.DeprConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprQualityNull() {
                return this.IsNull(this.tabletAA_Misc.DeprQualityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprQualityNull() {
                this[this.tabletAA_Misc.DeprQualityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprEconLifeNull() {
                return this.IsNull(this.tabletAA_Misc.DeprEconLifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprEconLifeNull() {
                this[this.tabletAA_Misc.DeprEconLifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprEAgeNull() {
                return this.IsNull(this.tabletAA_Misc.DeprEAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprEAgeNull() {
                this[this.tabletAA_Misc.DeprEAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprFuncIDNull() {
                return this.IsNull(this.tabletAA_Misc.DeprFuncIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprFuncIDNull() {
                this[this.tabletAA_Misc.DeprFuncIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprFuncPercentNull() {
                return this.IsNull(this.tabletAA_Misc.DeprFuncPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprFuncPercentNull() {
                this[this.tabletAA_Misc.DeprFuncPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhysDeprNull() {
                return this.IsNull(this.tabletAA_Misc.PhysDeprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhysDeprNull() {
                this[this.tabletAA_Misc.PhysDeprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFuncDeprNull() {
                return this.IsNull(this.tabletAA_Misc.FuncDeprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFuncDeprNull() {
                this[this.tabletAA_Misc.FuncDeprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueFinalNull() {
                return this.IsNull(this.tabletAA_Misc.ValueFinalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueFinalNull() {
                this[this.tabletAA_Misc.ValueFinalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV11Null() {
                return this.IsNull(this.tabletAA_Misc.V11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV11Null() {
                this[this.tabletAA_Misc.V11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV12Null() {
                return this.IsNull(this.tabletAA_Misc.V12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV12Null() {
                this[this.tabletAA_Misc.V12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID01Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID01Null() {
                this[this.tabletAA_Misc.MIChoiceID01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID02Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID02Null() {
                this[this.tabletAA_Misc.MIChoiceID02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID03Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID03Null() {
                this[this.tabletAA_Misc.MIChoiceID03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID04Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID04Null() {
                this[this.tabletAA_Misc.MIChoiceID04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID05Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID05Null() {
                this[this.tabletAA_Misc.MIChoiceID05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID06Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID06Null() {
                this[this.tabletAA_Misc.MIChoiceID06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID07Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID07Null() {
                this[this.tabletAA_Misc.MIChoiceID07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID08Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID08Null() {
                this[this.tabletAA_Misc.MIChoiceID08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID09Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID09Null() {
                this[this.tabletAA_Misc.MIChoiceID09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID10Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID10Null() {
                this[this.tabletAA_Misc.MIChoiceID10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID11Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID11Null() {
                this[this.tabletAA_Misc.MIChoiceID11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID12Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID12Null() {
                this[this.tabletAA_Misc.MIChoiceID12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPolygonIDNull() {
                return this.IsNull(this.tabletAA_Misc.PolygonIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPolygonIDNull() {
                this[this.tabletAA_Misc.PolygonIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MSC_EstimateRow : global::System.Data.DataRow {
            
            private tAA_MSC_EstimateDataTable tabletAA_MSC_Estimate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MSC_EstimateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MSC_Estimate = ((tAA_MSC_EstimateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimateID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MSC_Estimate.EstimateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateID\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.EstimateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EstimateUserID {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MSC_Estimate.EstimateUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateUserID\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.EstimateUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EstimateCode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MSC_Estimate.EstimateCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateCode\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.EstimateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Version_tp {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MSC_Estimate.Version_tpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Version_tp\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.Version_tpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LocalMultiplier {
                get {
                    try {
                        return ((double)(this[this.tabletAA_MSC_Estimate.LocalMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalMultiplier\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.LocalMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ArchitectFee {
                get {
                    try {
                        return ((double)(this[this.tabletAA_MSC_Estimate.ArchitectFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArchitectFee\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.ArchitectFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Rounding_nb {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MSC_Estimate.Rounding_nbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rounding_nb\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.Rounding_nbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MSC_Estimate.ReportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportDate\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.ReportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SingleLineBackDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MSC_Estimate.SingleLineBackDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SingleLineBackDate\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.SingleLineBackDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MSC_Estimate.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MSC_Estimate.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CalculatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MSC_Estimate.CalculatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalculatedDate\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.CalculatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReportedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MSC_Estimate.ReportedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportedDate\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.ReportedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ImportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MSC_Estimate.ImportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportDate\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.ImportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ExportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MSC_Estimate.ExportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExportDate\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.ExportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MSC_Estimate.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryName {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MSC_Estimate.CategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryName\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.CategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CompoundedDepreciationFlag {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MSC_Estimate.CompoundedDepreciationFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompoundedDepreciationFlag\' in table \'tAA_MSC_Estimate\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.CompoundedDepreciationFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TFAOverride {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MSC_Estimate.TFAOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TFAOverride\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.TFAOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MSC_Estimate.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MSC_Estimate.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MSC_Estimate.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MSC_Estimate.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MSC_Estimate.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Parcel_number {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MSC_Estimate.Parcel_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Parcel_number\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.Parcel_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResultsXML {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MSC_Estimate.ResultsXMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultsXML\' in table \'tAA_MSC_Estimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MSC_Estimate.ResultsXMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateIDNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.EstimateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateIDNull() {
                this[this.tabletAA_MSC_Estimate.EstimateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateUserIDNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.EstimateUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateUserIDNull() {
                this[this.tabletAA_MSC_Estimate.EstimateUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateCodeNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.EstimateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateCodeNull() {
                this[this.tabletAA_MSC_Estimate.EstimateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVersion_tpNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.Version_tpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVersion_tpNull() {
                this[this.tabletAA_MSC_Estimate.Version_tpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalMultiplierNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.LocalMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalMultiplierNull() {
                this[this.tabletAA_MSC_Estimate.LocalMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArchitectFeeNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.ArchitectFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArchitectFeeNull() {
                this[this.tabletAA_MSC_Estimate.ArchitectFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRounding_nbNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.Rounding_nbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRounding_nbNull() {
                this[this.tabletAA_MSC_Estimate.Rounding_nbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportDateNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.ReportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportDateNull() {
                this[this.tabletAA_MSC_Estimate.ReportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSingleLineBackDateNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.SingleLineBackDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSingleLineBackDateNull() {
                this[this.tabletAA_MSC_Estimate.SingleLineBackDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tabletAA_MSC_Estimate.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tabletAA_MSC_Estimate.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCalculatedDateNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.CalculatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCalculatedDateNull() {
                this[this.tabletAA_MSC_Estimate.CalculatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportedDateNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.ReportedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportedDateNull() {
                this[this.tabletAA_MSC_Estimate.ReportedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImportDateNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.ImportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImportDateNull() {
                this[this.tabletAA_MSC_Estimate.ImportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExportDateNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.ExportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExportDateNull() {
                this[this.tabletAA_MSC_Estimate.ExportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.UserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tabletAA_MSC_Estimate.UserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNameNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.CategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNameNull() {
                this[this.tabletAA_MSC_Estimate.CategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompoundedDepreciationFlagNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.CompoundedDepreciationFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompoundedDepreciationFlagNull() {
                this[this.tabletAA_MSC_Estimate.CompoundedDepreciationFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTFAOverrideNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.TFAOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTFAOverrideNull() {
                this[this.tabletAA_MSC_Estimate.TFAOverrideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MSC_Estimate.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MSC_Estimate.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MSC_Estimate.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MSC_Estimate.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MSC_Estimate.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcel_numberNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.Parcel_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcel_numberNull() {
                this[this.tabletAA_MSC_Estimate.Parcel_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultsXMLNull() {
                return this.IsNull(this.tabletAA_MSC_Estimate.ResultsXMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultsXMLNull() {
                this[this.tabletAA_MSC_Estimate.ResultsXMLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_NBHDRow : global::System.Data.DataRow {
            
            private tAA_NBHDDataTable tabletAA_NBHD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_NBHDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_NBHD = ((tAA_NBHDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.NBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.NBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PNBHDID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.PNBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNBHDID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.PNBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_NBHD.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NBHDType {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_NBHD.NBHDTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDType\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.NBHDTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Neighborhood {
                get {
                    try {
                        return ((string)(this[this.tabletAA_NBHD.NeighborhoodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Neighborhood\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.NeighborhoodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_NBHD.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MarketReview {
                get {
                    try {
                        return ((string)(this[this.tabletAA_NBHD.MarketReviewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketReview\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.MarketReviewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReviewedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.ReviewedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewedBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.ReviewedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDGroupID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.NBHDGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDGroupID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.NBHDGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ZoningID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.ZoningIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoningID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.ZoningIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CAMAModelID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_NBHD.CAMAModelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAMAModelID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.CAMAModelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AAModelID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_NBHD.AAModelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AAModelID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.AAModelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MSVersionID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.MSVersionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSVersionID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.MSVersionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MSCVersionID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.MSCVersionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSCVersionID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.MSCVersionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MSR_Factor {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_NBHD.MSR_FactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSR_Factor\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.MSR_FactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MSC_Factor {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_NBHD.MSC_FactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSC_Factor\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.MSC_FactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAppraisalBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.LockAppraisalByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAppraisalBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.LockAppraisalByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAssessmentBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.LockAssessmentByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAssessmentBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.LockAssessmentByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAdminBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.LockAdminByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAdminBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.LockAdminByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_NBHD.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_NBHD.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tabletAA_NBHD.NBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tabletAA_NBHD.NBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNBHDIDNull() {
                return this.IsNull(this.tabletAA_NBHD.PNBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNBHDIDNull() {
                this[this.tabletAA_NBHD.PNBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_NBHD.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_NBHD.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDTypeNull() {
                return this.IsNull(this.tabletAA_NBHD.NBHDTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDTypeNull() {
                this[this.tabletAA_NBHD.NBHDTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodNull() {
                return this.IsNull(this.tabletAA_NBHD.NeighborhoodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodNull() {
                this[this.tabletAA_NBHD.NeighborhoodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_NBHD.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_NBHD.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketReviewNull() {
                return this.IsNull(this.tabletAA_NBHD.MarketReviewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketReviewNull() {
                this[this.tabletAA_NBHD.MarketReviewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewedByNull() {
                return this.IsNull(this.tabletAA_NBHD.ReviewedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewedByNull() {
                this[this.tabletAA_NBHD.ReviewedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDGroupIDNull() {
                return this.IsNull(this.tabletAA_NBHD.NBHDGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDGroupIDNull() {
                this[this.tabletAA_NBHD.NBHDGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoningIDNull() {
                return this.IsNull(this.tabletAA_NBHD.ZoningIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoningIDNull() {
                this[this.tabletAA_NBHD.ZoningIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAMAModelIDNull() {
                return this.IsNull(this.tabletAA_NBHD.CAMAModelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAMAModelIDNull() {
                this[this.tabletAA_NBHD.CAMAModelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAAModelIDNull() {
                return this.IsNull(this.tabletAA_NBHD.AAModelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAAModelIDNull() {
                this[this.tabletAA_NBHD.AAModelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSVersionIDNull() {
                return this.IsNull(this.tabletAA_NBHD.MSVersionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSVersionIDNull() {
                this[this.tabletAA_NBHD.MSVersionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSCVersionIDNull() {
                return this.IsNull(this.tabletAA_NBHD.MSCVersionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSCVersionIDNull() {
                this[this.tabletAA_NBHD.MSCVersionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSR_FactorNull() {
                return this.IsNull(this.tabletAA_NBHD.MSR_FactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSR_FactorNull() {
                this[this.tabletAA_NBHD.MSR_FactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSC_FactorNull() {
                return this.IsNull(this.tabletAA_NBHD.MSC_FactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSC_FactorNull() {
                this[this.tabletAA_NBHD.MSC_FactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAppraisalByNull() {
                return this.IsNull(this.tabletAA_NBHD.LockAppraisalByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAppraisalByNull() {
                this[this.tabletAA_NBHD.LockAppraisalByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAssessmentByNull() {
                return this.IsNull(this.tabletAA_NBHD.LockAssessmentByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAssessmentByNull() {
                this[this.tabletAA_NBHD.LockAssessmentByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAdminByNull() {
                return this.IsNull(this.tabletAA_NBHD.LockAdminByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAdminByNull() {
                this[this.tabletAA_NBHD.LockAdminByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_NBHD.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_NBHD.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_NBHD.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_NBHD.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_NBHD.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_NBHD.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_NBHD.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_NBHD.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_NBHD.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_NBHD.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_ObjectRow : global::System.Data.DataRow {
            
            private tAA_ObjectDataTable tabletAA_Object;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ObjectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Object = ((tAA_ObjectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ObjectID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.ObjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ObjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PObjectID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.PObjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PObjectID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.PObjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Object.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ObjectTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object.ObjectTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectTypeID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ObjectTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Object.OValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OValue\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.OValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object.IsValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsValue\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.IsValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoll {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object.IsRollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRoll\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.IsRollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateCode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Object.StateCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StateCode\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.StateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Bedrooms {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Object.BedroomsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bedrooms\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.BedroomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Bathrooms {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Object.BathroomsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bathrooms\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.BathroomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Rental {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object.RentalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rental\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.RentalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short YearSeptic {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object.YearSepticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearSeptic\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.YearSepticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short YearWater {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object.YearWaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearWater\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.YearWaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short YearBuilt {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object.YearBuiltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearBuilt\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.YearBuiltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte EffectiveAge {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Object.EffectiveAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveAge\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.EffectiveAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Life {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Object.LifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Life\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.LifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short YearRemodel {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object.YearRemodelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearRemodel\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.YearRemodelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Condition {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Object.ConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Condition\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Object.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conversion {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Object.conversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conversion\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.conversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PageID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.PageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PageID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.PageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgriculture {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object.IsAgricultureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAgriculture\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.IsAgricultureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.ClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectIDNull() {
                return this.IsNull(this.tabletAA_Object.ObjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectIDNull() {
                this[this.tabletAA_Object.ObjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPObjectIDNull() {
                return this.IsNull(this.tabletAA_Object.PObjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPObjectIDNull() {
                this[this.tabletAA_Object.PObjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_Object.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_Object.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_Object.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_Object.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectTypeIDNull() {
                return this.IsNull(this.tabletAA_Object.ObjectTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectTypeIDNull() {
                this[this.tabletAA_Object.ObjectTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOValueNull() {
                return this.IsNull(this.tabletAA_Object.OValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOValueNull() {
                this[this.tabletAA_Object.OValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsValueNull() {
                return this.IsNull(this.tabletAA_Object.IsValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsValueNull() {
                this[this.tabletAA_Object.IsValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRollNull() {
                return this.IsNull(this.tabletAA_Object.IsRollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRollNull() {
                this[this.tabletAA_Object.IsRollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeNull() {
                return this.IsNull(this.tabletAA_Object.StateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeNull() {
                this[this.tabletAA_Object.StateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBedroomsNull() {
                return this.IsNull(this.tabletAA_Object.BedroomsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBedroomsNull() {
                this[this.tabletAA_Object.BedroomsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBathroomsNull() {
                return this.IsNull(this.tabletAA_Object.BathroomsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBathroomsNull() {
                this[this.tabletAA_Object.BathroomsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRentalNull() {
                return this.IsNull(this.tabletAA_Object.RentalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRentalNull() {
                this[this.tabletAA_Object.RentalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearSepticNull() {
                return this.IsNull(this.tabletAA_Object.YearSepticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearSepticNull() {
                this[this.tabletAA_Object.YearSepticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearWaterNull() {
                return this.IsNull(this.tabletAA_Object.YearWaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearWaterNull() {
                this[this.tabletAA_Object.YearWaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearBuiltNull() {
                return this.IsNull(this.tabletAA_Object.YearBuiltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearBuiltNull() {
                this[this.tabletAA_Object.YearBuiltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveAgeNull() {
                return this.IsNull(this.tabletAA_Object.EffectiveAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveAgeNull() {
                this[this.tabletAA_Object.EffectiveAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLifeNull() {
                return this.IsNull(this.tabletAA_Object.LifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLifeNull() {
                this[this.tabletAA_Object.LifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearRemodelNull() {
                return this.IsNull(this.tabletAA_Object.YearRemodelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearRemodelNull() {
                this[this.tabletAA_Object.YearRemodelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConditionNull() {
                return this.IsNull(this.tabletAA_Object.ConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConditionNull() {
                this[this.tabletAA_Object.ConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Object.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Object.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Object.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Object.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Object.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Object.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Object.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Object.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_Object.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_Object.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconversionNull() {
                return this.IsNull(this.tabletAA_Object.conversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconversionNull() {
                this[this.tabletAA_Object.conversionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPageIDNull() {
                return this.IsNull(this.tabletAA_Object.PageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPageIDNull() {
                this[this.tabletAA_Object.PageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAgricultureNull() {
                return this.IsNull(this.tabletAA_Object.IsAgricultureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAgricultureNull() {
                this[this.tabletAA_Object.IsAgricultureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassIDNull() {
                return this.IsNull(this.tabletAA_Object.ClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassIDNull() {
                this[this.tabletAA_Object.ClassIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_ParcelValueRow : global::System.Data.DataRow {
            
            private tAA_ParcelValueDataTable tabletAA_ParcelValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ParcelValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_ParcelValue = ((tAA_ParcelValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ParcelValue.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O1ValueA {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O1ValueAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O1ValueA\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O1ValueAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O1ValueB {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O1ValueBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O1ValueB\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O1ValueBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O1ValueC {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O1ValueCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O1ValueC\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O1ValueCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O1ValueD {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O1ValueDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O1ValueD\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O1ValueDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O1ValueE {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O1ValueEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O1ValueE\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O1ValueEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O2ValueA {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O2ValueAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2ValueA\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O2ValueAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O2ValueB {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O2ValueBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2ValueB\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O2ValueBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O2ValueC {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O2ValueCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2ValueC\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O2ValueCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O2ValueD {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O2ValueDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2ValueD\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O2ValueDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O2ValueE {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O2ValueEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2ValueE\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O2ValueEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O3ValueA {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O3ValueAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O3ValueA\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O3ValueAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O3ValueB {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O3ValueBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O3ValueB\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O3ValueBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O3ValueC {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O3ValueCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O3ValueC\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O3ValueCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O3ValueD {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O3ValueDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O3ValueD\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O3ValueDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O3ValueE {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.O3ValueEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O3ValueE\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.O3ValueEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResultingTaxable {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ParcelValue.ResultingTaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultingTaxable\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.ResultingTaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_ParcelValue.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ParcelValue.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_ParcelValue.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ParcelValue.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ParcelValue.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_ParcelValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelValue.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_ParcelValue.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_ParcelValue.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO1ValueANull() {
                return this.IsNull(this.tabletAA_ParcelValue.O1ValueAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO1ValueANull() {
                this[this.tabletAA_ParcelValue.O1ValueAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO1ValueBNull() {
                return this.IsNull(this.tabletAA_ParcelValue.O1ValueBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO1ValueBNull() {
                this[this.tabletAA_ParcelValue.O1ValueBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO1ValueCNull() {
                return this.IsNull(this.tabletAA_ParcelValue.O1ValueCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO1ValueCNull() {
                this[this.tabletAA_ParcelValue.O1ValueCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO1ValueDNull() {
                return this.IsNull(this.tabletAA_ParcelValue.O1ValueDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO1ValueDNull() {
                this[this.tabletAA_ParcelValue.O1ValueDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO1ValueENull() {
                return this.IsNull(this.tabletAA_ParcelValue.O1ValueEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO1ValueENull() {
                this[this.tabletAA_ParcelValue.O1ValueEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO2ValueANull() {
                return this.IsNull(this.tabletAA_ParcelValue.O2ValueAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO2ValueANull() {
                this[this.tabletAA_ParcelValue.O2ValueAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO2ValueBNull() {
                return this.IsNull(this.tabletAA_ParcelValue.O2ValueBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO2ValueBNull() {
                this[this.tabletAA_ParcelValue.O2ValueBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO2ValueCNull() {
                return this.IsNull(this.tabletAA_ParcelValue.O2ValueCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO2ValueCNull() {
                this[this.tabletAA_ParcelValue.O2ValueCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO2ValueDNull() {
                return this.IsNull(this.tabletAA_ParcelValue.O2ValueDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO2ValueDNull() {
                this[this.tabletAA_ParcelValue.O2ValueDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO2ValueENull() {
                return this.IsNull(this.tabletAA_ParcelValue.O2ValueEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO2ValueENull() {
                this[this.tabletAA_ParcelValue.O2ValueEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO3ValueANull() {
                return this.IsNull(this.tabletAA_ParcelValue.O3ValueAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO3ValueANull() {
                this[this.tabletAA_ParcelValue.O3ValueAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO3ValueBNull() {
                return this.IsNull(this.tabletAA_ParcelValue.O3ValueBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO3ValueBNull() {
                this[this.tabletAA_ParcelValue.O3ValueBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO3ValueCNull() {
                return this.IsNull(this.tabletAA_ParcelValue.O3ValueCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO3ValueCNull() {
                this[this.tabletAA_ParcelValue.O3ValueCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO3ValueDNull() {
                return this.IsNull(this.tabletAA_ParcelValue.O3ValueDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO3ValueDNull() {
                this[this.tabletAA_ParcelValue.O3ValueDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO3ValueENull() {
                return this.IsNull(this.tabletAA_ParcelValue.O3ValueEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO3ValueENull() {
                this[this.tabletAA_ParcelValue.O3ValueEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultingTaxableNull() {
                return this.IsNull(this.tabletAA_ParcelValue.ResultingTaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultingTaxableNull() {
                this[this.tabletAA_ParcelValue.ResultingTaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_ParcelValue.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_ParcelValue.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_ParcelValue.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_ParcelValue.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_ParcelValue.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_ParcelValue.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_ParcelValue.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_ParcelValue.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_ParcelValue.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_ParcelValue.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_ParcelRow : global::System.Data.DataRow {
            
            private tAA_ParcelDataTable tabletAA_Parcel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ParcelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Parcel = ((tAA_ParcelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.ParcelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Parcel.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FIPS {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.FIPSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIPS\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.FIPSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ParcelTypeID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Parcel.ParcelTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelTypeID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ParcelTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetired {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.IsRetiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRetired\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.IsRetiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAppraisalBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LockAppraisalByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAppraisalBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LockAppraisalByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAssessmentBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LockAssessmentByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAssessmentBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LockAssessmentByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockValueBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LockValueByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockValueBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LockValueByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAdminBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LockAdminByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAdminBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LockAdminByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O1Value {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Parcel.O1ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O1Value\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.O1ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O2Value {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Parcel.O2ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2Value\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.O2ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O3Value {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Parcel.O3ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O3Value\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.O3ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.NBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.NBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TaxDistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.TaxDistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxDistrictID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.TaxDistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateCode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.StateCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StateCode\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.StateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID1 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID1\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID2 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID2\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID3 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID3\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID4 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID4\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID5 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID5\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MapNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapNumber\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MapNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CAMAModelID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Parcel.CAMAModelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAMAModelID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.CAMAModelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AAModelID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Parcel.AAModelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AAModelID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.AAModelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MortgageID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.MortgageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MortgageID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MortgageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoanNumber {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LoanNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoanNumber\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LoanNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerPrimary {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.IsOwnerPrimaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOwnerPrimary\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.IsOwnerPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Parcel.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Field1 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.Field1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Field1\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.Field1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Field2 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.Field2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Field2\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.Field2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Field3 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.Field3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Field3\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.Field3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Field4 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.Field4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Field4\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.Field4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Field5 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.Field5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Field5\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.Field5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AssessmentTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Parcel.AssessmentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessmentTypeID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.AssessmentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID6 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID6\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID7 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID7\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID8 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID8\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ImprovementID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImprovementID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LandTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LandTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte FieldStatusID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Parcel.FieldStatusIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldStatusID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.FieldStatusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InspectedByUserID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.InspectedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InspectedByUserID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.InspectedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateInspected {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Parcel.DateInspectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateInspected\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.DateInspectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short InspectionTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Parcel.InspectionTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InspectionTypeID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.InspectionTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReviewedByUserID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ReviewedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewedByUserID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ReviewedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReviewDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Parcel.ReviewDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewDate\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ReviewDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Lat {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Parcel.LatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lat\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Long {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Parcel.LongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Long\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte UndividedOwnershipID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Parcel.UndividedOwnershipIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UndividedOwnershipID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.UndividedOwnershipIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AglandImprovementClass {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.AglandImprovementClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AglandImprovementClass\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.AglandImprovementClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NonAgImprovementClass {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.NonAgImprovementClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonAgImprovementClass\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.NonAgImprovementClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassAgLandID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ClassAgLandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassAgLandID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ClassAgLandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAgLandID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ClassNonAgLandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAgLandID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ClassNonAgLandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassAgImprovementID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ClassAgImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassAgImprovementID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ClassAgImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAgImprovementID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ClassNonAgImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAgImprovementID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ClassNonAgImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAgResidentialID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ClassNonAgResidentialIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAgResidentialID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ClassNonAgResidentialIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerOccupiedID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.OwnerOccupiedIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerOccupiedID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.OwnerOccupiedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_Parcel.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tabletAA_Parcel.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tabletAA_Parcel.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_Parcel.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_Parcel.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIPSNull() {
                return this.IsNull(this.tabletAA_Parcel.FIPSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIPSNull() {
                this[this.tabletAA_Parcel.FIPSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelTypeIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ParcelTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelTypeIDNull() {
                this[this.tabletAA_Parcel.ParcelTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_Parcel.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_Parcel.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRetiredNull() {
                return this.IsNull(this.tabletAA_Parcel.IsRetiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRetiredNull() {
                this[this.tabletAA_Parcel.IsRetiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_Parcel.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_Parcel.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAppraisalByNull() {
                return this.IsNull(this.tabletAA_Parcel.LockAppraisalByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAppraisalByNull() {
                this[this.tabletAA_Parcel.LockAppraisalByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAssessmentByNull() {
                return this.IsNull(this.tabletAA_Parcel.LockAssessmentByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAssessmentByNull() {
                this[this.tabletAA_Parcel.LockAssessmentByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockValueByNull() {
                return this.IsNull(this.tabletAA_Parcel.LockValueByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockValueByNull() {
                this[this.tabletAA_Parcel.LockValueByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAdminByNull() {
                return this.IsNull(this.tabletAA_Parcel.LockAdminByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAdminByNull() {
                this[this.tabletAA_Parcel.LockAdminByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO1ValueNull() {
                return this.IsNull(this.tabletAA_Parcel.O1ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO1ValueNull() {
                this[this.tabletAA_Parcel.O1ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO2ValueNull() {
                return this.IsNull(this.tabletAA_Parcel.O2ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO2ValueNull() {
                this[this.tabletAA_Parcel.O2ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO3ValueNull() {
                return this.IsNull(this.tabletAA_Parcel.O3ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO3ValueNull() {
                this[this.tabletAA_Parcel.O3ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tabletAA_Parcel.NBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tabletAA_Parcel.NBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxDistrictIDNull() {
                return this.IsNull(this.tabletAA_Parcel.TaxDistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxDistrictIDNull() {
                this[this.tabletAA_Parcel.TaxDistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeNull() {
                return this.IsNull(this.tabletAA_Parcel.StateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeNull() {
                this[this.tabletAA_Parcel.StateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID1Null() {
                return this.IsNull(this.tabletAA_Parcel.MID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID1Null() {
                this[this.tabletAA_Parcel.MID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID2Null() {
                return this.IsNull(this.tabletAA_Parcel.MID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID2Null() {
                this[this.tabletAA_Parcel.MID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID3Null() {
                return this.IsNull(this.tabletAA_Parcel.MID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID3Null() {
                this[this.tabletAA_Parcel.MID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID4Null() {
                return this.IsNull(this.tabletAA_Parcel.MID4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID4Null() {
                this[this.tabletAA_Parcel.MID4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID5Null() {
                return this.IsNull(this.tabletAA_Parcel.MID5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID5Null() {
                this[this.tabletAA_Parcel.MID5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapNumberNull() {
                return this.IsNull(this.tabletAA_Parcel.MapNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapNumberNull() {
                this[this.tabletAA_Parcel.MapNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAMAModelIDNull() {
                return this.IsNull(this.tabletAA_Parcel.CAMAModelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAMAModelIDNull() {
                this[this.tabletAA_Parcel.CAMAModelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAAModelIDNull() {
                return this.IsNull(this.tabletAA_Parcel.AAModelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAAModelIDNull() {
                this[this.tabletAA_Parcel.AAModelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMortgageIDNull() {
                return this.IsNull(this.tabletAA_Parcel.MortgageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMortgageIDNull() {
                this[this.tabletAA_Parcel.MortgageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoanNumberNull() {
                return this.IsNull(this.tabletAA_Parcel.LoanNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoanNumberNull() {
                this[this.tabletAA_Parcel.LoanNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOwnerPrimaryNull() {
                return this.IsNull(this.tabletAA_Parcel.IsOwnerPrimaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOwnerPrimaryNull() {
                this[this.tabletAA_Parcel.IsOwnerPrimaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Parcel.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Parcel.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Parcel.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Parcel.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Parcel.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Parcel.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Parcel.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_Parcel.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_Parcel.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField1Null() {
                return this.IsNull(this.tabletAA_Parcel.Field1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField1Null() {
                this[this.tabletAA_Parcel.Field1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField2Null() {
                return this.IsNull(this.tabletAA_Parcel.Field2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField2Null() {
                this[this.tabletAA_Parcel.Field2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField3Null() {
                return this.IsNull(this.tabletAA_Parcel.Field3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField3Null() {
                this[this.tabletAA_Parcel.Field3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField4Null() {
                return this.IsNull(this.tabletAA_Parcel.Field4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField4Null() {
                this[this.tabletAA_Parcel.Field4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField5Null() {
                return this.IsNull(this.tabletAA_Parcel.Field5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField5Null() {
                this[this.tabletAA_Parcel.Field5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessmentTypeIDNull() {
                return this.IsNull(this.tabletAA_Parcel.AssessmentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessmentTypeIDNull() {
                this[this.tabletAA_Parcel.AssessmentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID6Null() {
                return this.IsNull(this.tabletAA_Parcel.MID6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID6Null() {
                this[this.tabletAA_Parcel.MID6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID7Null() {
                return this.IsNull(this.tabletAA_Parcel.MID7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID7Null() {
                this[this.tabletAA_Parcel.MID7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID8Null() {
                return this.IsNull(this.tabletAA_Parcel.MID8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID8Null() {
                this[this.tabletAA_Parcel.MID8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImprovementIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImprovementIDNull() {
                this[this.tabletAA_Parcel.ImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeIDNull() {
                return this.IsNull(this.tabletAA_Parcel.LandTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeIDNull() {
                this[this.tabletAA_Parcel.LandTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFieldStatusIDNull() {
                return this.IsNull(this.tabletAA_Parcel.FieldStatusIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFieldStatusIDNull() {
                this[this.tabletAA_Parcel.FieldStatusIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectedByUserIDNull() {
                return this.IsNull(this.tabletAA_Parcel.InspectedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectedByUserIDNull() {
                this[this.tabletAA_Parcel.InspectedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateInspectedNull() {
                return this.IsNull(this.tabletAA_Parcel.DateInspectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateInspectedNull() {
                this[this.tabletAA_Parcel.DateInspectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectionTypeIDNull() {
                return this.IsNull(this.tabletAA_Parcel.InspectionTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectionTypeIDNull() {
                this[this.tabletAA_Parcel.InspectionTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewedByUserIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ReviewedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewedByUserIDNull() {
                this[this.tabletAA_Parcel.ReviewedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewDateNull() {
                return this.IsNull(this.tabletAA_Parcel.ReviewDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewDateNull() {
                this[this.tabletAA_Parcel.ReviewDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatNull() {
                return this.IsNull(this.tabletAA_Parcel.LatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatNull() {
                this[this.tabletAA_Parcel.LatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongNull() {
                return this.IsNull(this.tabletAA_Parcel.LongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongNull() {
                this[this.tabletAA_Parcel.LongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUndividedOwnershipIDNull() {
                return this.IsNull(this.tabletAA_Parcel.UndividedOwnershipIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUndividedOwnershipIDNull() {
                this[this.tabletAA_Parcel.UndividedOwnershipIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAglandImprovementClassNull() {
                return this.IsNull(this.tabletAA_Parcel.AglandImprovementClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAglandImprovementClassNull() {
                this[this.tabletAA_Parcel.AglandImprovementClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonAgImprovementClassNull() {
                return this.IsNull(this.tabletAA_Parcel.NonAgImprovementClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonAgImprovementClassNull() {
                this[this.tabletAA_Parcel.NonAgImprovementClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassAgLandIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ClassAgLandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassAgLandIDNull() {
                this[this.tabletAA_Parcel.ClassAgLandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAgLandIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ClassNonAgLandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAgLandIDNull() {
                this[this.tabletAA_Parcel.ClassNonAgLandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassAgImprovementIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ClassAgImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassAgImprovementIDNull() {
                this[this.tabletAA_Parcel.ClassAgImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAgImprovementIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ClassNonAgImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAgImprovementIDNull() {
                this[this.tabletAA_Parcel.ClassNonAgImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAgResidentialIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ClassNonAgResidentialIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAgResidentialIDNull() {
                this[this.tabletAA_Parcel.ClassNonAgResidentialIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerOccupiedIDNull() {
                return this.IsNull(this.tabletAA_Parcel.OwnerOccupiedIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerOccupiedIDNull() {
                this[this.tabletAA_Parcel.OwnerOccupiedIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_VSTerraGonRow : global::System.Data.DataRow {
            
            private tAA_VSTerraGonDataTable tabletAA_VSTerraGon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_VSTerraGonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_VSTerraGon = ((tAA_VSTerraGonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TerraGonID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_VSTerraGon.TerraGonIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TerraGonID\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.TerraGonIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ObjectID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_VSTerraGon.ObjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectID\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.ObjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ShapeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_VSTerraGon.ShapeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShapeID\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.ShapeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short VSTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_VSTerraGon.VSTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VSTypeID\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.VSTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KeyID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_VSTerraGon.KeyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeyID\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.KeyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_VSTerraGon.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseArea {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.BaseAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseArea\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.BaseAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Multiplier {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.MultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Multiplier\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.MultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalArea {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.TotalAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalArea\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.TotalAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Length {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Width {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Width\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short YearBuilt {
                get {
                    try {
                        return ((short)(this[this.tabletAA_VSTerraGon.YearBuiltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearBuilt\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.YearBuiltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Estimated {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_VSTerraGon.EstimatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Estimated\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.EstimatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CLQuality {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.CLQualityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CLQuality\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.CLQualityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ORQuality {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.ORQualityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORQuality\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.ORQualityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CLCondition {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.CLConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CLCondition\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.CLConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ORCondition {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.ORConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORCondition\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.ORConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RemodelTypeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_VSTerraGon.RemodelTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemodelTypeID\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.RemodelTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RemodelYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_VSTerraGon.RemodelYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemodelYear\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.RemodelYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Factor {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.FactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Factor\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.FactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Through {
                get {
                    try {
                        return ((short)(this[this.tabletAA_VSTerraGon.ThroughColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Through\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.ThroughColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte EconLife {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_VSTerraGon.EconLifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EconLife\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.EconLifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte EffectiveAge {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_VSTerraGon.EffectiveAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveAge\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.EffectiveAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte OREAge {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_VSTerraGon.OREAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OREAge\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.OREAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short EYearBuilt {
                get {
                    try {
                        return ((short)(this[this.tabletAA_VSTerraGon.EYearBuiltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EYearBuilt\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.EYearBuiltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PhysDepr {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.PhysDeprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysDepr\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.PhysDeprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PhysDeprOR {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.PhysDeprORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysDeprOR\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.PhysDeprORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FunctionalID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_VSTerraGon.FunctionalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FunctionalID\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.FunctionalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FunctionalDepr {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.FunctionalDeprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FunctionalDepr\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.FunctionalDeprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FunctionalDeprOR {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.FunctionalDeprORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FunctionalDeprOR\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.FunctionalDeprORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FunctionalReason {
                get {
                    try {
                        return ((string)(this[this.tabletAA_VSTerraGon.FunctionalReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FunctionalReason\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.FunctionalReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_VSTerraGon.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_VSTerraGon.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_VSTerraGon.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_VSTerraGon.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_VSTerraGon.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimary {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_VSTerraGon.IsPrimaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPrimary\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.IsPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PolygonID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_VSTerraGon.PolygonIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PolygonID\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.PolygonIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SketchBaseArea {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.SketchBaseAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SketchBaseArea\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.SketchBaseAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SketchMultiplier {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.SketchMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SketchMultiplier\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.SketchMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SketchTotalArea {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_VSTerraGon.SketchTotalAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SketchTotalArea\' in table \'tAA_VSTerraGon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_VSTerraGon.SketchTotalAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTerraGonIDNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.TerraGonIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTerraGonIDNull() {
                this[this.tabletAA_VSTerraGon.TerraGonIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectIDNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.ObjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectIDNull() {
                this[this.tabletAA_VSTerraGon.ObjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShapeIDNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.ShapeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShapeIDNull() {
                this[this.tabletAA_VSTerraGon.ShapeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVSTypeIDNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.VSTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVSTypeIDNull() {
                this[this.tabletAA_VSTerraGon.VSTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeyIDNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.KeyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeyIDNull() {
                this[this.tabletAA_VSTerraGon.KeyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_VSTerraGon.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseAreaNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.BaseAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseAreaNull() {
                this[this.tabletAA_VSTerraGon.BaseAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMultiplierNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.MultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMultiplierNull() {
                this[this.tabletAA_VSTerraGon.MultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAreaNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.TotalAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAreaNull() {
                this[this.tabletAA_VSTerraGon.TotalAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tabletAA_VSTerraGon.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWidthNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWidthNull() {
                this[this.tabletAA_VSTerraGon.WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearBuiltNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.YearBuiltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearBuiltNull() {
                this[this.tabletAA_VSTerraGon.YearBuiltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimatedNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.EstimatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimatedNull() {
                this[this.tabletAA_VSTerraGon.EstimatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLQualityNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.CLQualityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLQualityNull() {
                this[this.tabletAA_VSTerraGon.CLQualityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORQualityNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.ORQualityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORQualityNull() {
                this[this.tabletAA_VSTerraGon.ORQualityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLConditionNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.CLConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLConditionNull() {
                this[this.tabletAA_VSTerraGon.CLConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORConditionNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.ORConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORConditionNull() {
                this[this.tabletAA_VSTerraGon.ORConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemodelTypeIDNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.RemodelTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemodelTypeIDNull() {
                this[this.tabletAA_VSTerraGon.RemodelTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemodelYearNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.RemodelYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemodelYearNull() {
                this[this.tabletAA_VSTerraGon.RemodelYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFactorNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.FactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFactorNull() {
                this[this.tabletAA_VSTerraGon.FactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThroughNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.ThroughColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThroughNull() {
                this[this.tabletAA_VSTerraGon.ThroughColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEconLifeNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.EconLifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEconLifeNull() {
                this[this.tabletAA_VSTerraGon.EconLifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveAgeNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.EffectiveAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveAgeNull() {
                this[this.tabletAA_VSTerraGon.EffectiveAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOREAgeNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.OREAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOREAgeNull() {
                this[this.tabletAA_VSTerraGon.OREAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEYearBuiltNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.EYearBuiltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEYearBuiltNull() {
                this[this.tabletAA_VSTerraGon.EYearBuiltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhysDeprNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.PhysDeprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhysDeprNull() {
                this[this.tabletAA_VSTerraGon.PhysDeprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhysDeprORNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.PhysDeprORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhysDeprORNull() {
                this[this.tabletAA_VSTerraGon.PhysDeprORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunctionalIDNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.FunctionalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunctionalIDNull() {
                this[this.tabletAA_VSTerraGon.FunctionalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunctionalDeprNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.FunctionalDeprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunctionalDeprNull() {
                this[this.tabletAA_VSTerraGon.FunctionalDeprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunctionalDeprORNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.FunctionalDeprORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunctionalDeprORNull() {
                this[this.tabletAA_VSTerraGon.FunctionalDeprORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunctionalReasonNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.FunctionalReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunctionalReasonNull() {
                this[this.tabletAA_VSTerraGon.FunctionalReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_VSTerraGon.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_VSTerraGon.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_VSTerraGon.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_VSTerraGon.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_VSTerraGon.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPrimaryNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.IsPrimaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPrimaryNull() {
                this[this.tabletAA_VSTerraGon.IsPrimaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPolygonIDNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.PolygonIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPolygonIDNull() {
                this[this.tabletAA_VSTerraGon.PolygonIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSketchBaseAreaNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.SketchBaseAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSketchBaseAreaNull() {
                this[this.tabletAA_VSTerraGon.SketchBaseAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSketchMultiplierNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.SketchMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSketchMultiplierNull() {
                this[this.tabletAA_VSTerraGon.SketchMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSketchTotalAreaNull() {
                return this.IsNull(this.tabletAA_VSTerraGon.SketchTotalAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSketchTotalAreaNull() {
                this[this.tabletAA_VSTerraGon.SketchTotalAreaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type2Row : global::System.Data.DataRow {
            
            private tAA_MA_Type2DataTable tabletAA_MA_Type2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type2 = ((tAA_MA_Type2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type2.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type2.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type2.SiteAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteAcres\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.SiteAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DryAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type2.DryAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DryAcres\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.DryAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IrrigatedAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type2.IrrigatedAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigatedAcres\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.IrrigatedAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TimberAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type2.TimberAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimberAcres\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.TimberAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type2.OtherAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherAcres\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.OtherAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type2.BaseAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseAcres\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.BaseAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type2.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type2.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type2.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type2.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type2.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type2.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string amount {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MA_Type2.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type2.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type2.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type2.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type2.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type2.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type2.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type2.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type2.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type2.SiteAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteAcresNull() {
                this[this.tabletAA_MA_Type2.SiteAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDryAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type2.DryAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDryAcresNull() {
                this[this.tabletAA_MA_Type2.DryAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIrrigatedAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type2.IrrigatedAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIrrigatedAcresNull() {
                this[this.tabletAA_MA_Type2.IrrigatedAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimberAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type2.TimberAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimberAcresNull() {
                this[this.tabletAA_MA_Type2.TimberAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type2.OtherAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherAcresNull() {
                this[this.tabletAA_MA_Type2.OtherAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type2.BaseAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseAcresNull() {
                this[this.tabletAA_MA_Type2.BaseAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type2.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type2.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type2.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type2.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type2.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type2.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type2.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type2.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type2.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type2.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type2.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type2.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tabletAA_MA_Type2.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tabletAA_MA_Type2.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type2.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type2.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type2.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type2.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type2.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type2.IsOverrideColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type6Row : global::System.Data.DataRow {
            
            private tAA_MA_Type6DataTable tabletAA_MA_Type6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type6Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type6 = ((tAA_MA_Type6DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type6.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type6.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FirePatrolAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type6.FirePatrolAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirePatrolAcres\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.FirePatrolAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CountyFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type6.CountyFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyFee\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.CountyFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FPAFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type6.FPAFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FPAFee\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.FPAFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LCFFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type6.LCFFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCFFee\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.LCFFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FPARate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type6.FPARateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FPARate\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.FPARateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LCFRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type6.LCFRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCFRate\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.LCFRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type6.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type6.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type6.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type6.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type6.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type6.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string amount {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MA_Type6.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type6.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type6.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type6.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type6.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type6.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type6.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type6.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type6.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirePatrolAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type6.FirePatrolAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirePatrolAcresNull() {
                this[this.tabletAA_MA_Type6.FirePatrolAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyFeeNull() {
                return this.IsNull(this.tabletAA_MA_Type6.CountyFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyFeeNull() {
                this[this.tabletAA_MA_Type6.CountyFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFPAFeeNull() {
                return this.IsNull(this.tabletAA_MA_Type6.FPAFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFPAFeeNull() {
                this[this.tabletAA_MA_Type6.FPAFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLCFFeeNull() {
                return this.IsNull(this.tabletAA_MA_Type6.LCFFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLCFFeeNull() {
                this[this.tabletAA_MA_Type6.LCFFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFPARateNull() {
                return this.IsNull(this.tabletAA_MA_Type6.FPARateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFPARateNull() {
                this[this.tabletAA_MA_Type6.FPARateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLCFRateNull() {
                return this.IsNull(this.tabletAA_MA_Type6.LCFRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLCFRateNull() {
                this[this.tabletAA_MA_Type6.LCFRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type6.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type6.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type6.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type6.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type6.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type6.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type6.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type6.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type6.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type6.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type6.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type6.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tabletAA_MA_Type6.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tabletAA_MA_Type6.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type6.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type6.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type6.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type6.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type6.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type6.IsOverrideColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_DeprItemRow : global::System.Data.DataRow {
            
            private tAA_DeprItemDataTable tabletAA_DeprItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_DeprItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_DeprItem = ((tAA_DeprItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeprItemID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_DeprItem.DeprItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprItemID\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.DeprItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeprTableID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_DeprItem.DeprTableIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprTableID\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.DeprTableIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte EffectiveAge {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_DeprItem.EffectiveAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveAge\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.EffectiveAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr1 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_DeprItem.Depr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr1\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.Depr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr2 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_DeprItem.Depr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr2\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.Depr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr3 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_DeprItem.Depr3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr3\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.Depr3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr4 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_DeprItem.Depr4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr4\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.Depr4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr5 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_DeprItem.Depr5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr5\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.Depr5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr6 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_DeprItem.Depr6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr6\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.Depr6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_DeprItem.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_DeprItem.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_DeprItem.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_DeprItem.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_DeprItem.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_DeprItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_DeprItem.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprItemIDNull() {
                return this.IsNull(this.tabletAA_DeprItem.DeprItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprItemIDNull() {
                this[this.tabletAA_DeprItem.DeprItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprTableIDNull() {
                return this.IsNull(this.tabletAA_DeprItem.DeprTableIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprTableIDNull() {
                this[this.tabletAA_DeprItem.DeprTableIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveAgeNull() {
                return this.IsNull(this.tabletAA_DeprItem.EffectiveAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveAgeNull() {
                this[this.tabletAA_DeprItem.EffectiveAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr1Null() {
                return this.IsNull(this.tabletAA_DeprItem.Depr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr1Null() {
                this[this.tabletAA_DeprItem.Depr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr2Null() {
                return this.IsNull(this.tabletAA_DeprItem.Depr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr2Null() {
                this[this.tabletAA_DeprItem.Depr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr3Null() {
                return this.IsNull(this.tabletAA_DeprItem.Depr3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr3Null() {
                this[this.tabletAA_DeprItem.Depr3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr4Null() {
                return this.IsNull(this.tabletAA_DeprItem.Depr4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr4Null() {
                this[this.tabletAA_DeprItem.Depr4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr5Null() {
                return this.IsNull(this.tabletAA_DeprItem.Depr5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr5Null() {
                this[this.tabletAA_DeprItem.Depr5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr6Null() {
                return this.IsNull(this.tabletAA_DeprItem.Depr6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr6Null() {
                this[this.tabletAA_DeprItem.Depr6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_DeprItem.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_DeprItem.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_DeprItem.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_DeprItem.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_DeprItem.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_DeprItem.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_DeprItem.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_DeprItem.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_DeprItem.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_DeprItem.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_Misc_CatalogRow : global::System.Data.DataRow {
            
            private tAA_Misc_CatalogDataTable tabletAA_Misc_Catalog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_Misc_CatalogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Misc_Catalog = ((tAA_Misc_CatalogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MICodeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc_Catalog.MICodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MICodeID\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.MICodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Misc_Catalog.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MICode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.MICodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MICode\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.MICodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VFormula {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.VFormulaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VFormula\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.VFormulaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L01 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L01\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D01 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D01\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F01 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F01\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L02 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L02\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D02 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D02\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F02 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F02\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L03 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L03\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D03 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D03\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F03 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F03\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L04 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L04\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D04 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D04\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F04 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F04\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L05 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L05\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D05 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D05\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F05 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F05\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L06 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L06\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D06 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D06\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F06 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F06\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L07 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L07\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D07 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D07\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F07 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F07\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L08 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L08\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D08 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D08\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F08 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F08\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L09 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L09\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D09 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D09\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F09 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F09\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L10 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L10\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D10 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D10\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F10 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F10\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc_Catalog.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Misc_Catalog.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc_Catalog.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Misc_Catalog.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S01 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S01\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S02 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S02\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S03 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S03\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S04 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S04\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S05 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S05\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S06 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S06\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S07 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S07\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S08 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S08\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S09 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S09\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S10 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S10\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conversion {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.conversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conversion\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.conversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C01 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C01\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C02 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C02\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C03 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C03\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C04 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C04\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C05 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C05\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C06 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C06\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C07 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C07\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C08 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C08\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C09 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C09\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C10 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C10\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L11 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L11\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D11 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D11\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S11 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S11\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C11 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C11\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F11 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F11\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L12 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L12\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D12 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D12\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S12 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S12\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C12 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C12\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F12 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F12\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeprTableID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc_Catalog.DeprTableIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprTableID\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.DeprTableIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WithPrimary {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.WithPrimaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WithPrimary\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.WithPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMICodeIDNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.MICodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMICodeIDNull() {
                this[this.tabletAA_Misc_Catalog.MICodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_Misc_Catalog.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMICodeNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.MICodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMICodeNull() {
                this[this.tabletAA_Misc_Catalog.MICodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_Misc_Catalog.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVFormulaNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.VFormulaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVFormulaNull() {
                this[this.tabletAA_Misc_Catalog.VFormulaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL01Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL01Null() {
                this[this.tabletAA_Misc_Catalog.L01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD01Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD01Null() {
                this[this.tabletAA_Misc_Catalog.D01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF01Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF01Null() {
                this[this.tabletAA_Misc_Catalog.F01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL02Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL02Null() {
                this[this.tabletAA_Misc_Catalog.L02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD02Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD02Null() {
                this[this.tabletAA_Misc_Catalog.D02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF02Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF02Null() {
                this[this.tabletAA_Misc_Catalog.F02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL03Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL03Null() {
                this[this.tabletAA_Misc_Catalog.L03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD03Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD03Null() {
                this[this.tabletAA_Misc_Catalog.D03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF03Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF03Null() {
                this[this.tabletAA_Misc_Catalog.F03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL04Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL04Null() {
                this[this.tabletAA_Misc_Catalog.L04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD04Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD04Null() {
                this[this.tabletAA_Misc_Catalog.D04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF04Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF04Null() {
                this[this.tabletAA_Misc_Catalog.F04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL05Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL05Null() {
                this[this.tabletAA_Misc_Catalog.L05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD05Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD05Null() {
                this[this.tabletAA_Misc_Catalog.D05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF05Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF05Null() {
                this[this.tabletAA_Misc_Catalog.F05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL06Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL06Null() {
                this[this.tabletAA_Misc_Catalog.L06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD06Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD06Null() {
                this[this.tabletAA_Misc_Catalog.D06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF06Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF06Null() {
                this[this.tabletAA_Misc_Catalog.F06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL07Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL07Null() {
                this[this.tabletAA_Misc_Catalog.L07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD07Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD07Null() {
                this[this.tabletAA_Misc_Catalog.D07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF07Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF07Null() {
                this[this.tabletAA_Misc_Catalog.F07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL08Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL08Null() {
                this[this.tabletAA_Misc_Catalog.L08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD08Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD08Null() {
                this[this.tabletAA_Misc_Catalog.D08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF08Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF08Null() {
                this[this.tabletAA_Misc_Catalog.F08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL09Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL09Null() {
                this[this.tabletAA_Misc_Catalog.L09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD09Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD09Null() {
                this[this.tabletAA_Misc_Catalog.D09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF09Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF09Null() {
                this[this.tabletAA_Misc_Catalog.F09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL10Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL10Null() {
                this[this.tabletAA_Misc_Catalog.L10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD10Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD10Null() {
                this[this.tabletAA_Misc_Catalog.D10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF10Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF10Null() {
                this[this.tabletAA_Misc_Catalog.F10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Misc_Catalog.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Misc_Catalog.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Misc_Catalog.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_Misc_Catalog.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Misc_Catalog.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS01Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS01Null() {
                this[this.tabletAA_Misc_Catalog.S01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS02Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS02Null() {
                this[this.tabletAA_Misc_Catalog.S02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS03Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS03Null() {
                this[this.tabletAA_Misc_Catalog.S03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS04Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS04Null() {
                this[this.tabletAA_Misc_Catalog.S04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS05Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS05Null() {
                this[this.tabletAA_Misc_Catalog.S05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS06Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS06Null() {
                this[this.tabletAA_Misc_Catalog.S06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS07Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS07Null() {
                this[this.tabletAA_Misc_Catalog.S07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS08Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS08Null() {
                this[this.tabletAA_Misc_Catalog.S08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS09Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS09Null() {
                this[this.tabletAA_Misc_Catalog.S09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS10Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS10Null() {
                this[this.tabletAA_Misc_Catalog.S10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconversionNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.conversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconversionNull() {
                this[this.tabletAA_Misc_Catalog.conversionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC01Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC01Null() {
                this[this.tabletAA_Misc_Catalog.C01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC02Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC02Null() {
                this[this.tabletAA_Misc_Catalog.C02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC03Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC03Null() {
                this[this.tabletAA_Misc_Catalog.C03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC04Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC04Null() {
                this[this.tabletAA_Misc_Catalog.C04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC05Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC05Null() {
                this[this.tabletAA_Misc_Catalog.C05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC06Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC06Null() {
                this[this.tabletAA_Misc_Catalog.C06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC07Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC07Null() {
                this[this.tabletAA_Misc_Catalog.C07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC08Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC08Null() {
                this[this.tabletAA_Misc_Catalog.C08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC09Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC09Null() {
                this[this.tabletAA_Misc_Catalog.C09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC10Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC10Null() {
                this[this.tabletAA_Misc_Catalog.C10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL11Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL11Null() {
                this[this.tabletAA_Misc_Catalog.L11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD11Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD11Null() {
                this[this.tabletAA_Misc_Catalog.D11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS11Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS11Null() {
                this[this.tabletAA_Misc_Catalog.S11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC11Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC11Null() {
                this[this.tabletAA_Misc_Catalog.C11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF11Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF11Null() {
                this[this.tabletAA_Misc_Catalog.F11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL12Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL12Null() {
                this[this.tabletAA_Misc_Catalog.L12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD12Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD12Null() {
                this[this.tabletAA_Misc_Catalog.D12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS12Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS12Null() {
                this[this.tabletAA_Misc_Catalog.S12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC12Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC12Null() {
                this[this.tabletAA_Misc_Catalog.C12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF12Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF12Null() {
                this[this.tabletAA_Misc_Catalog.F12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprTableIDNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.DeprTableIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprTableIDNull() {
                this[this.tabletAA_Misc_Catalog.DeprTableIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWithPrimaryNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.WithPrimaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWithPrimaryNull() {
                this[this.tabletAA_Misc_Catalog.WithPrimaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_DeprRow : global::System.Data.DataRow {
            
            private tAA_DeprDataTable tabletAA_Depr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_DeprRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Depr = ((tAA_DeprDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeprTableID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Depr.DeprTableIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprTableID\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.DeprTableIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Depr.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeprName {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Depr.DeprNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprName\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.DeprNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Depr.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Life {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Depr.LifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Life\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.LifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Depr.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc1 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Depr.Desc1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc1\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Desc1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cond1 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Depr.Cond1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond1\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Cond1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc2 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Depr.Desc2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc2\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Desc2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cond2 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Depr.Cond2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond2\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Cond2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc3 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Depr.Desc3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc3\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Desc3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cond3 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Depr.Cond3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond3\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Cond3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc4 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Depr.Desc4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc4\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Desc4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cond4 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Depr.Cond4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond4\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Cond4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc5 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Depr.Desc5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc5\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Desc5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cond5 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Depr.Cond5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond5\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Cond5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc6 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Depr.Desc6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc6\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Desc6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cond6 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Depr.Cond6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond6\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.Cond6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalProperty {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Depr.IsPersonalPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPersonalProperty\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.IsPersonalPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Depr.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Depr.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Depr.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Depr.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Depr.IsdeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Isdeleted\' in table \'tAA_Depr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Depr.IsdeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprTableIDNull() {
                return this.IsNull(this.tabletAA_Depr.DeprTableIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprTableIDNull() {
                this[this.tabletAA_Depr.DeprTableIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_Depr.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_Depr.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprNameNull() {
                return this.IsNull(this.tabletAA_Depr.DeprNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprNameNull() {
                this[this.tabletAA_Depr.DeprNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletAA_Depr.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletAA_Depr.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLifeNull() {
                return this.IsNull(this.tabletAA_Depr.LifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLifeNull() {
                this[this.tabletAA_Depr.LifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_Depr.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_Depr.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc1Null() {
                return this.IsNull(this.tabletAA_Depr.Desc1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc1Null() {
                this[this.tabletAA_Depr.Desc1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond1Null() {
                return this.IsNull(this.tabletAA_Depr.Cond1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond1Null() {
                this[this.tabletAA_Depr.Cond1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc2Null() {
                return this.IsNull(this.tabletAA_Depr.Desc2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc2Null() {
                this[this.tabletAA_Depr.Desc2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond2Null() {
                return this.IsNull(this.tabletAA_Depr.Cond2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond2Null() {
                this[this.tabletAA_Depr.Cond2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc3Null() {
                return this.IsNull(this.tabletAA_Depr.Desc3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc3Null() {
                this[this.tabletAA_Depr.Desc3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond3Null() {
                return this.IsNull(this.tabletAA_Depr.Cond3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond3Null() {
                this[this.tabletAA_Depr.Cond3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc4Null() {
                return this.IsNull(this.tabletAA_Depr.Desc4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc4Null() {
                this[this.tabletAA_Depr.Desc4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond4Null() {
                return this.IsNull(this.tabletAA_Depr.Cond4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond4Null() {
                this[this.tabletAA_Depr.Cond4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc5Null() {
                return this.IsNull(this.tabletAA_Depr.Desc5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc5Null() {
                this[this.tabletAA_Depr.Desc5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond5Null() {
                return this.IsNull(this.tabletAA_Depr.Cond5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond5Null() {
                this[this.tabletAA_Depr.Cond5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc6Null() {
                return this.IsNull(this.tabletAA_Depr.Desc6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc6Null() {
                this[this.tabletAA_Depr.Desc6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond6Null() {
                return this.IsNull(this.tabletAA_Depr.Cond6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond6Null() {
                this[this.tabletAA_Depr.Cond6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPersonalPropertyNull() {
                return this.IsNull(this.tabletAA_Depr.IsPersonalPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPersonalPropertyNull() {
                this[this.tabletAA_Depr.IsPersonalPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Depr.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Depr.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Depr.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Depr.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Depr.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Depr.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Depr.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Depr.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsdeletedNull() {
                return this.IsNull(this.tabletAA_Depr.IsdeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsdeletedNull() {
                this[this.tabletAA_Depr.IsdeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_ApexPolygonRow : global::System.Data.DataRow {
            
            private tAA_ApexPolygonDataTable tabletAA_ApexPolygon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ApexPolygonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_ApexPolygon = ((tAA_ApexPolygonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PolygonID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ApexPolygon.PolygonIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PolygonID\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.PolygonIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_ApexPolygon.ParcelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UniqueID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ApexPolygon.UniqueIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UniqueID\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.UniqueIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AreaCode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_ApexPolygon.AreaCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaCode\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.AreaCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AreaSize {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ApexPolygon.AreaSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaSize\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.AreaSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Multiplier {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ApexPolygon.MultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Multiplier\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.MultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_ApexPolygon.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Page {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ApexPolygon.PageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Page\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.PageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Perimeter {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ApexPolygon.PerimeterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perimeter\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.PerimeterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssociated {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ApexPolygon.IsAssociatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAssociated\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.IsAssociatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_ApexPolygon.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ApexPolygon.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_ApexPolygon.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ApexPolygon.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ApexPolygon.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_ApexPolygon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ApexPolygon.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPolygonIDNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.PolygonIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPolygonIDNull() {
                this[this.tabletAA_ApexPolygon.PolygonIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tabletAA_ApexPolygon.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUniqueIDNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.UniqueIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUniqueIDNull() {
                this[this.tabletAA_ApexPolygon.UniqueIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaCodeNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.AreaCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaCodeNull() {
                this[this.tabletAA_ApexPolygon.AreaCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaSizeNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.AreaSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaSizeNull() {
                this[this.tabletAA_ApexPolygon.AreaSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMultiplierNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.MultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMultiplierNull() {
                this[this.tabletAA_ApexPolygon.MultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_ApexPolygon.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPageNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.PageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPageNull() {
                this[this.tabletAA_ApexPolygon.PageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerimeterNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.PerimeterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerimeterNull() {
                this[this.tabletAA_ApexPolygon.PerimeterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAssociatedNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.IsAssociatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAssociatedNull() {
                this[this.tabletAA_ApexPolygon.IsAssociatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_ApexPolygon.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_ApexPolygon.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_ApexPolygon.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_ApexPolygon.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_ApexPolygon.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_ApexPolygon.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_LandType1Row : global::System.Data.DataRow {
            
            private tAA_LandType1DataTable tabletAA_LandType1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandType1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_LandType1 = ((tAA_LandType1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandType1.LandTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID\' in table \'tAA_LandType1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandType1.LandTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_LandType1.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_LandType1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandType1.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandType {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandType1.LandTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandType\' in table \'tAA_LandType1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandType1.LandTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandType1.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_LandType1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandType1.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_LandType1.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_LandType1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandType1.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandType1.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_LandType1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandType1.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_LandType1.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_LandType1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandType1.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandType1.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_LandType1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandType1.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_LandType1.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_LandType1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandType1.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeIDNull() {
                return this.IsNull(this.tabletAA_LandType1.LandTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeIDNull() {
                this[this.tabletAA_LandType1.LandTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_LandType1.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_LandType1.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeNull() {
                return this.IsNull(this.tabletAA_LandType1.LandTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeNull() {
                this[this.tabletAA_LandType1.LandTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_LandType1.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_LandType1.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_LandType1.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_LandType1.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_LandType1.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_LandType1.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_LandType1.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_LandType1.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_LandType1.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_LandType1.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_LandType1.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_LandType1.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_QueryViewLayoutRow : global::System.Data.DataRow {
            
            private tTS_QueryViewLayoutDataTable tabletTS_QueryViewLayout;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_QueryViewLayoutRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_QueryViewLayout = ((tTS_QueryViewLayoutDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QueryLayoutID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryViewLayout.QueryLayoutIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QueryLayoutID\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.QueryLayoutIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QueryViewID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryViewLayout.QueryViewIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QueryViewID\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.QueryViewIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QueryView {
                get {
                    try {
                        return ((string)(this[this.tabletTS_QueryViewLayout.QueryViewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QueryView\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.QueryViewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LayoutName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_QueryViewLayout.LayoutNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LayoutName\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.LayoutNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryViewLayout.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllUsers {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_QueryViewLayout.IsAllUsersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAllUsers\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.IsAllUsersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefault {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_QueryViewLayout.IsDefaultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDefault\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.IsDefaultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTSOnly {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_QueryViewLayout.IsTSOnlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTSOnly\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.IsTSOnlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LayoutXML {
                get {
                    try {
                        return ((string)(this[this.tabletTS_QueryViewLayout.LayoutXMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LayoutXML\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.LayoutXMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryViewLayout.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryViewLayout.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_QueryViewLayout.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryViewLayout.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_QueryViewLayout.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_QueryViewLayout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryViewLayout.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQueryLayoutIDNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.QueryLayoutIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQueryLayoutIDNull() {
                this[this.tabletTS_QueryViewLayout.QueryLayoutIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQueryViewIDNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.QueryViewIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQueryViewIDNull() {
                this[this.tabletTS_QueryViewLayout.QueryViewIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQueryViewNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.QueryViewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQueryViewNull() {
                this[this.tabletTS_QueryViewLayout.QueryViewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLayoutNameNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.LayoutNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLayoutNameNull() {
                this[this.tabletTS_QueryViewLayout.LayoutNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tabletTS_QueryViewLayout.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAllUsersNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.IsAllUsersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAllUsersNull() {
                this[this.tabletTS_QueryViewLayout.IsAllUsersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDefaultNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.IsDefaultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDefaultNull() {
                this[this.tabletTS_QueryViewLayout.IsDefaultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsTSOnlyNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.IsTSOnlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsTSOnlyNull() {
                this[this.tabletTS_QueryViewLayout.IsTSOnlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLayoutXMLNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.LayoutXMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLayoutXMLNull() {
                this[this.tabletTS_QueryViewLayout.LayoutXMLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_QueryViewLayout.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_QueryViewLayout.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_QueryViewLayout.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_QueryViewLayout.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_QueryViewLayout.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_QueryViewLayout.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_Exemption_Type1Row : global::System.Data.DataRow {
            
            private tTS_Exemption_Type1DataTable tabletTS_Exemption_Type1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_Exemption_Type1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_Exemption_Type1 = ((tTS_Exemption_Type1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExemptionID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Exemption_Type1.ExemptionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExemptionID\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.ExemptionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExemptionCode {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Exemption_Type1.ExemptionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExemptionCode\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.ExemptionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Exemption_Type1.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExemptionPercent {
                get {
                    try {
                        return ((decimal)(this[this.tabletTS_Exemption_Type1.ExemptionPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExemptionPercent\' in table \'tTS_Exemption_Type1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.ExemptionPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Minimum {
                get {
                    try {
                        return ((decimal)(this[this.tabletTS_Exemption_Type1.MinimumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Minimum\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.MinimumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Maximum {
                get {
                    try {
                        return ((decimal)(this[this.tabletTS_Exemption_Type1.MaximumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Maximum\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.MaximumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AbstractCode {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Exemption_Type1.AbstractCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbstractCode\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.AbstractCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Exemption_Type1.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Exemption_Type1.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_Exemption_Type1.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Exemption_Type1.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Exemption_Type1.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IncomeMin {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Exemption_Type1.IncomeMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeMin\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.IncomeMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IncomeMax {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Exemption_Type1.IncomeMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncomeMax\' in table \'tTS_Exemption_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Exemption_Type1.IncomeMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptionIDNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.ExemptionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptionIDNull() {
                this[this.tabletTS_Exemption_Type1.ExemptionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptionCodeNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.ExemptionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptionCodeNull() {
                this[this.tabletTS_Exemption_Type1.ExemptionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletTS_Exemption_Type1.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptionPercentNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.ExemptionPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptionPercentNull() {
                this[this.tabletTS_Exemption_Type1.ExemptionPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimumNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.MinimumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimumNull() {
                this[this.tabletTS_Exemption_Type1.MinimumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaximumNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.MaximumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaximumNull() {
                this[this.tabletTS_Exemption_Type1.MaximumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbstractCodeNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.AbstractCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbstractCodeNull() {
                this[this.tabletTS_Exemption_Type1.AbstractCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_Exemption_Type1.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_Exemption_Type1.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_Exemption_Type1.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_Exemption_Type1.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_Exemption_Type1.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeMinNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.IncomeMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeMinNull() {
                this[this.tabletTS_Exemption_Type1.IncomeMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeMaxNull() {
                return this.IsNull(this.tabletTS_Exemption_Type1.IncomeMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeMaxNull() {
                this[this.tabletTS_Exemption_Type1.IncomeMaxColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_LandInfluenceItemRow : global::System.Data.DataRow {
            
            private tAA_LandInfluenceItemDataTable tabletAA_LandInfluenceItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandInfluenceItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_LandInfluenceItem = ((tAA_LandInfluenceItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InfluenceItemID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandInfluenceItem.InfluenceItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InfluenceItemID\' in table \'tAA_LandInfluenceItem\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.InfluenceItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LUID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandInfluenceItem.LUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LUID\' in table \'tAA_LandInfluenceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.LUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InfluenceTypeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandInfluenceItem.InfluenceTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InfluenceTypeID\' in table \'tAA_LandInfluenceItem\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.InfluenceTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Influence {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandInfluenceItem.InfluenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Influence\' in table \'tAA_LandInfluenceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.InfluenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InfluenceDesc {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandInfluenceItem.InfluenceDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InfluenceDesc\' in table \'tAA_LandInfluenceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.InfluenceDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InfluenceValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandInfluenceItem.InfluenceValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InfluenceValue\' in table \'tAA_LandInfluenceItem\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.InfluenceValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandInfluenceItem.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_LandInfluenceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandInfluenceItem.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_LandInfluenceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_LandInfluenceItem.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_LandInfluenceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandInfluenceItem.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_LandInfluenceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_LandInfluenceItem.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_LandInfluenceItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandInfluenceItem.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInfluenceItemIDNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.InfluenceItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInfluenceItemIDNull() {
                this[this.tabletAA_LandInfluenceItem.InfluenceItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLUIDNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.LUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLUIDNull() {
                this[this.tabletAA_LandInfluenceItem.LUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInfluenceTypeIDNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.InfluenceTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInfluenceTypeIDNull() {
                this[this.tabletAA_LandInfluenceItem.InfluenceTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInfluenceNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.InfluenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInfluenceNull() {
                this[this.tabletAA_LandInfluenceItem.InfluenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInfluenceDescNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.InfluenceDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInfluenceDescNull() {
                this[this.tabletAA_LandInfluenceItem.InfluenceDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInfluenceValueNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.InfluenceValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInfluenceValueNull() {
                this[this.tabletAA_LandInfluenceItem.InfluenceValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_LandInfluenceItem.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_LandInfluenceItem.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_LandInfluenceItem.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_LandInfluenceItem.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_LandInfluenceItem.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_LandInfluenceItem.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type9Row : global::System.Data.DataRow {
            
            private tAA_MA_Type9DataTable tabletAA_MA_Type9;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type9Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type9 = ((tAA_MA_Type9DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type9.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type9.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AssessedValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type9.AssessedValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessedValue\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.AssessedValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type9.rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rate\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type9.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type9.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type9.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type9.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type9.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type9.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string amount {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MA_Type9.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type9.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type9.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type9.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal units {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type9.unitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'units\' in table \'tAA_MA_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type9.unitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type9.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type9.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type9.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type9.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessedValueNull() {
                return this.IsNull(this.tabletAA_MA_Type9.AssessedValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessedValueNull() {
                this[this.tabletAA_MA_Type9.AssessedValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrateNull() {
                return this.IsNull(this.tabletAA_MA_Type9.rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrateNull() {
                this[this.tabletAA_MA_Type9.rateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type9.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type9.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type9.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type9.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type9.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type9.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type9.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type9.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type9.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type9.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type9.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type9.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tabletAA_MA_Type9.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tabletAA_MA_Type9.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type9.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type9.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type9.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type9.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type9.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type9.IsOverrideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunitsNull() {
                return this.IsNull(this.tabletAA_MA_Type9.unitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunitsNull() {
                this[this.tabletAA_MA_Type9.unitsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MAD_Type9Row : global::System.Data.DataRow {
            
            private tAA_MAD_Type9DataTable tabletAA_MAD_Type9;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type9Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MAD_Type9 = ((tAA_MAD_Type9DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type9.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MAD_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type9.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type9.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MAD_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type9.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type9.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'tAA_MAD_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type9.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type9.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_MAD_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type9.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type9.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'tAA_MAD_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type9.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type9.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MAD_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type9.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MAD_Type9.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MAD_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type9.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type9.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MAD_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type9.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type9.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MAD_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type9.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type9.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MAD_Type9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type9.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type9.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MAD_Type9.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MAD_Type9.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MAD_Type9.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tabletAA_MAD_Type9.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tabletAA_MAD_Type9.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_MAD_Type9.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_MAD_Type9.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type9.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tabletAA_MAD_Type9.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type9.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MAD_Type9.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MAD_Type9.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MAD_Type9.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type9.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MAD_Type9.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MAD_Type9.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MAD_Type9.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type9.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MAD_Type9.ModuleIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MAD_Type2Row : global::System.Data.DataRow {
            
            private tAA_MAD_Type2DataTable tabletAA_MAD_Type2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MAD_Type2 = ((tAA_MAD_Type2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type2.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type2.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type2.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type2.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MinimumCharge {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.MinimumChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinimumCharge\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.MinimumChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerAssessed {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type2.IsOwnerAssessedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOwnerAssessed\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.IsOwnerAssessedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.BaseFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseFee\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.BaseFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short BaseAcres {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type2.BaseAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseAcres\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.BaseAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteBase {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.SiteBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteBase\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.SiteBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.SiteRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteRate\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.SiteRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DryBase {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.DryBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DryBase\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.DryBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DryRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.DryRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DryRate\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.DryRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IrrigatedBase {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.IrrigatedBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigatedBase\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.IrrigatedBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IrrigatedRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.IrrigatedRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigatedRate\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.IrrigatedRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TimberBase {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.TimberBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimberBase\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.TimberBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TimberRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.TimberRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimberRate\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.TimberRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherBase {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.OtherBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherBase\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.OtherBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.OtherRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherRate\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.OtherRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type2.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MAD_Type2.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type2.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type2.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type2.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MinSiteAcres {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type2.MinSiteAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinSiteAcres\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.MinSiteAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MinDryAcres {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type2.MinDryAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinDryAcres\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.MinDryAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MinIrrigatedAcres {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type2.MinIrrigatedAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinIrrigatedAcres\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.MinIrrigatedAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MinTimberAcres {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type2.MinTimberAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinTimberAcres\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.MinTimberAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MinOtherAcres {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type2.MinOtherAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinOtherAcres\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.MinOtherAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type2.BaseRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseRate\' in table \'tAA_MAD_Type2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type2.BaseRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MAD_Type2.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MAD_Type2.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tabletAA_MAD_Type2.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_MAD_Type2.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimumChargeNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.MinimumChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimumChargeNull() {
                this[this.tabletAA_MAD_Type2.MinimumChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOwnerAssessedNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.IsOwnerAssessedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOwnerAssessedNull() {
                this[this.tabletAA_MAD_Type2.IsOwnerAssessedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseFeeNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.BaseFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseFeeNull() {
                this[this.tabletAA_MAD_Type2.BaseFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseAcresNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.BaseAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseAcresNull() {
                this[this.tabletAA_MAD_Type2.BaseAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.SiteBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteBaseNull() {
                this[this.tabletAA_MAD_Type2.SiteBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.SiteRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteRateNull() {
                this[this.tabletAA_MAD_Type2.SiteRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDryBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.DryBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDryBaseNull() {
                this[this.tabletAA_MAD_Type2.DryBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDryRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.DryRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDryRateNull() {
                this[this.tabletAA_MAD_Type2.DryRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIrrigatedBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.IrrigatedBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIrrigatedBaseNull() {
                this[this.tabletAA_MAD_Type2.IrrigatedBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIrrigatedRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.IrrigatedRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIrrigatedRateNull() {
                this[this.tabletAA_MAD_Type2.IrrigatedRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimberBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.TimberBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimberBaseNull() {
                this[this.tabletAA_MAD_Type2.TimberBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimberRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.TimberRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimberRateNull() {
                this[this.tabletAA_MAD_Type2.TimberRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.OtherBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherBaseNull() {
                this[this.tabletAA_MAD_Type2.OtherBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.OtherRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherRateNull() {
                this[this.tabletAA_MAD_Type2.OtherRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MAD_Type2.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MAD_Type2.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MAD_Type2.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MAD_Type2.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MAD_Type2.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinSiteAcresNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.MinSiteAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinSiteAcresNull() {
                this[this.tabletAA_MAD_Type2.MinSiteAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinDryAcresNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.MinDryAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinDryAcresNull() {
                this[this.tabletAA_MAD_Type2.MinDryAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinIrrigatedAcresNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.MinIrrigatedAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinIrrigatedAcresNull() {
                this[this.tabletAA_MAD_Type2.MinIrrigatedAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinTimberAcresNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.MinTimberAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinTimberAcresNull() {
                this[this.tabletAA_MAD_Type2.MinTimberAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinOtherAcresNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.MinOtherAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinOtherAcresNull() {
                this[this.tabletAA_MAD_Type2.MinOtherAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type2.BaseRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseRateNull() {
                this[this.tabletAA_MAD_Type2.BaseRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MAD_Type6Row : global::System.Data.DataRow {
            
            private tAA_MAD_Type6DataTable tabletAA_MAD_Type6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type6Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MAD_Type6 = ((tAA_MAD_Type6DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type6.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type6.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type6.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type6.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CountyFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type6.CountyFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyFee\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.CountyFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MaxLotSize {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type6.MaxLotSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxLotSize\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.MaxLotSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FPAFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type6.FPAFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FPAFee\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.FPAFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LCFFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type6.LCFFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCFFee\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.LCFFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FPARate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type6.FPARateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FPARate\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.FPARateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LCFRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type6.LCFRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCFRate\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.LCFRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type6.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MAD_Type6.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type6.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type6.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type6.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MAD_Type6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type6.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MAD_Type6.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MAD_Type6.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tabletAA_MAD_Type6.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_MAD_Type6.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyFeeNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.CountyFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyFeeNull() {
                this[this.tabletAA_MAD_Type6.CountyFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxLotSizeNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.MaxLotSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxLotSizeNull() {
                this[this.tabletAA_MAD_Type6.MaxLotSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFPAFeeNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.FPAFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFPAFeeNull() {
                this[this.tabletAA_MAD_Type6.FPAFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLCFFeeNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.LCFFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLCFFeeNull() {
                this[this.tabletAA_MAD_Type6.LCFFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFPARateNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.FPARateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFPARateNull() {
                this[this.tabletAA_MAD_Type6.FPARateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLCFRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.LCFRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLCFRateNull() {
                this[this.tabletAA_MAD_Type6.LCFRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MAD_Type6.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MAD_Type6.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MAD_Type6.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MAD_Type6.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type6.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MAD_Type6.ModuleIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type1Row : global::System.Data.DataRow {
            
            private tAA_MA_Type1DataTable tabletAA_MA_Type1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type1 = ((tAA_MA_Type1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type1.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type1.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type1.SiteAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteAcres\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.SiteAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DryAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type1.DryAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DryAcres\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.DryAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IrrigatedAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type1.IrrigatedAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigatedAcres\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.IrrigatedAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TimberAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type1.TimberAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimberAcres\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.TimberAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type1.OtherAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherAcres\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.OtherAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type1.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type1.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type1.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type1.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type1.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type1.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string amount {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MA_Type1.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type1.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type1.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type1.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type1.BaseAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseAcres\' in table \'tAA_MA_Type1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type1.BaseAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type1.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type1.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type1.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type1.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type1.SiteAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteAcresNull() {
                this[this.tabletAA_MA_Type1.SiteAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDryAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type1.DryAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDryAcresNull() {
                this[this.tabletAA_MA_Type1.DryAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIrrigatedAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type1.IrrigatedAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIrrigatedAcresNull() {
                this[this.tabletAA_MA_Type1.IrrigatedAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimberAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type1.TimberAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimberAcresNull() {
                this[this.tabletAA_MA_Type1.TimberAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type1.OtherAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherAcresNull() {
                this[this.tabletAA_MA_Type1.OtherAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type1.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type1.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type1.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type1.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type1.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type1.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type1.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type1.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type1.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type1.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type1.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type1.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tabletAA_MA_Type1.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tabletAA_MA_Type1.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type1.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type1.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type1.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type1.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type1.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type1.IsOverrideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type1.BaseAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseAcresNull() {
                this[this.tabletAA_MA_Type1.BaseAcresColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MAD_Type10Row : global::System.Data.DataRow {
            
            private tAA_MAD_Type10DataTable tabletAA_MAD_Type10;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type10Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MAD_Type10 = ((tAA_MAD_Type10DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type10.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type10.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type10.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type10.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type10.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Base {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type10.BaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Base\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.BaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Minimum {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type10.MinimumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Minimum\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.MinimumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Maximum {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type10.MaximumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Maximum\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.MaximumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type10.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MAD_Type10.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type10.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type10.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type10.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MAD_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type10.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MAD_Type10.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MAD_Type10.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tabletAA_MAD_Type10.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_MAD_Type10.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tabletAA_MAD_Type10.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.BaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseNull() {
                this[this.tabletAA_MAD_Type10.BaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimumNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.MinimumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimumNull() {
                this[this.tabletAA_MAD_Type10.MinimumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaximumNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.MaximumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaximumNull() {
                this[this.tabletAA_MAD_Type10.MaximumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MAD_Type10.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MAD_Type10.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MAD_Type10.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MAD_Type10.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type10.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MAD_Type10.ModuleIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type10Row : global::System.Data.DataRow {
            
            private tAA_MA_Type10DataTable tabletAA_MA_Type10;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type10Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type10 = ((tAA_MA_Type10DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type10.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type10.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AssessedValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type10.AssessedValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessedValue\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.AssessedValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type10.rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rate\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type10.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type10.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type10.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type10.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type10.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type10.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string amount {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MA_Type10.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type10.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type10.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type10.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal units {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type10.unitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'units\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.unitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Factor {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type10.FactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Factor\' in table \'tAA_MA_Type10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type10.FactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type10.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type10.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type10.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type10.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessedValueNull() {
                return this.IsNull(this.tabletAA_MA_Type10.AssessedValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessedValueNull() {
                this[this.tabletAA_MA_Type10.AssessedValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrateNull() {
                return this.IsNull(this.tabletAA_MA_Type10.rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrateNull() {
                this[this.tabletAA_MA_Type10.rateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type10.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type10.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type10.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type10.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type10.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type10.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type10.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type10.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type10.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type10.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type10.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type10.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tabletAA_MA_Type10.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tabletAA_MA_Type10.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type10.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type10.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type10.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type10.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type10.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type10.IsOverrideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunitsNull() {
                return this.IsNull(this.tabletAA_MA_Type10.unitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunitsNull() {
                this[this.tabletAA_MA_Type10.unitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFactorNull() {
                return this.IsNull(this.tabletAA_MA_Type10.FactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFactorNull() {
                this[this.tabletAA_MA_Type10.FactorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_LandUnitRow : global::System.Data.DataRow {
            
            private tAA_LandUnitDataTable tabletAA_LandUnit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandUnitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_LandUnit = ((tAA_LandUnitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitType {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandUnit.UnitTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitType\' in table \'tAA_LandUnit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandUnit.UnitTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_LandUnit.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tAA_LandUnit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandUnit.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitsPerAcre {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_LandUnit.UnitsPerAcreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitsPerAcre\' in table \'tAA_LandUnit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandUnit.UnitsPerAcreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitTypeNull() {
                return this.IsNull(this.tabletAA_LandUnit.UnitTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitTypeNull() {
                this[this.tabletAA_LandUnit.UnitTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletAA_LandUnit.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletAA_LandUnit.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsPerAcreNull() {
                return this.IsNull(this.tabletAA_LandUnit.UnitsPerAcreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsPerAcreNull() {
                this[this.tabletAA_LandUnit.UnitsPerAcreColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_CommentTemplateRow : global::System.Data.DataRow {
            
            private tTS_CommentTemplateDataTable tabletTS_CommentTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_CommentTemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_CommentTemplate = ((tTS_CommentTemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TemplateID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_CommentTemplate.TemplateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TemplateID\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.TemplateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tabletTS_CommentTemplate.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Template {
                get {
                    try {
                        return ((string)(this[this.tabletTS_CommentTemplate.TemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Template\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.TemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tabletTS_CommentTemplate.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPublic {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_CommentTemplate.IsPublicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPublic\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.IsPublicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WillPrint {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_CommentTemplate.WillPrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WillPrint\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.WillPrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHighPriority {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_CommentTemplate.IsHighPriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHighPriority\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.IsHighPriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WillRoll {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_CommentTemplate.WillRollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WillRoll\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.WillRollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CommentPriorityID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_CommentTemplate.CommentPriorityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommentPriorityID\' in table \'tTS_CommentTemplate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.CommentPriorityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_CommentTemplate.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_CommentTemplate.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_CommentTemplate.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_CommentTemplate.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_CommentTemplate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CommentTemplate.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemplateIDNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.TemplateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemplateIDNull() {
                this[this.tabletTS_CommentTemplate.TemplateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tabletTS_CommentTemplate.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemplateNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.TemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemplateNull() {
                this[this.tabletTS_CommentTemplate.TemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tabletTS_CommentTemplate.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPublicNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.IsPublicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPublicNull() {
                this[this.tabletTS_CommentTemplate.IsPublicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWillPrintNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.WillPrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWillPrintNull() {
                this[this.tabletTS_CommentTemplate.WillPrintColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsHighPriorityNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.IsHighPriorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsHighPriorityNull() {
                this[this.tabletTS_CommentTemplate.IsHighPriorityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWillRollNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.WillRollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWillRollNull() {
                this[this.tabletTS_CommentTemplate.WillRollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentPriorityIDNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.CommentPriorityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentPriorityIDNull() {
                this[this.tabletTS_CommentTemplate.CommentPriorityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_CommentTemplate.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_CommentTemplate.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_CommentTemplate.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_CommentTemplate.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_CommentTemplate.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type11Row : global::System.Data.DataRow {
            
            private tAA_MA_Type11DataTable tabletAA_MA_Type11;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type11Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type11 = ((tAA_MA_Type11DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type11.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type11.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type11.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type11.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type11.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type11.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type11.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type11.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type11.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type11.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type11.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type11.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type11.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type11.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type11.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type11.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type11.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type11.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type11.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type11.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type11.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type11.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type11.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type11.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type11.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type11.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type11.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type11.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type11.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type11.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type11.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type11.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type11.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type11.IsOverrideColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type12Row : global::System.Data.DataRow {
            
            private tAA_MA_Type12DataTable tabletAA_MA_Type12;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type12Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type12 = ((tAA_MA_Type12DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type12.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type12.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type12.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type12.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type12.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type12.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type12.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type12.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type12.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type12.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type12.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type12.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type12.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type12.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type12.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type12.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type12.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type12.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type12.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type12.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type12.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type12.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type12.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type12.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type12.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type12.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type12.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type12.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type12.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type12.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type12.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type12.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type12.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type12.IsOverrideColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type3Row : global::System.Data.DataRow {
            
            private tAA_MA_Type3DataTable tabletAA_MA_Type3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type3 = ((tAA_MA_Type3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type3.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type3.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type3.SiteAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteAcres\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.SiteAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DryAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type3.DryAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DryAcres\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.DryAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IrrigatedAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type3.IrrigatedAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigatedAcres\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.IrrigatedAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TimberAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type3.TimberAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimberAcres\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.TimberAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type3.OtherAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherAcres\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.OtherAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseAcres {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type3.BaseAcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseAcres\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.BaseAcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type3.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type3.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type3.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type3.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type3.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type3.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string amount {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MA_Type3.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type3.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type3.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type3.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type3.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type3.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type3.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type3.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type3.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type3.SiteAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteAcresNull() {
                this[this.tabletAA_MA_Type3.SiteAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDryAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type3.DryAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDryAcresNull() {
                this[this.tabletAA_MA_Type3.DryAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIrrigatedAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type3.IrrigatedAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIrrigatedAcresNull() {
                this[this.tabletAA_MA_Type3.IrrigatedAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimberAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type3.TimberAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimberAcresNull() {
                this[this.tabletAA_MA_Type3.TimberAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type3.OtherAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherAcresNull() {
                this[this.tabletAA_MA_Type3.OtherAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseAcresNull() {
                return this.IsNull(this.tabletAA_MA_Type3.BaseAcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseAcresNull() {
                this[this.tabletAA_MA_Type3.BaseAcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type3.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type3.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type3.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type3.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type3.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type3.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type3.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type3.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type3.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type3.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type3.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type3.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tabletAA_MA_Type3.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tabletAA_MA_Type3.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type3.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type3.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type3.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type3.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type3.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type3.IsOverrideColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type4Row : global::System.Data.DataRow {
            
            private tAA_MA_Type4DataTable tabletAA_MA_Type4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type4Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type4 = ((tAA_MA_Type4DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type4.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type4.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type4.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type4.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type4.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type4.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type4.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type4.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type4.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type4.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type4.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type4.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type4.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type4.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type4.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type4.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type4.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type4.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type4.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type4.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletAA_MA_Type4.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type4.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type4.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type4.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type4.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type4.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type4.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type4.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type4.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type4.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type4.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type4.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type4.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type4.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type4.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type4.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type4.IsOverrideColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type7Row : global::System.Data.DataRow {
            
            private tAA_MA_Type7DataTable tabletAA_MA_Type7;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type7Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type7 = ((tAA_MA_Type7DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type7.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type7.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BenefitCharge {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type7.BenefitChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenefitCharge\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.BenefitChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AssessedValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type7.AssessedValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessedValue\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.AssessedValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResidentialRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type7.ResidentialRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidentialRate\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.ResidentialRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CommercialRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type7.CommercialRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommercialRate\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.CommercialRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type7.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type7.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type7.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type7.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type7.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type7.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string amount {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MA_Type7.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type7.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type7.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type7.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type7.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type7.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type7.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type7.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type7.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenefitChargeNull() {
                return this.IsNull(this.tabletAA_MA_Type7.BenefitChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenefitChargeNull() {
                this[this.tabletAA_MA_Type7.BenefitChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessedValueNull() {
                return this.IsNull(this.tabletAA_MA_Type7.AssessedValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessedValueNull() {
                this[this.tabletAA_MA_Type7.AssessedValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidentialRateNull() {
                return this.IsNull(this.tabletAA_MA_Type7.ResidentialRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidentialRateNull() {
                this[this.tabletAA_MA_Type7.ResidentialRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommercialRateNull() {
                return this.IsNull(this.tabletAA_MA_Type7.CommercialRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommercialRateNull() {
                this[this.tabletAA_MA_Type7.CommercialRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type7.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type7.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type7.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type7.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type7.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type7.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type7.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type7.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type7.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type7.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type7.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type7.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tabletAA_MA_Type7.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tabletAA_MA_Type7.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type7.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type7.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type7.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type7.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type7.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type7.IsOverrideColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MA_Type8Row : global::System.Data.DataRow {
            
            private tAA_MA_Type8DataTable tabletAA_MA_Type8;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MA_Type8Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MA_Type8 = ((tAA_MA_Type8DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type8.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type8.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type8.BaseFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseFee\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.BaseFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type8.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type8.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MA_Type8.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MA_Type8.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type8.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MA_Type8.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string amount {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MA_Type8.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverrideAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MA_Type8.OverrideAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverrideAmount\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.OverrideAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type8.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverride {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MA_Type8.IsOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOverride\' in table \'tAA_MA_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MA_Type8.IsOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_MA_Type8.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_MA_Type8.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MA_Type8.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MA_Type8.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseFeeNull() {
                return this.IsNull(this.tabletAA_MA_Type8.BaseFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseFeeNull() {
                this[this.tabletAA_MA_Type8.BaseFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type8.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletAA_MA_Type8.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MA_Type8.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MA_Type8.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MA_Type8.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MA_Type8.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MA_Type8.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MA_Type8.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MA_Type8.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MA_Type8.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MA_Type8.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MA_Type8.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tabletAA_MA_Type8.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tabletAA_MA_Type8.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverrideAmountNull() {
                return this.IsNull(this.tabletAA_MA_Type8.OverrideAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverrideAmountNull() {
                this[this.tabletAA_MA_Type8.OverrideAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_MA_Type8.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_MA_Type8.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOverrideNull() {
                return this.IsNull(this.tabletAA_MA_Type8.IsOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOverrideNull() {
                this[this.tabletAA_MA_Type8.IsOverrideColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MAD_Type11Row : global::System.Data.DataRow {
            
            private tAA_MAD_Type11DataTable tabletAA_MAD_Type11;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type11Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MAD_Type11 = ((tAA_MAD_Type11DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type11.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type11.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type11.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type11.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type11.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MAD_Type11.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type11.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type11.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type11.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PerAcre {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type11.PerAcreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerAcre\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.PerAcreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PerParcel {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type11.PerParcelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerParcel\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.PerParcelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MarketRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type11.MarketRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketRate\' in table \'tAA_MAD_Type11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type11.MarketRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MAD_Type11.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MAD_Type11.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tabletAA_MAD_Type11.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_MAD_Type11.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MAD_Type11.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MAD_Type11.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MAD_Type11.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MAD_Type11.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MAD_Type11.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerAcreNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.PerAcreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerAcreNull() {
                this[this.tabletAA_MAD_Type11.PerAcreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerParcelNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.PerParcelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerParcelNull() {
                this[this.tabletAA_MAD_Type11.PerParcelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type11.MarketRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketRateNull() {
                this[this.tabletAA_MAD_Type11.MarketRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MAD_Type12Row : global::System.Data.DataRow {
            
            private tAA_MAD_Type12DataTable tabletAA_MAD_Type12;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type12Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MAD_Type12 = ((tAA_MAD_Type12DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type12.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MAD_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type12.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type12.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MAD_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type12.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type12.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'tAA_MAD_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type12.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type12.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_MAD_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type12.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type12.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MAD_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type12.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MAD_Type12.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MAD_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type12.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type12.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MAD_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type12.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type12.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MAD_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type12.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type12.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MAD_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type12.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type12.BaseFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseFee\' in table \'tAA_MAD_Type12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type12.BaseFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type12.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MAD_Type12.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MAD_Type12.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MAD_Type12.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tabletAA_MAD_Type12.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tabletAA_MAD_Type12.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_MAD_Type12.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_MAD_Type12.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type12.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MAD_Type12.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MAD_Type12.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MAD_Type12.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type12.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MAD_Type12.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MAD_Type12.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MAD_Type12.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type12.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MAD_Type12.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseFeeNull() {
                return this.IsNull(this.tabletAA_MAD_Type12.BaseFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseFeeNull() {
                this[this.tabletAA_MAD_Type12.BaseFeeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MAD_Type3Row : global::System.Data.DataRow {
            
            private tAA_MAD_Type3DataTable tabletAA_MAD_Type3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MAD_Type3 = ((tAA_MAD_Type3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type3.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type3.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type3.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type3.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MinimumCharge {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.MinimumChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinimumCharge\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.MinimumChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerAssessed {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type3.IsOwnerAssessedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOwnerAssessed\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.IsOwnerAssessedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.BaseFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseFee\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.BaseFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.BaseRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseRate\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.BaseRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteBase {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.SiteBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteBase\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.SiteBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.SiteRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteRate\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.SiteRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DryBase {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.DryBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DryBase\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.DryBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DryRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.DryRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DryRate\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.DryRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IrrigatedBase {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.IrrigatedBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigatedBase\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.IrrigatedBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IrrigatedRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.IrrigatedRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigatedRate\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.IrrigatedRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TimberBase {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.TimberBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimberBase\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.TimberBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TimberRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.TimberRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimberRate\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.TimberRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherBase {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.OtherBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherBase\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.OtherBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type3.OtherRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherRate\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.OtherRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type3.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MAD_Type3.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type3.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type3.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type3.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MAD_Type3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type3.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MAD_Type3.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MAD_Type3.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tabletAA_MAD_Type3.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_MAD_Type3.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimumChargeNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.MinimumChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimumChargeNull() {
                this[this.tabletAA_MAD_Type3.MinimumChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOwnerAssessedNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.IsOwnerAssessedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOwnerAssessedNull() {
                this[this.tabletAA_MAD_Type3.IsOwnerAssessedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseFeeNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.BaseFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseFeeNull() {
                this[this.tabletAA_MAD_Type3.BaseFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.BaseRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseRateNull() {
                this[this.tabletAA_MAD_Type3.BaseRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.SiteBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteBaseNull() {
                this[this.tabletAA_MAD_Type3.SiteBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.SiteRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteRateNull() {
                this[this.tabletAA_MAD_Type3.SiteRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDryBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.DryBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDryBaseNull() {
                this[this.tabletAA_MAD_Type3.DryBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDryRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.DryRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDryRateNull() {
                this[this.tabletAA_MAD_Type3.DryRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIrrigatedBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.IrrigatedBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIrrigatedBaseNull() {
                this[this.tabletAA_MAD_Type3.IrrigatedBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIrrigatedRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.IrrigatedRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIrrigatedRateNull() {
                this[this.tabletAA_MAD_Type3.IrrigatedRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimberBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.TimberBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimberBaseNull() {
                this[this.tabletAA_MAD_Type3.TimberBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimberRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.TimberRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimberRateNull() {
                this[this.tabletAA_MAD_Type3.TimberRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherBaseNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.OtherBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherBaseNull() {
                this[this.tabletAA_MAD_Type3.OtherBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.OtherRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherRateNull() {
                this[this.tabletAA_MAD_Type3.OtherRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MAD_Type3.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MAD_Type3.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MAD_Type3.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MAD_Type3.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type3.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MAD_Type3.ModuleIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MAD_Type4Row : global::System.Data.DataRow {
            
            private tAA_MAD_Type4DataTable tabletAA_MAD_Type4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type4Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MAD_Type4 = ((tAA_MAD_Type4DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type4.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MAD_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type4.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type4.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MAD_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type4.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type4.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'tAA_MAD_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type4.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type4.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_MAD_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type4.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type4.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'tAA_MAD_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type4.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type4.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MAD_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type4.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MAD_Type4.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MAD_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type4.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type4.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MAD_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type4.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type4.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MAD_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type4.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type4.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MAD_Type4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type4.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type4.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MAD_Type4.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MAD_Type4.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MAD_Type4.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tabletAA_MAD_Type4.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tabletAA_MAD_Type4.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_MAD_Type4.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_MAD_Type4.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type4.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tabletAA_MAD_Type4.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type4.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MAD_Type4.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MAD_Type4.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MAD_Type4.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type4.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MAD_Type4.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MAD_Type4.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MAD_Type4.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type4.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MAD_Type4.ModuleIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MAD_Type7Row : global::System.Data.DataRow {
            
            private tAA_MAD_Type7DataTable tabletAA_MAD_Type7;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type7Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MAD_Type7 = ((tAA_MAD_Type7DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type7.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type7.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type7.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type7.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ResidentialRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type7.ResidentialRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidentialRate\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.ResidentialRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CommercialRate {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type7.CommercialRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommercialRate\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.CommercialRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type7.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MAD_Type7.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type7.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type7.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type7.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MAD_Type7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type7.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MAD_Type7.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MAD_Type7.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tabletAA_MAD_Type7.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_MAD_Type7.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidentialRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.ResidentialRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidentialRateNull() {
                this[this.tabletAA_MAD_Type7.ResidentialRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommercialRateNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.CommercialRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommercialRateNull() {
                this[this.tabletAA_MAD_Type7.CommercialRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MAD_Type7.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MAD_Type7.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MAD_Type7.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MAD_Type7.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type7.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MAD_Type7.ModuleIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MAD_Type8Row : global::System.Data.DataRow {
            
            private tAA_MAD_Type8DataTable tabletAA_MAD_Type8;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MAD_Type8Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MAD_Type8 = ((tAA_MAD_Type8DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type8.MADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADistrictID\' in table \'tAA_MAD_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type8.MADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type8.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MAD_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type8.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type8.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'tAA_MAD_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type8.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MAD_Type8.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_MAD_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type8.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BaseFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MAD_Type8.BaseFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseFee\' in table \'tAA_MAD_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type8.BaseFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type8.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MAD_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type8.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MAD_Type8.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MAD_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type8.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MAD_Type8.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MAD_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type8.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MAD_Type8.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MAD_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type8.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MAD_Type8.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MAD_Type8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MAD_Type8.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADistrictIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type8.MADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADistrictIDNull() {
                this[this.tabletAA_MAD_Type8.MADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MAD_Type8.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MAD_Type8.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tabletAA_MAD_Type8.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tabletAA_MAD_Type8.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_MAD_Type8.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_MAD_Type8.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseFeeNull() {
                return this.IsNull(this.tabletAA_MAD_Type8.BaseFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseFeeNull() {
                this[this.tabletAA_MAD_Type8.BaseFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type8.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MAD_Type8.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MAD_Type8.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MAD_Type8.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MAD_Type8.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MAD_Type8.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MAD_Type8.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MAD_Type8.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MAD_Type8.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MAD_Type8.ModuleIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_TableXMLRow : global::System.Data.DataRow {
            
            private tTS_TableXMLDataTable tabletTS_TableXML;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_TableXMLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_TableXML = ((tTS_TableXMLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TableXML {
                get {
                    try {
                        return ((string)(this[this.tabletTS_TableXML.TableXMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TableXML\' in table \'tTS_TableXML\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_TableXML.TableXMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTableXMLNull() {
                return this.IsNull(this.tabletTS_TableXML.TableXMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTableXMLNull() {
                this[this.tabletTS_TableXML.TableXMLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EstimateComponentRow : global::System.Data.DataRow {
            
            private EstimateComponentDataTable tableEstimateComponent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EstimateComponentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEstimateComponent = ((EstimateComponentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimateID {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponent.EstimateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateID\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.EstimateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GroupID {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponent.GroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupID\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.GroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ComponentID {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponent.ComponentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComponentID\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.ComponentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemID {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponent.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Units {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponent.UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Units\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Percent {
                get {
                    try {
                        return ((float)(this[this.tableEstimateComponent.PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Percent\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float QualityNumber {
                get {
                    try {
                        return ((float)(this[this.tableEstimateComponent.QualityNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QualityNumber\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.QualityNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool QualityNumberFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimateComponent.QualityNumberFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QualityNumberFlag\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.QualityNumberFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DeprPct {
                get {
                    try {
                        return ((float)(this[this.tableEstimateComponent.DeprPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprPct\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.DeprPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DeprPctFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimateComponent.DeprPctFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprPctFlag\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.DeprPctFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Age {
                get {
                    try {
                        return ((short)(this[this.tableEstimateComponent.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AgeFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimateComponent.AgeFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeFlag\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.AgeFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Life {
                get {
                    try {
                        return ((short)(this[this.tableEstimateComponent.LifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Life\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.LifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LifeFlag {
                get {
                    try {
                        return ((bool)(this[this.tableEstimateComponent.LifeFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LifeFlag\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.LifeFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tableEstimateComponent.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tableEstimateComponent.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CalcDeprPct {
                get {
                    try {
                        return ((decimal)(this[this.tableEstimateComponent.CalcDeprPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalcDeprPct\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.CalcDeprPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CalcCost {
                get {
                    try {
                        return ((decimal)(this[this.tableEstimateComponent.CalcCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalcCost\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.CalcCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CalcDeprCost {
                get {
                    try {
                        return ((decimal)(this[this.tableEstimateComponent.CalcDeprCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalcDeprCost\' in table \'EstimateComponent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstimateComponent.CalcDeprCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateIDNull() {
                return this.IsNull(this.tableEstimateComponent.EstimateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateIDNull() {
                this[this.tableEstimateComponent.EstimateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupIDNull() {
                return this.IsNull(this.tableEstimateComponent.GroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupIDNull() {
                this[this.tableEstimateComponent.GroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComponentIDNull() {
                return this.IsNull(this.tableEstimateComponent.ComponentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComponentIDNull() {
                this[this.tableEstimateComponent.ComponentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableEstimateComponent.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableEstimateComponent.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsNull() {
                return this.IsNull(this.tableEstimateComponent.UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsNull() {
                this[this.tableEstimateComponent.UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPercentNull() {
                return this.IsNull(this.tableEstimateComponent.PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPercentNull() {
                this[this.tableEstimateComponent.PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualityNumberNull() {
                return this.IsNull(this.tableEstimateComponent.QualityNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualityNumberNull() {
                this[this.tableEstimateComponent.QualityNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualityNumberFlagNull() {
                return this.IsNull(this.tableEstimateComponent.QualityNumberFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualityNumberFlagNull() {
                this[this.tableEstimateComponent.QualityNumberFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprPctNull() {
                return this.IsNull(this.tableEstimateComponent.DeprPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprPctNull() {
                this[this.tableEstimateComponent.DeprPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprPctFlagNull() {
                return this.IsNull(this.tableEstimateComponent.DeprPctFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprPctFlagNull() {
                this[this.tableEstimateComponent.DeprPctFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeNull() {
                return this.IsNull(this.tableEstimateComponent.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeNull() {
                this[this.tableEstimateComponent.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeFlagNull() {
                return this.IsNull(this.tableEstimateComponent.AgeFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeFlagNull() {
                this[this.tableEstimateComponent.AgeFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLifeNull() {
                return this.IsNull(this.tableEstimateComponent.LifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLifeNull() {
                this[this.tableEstimateComponent.LifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLifeFlagNull() {
                return this.IsNull(this.tableEstimateComponent.LifeFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLifeFlagNull() {
                this[this.tableEstimateComponent.LifeFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tableEstimateComponent.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tableEstimateComponent.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tableEstimateComponent.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tableEstimateComponent.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCalcDeprPctNull() {
                return this.IsNull(this.tableEstimateComponent.CalcDeprPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCalcDeprPctNull() {
                this[this.tableEstimateComponent.CalcDeprPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCalcCostNull() {
                return this.IsNull(this.tableEstimateComponent.CalcCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCalcCostNull() {
                this[this.tableEstimateComponent.CalcCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCalcDeprCostNull() {
                return this.IsNull(this.tableEstimateComponent.CalcDeprCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCalcDeprCostNull() {
                this[this.tableEstimateComponent.CalcDeprCostColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_LandCodeRow : global::System.Data.DataRow {
            
            private tAA_LandCodeDataTable tabletAA_LandCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_LandCodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_LandCode = ((tAA_LandCodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandCodeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandCode.LandCodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandCodeID\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.LandCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_LandCode.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID1 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandCode.LandTypeID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID1\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.LandTypeID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID2 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandCode.LandTypeID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID2\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.LandTypeID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID3 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandCode.LandTypeID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID3\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.LandTypeID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandCode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandCode.LandCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandCode\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.LandCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandCode.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportAS {
                get {
                    try {
                        return ((string)(this[this.tabletAA_LandCode.ReportASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportAS\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.ReportASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_LandCode.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandCode.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_LandCode.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_LandCode.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_LandCode.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_LandCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_LandCode.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandCodeIDNull() {
                return this.IsNull(this.tabletAA_LandCode.LandCodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandCodeIDNull() {
                this[this.tabletAA_LandCode.LandCodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_LandCode.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_LandCode.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID1Null() {
                return this.IsNull(this.tabletAA_LandCode.LandTypeID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID1Null() {
                this[this.tabletAA_LandCode.LandTypeID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID2Null() {
                return this.IsNull(this.tabletAA_LandCode.LandTypeID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID2Null() {
                this[this.tabletAA_LandCode.LandTypeID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID3Null() {
                return this.IsNull(this.tabletAA_LandCode.LandTypeID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID3Null() {
                this[this.tabletAA_LandCode.LandTypeID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandCodeNull() {
                return this.IsNull(this.tabletAA_LandCode.LandCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandCodeNull() {
                this[this.tabletAA_LandCode.LandCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_LandCode.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_LandCode.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportASNull() {
                return this.IsNull(this.tabletAA_LandCode.ReportASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportASNull() {
                this[this.tabletAA_LandCode.ReportASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_LandCode.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_LandCode.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_LandCode.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_LandCode.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_LandCode.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_LandCode.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_LandCode.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_LandCode.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_LandCode.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_LandCode.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ParcelIDsRow : global::System.Data.DataRow {
            
            private ParcelIDsDataTable tableParcelIDs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ParcelIDsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableParcelIDs = ((ParcelIDsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    return ((int)(this[this.tableParcelIDs.ParcelIDColumn]));
                }
                set {
                    this[this.tableParcelIDs.ParcelIDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InsertXmlRow : global::System.Data.DataRow {
            
            private InsertXmlDataTable tableInsertXml;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InsertXmlRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInsertXml = ((InsertXmlDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChkInInsertXML {
                get {
                    try {
                        return ((string)(this[this.tableInsertXml.ChkInInsertXMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChkInInsertXML\' in table \'InsertXml\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsertXml.ChkInInsertXMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChkInInsertXMLNull() {
                return this.IsNull(this.tableInsertXml.ChkInInsertXMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChkInInsertXMLNull() {
                this[this.tableInsertXml.ChkInInsertXMLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ChecoutDetailsXMLRow : global::System.Data.DataRow {
            
            private ChecoutDetailsXMLDataTable tableChecoutDetailsXML;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ChecoutDetailsXMLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableChecoutDetailsXML = ((ChecoutDetailsXMLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CheckOutDetails {
                get {
                    try {
                        return ((string)(this[this.tableChecoutDetailsXML.CheckOutDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CheckOutDetails\' in table \'ChecoutDetailsXML\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChecoutDetailsXML.CheckOutDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckOutDetailsNull() {
                return this.IsNull(this.tableChecoutDetailsXML.CheckOutDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckOutDetailsNull() {
                this[this.tableChecoutDetailsXML.CheckOutDetailsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_CommentRowChangeEvent : global::System.EventArgs {
            
            private tTS_CommentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentRowChangeEvent(tTS_CommentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EstimateComponentGroupRowChangeEvent : global::System.EventArgs {
            
            private EstimateComponentGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentGroupRowChangeEvent(EstimateComponentGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EstimateRowChangeEvent : global::System.EventArgs {
            
            private EstimateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateRowChangeEvent(EstimateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_FileRowChangeEvent : global::System.EventArgs {
            
            private tTS_FileRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FileRowChangeEvent(tTS_FileRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FileRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_LandValuesRowChangeEvent : global::System.EventArgs {
            
            private tAA_LandValuesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandValuesRowChangeEvent(tAA_LandValuesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandValuesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_LandRowChangeEvent : global::System.EventArgs {
            
            private tAA_LandRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandRowChangeEvent(tAA_LandRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MiscRowChangeEvent : global::System.EventArgs {
            
            private tAA_MiscRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscRowChangeEvent(tAA_MiscRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MSC_EstimateRowChangeEvent : global::System.EventArgs {
            
            private tAA_MSC_EstimateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MSC_EstimateRowChangeEvent(tAA_MSC_EstimateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MSC_EstimateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_NBHDRowChangeEvent : global::System.EventArgs {
            
            private tAA_NBHDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDRowChangeEvent(tAA_NBHDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_ObjectRowChangeEvent : global::System.EventArgs {
            
            private tAA_ObjectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectRowChangeEvent(tAA_ObjectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_ParcelValueRowChangeEvent : global::System.EventArgs {
            
            private tAA_ParcelValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelValueRowChangeEvent(tAA_ParcelValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_ParcelRowChangeEvent : global::System.EventArgs {
            
            private tAA_ParcelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelRowChangeEvent(tAA_ParcelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_VSTerraGonRowChangeEvent : global::System.EventArgs {
            
            private tAA_VSTerraGonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_VSTerraGonRowChangeEvent(tAA_VSTerraGonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_VSTerraGonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type2RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type2RowChangeEvent(tAA_MA_Type2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type6RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type6Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type6RowChangeEvent(tAA_MA_Type6Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type6Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_DeprItemRowChangeEvent : global::System.EventArgs {
            
            private tAA_DeprItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprItemRowChangeEvent(tAA_DeprItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_Misc_CatalogRowChangeEvent : global::System.EventArgs {
            
            private tAA_Misc_CatalogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogRowChangeEvent(tAA_Misc_CatalogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_DeprRowChangeEvent : global::System.EventArgs {
            
            private tAA_DeprRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprRowChangeEvent(tAA_DeprRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_DeprRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_ApexPolygonRowChangeEvent : global::System.EventArgs {
            
            private tAA_ApexPolygonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ApexPolygonRowChangeEvent(tAA_ApexPolygonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ApexPolygonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_LandType1RowChangeEvent : global::System.EventArgs {
            
            private tAA_LandType1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandType1RowChangeEvent(tAA_LandType1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandType1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_QueryViewLayoutRowChangeEvent : global::System.EventArgs {
            
            private tTS_QueryViewLayoutRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewLayoutRowChangeEvent(tTS_QueryViewLayoutRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewLayoutRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_Exemption_Type1RowChangeEvent : global::System.EventArgs {
            
            private tTS_Exemption_Type1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_Exemption_Type1RowChangeEvent(tTS_Exemption_Type1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_Exemption_Type1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_LandInfluenceItemRowChangeEvent : global::System.EventArgs {
            
            private tAA_LandInfluenceItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandInfluenceItemRowChangeEvent(tAA_LandInfluenceItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandInfluenceItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type9RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type9Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type9RowChangeEvent(tAA_MA_Type9Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type9Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MAD_Type9RowChangeEvent : global::System.EventArgs {
            
            private tAA_MAD_Type9Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type9RowChangeEvent(tAA_MAD_Type9Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type9Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MAD_Type2RowChangeEvent : global::System.EventArgs {
            
            private tAA_MAD_Type2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type2RowChangeEvent(tAA_MAD_Type2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MAD_Type6RowChangeEvent : global::System.EventArgs {
            
            private tAA_MAD_Type6Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type6RowChangeEvent(tAA_MAD_Type6Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type6Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type1RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type1RowChangeEvent(tAA_MA_Type1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MAD_Type10RowChangeEvent : global::System.EventArgs {
            
            private tAA_MAD_Type10Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type10RowChangeEvent(tAA_MAD_Type10Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type10Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type10RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type10Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type10RowChangeEvent(tAA_MA_Type10Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type10Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_LandUnitRowChangeEvent : global::System.EventArgs {
            
            private tAA_LandUnitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandUnitRowChangeEvent(tAA_LandUnitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandUnitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_CommentTemplateRowChangeEvent : global::System.EventArgs {
            
            private tTS_CommentTemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentTemplateRowChangeEvent(tTS_CommentTemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CommentTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type11RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type11Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type11RowChangeEvent(tAA_MA_Type11Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type11Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type12RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type12Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type12RowChangeEvent(tAA_MA_Type12Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type12Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type3RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type3RowChangeEvent(tAA_MA_Type3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type4RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type4Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type4RowChangeEvent(tAA_MA_Type4Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type4Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type7RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type7Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type7RowChangeEvent(tAA_MA_Type7Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type7Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MA_Type8RowChangeEvent : global::System.EventArgs {
            
            private tAA_MA_Type8Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type8RowChangeEvent(tAA_MA_Type8Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MA_Type8Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MAD_Type11RowChangeEvent : global::System.EventArgs {
            
            private tAA_MAD_Type11Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type11RowChangeEvent(tAA_MAD_Type11Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type11Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MAD_Type12RowChangeEvent : global::System.EventArgs {
            
            private tAA_MAD_Type12Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type12RowChangeEvent(tAA_MAD_Type12Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type12Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MAD_Type3RowChangeEvent : global::System.EventArgs {
            
            private tAA_MAD_Type3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type3RowChangeEvent(tAA_MAD_Type3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MAD_Type4RowChangeEvent : global::System.EventArgs {
            
            private tAA_MAD_Type4Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type4RowChangeEvent(tAA_MAD_Type4Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type4Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MAD_Type7RowChangeEvent : global::System.EventArgs {
            
            private tAA_MAD_Type7Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type7RowChangeEvent(tAA_MAD_Type7Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type7Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MAD_Type8RowChangeEvent : global::System.EventArgs {
            
            private tAA_MAD_Type8Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type8RowChangeEvent(tAA_MAD_Type8Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MAD_Type8Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_TableXMLRowChangeEvent : global::System.EventArgs {
            
            private tTS_TableXMLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_TableXMLRowChangeEvent(tTS_TableXMLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_TableXMLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EstimateComponentRowChangeEvent : global::System.EventArgs {
            
            private EstimateComponentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentRowChangeEvent(EstimateComponentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EstimateComponentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_LandCodeRowChangeEvent : global::System.EventArgs {
            
            private tAA_LandCodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandCodeRowChangeEvent(tAA_LandCodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_LandCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ParcelIDsRowChangeEvent : global::System.EventArgs {
            
            private ParcelIDsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParcelIDsRowChangeEvent(ParcelIDsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParcelIDsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InsertXmlRowChangeEvent : global::System.EventArgs {
            
            private InsertXmlRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsertXmlRowChangeEvent(InsertXmlRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsertXmlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ChecoutDetailsXMLRowChangeEvent : global::System.EventArgs {
            
            private ChecoutDetailsXMLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChecoutDetailsXMLRowChangeEvent(ChecoutDetailsXMLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChecoutDetailsXMLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591