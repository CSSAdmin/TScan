//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F9065FieldUseData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F9065FieldUseData : global::System.Data.DataSet {
        
        private ListSnapshotTableDataTable tableListSnapshotTable;
        
        private ListPreviewDetailTableDataTable tableListPreviewDetailTable;
        
        private ListCfgConfigTableDataTable tableListCfgConfigTable;
        
        private tTS_CheckoutConfigurationDataTable tabletTS_CheckoutConfiguration;
        
        private tTS_ApplicationDataTable tabletTS_Application;
        
        private tTS_FormMenuDataTable tabletTS_FormMenu;
        
        private tTS_CfgDataTable tabletTS_Cfg;
        
        private tTS_FormDataTable tabletTS_Form;
        
        private tTS_FormSandwichDataTable tabletTS_FormSandwich;
        
        private tTS_FormConfigDataTable tabletTS_FormConfig;
        
        private tTS_FormSliceDataTable tabletTS_FormSlice;
        
        private tAA_ValueSliceDataTable tabletAA_ValueSlice;
        
        private tAA_Object2SliceDataTable tabletAA_Object2Slice;
        
        private tGD_SystemDataTable tabletGD_System;
        
        private tAA_ParcelDataTable tabletAA_Parcel;
        
        private tAA_ObjectDataTable tabletAA_Object;
        
        private tAA_SliceTypeDataTable tabletAA_SliceType;
        
        private tTS_QueryViewDataTable tabletTS_QueryView;
        
        private tAA_NBHDDataTable tabletAA_NBHD;
        
        private tTS_DistrictDataTable tabletTS_District;
        
        private tAA_ParcelTypeDataTable tabletAA_ParcelType;
        
        private tTS_SubDivisionDataTable tabletTS_SubDivision;
        
        private tTS_LegalDataTable tabletTS_Legal;
        
        private tTS_SitusDataTable tabletTS_Situs;
        
        private tAA_ObjectGroupDataTable tabletAA_ObjectGroup;
        
        private tAA_ObjectTypeDataTable tabletAA_ObjectType;
        
        private tAA_Misc_CatalogDataTable tabletAA_Misc_Catalog;
        
        private tAA_MiscDataTable tabletAA_Misc;
        
        private tTS_UnitDataTable tabletTS_Unit;
        
        private tTS_StreetListDataTable tabletTS_StreetList;
        
        private tGD_FeatureClassDataTable tabletGD_FeatureClass;
        
        private tGD_EventTypeDataTable tabletGD_EventType;
        
        private tGD_EG_StatusDataTable tabletGD_EG_Status;
        
        private tGD_EventDataTable tabletGD_Event;
        
        private tTS_UserGroupDataTable tabletTS_UserGroup;
        
        private tTS_UserDataTable tabletTS_User;
        
        private tTS_User2GroupDataTable tabletTS_User2Group;
        
        private tTS_UserPermissionDataTable tabletTS_UserPermission;
        
        private tTS_OwnerDataTable tabletTS_Owner;
        
        private tAA_MOwnerDataTable tabletAA_MOwner;
        
        private GetChkOutXMLDataTable tableGetChkOutXML;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F9065FieldUseData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F9065FieldUseData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ListSnapshotTable"] != null)) {
                    base.Tables.Add(new ListSnapshotTableDataTable(ds.Tables["ListSnapshotTable"]));
                }
                if ((ds.Tables["ListPreviewDetailTable"] != null)) {
                    base.Tables.Add(new ListPreviewDetailTableDataTable(ds.Tables["ListPreviewDetailTable"]));
                }
                if ((ds.Tables["ListCfgConfigTable"] != null)) {
                    base.Tables.Add(new ListCfgConfigTableDataTable(ds.Tables["ListCfgConfigTable"]));
                }
                if ((ds.Tables["tTS_CheckoutConfiguration"] != null)) {
                    base.Tables.Add(new tTS_CheckoutConfigurationDataTable(ds.Tables["tTS_CheckoutConfiguration"]));
                }
                if ((ds.Tables["tTS_Application"] != null)) {
                    base.Tables.Add(new tTS_ApplicationDataTable(ds.Tables["tTS_Application"]));
                }
                if ((ds.Tables["tTS_FormMenu"] != null)) {
                    base.Tables.Add(new tTS_FormMenuDataTable(ds.Tables["tTS_FormMenu"]));
                }
                if ((ds.Tables["tTS_Cfg"] != null)) {
                    base.Tables.Add(new tTS_CfgDataTable(ds.Tables["tTS_Cfg"]));
                }
                if ((ds.Tables["tTS_Form"] != null)) {
                    base.Tables.Add(new tTS_FormDataTable(ds.Tables["tTS_Form"]));
                }
                if ((ds.Tables["tTS_FormSandwich"] != null)) {
                    base.Tables.Add(new tTS_FormSandwichDataTable(ds.Tables["tTS_FormSandwich"]));
                }
                if ((ds.Tables["tTS_FormConfig"] != null)) {
                    base.Tables.Add(new tTS_FormConfigDataTable(ds.Tables["tTS_FormConfig"]));
                }
                if ((ds.Tables["tTS_FormSlice"] != null)) {
                    base.Tables.Add(new tTS_FormSliceDataTable(ds.Tables["tTS_FormSlice"]));
                }
                if ((ds.Tables["tAA_ValueSlice"] != null)) {
                    base.Tables.Add(new tAA_ValueSliceDataTable(ds.Tables["tAA_ValueSlice"]));
                }
                if ((ds.Tables["tAA_Object2Slice"] != null)) {
                    base.Tables.Add(new tAA_Object2SliceDataTable(ds.Tables["tAA_Object2Slice"]));
                }
                if ((ds.Tables["tGD_System"] != null)) {
                    base.Tables.Add(new tGD_SystemDataTable(ds.Tables["tGD_System"]));
                }
                if ((ds.Tables["tAA_Parcel"] != null)) {
                    base.Tables.Add(new tAA_ParcelDataTable(ds.Tables["tAA_Parcel"]));
                }
                if ((ds.Tables["tAA_Object"] != null)) {
                    base.Tables.Add(new tAA_ObjectDataTable(ds.Tables["tAA_Object"]));
                }
                if ((ds.Tables["tAA_SliceType"] != null)) {
                    base.Tables.Add(new tAA_SliceTypeDataTable(ds.Tables["tAA_SliceType"]));
                }
                if ((ds.Tables["tTS_QueryView"] != null)) {
                    base.Tables.Add(new tTS_QueryViewDataTable(ds.Tables["tTS_QueryView"]));
                }
                if ((ds.Tables["tAA_NBHD"] != null)) {
                    base.Tables.Add(new tAA_NBHDDataTable(ds.Tables["tAA_NBHD"]));
                }
                if ((ds.Tables["tTS_District"] != null)) {
                    base.Tables.Add(new tTS_DistrictDataTable(ds.Tables["tTS_District"]));
                }
                if ((ds.Tables["tAA_ParcelType"] != null)) {
                    base.Tables.Add(new tAA_ParcelTypeDataTable(ds.Tables["tAA_ParcelType"]));
                }
                if ((ds.Tables["tTS_SubDivision"] != null)) {
                    base.Tables.Add(new tTS_SubDivisionDataTable(ds.Tables["tTS_SubDivision"]));
                }
                if ((ds.Tables["tTS_Legal"] != null)) {
                    base.Tables.Add(new tTS_LegalDataTable(ds.Tables["tTS_Legal"]));
                }
                if ((ds.Tables["tTS_Situs"] != null)) {
                    base.Tables.Add(new tTS_SitusDataTable(ds.Tables["tTS_Situs"]));
                }
                if ((ds.Tables["tAA_ObjectGroup"] != null)) {
                    base.Tables.Add(new tAA_ObjectGroupDataTable(ds.Tables["tAA_ObjectGroup"]));
                }
                if ((ds.Tables["tAA_ObjectType"] != null)) {
                    base.Tables.Add(new tAA_ObjectTypeDataTable(ds.Tables["tAA_ObjectType"]));
                }
                if ((ds.Tables["tAA_Misc_Catalog"] != null)) {
                    base.Tables.Add(new tAA_Misc_CatalogDataTable(ds.Tables["tAA_Misc_Catalog"]));
                }
                if ((ds.Tables["tAA_Misc"] != null)) {
                    base.Tables.Add(new tAA_MiscDataTable(ds.Tables["tAA_Misc"]));
                }
                if ((ds.Tables["tTS_Unit"] != null)) {
                    base.Tables.Add(new tTS_UnitDataTable(ds.Tables["tTS_Unit"]));
                }
                if ((ds.Tables["tTS_StreetList"] != null)) {
                    base.Tables.Add(new tTS_StreetListDataTable(ds.Tables["tTS_StreetList"]));
                }
                if ((ds.Tables["tGD_FeatureClass"] != null)) {
                    base.Tables.Add(new tGD_FeatureClassDataTable(ds.Tables["tGD_FeatureClass"]));
                }
                if ((ds.Tables["tGD_EventType"] != null)) {
                    base.Tables.Add(new tGD_EventTypeDataTable(ds.Tables["tGD_EventType"]));
                }
                if ((ds.Tables["tGD_EG_Status"] != null)) {
                    base.Tables.Add(new tGD_EG_StatusDataTable(ds.Tables["tGD_EG_Status"]));
                }
                if ((ds.Tables["tGD_Event"] != null)) {
                    base.Tables.Add(new tGD_EventDataTable(ds.Tables["tGD_Event"]));
                }
                if ((ds.Tables["tTS_UserGroup"] != null)) {
                    base.Tables.Add(new tTS_UserGroupDataTable(ds.Tables["tTS_UserGroup"]));
                }
                if ((ds.Tables["tTS_User"] != null)) {
                    base.Tables.Add(new tTS_UserDataTable(ds.Tables["tTS_User"]));
                }
                if ((ds.Tables["tTS_User2Group"] != null)) {
                    base.Tables.Add(new tTS_User2GroupDataTable(ds.Tables["tTS_User2Group"]));
                }
                if ((ds.Tables["tTS_UserPermission"] != null)) {
                    base.Tables.Add(new tTS_UserPermissionDataTable(ds.Tables["tTS_UserPermission"]));
                }
                if ((ds.Tables["tTS_Owner"] != null)) {
                    base.Tables.Add(new tTS_OwnerDataTable(ds.Tables["tTS_Owner"]));
                }
                if ((ds.Tables["tAA_MOwner"] != null)) {
                    base.Tables.Add(new tAA_MOwnerDataTable(ds.Tables["tAA_MOwner"]));
                }
                if ((ds.Tables["GetChkOutXML"] != null)) {
                    base.Tables.Add(new GetChkOutXMLDataTable(ds.Tables["GetChkOutXML"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListSnapshotTableDataTable ListSnapshotTable {
            get {
                return this.tableListSnapshotTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListPreviewDetailTableDataTable ListPreviewDetailTable {
            get {
                return this.tableListPreviewDetailTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListCfgConfigTableDataTable ListCfgConfigTable {
            get {
                return this.tableListCfgConfigTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_CheckoutConfigurationDataTable tTS_CheckoutConfiguration {
            get {
                return this.tabletTS_CheckoutConfiguration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_ApplicationDataTable tTS_Application {
            get {
                return this.tabletTS_Application;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_FormMenuDataTable tTS_FormMenu {
            get {
                return this.tabletTS_FormMenu;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_CfgDataTable tTS_Cfg {
            get {
                return this.tabletTS_Cfg;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_FormDataTable tTS_Form {
            get {
                return this.tabletTS_Form;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_FormSandwichDataTable tTS_FormSandwich {
            get {
                return this.tabletTS_FormSandwich;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_FormConfigDataTable tTS_FormConfig {
            get {
                return this.tabletTS_FormConfig;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_FormSliceDataTable tTS_FormSlice {
            get {
                return this.tabletTS_FormSlice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_ValueSliceDataTable tAA_ValueSlice {
            get {
                return this.tabletAA_ValueSlice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_Object2SliceDataTable tAA_Object2Slice {
            get {
                return this.tabletAA_Object2Slice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tGD_SystemDataTable tGD_System {
            get {
                return this.tabletGD_System;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_ParcelDataTable tAA_Parcel {
            get {
                return this.tabletAA_Parcel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_ObjectDataTable tAA_Object {
            get {
                return this.tabletAA_Object;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_SliceTypeDataTable tAA_SliceType {
            get {
                return this.tabletAA_SliceType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_QueryViewDataTable tTS_QueryView {
            get {
                return this.tabletTS_QueryView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_NBHDDataTable tAA_NBHD {
            get {
                return this.tabletAA_NBHD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_DistrictDataTable tTS_District {
            get {
                return this.tabletTS_District;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_ParcelTypeDataTable tAA_ParcelType {
            get {
                return this.tabletAA_ParcelType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_SubDivisionDataTable tTS_SubDivision {
            get {
                return this.tabletTS_SubDivision;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_LegalDataTable tTS_Legal {
            get {
                return this.tabletTS_Legal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_SitusDataTable tTS_Situs {
            get {
                return this.tabletTS_Situs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_ObjectGroupDataTable tAA_ObjectGroup {
            get {
                return this.tabletAA_ObjectGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_ObjectTypeDataTable tAA_ObjectType {
            get {
                return this.tabletAA_ObjectType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_Misc_CatalogDataTable tAA_Misc_Catalog {
            get {
                return this.tabletAA_Misc_Catalog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MiscDataTable tAA_Misc {
            get {
                return this.tabletAA_Misc;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_UnitDataTable tTS_Unit {
            get {
                return this.tabletTS_Unit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_StreetListDataTable tTS_StreetList {
            get {
                return this.tabletTS_StreetList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tGD_FeatureClassDataTable tGD_FeatureClass {
            get {
                return this.tabletGD_FeatureClass;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tGD_EventTypeDataTable tGD_EventType {
            get {
                return this.tabletGD_EventType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tGD_EG_StatusDataTable tGD_EG_Status {
            get {
                return this.tabletGD_EG_Status;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tGD_EventDataTable tGD_Event {
            get {
                return this.tabletGD_Event;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_UserGroupDataTable tTS_UserGroup {
            get {
                return this.tabletTS_UserGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_UserDataTable tTS_User {
            get {
                return this.tabletTS_User;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_User2GroupDataTable tTS_User2Group {
            get {
                return this.tabletTS_User2Group;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_UserPermissionDataTable tTS_UserPermission {
            get {
                return this.tabletTS_UserPermission;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tTS_OwnerDataTable tTS_Owner {
            get {
                return this.tabletTS_Owner;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tAA_MOwnerDataTable tAA_MOwner {
            get {
                return this.tabletAA_MOwner;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetChkOutXMLDataTable GetChkOutXML {
            get {
                return this.tableGetChkOutXML;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F9065FieldUseData cln = ((F9065FieldUseData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ListSnapshotTable"] != null)) {
                    base.Tables.Add(new ListSnapshotTableDataTable(ds.Tables["ListSnapshotTable"]));
                }
                if ((ds.Tables["ListPreviewDetailTable"] != null)) {
                    base.Tables.Add(new ListPreviewDetailTableDataTable(ds.Tables["ListPreviewDetailTable"]));
                }
                if ((ds.Tables["ListCfgConfigTable"] != null)) {
                    base.Tables.Add(new ListCfgConfigTableDataTable(ds.Tables["ListCfgConfigTable"]));
                }
                if ((ds.Tables["tTS_CheckoutConfiguration"] != null)) {
                    base.Tables.Add(new tTS_CheckoutConfigurationDataTable(ds.Tables["tTS_CheckoutConfiguration"]));
                }
                if ((ds.Tables["tTS_Application"] != null)) {
                    base.Tables.Add(new tTS_ApplicationDataTable(ds.Tables["tTS_Application"]));
                }
                if ((ds.Tables["tTS_FormMenu"] != null)) {
                    base.Tables.Add(new tTS_FormMenuDataTable(ds.Tables["tTS_FormMenu"]));
                }
                if ((ds.Tables["tTS_Cfg"] != null)) {
                    base.Tables.Add(new tTS_CfgDataTable(ds.Tables["tTS_Cfg"]));
                }
                if ((ds.Tables["tTS_Form"] != null)) {
                    base.Tables.Add(new tTS_FormDataTable(ds.Tables["tTS_Form"]));
                }
                if ((ds.Tables["tTS_FormSandwich"] != null)) {
                    base.Tables.Add(new tTS_FormSandwichDataTable(ds.Tables["tTS_FormSandwich"]));
                }
                if ((ds.Tables["tTS_FormConfig"] != null)) {
                    base.Tables.Add(new tTS_FormConfigDataTable(ds.Tables["tTS_FormConfig"]));
                }
                if ((ds.Tables["tTS_FormSlice"] != null)) {
                    base.Tables.Add(new tTS_FormSliceDataTable(ds.Tables["tTS_FormSlice"]));
                }
                if ((ds.Tables["tAA_ValueSlice"] != null)) {
                    base.Tables.Add(new tAA_ValueSliceDataTable(ds.Tables["tAA_ValueSlice"]));
                }
                if ((ds.Tables["tAA_Object2Slice"] != null)) {
                    base.Tables.Add(new tAA_Object2SliceDataTable(ds.Tables["tAA_Object2Slice"]));
                }
                if ((ds.Tables["tGD_System"] != null)) {
                    base.Tables.Add(new tGD_SystemDataTable(ds.Tables["tGD_System"]));
                }
                if ((ds.Tables["tAA_Parcel"] != null)) {
                    base.Tables.Add(new tAA_ParcelDataTable(ds.Tables["tAA_Parcel"]));
                }
                if ((ds.Tables["tAA_Object"] != null)) {
                    base.Tables.Add(new tAA_ObjectDataTable(ds.Tables["tAA_Object"]));
                }
                if ((ds.Tables["tAA_SliceType"] != null)) {
                    base.Tables.Add(new tAA_SliceTypeDataTable(ds.Tables["tAA_SliceType"]));
                }
                if ((ds.Tables["tTS_QueryView"] != null)) {
                    base.Tables.Add(new tTS_QueryViewDataTable(ds.Tables["tTS_QueryView"]));
                }
                if ((ds.Tables["tAA_NBHD"] != null)) {
                    base.Tables.Add(new tAA_NBHDDataTable(ds.Tables["tAA_NBHD"]));
                }
                if ((ds.Tables["tTS_District"] != null)) {
                    base.Tables.Add(new tTS_DistrictDataTable(ds.Tables["tTS_District"]));
                }
                if ((ds.Tables["tAA_ParcelType"] != null)) {
                    base.Tables.Add(new tAA_ParcelTypeDataTable(ds.Tables["tAA_ParcelType"]));
                }
                if ((ds.Tables["tTS_SubDivision"] != null)) {
                    base.Tables.Add(new tTS_SubDivisionDataTable(ds.Tables["tTS_SubDivision"]));
                }
                if ((ds.Tables["tTS_Legal"] != null)) {
                    base.Tables.Add(new tTS_LegalDataTable(ds.Tables["tTS_Legal"]));
                }
                if ((ds.Tables["tTS_Situs"] != null)) {
                    base.Tables.Add(new tTS_SitusDataTable(ds.Tables["tTS_Situs"]));
                }
                if ((ds.Tables["tAA_ObjectGroup"] != null)) {
                    base.Tables.Add(new tAA_ObjectGroupDataTable(ds.Tables["tAA_ObjectGroup"]));
                }
                if ((ds.Tables["tAA_ObjectType"] != null)) {
                    base.Tables.Add(new tAA_ObjectTypeDataTable(ds.Tables["tAA_ObjectType"]));
                }
                if ((ds.Tables["tAA_Misc_Catalog"] != null)) {
                    base.Tables.Add(new tAA_Misc_CatalogDataTable(ds.Tables["tAA_Misc_Catalog"]));
                }
                if ((ds.Tables["tAA_Misc"] != null)) {
                    base.Tables.Add(new tAA_MiscDataTable(ds.Tables["tAA_Misc"]));
                }
                if ((ds.Tables["tTS_Unit"] != null)) {
                    base.Tables.Add(new tTS_UnitDataTable(ds.Tables["tTS_Unit"]));
                }
                if ((ds.Tables["tTS_StreetList"] != null)) {
                    base.Tables.Add(new tTS_StreetListDataTable(ds.Tables["tTS_StreetList"]));
                }
                if ((ds.Tables["tGD_FeatureClass"] != null)) {
                    base.Tables.Add(new tGD_FeatureClassDataTable(ds.Tables["tGD_FeatureClass"]));
                }
                if ((ds.Tables["tGD_EventType"] != null)) {
                    base.Tables.Add(new tGD_EventTypeDataTable(ds.Tables["tGD_EventType"]));
                }
                if ((ds.Tables["tGD_EG_Status"] != null)) {
                    base.Tables.Add(new tGD_EG_StatusDataTable(ds.Tables["tGD_EG_Status"]));
                }
                if ((ds.Tables["tGD_Event"] != null)) {
                    base.Tables.Add(new tGD_EventDataTable(ds.Tables["tGD_Event"]));
                }
                if ((ds.Tables["tTS_UserGroup"] != null)) {
                    base.Tables.Add(new tTS_UserGroupDataTable(ds.Tables["tTS_UserGroup"]));
                }
                if ((ds.Tables["tTS_User"] != null)) {
                    base.Tables.Add(new tTS_UserDataTable(ds.Tables["tTS_User"]));
                }
                if ((ds.Tables["tTS_User2Group"] != null)) {
                    base.Tables.Add(new tTS_User2GroupDataTable(ds.Tables["tTS_User2Group"]));
                }
                if ((ds.Tables["tTS_UserPermission"] != null)) {
                    base.Tables.Add(new tTS_UserPermissionDataTable(ds.Tables["tTS_UserPermission"]));
                }
                if ((ds.Tables["tTS_Owner"] != null)) {
                    base.Tables.Add(new tTS_OwnerDataTable(ds.Tables["tTS_Owner"]));
                }
                if ((ds.Tables["tAA_MOwner"] != null)) {
                    base.Tables.Add(new tAA_MOwnerDataTable(ds.Tables["tAA_MOwner"]));
                }
                if ((ds.Tables["GetChkOutXML"] != null)) {
                    base.Tables.Add(new GetChkOutXMLDataTable(ds.Tables["GetChkOutXML"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableListSnapshotTable = ((ListSnapshotTableDataTable)(base.Tables["ListSnapshotTable"]));
            if ((initTable == true)) {
                if ((this.tableListSnapshotTable != null)) {
                    this.tableListSnapshotTable.InitVars();
                }
            }
            this.tableListPreviewDetailTable = ((ListPreviewDetailTableDataTable)(base.Tables["ListPreviewDetailTable"]));
            if ((initTable == true)) {
                if ((this.tableListPreviewDetailTable != null)) {
                    this.tableListPreviewDetailTable.InitVars();
                }
            }
            this.tableListCfgConfigTable = ((ListCfgConfigTableDataTable)(base.Tables["ListCfgConfigTable"]));
            if ((initTable == true)) {
                if ((this.tableListCfgConfigTable != null)) {
                    this.tableListCfgConfigTable.InitVars();
                }
            }
            this.tabletTS_CheckoutConfiguration = ((tTS_CheckoutConfigurationDataTable)(base.Tables["tTS_CheckoutConfiguration"]));
            if ((initTable == true)) {
                if ((this.tabletTS_CheckoutConfiguration != null)) {
                    this.tabletTS_CheckoutConfiguration.InitVars();
                }
            }
            this.tabletTS_Application = ((tTS_ApplicationDataTable)(base.Tables["tTS_Application"]));
            if ((initTable == true)) {
                if ((this.tabletTS_Application != null)) {
                    this.tabletTS_Application.InitVars();
                }
            }
            this.tabletTS_FormMenu = ((tTS_FormMenuDataTable)(base.Tables["tTS_FormMenu"]));
            if ((initTable == true)) {
                if ((this.tabletTS_FormMenu != null)) {
                    this.tabletTS_FormMenu.InitVars();
                }
            }
            this.tabletTS_Cfg = ((tTS_CfgDataTable)(base.Tables["tTS_Cfg"]));
            if ((initTable == true)) {
                if ((this.tabletTS_Cfg != null)) {
                    this.tabletTS_Cfg.InitVars();
                }
            }
            this.tabletTS_Form = ((tTS_FormDataTable)(base.Tables["tTS_Form"]));
            if ((initTable == true)) {
                if ((this.tabletTS_Form != null)) {
                    this.tabletTS_Form.InitVars();
                }
            }
            this.tabletTS_FormSandwich = ((tTS_FormSandwichDataTable)(base.Tables["tTS_FormSandwich"]));
            if ((initTable == true)) {
                if ((this.tabletTS_FormSandwich != null)) {
                    this.tabletTS_FormSandwich.InitVars();
                }
            }
            this.tabletTS_FormConfig = ((tTS_FormConfigDataTable)(base.Tables["tTS_FormConfig"]));
            if ((initTable == true)) {
                if ((this.tabletTS_FormConfig != null)) {
                    this.tabletTS_FormConfig.InitVars();
                }
            }
            this.tabletTS_FormSlice = ((tTS_FormSliceDataTable)(base.Tables["tTS_FormSlice"]));
            if ((initTable == true)) {
                if ((this.tabletTS_FormSlice != null)) {
                    this.tabletTS_FormSlice.InitVars();
                }
            }
            this.tabletAA_ValueSlice = ((tAA_ValueSliceDataTable)(base.Tables["tAA_ValueSlice"]));
            if ((initTable == true)) {
                if ((this.tabletAA_ValueSlice != null)) {
                    this.tabletAA_ValueSlice.InitVars();
                }
            }
            this.tabletAA_Object2Slice = ((tAA_Object2SliceDataTable)(base.Tables["tAA_Object2Slice"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Object2Slice != null)) {
                    this.tabletAA_Object2Slice.InitVars();
                }
            }
            this.tabletGD_System = ((tGD_SystemDataTable)(base.Tables["tGD_System"]));
            if ((initTable == true)) {
                if ((this.tabletGD_System != null)) {
                    this.tabletGD_System.InitVars();
                }
            }
            this.tabletAA_Parcel = ((tAA_ParcelDataTable)(base.Tables["tAA_Parcel"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Parcel != null)) {
                    this.tabletAA_Parcel.InitVars();
                }
            }
            this.tabletAA_Object = ((tAA_ObjectDataTable)(base.Tables["tAA_Object"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Object != null)) {
                    this.tabletAA_Object.InitVars();
                }
            }
            this.tabletAA_SliceType = ((tAA_SliceTypeDataTable)(base.Tables["tAA_SliceType"]));
            if ((initTable == true)) {
                if ((this.tabletAA_SliceType != null)) {
                    this.tabletAA_SliceType.InitVars();
                }
            }
            this.tabletTS_QueryView = ((tTS_QueryViewDataTable)(base.Tables["tTS_QueryView"]));
            if ((initTable == true)) {
                if ((this.tabletTS_QueryView != null)) {
                    this.tabletTS_QueryView.InitVars();
                }
            }
            this.tabletAA_NBHD = ((tAA_NBHDDataTable)(base.Tables["tAA_NBHD"]));
            if ((initTable == true)) {
                if ((this.tabletAA_NBHD != null)) {
                    this.tabletAA_NBHD.InitVars();
                }
            }
            this.tabletTS_District = ((tTS_DistrictDataTable)(base.Tables["tTS_District"]));
            if ((initTable == true)) {
                if ((this.tabletTS_District != null)) {
                    this.tabletTS_District.InitVars();
                }
            }
            this.tabletAA_ParcelType = ((tAA_ParcelTypeDataTable)(base.Tables["tAA_ParcelType"]));
            if ((initTable == true)) {
                if ((this.tabletAA_ParcelType != null)) {
                    this.tabletAA_ParcelType.InitVars();
                }
            }
            this.tabletTS_SubDivision = ((tTS_SubDivisionDataTable)(base.Tables["tTS_SubDivision"]));
            if ((initTable == true)) {
                if ((this.tabletTS_SubDivision != null)) {
                    this.tabletTS_SubDivision.InitVars();
                }
            }
            this.tabletTS_Legal = ((tTS_LegalDataTable)(base.Tables["tTS_Legal"]));
            if ((initTable == true)) {
                if ((this.tabletTS_Legal != null)) {
                    this.tabletTS_Legal.InitVars();
                }
            }
            this.tabletTS_Situs = ((tTS_SitusDataTable)(base.Tables["tTS_Situs"]));
            if ((initTable == true)) {
                if ((this.tabletTS_Situs != null)) {
                    this.tabletTS_Situs.InitVars();
                }
            }
            this.tabletAA_ObjectGroup = ((tAA_ObjectGroupDataTable)(base.Tables["tAA_ObjectGroup"]));
            if ((initTable == true)) {
                if ((this.tabletAA_ObjectGroup != null)) {
                    this.tabletAA_ObjectGroup.InitVars();
                }
            }
            this.tabletAA_ObjectType = ((tAA_ObjectTypeDataTable)(base.Tables["tAA_ObjectType"]));
            if ((initTable == true)) {
                if ((this.tabletAA_ObjectType != null)) {
                    this.tabletAA_ObjectType.InitVars();
                }
            }
            this.tabletAA_Misc_Catalog = ((tAA_Misc_CatalogDataTable)(base.Tables["tAA_Misc_Catalog"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Misc_Catalog != null)) {
                    this.tabletAA_Misc_Catalog.InitVars();
                }
            }
            this.tabletAA_Misc = ((tAA_MiscDataTable)(base.Tables["tAA_Misc"]));
            if ((initTable == true)) {
                if ((this.tabletAA_Misc != null)) {
                    this.tabletAA_Misc.InitVars();
                }
            }
            this.tabletTS_Unit = ((tTS_UnitDataTable)(base.Tables["tTS_Unit"]));
            if ((initTable == true)) {
                if ((this.tabletTS_Unit != null)) {
                    this.tabletTS_Unit.InitVars();
                }
            }
            this.tabletTS_StreetList = ((tTS_StreetListDataTable)(base.Tables["tTS_StreetList"]));
            if ((initTable == true)) {
                if ((this.tabletTS_StreetList != null)) {
                    this.tabletTS_StreetList.InitVars();
                }
            }
            this.tabletGD_FeatureClass = ((tGD_FeatureClassDataTable)(base.Tables["tGD_FeatureClass"]));
            if ((initTable == true)) {
                if ((this.tabletGD_FeatureClass != null)) {
                    this.tabletGD_FeatureClass.InitVars();
                }
            }
            this.tabletGD_EventType = ((tGD_EventTypeDataTable)(base.Tables["tGD_EventType"]));
            if ((initTable == true)) {
                if ((this.tabletGD_EventType != null)) {
                    this.tabletGD_EventType.InitVars();
                }
            }
            this.tabletGD_EG_Status = ((tGD_EG_StatusDataTable)(base.Tables["tGD_EG_Status"]));
            if ((initTable == true)) {
                if ((this.tabletGD_EG_Status != null)) {
                    this.tabletGD_EG_Status.InitVars();
                }
            }
            this.tabletGD_Event = ((tGD_EventDataTable)(base.Tables["tGD_Event"]));
            if ((initTable == true)) {
                if ((this.tabletGD_Event != null)) {
                    this.tabletGD_Event.InitVars();
                }
            }
            this.tabletTS_UserGroup = ((tTS_UserGroupDataTable)(base.Tables["tTS_UserGroup"]));
            if ((initTable == true)) {
                if ((this.tabletTS_UserGroup != null)) {
                    this.tabletTS_UserGroup.InitVars();
                }
            }
            this.tabletTS_User = ((tTS_UserDataTable)(base.Tables["tTS_User"]));
            if ((initTable == true)) {
                if ((this.tabletTS_User != null)) {
                    this.tabletTS_User.InitVars();
                }
            }
            this.tabletTS_User2Group = ((tTS_User2GroupDataTable)(base.Tables["tTS_User2Group"]));
            if ((initTable == true)) {
                if ((this.tabletTS_User2Group != null)) {
                    this.tabletTS_User2Group.InitVars();
                }
            }
            this.tabletTS_UserPermission = ((tTS_UserPermissionDataTable)(base.Tables["tTS_UserPermission"]));
            if ((initTable == true)) {
                if ((this.tabletTS_UserPermission != null)) {
                    this.tabletTS_UserPermission.InitVars();
                }
            }
            this.tabletTS_Owner = ((tTS_OwnerDataTable)(base.Tables["tTS_Owner"]));
            if ((initTable == true)) {
                if ((this.tabletTS_Owner != null)) {
                    this.tabletTS_Owner.InitVars();
                }
            }
            this.tabletAA_MOwner = ((tAA_MOwnerDataTable)(base.Tables["tAA_MOwner"]));
            if ((initTable == true)) {
                if ((this.tabletAA_MOwner != null)) {
                    this.tabletAA_MOwner.InitVars();
                }
            }
            this.tableGetChkOutXML = ((GetChkOutXMLDataTable)(base.Tables["GetChkOutXML"]));
            if ((initTable == true)) {
                if ((this.tableGetChkOutXML != null)) {
                    this.tableGetChkOutXML.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F9065FieldUseData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F9065FieldUseData.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableListSnapshotTable = new ListSnapshotTableDataTable();
            base.Tables.Add(this.tableListSnapshotTable);
            this.tableListPreviewDetailTable = new ListPreviewDetailTableDataTable();
            base.Tables.Add(this.tableListPreviewDetailTable);
            this.tableListCfgConfigTable = new ListCfgConfigTableDataTable();
            base.Tables.Add(this.tableListCfgConfigTable);
            this.tabletTS_CheckoutConfiguration = new tTS_CheckoutConfigurationDataTable();
            base.Tables.Add(this.tabletTS_CheckoutConfiguration);
            this.tabletTS_Application = new tTS_ApplicationDataTable();
            base.Tables.Add(this.tabletTS_Application);
            this.tabletTS_FormMenu = new tTS_FormMenuDataTable();
            base.Tables.Add(this.tabletTS_FormMenu);
            this.tabletTS_Cfg = new tTS_CfgDataTable();
            base.Tables.Add(this.tabletTS_Cfg);
            this.tabletTS_Form = new tTS_FormDataTable();
            base.Tables.Add(this.tabletTS_Form);
            this.tabletTS_FormSandwich = new tTS_FormSandwichDataTable();
            base.Tables.Add(this.tabletTS_FormSandwich);
            this.tabletTS_FormConfig = new tTS_FormConfigDataTable();
            base.Tables.Add(this.tabletTS_FormConfig);
            this.tabletTS_FormSlice = new tTS_FormSliceDataTable();
            base.Tables.Add(this.tabletTS_FormSlice);
            this.tabletAA_ValueSlice = new tAA_ValueSliceDataTable();
            base.Tables.Add(this.tabletAA_ValueSlice);
            this.tabletAA_Object2Slice = new tAA_Object2SliceDataTable();
            base.Tables.Add(this.tabletAA_Object2Slice);
            this.tabletGD_System = new tGD_SystemDataTable();
            base.Tables.Add(this.tabletGD_System);
            this.tabletAA_Parcel = new tAA_ParcelDataTable();
            base.Tables.Add(this.tabletAA_Parcel);
            this.tabletAA_Object = new tAA_ObjectDataTable();
            base.Tables.Add(this.tabletAA_Object);
            this.tabletAA_SliceType = new tAA_SliceTypeDataTable();
            base.Tables.Add(this.tabletAA_SliceType);
            this.tabletTS_QueryView = new tTS_QueryViewDataTable();
            base.Tables.Add(this.tabletTS_QueryView);
            this.tabletAA_NBHD = new tAA_NBHDDataTable();
            base.Tables.Add(this.tabletAA_NBHD);
            this.tabletTS_District = new tTS_DistrictDataTable();
            base.Tables.Add(this.tabletTS_District);
            this.tabletAA_ParcelType = new tAA_ParcelTypeDataTable();
            base.Tables.Add(this.tabletAA_ParcelType);
            this.tabletTS_SubDivision = new tTS_SubDivisionDataTable();
            base.Tables.Add(this.tabletTS_SubDivision);
            this.tabletTS_Legal = new tTS_LegalDataTable();
            base.Tables.Add(this.tabletTS_Legal);
            this.tabletTS_Situs = new tTS_SitusDataTable();
            base.Tables.Add(this.tabletTS_Situs);
            this.tabletAA_ObjectGroup = new tAA_ObjectGroupDataTable();
            base.Tables.Add(this.tabletAA_ObjectGroup);
            this.tabletAA_ObjectType = new tAA_ObjectTypeDataTable();
            base.Tables.Add(this.tabletAA_ObjectType);
            this.tabletAA_Misc_Catalog = new tAA_Misc_CatalogDataTable();
            base.Tables.Add(this.tabletAA_Misc_Catalog);
            this.tabletAA_Misc = new tAA_MiscDataTable();
            base.Tables.Add(this.tabletAA_Misc);
            this.tabletTS_Unit = new tTS_UnitDataTable();
            base.Tables.Add(this.tabletTS_Unit);
            this.tabletTS_StreetList = new tTS_StreetListDataTable();
            base.Tables.Add(this.tabletTS_StreetList);
            this.tabletGD_FeatureClass = new tGD_FeatureClassDataTable();
            base.Tables.Add(this.tabletGD_FeatureClass);
            this.tabletGD_EventType = new tGD_EventTypeDataTable();
            base.Tables.Add(this.tabletGD_EventType);
            this.tabletGD_EG_Status = new tGD_EG_StatusDataTable();
            base.Tables.Add(this.tabletGD_EG_Status);
            this.tabletGD_Event = new tGD_EventDataTable();
            base.Tables.Add(this.tabletGD_Event);
            this.tabletTS_UserGroup = new tTS_UserGroupDataTable();
            base.Tables.Add(this.tabletTS_UserGroup);
            this.tabletTS_User = new tTS_UserDataTable();
            base.Tables.Add(this.tabletTS_User);
            this.tabletTS_User2Group = new tTS_User2GroupDataTable();
            base.Tables.Add(this.tabletTS_User2Group);
            this.tabletTS_UserPermission = new tTS_UserPermissionDataTable();
            base.Tables.Add(this.tabletTS_UserPermission);
            this.tabletTS_Owner = new tTS_OwnerDataTable();
            base.Tables.Add(this.tabletTS_Owner);
            this.tabletAA_MOwner = new tAA_MOwnerDataTable();
            base.Tables.Add(this.tabletAA_MOwner);
            this.tableGetChkOutXML = new GetChkOutXMLDataTable();
            base.Tables.Add(this.tableGetChkOutXML);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListSnapshotTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListPreviewDetailTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListCfgConfigTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_CheckoutConfiguration() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_Application() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_FormMenu() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_Cfg() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_Form() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_FormSandwich() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_FormConfig() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_FormSlice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_ValueSlice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Object2Slice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetGD_System() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Parcel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Object() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_SliceType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_QueryView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_NBHD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_District() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_ParcelType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_SubDivision() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_Legal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_Situs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_ObjectGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_ObjectType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Misc_Catalog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_Misc() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_Unit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_StreetList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetGD_FeatureClass() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetGD_EventType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetGD_EG_Status() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetGD_Event() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_UserGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_User() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_User2Group() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_UserPermission() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetTS_Owner() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetAA_MOwner() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetChkOutXML() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F9065FieldUseData ds = new F9065FieldUseData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ListSnapshotTableRowChangeEventHandler(object sender, ListSnapshotTableRowChangeEvent e);
        
        public delegate void ListPreviewDetailTableRowChangeEventHandler(object sender, ListPreviewDetailTableRowChangeEvent e);
        
        public delegate void ListCfgConfigTableRowChangeEventHandler(object sender, ListCfgConfigTableRowChangeEvent e);
        
        public delegate void tTS_CheckoutConfigurationRowChangeEventHandler(object sender, tTS_CheckoutConfigurationRowChangeEvent e);
        
        public delegate void tTS_ApplicationRowChangeEventHandler(object sender, tTS_ApplicationRowChangeEvent e);
        
        public delegate void tTS_FormMenuRowChangeEventHandler(object sender, tTS_FormMenuRowChangeEvent e);
        
        public delegate void tTS_CfgRowChangeEventHandler(object sender, tTS_CfgRowChangeEvent e);
        
        public delegate void tTS_FormRowChangeEventHandler(object sender, tTS_FormRowChangeEvent e);
        
        public delegate void tTS_FormSandwichRowChangeEventHandler(object sender, tTS_FormSandwichRowChangeEvent e);
        
        public delegate void tTS_FormConfigRowChangeEventHandler(object sender, tTS_FormConfigRowChangeEvent e);
        
        public delegate void tTS_FormSliceRowChangeEventHandler(object sender, tTS_FormSliceRowChangeEvent e);
        
        public delegate void tAA_ValueSliceRowChangeEventHandler(object sender, tAA_ValueSliceRowChangeEvent e);
        
        public delegate void tAA_Object2SliceRowChangeEventHandler(object sender, tAA_Object2SliceRowChangeEvent e);
        
        public delegate void tGD_SystemRowChangeEventHandler(object sender, tGD_SystemRowChangeEvent e);
        
        public delegate void tAA_ParcelRowChangeEventHandler(object sender, tAA_ParcelRowChangeEvent e);
        
        public delegate void tAA_ObjectRowChangeEventHandler(object sender, tAA_ObjectRowChangeEvent e);
        
        public delegate void tAA_SliceTypeRowChangeEventHandler(object sender, tAA_SliceTypeRowChangeEvent e);
        
        public delegate void tTS_QueryViewRowChangeEventHandler(object sender, tTS_QueryViewRowChangeEvent e);
        
        public delegate void tAA_NBHDRowChangeEventHandler(object sender, tAA_NBHDRowChangeEvent e);
        
        public delegate void tTS_DistrictRowChangeEventHandler(object sender, tTS_DistrictRowChangeEvent e);
        
        public delegate void tAA_ParcelTypeRowChangeEventHandler(object sender, tAA_ParcelTypeRowChangeEvent e);
        
        public delegate void tTS_SubDivisionRowChangeEventHandler(object sender, tTS_SubDivisionRowChangeEvent e);
        
        public delegate void tTS_LegalRowChangeEventHandler(object sender, tTS_LegalRowChangeEvent e);
        
        public delegate void tTS_SitusRowChangeEventHandler(object sender, tTS_SitusRowChangeEvent e);
        
        public delegate void tAA_ObjectGroupRowChangeEventHandler(object sender, tAA_ObjectGroupRowChangeEvent e);
        
        public delegate void tAA_ObjectTypeRowChangeEventHandler(object sender, tAA_ObjectTypeRowChangeEvent e);
        
        public delegate void tAA_Misc_CatalogRowChangeEventHandler(object sender, tAA_Misc_CatalogRowChangeEvent e);
        
        public delegate void tAA_MiscRowChangeEventHandler(object sender, tAA_MiscRowChangeEvent e);
        
        public delegate void tTS_UnitRowChangeEventHandler(object sender, tTS_UnitRowChangeEvent e);
        
        public delegate void tTS_StreetListRowChangeEventHandler(object sender, tTS_StreetListRowChangeEvent e);
        
        public delegate void tGD_FeatureClassRowChangeEventHandler(object sender, tGD_FeatureClassRowChangeEvent e);
        
        public delegate void tGD_EventTypeRowChangeEventHandler(object sender, tGD_EventTypeRowChangeEvent e);
        
        public delegate void tGD_EG_StatusRowChangeEventHandler(object sender, tGD_EG_StatusRowChangeEvent e);
        
        public delegate void tGD_EventRowChangeEventHandler(object sender, tGD_EventRowChangeEvent e);
        
        public delegate void tTS_UserGroupRowChangeEventHandler(object sender, tTS_UserGroupRowChangeEvent e);
        
        public delegate void tTS_UserRowChangeEventHandler(object sender, tTS_UserRowChangeEvent e);
        
        public delegate void tTS_User2GroupRowChangeEventHandler(object sender, tTS_User2GroupRowChangeEvent e);
        
        public delegate void tTS_UserPermissionRowChangeEventHandler(object sender, tTS_UserPermissionRowChangeEvent e);
        
        public delegate void tTS_OwnerRowChangeEventHandler(object sender, tTS_OwnerRowChangeEvent e);
        
        public delegate void tAA_MOwnerRowChangeEventHandler(object sender, tAA_MOwnerRowChangeEvent e);
        
        public delegate void GetChkOutXMLRowChangeEventHandler(object sender, GetChkOutXMLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListSnapshotTableDataTable : global::System.Data.TypedTableBase<ListSnapshotTableRow> {
            
            private global::System.Data.DataColumn columnSnapshotID;
            
            private global::System.Data.DataColumn columnSnapshotName;
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnSnapshotNote;
            
            private global::System.Data.DataColumn columnRecordCount;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListSnapshotTableDataTable() {
                this.TableName = "ListSnapshotTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListSnapshotTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListSnapshotTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnapshotIDColumn {
                get {
                    return this.columnSnapshotID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnapshotNameColumn {
                get {
                    return this.columnSnapshotName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnapshotNoteColumn {
                get {
                    return this.columnSnapshotNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordCountColumn {
                get {
                    return this.columnRecordCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListSnapshotTableRow this[int index] {
                get {
                    return ((ListSnapshotTableRow)(this.Rows[index]));
                }
            }
            
            public event ListSnapshotTableRowChangeEventHandler ListSnapshotTableRowChanging;
            
            public event ListSnapshotTableRowChangeEventHandler ListSnapshotTableRowChanged;
            
            public event ListSnapshotTableRowChangeEventHandler ListSnapshotTableRowDeleting;
            
            public event ListSnapshotTableRowChangeEventHandler ListSnapshotTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListSnapshotTableRow(ListSnapshotTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListSnapshotTableRow AddListSnapshotTableRow(int SnapshotID, string SnapshotName, int Form, string SnapshotNote, int RecordCount, string CreatedBy, int InsertedBy, string InsertedDate) {
                ListSnapshotTableRow rowListSnapshotTableRow = ((ListSnapshotTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SnapshotID,
                        SnapshotName,
                        Form,
                        SnapshotNote,
                        RecordCount,
                        CreatedBy,
                        InsertedBy,
                        InsertedDate};
                rowListSnapshotTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListSnapshotTableRow);
                return rowListSnapshotTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListSnapshotTableDataTable cln = ((ListSnapshotTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListSnapshotTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSnapshotID = base.Columns["SnapshotID"];
                this.columnSnapshotName = base.Columns["SnapshotName"];
                this.columnForm = base.Columns["Form"];
                this.columnSnapshotNote = base.Columns["SnapshotNote"];
                this.columnRecordCount = base.Columns["RecordCount"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSnapshotID = new global::System.Data.DataColumn("SnapshotID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSnapshotID);
                this.columnSnapshotName = new global::System.Data.DataColumn("SnapshotName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSnapshotName);
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnSnapshotNote = new global::System.Data.DataColumn("SnapshotNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSnapshotNote);
                this.columnRecordCount = new global::System.Data.DataColumn("RecordCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordCount);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnSnapshotID.ReadOnly = true;
                this.columnSnapshotName.ReadOnly = true;
                this.columnSnapshotName.MaxLength = 50;
                this.columnForm.ReadOnly = true;
                this.columnSnapshotNote.ReadOnly = true;
                this.columnSnapshotNote.MaxLength = 250;
                this.columnRecordCount.ReadOnly = true;
                this.columnCreatedBy.ReadOnly = true;
                this.columnCreatedBy.MaxLength = 50;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnInsertedDate.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListSnapshotTableRow NewListSnapshotTableRow() {
                return ((ListSnapshotTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListSnapshotTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListSnapshotTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListSnapshotTableRowChanged != null)) {
                    this.ListSnapshotTableRowChanged(this, new ListSnapshotTableRowChangeEvent(((ListSnapshotTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListSnapshotTableRowChanging != null)) {
                    this.ListSnapshotTableRowChanging(this, new ListSnapshotTableRowChangeEvent(((ListSnapshotTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListSnapshotTableRowDeleted != null)) {
                    this.ListSnapshotTableRowDeleted(this, new ListSnapshotTableRowChangeEvent(((ListSnapshotTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListSnapshotTableRowDeleting != null)) {
                    this.ListSnapshotTableRowDeleting(this, new ListSnapshotTableRowChangeEvent(((ListSnapshotTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListSnapshotTableRow(ListSnapshotTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListSnapshotTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListPreviewDetailTableDataTable : global::System.Data.TypedTableBase<ListPreviewDetailTableRow> {
            
            private global::System.Data.DataColumn columnSnapCount;
            
            private global::System.Data.DataColumn columnParcelCount;
            
            private global::System.Data.DataColumn columnLockedParcel;
            
            private global::System.Data.DataColumn columnIsCheckedOut;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPreviewDetailTableDataTable() {
                this.TableName = "ListPreviewDetailTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListPreviewDetailTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListPreviewDetailTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnapCountColumn {
                get {
                    return this.columnSnapCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelCountColumn {
                get {
                    return this.columnParcelCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockedParcelColumn {
                get {
                    return this.columnLockedParcel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCheckedOutColumn {
                get {
                    return this.columnIsCheckedOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPreviewDetailTableRow this[int index] {
                get {
                    return ((ListPreviewDetailTableRow)(this.Rows[index]));
                }
            }
            
            public event ListPreviewDetailTableRowChangeEventHandler ListPreviewDetailTableRowChanging;
            
            public event ListPreviewDetailTableRowChangeEventHandler ListPreviewDetailTableRowChanged;
            
            public event ListPreviewDetailTableRowChangeEventHandler ListPreviewDetailTableRowDeleting;
            
            public event ListPreviewDetailTableRowChangeEventHandler ListPreviewDetailTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListPreviewDetailTableRow(ListPreviewDetailTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPreviewDetailTableRow AddListPreviewDetailTableRow(int SnapCount, int ParcelCount, int LockedParcel, bool IsCheckedOut) {
                ListPreviewDetailTableRow rowListPreviewDetailTableRow = ((ListPreviewDetailTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SnapCount,
                        ParcelCount,
                        LockedParcel,
                        IsCheckedOut};
                rowListPreviewDetailTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListPreviewDetailTableRow);
                return rowListPreviewDetailTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListPreviewDetailTableDataTable cln = ((ListPreviewDetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListPreviewDetailTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSnapCount = base.Columns["SnapCount"];
                this.columnParcelCount = base.Columns["ParcelCount"];
                this.columnLockedParcel = base.Columns["LockedParcel"];
                this.columnIsCheckedOut = base.Columns["IsCheckedOut"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSnapCount = new global::System.Data.DataColumn("SnapCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSnapCount);
                this.columnParcelCount = new global::System.Data.DataColumn("ParcelCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelCount);
                this.columnLockedParcel = new global::System.Data.DataColumn("LockedParcel", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockedParcel);
                this.columnIsCheckedOut = new global::System.Data.DataColumn("IsCheckedOut", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCheckedOut);
                this.columnSnapCount.ReadOnly = true;
                this.columnParcelCount.ReadOnly = true;
                this.columnLockedParcel.ReadOnly = true;
                this.columnIsCheckedOut.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPreviewDetailTableRow NewListPreviewDetailTableRow() {
                return ((ListPreviewDetailTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListPreviewDetailTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListPreviewDetailTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListPreviewDetailTableRowChanged != null)) {
                    this.ListPreviewDetailTableRowChanged(this, new ListPreviewDetailTableRowChangeEvent(((ListPreviewDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListPreviewDetailTableRowChanging != null)) {
                    this.ListPreviewDetailTableRowChanging(this, new ListPreviewDetailTableRowChangeEvent(((ListPreviewDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListPreviewDetailTableRowDeleted != null)) {
                    this.ListPreviewDetailTableRowDeleted(this, new ListPreviewDetailTableRowChangeEvent(((ListPreviewDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListPreviewDetailTableRowDeleting != null)) {
                    this.ListPreviewDetailTableRowDeleting(this, new ListPreviewDetailTableRowChangeEvent(((ListPreviewDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListPreviewDetailTableRow(ListPreviewDetailTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListPreviewDetailTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListCfgConfigTableDataTable : global::System.Data.TypedTableBase<ListCfgConfigTableRow> {
            
            private global::System.Data.DataColumn columnConfigurationValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListCfgConfigTableDataTable() {
                this.TableName = "ListCfgConfigTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListCfgConfigTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListCfgConfigTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfigurationValueColumn {
                get {
                    return this.columnConfigurationValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListCfgConfigTableRow this[int index] {
                get {
                    return ((ListCfgConfigTableRow)(this.Rows[index]));
                }
            }
            
            public event ListCfgConfigTableRowChangeEventHandler ListCfgConfigTableRowChanging;
            
            public event ListCfgConfigTableRowChangeEventHandler ListCfgConfigTableRowChanged;
            
            public event ListCfgConfigTableRowChangeEventHandler ListCfgConfigTableRowDeleting;
            
            public event ListCfgConfigTableRowChangeEventHandler ListCfgConfigTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListCfgConfigTableRow(ListCfgConfigTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListCfgConfigTableRow AddListCfgConfigTableRow(string ConfigurationValue) {
                ListCfgConfigTableRow rowListCfgConfigTableRow = ((ListCfgConfigTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ConfigurationValue};
                rowListCfgConfigTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListCfgConfigTableRow);
                return rowListCfgConfigTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListCfgConfigTableDataTable cln = ((ListCfgConfigTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListCfgConfigTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnConfigurationValue = base.Columns["ConfigurationValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnConfigurationValue = new global::System.Data.DataColumn("ConfigurationValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfigurationValue);
                this.columnConfigurationValue.ReadOnly = true;
                this.columnConfigurationValue.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListCfgConfigTableRow NewListCfgConfigTableRow() {
                return ((ListCfgConfigTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListCfgConfigTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListCfgConfigTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListCfgConfigTableRowChanged != null)) {
                    this.ListCfgConfigTableRowChanged(this, new ListCfgConfigTableRowChangeEvent(((ListCfgConfigTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListCfgConfigTableRowChanging != null)) {
                    this.ListCfgConfigTableRowChanging(this, new ListCfgConfigTableRowChangeEvent(((ListCfgConfigTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListCfgConfigTableRowDeleted != null)) {
                    this.ListCfgConfigTableRowDeleted(this, new ListCfgConfigTableRowChangeEvent(((ListCfgConfigTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListCfgConfigTableRowDeleting != null)) {
                    this.ListCfgConfigTableRowDeleting(this, new ListCfgConfigTableRowChangeEvent(((ListCfgConfigTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListCfgConfigTableRow(ListCfgConfigTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListCfgConfigTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_CheckoutConfigurationDataTable : global::System.Data.TypedTableBase<tTS_CheckoutConfigurationRow> {
            
            private global::System.Data.DataColumn columnApplicationID;
            
            private global::System.Data.DataColumn columnOrders;
            
            private global::System.Data.DataColumn columnTableName;
            
            private global::System.Data.DataColumn columnColumnName;
            
            private global::System.Data.DataColumn columnPTable;
            
            private global::System.Data.DataColumn columnPTColumnName;
            
            private global::System.Data.DataColumn columnFKey;
            
            private global::System.Data.DataColumn columnWHEREClause;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CheckoutConfigurationDataTable() {
                this.TableName = "tTS_CheckoutConfiguration";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_CheckoutConfigurationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_CheckoutConfigurationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicationIDColumn {
                get {
                    return this.columnApplicationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrdersColumn {
                get {
                    return this.columnOrders;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TableNameColumn {
                get {
                    return this.columnTableName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColumnNameColumn {
                get {
                    return this.columnColumnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PTableColumn {
                get {
                    return this.columnPTable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PTColumnNameColumn {
                get {
                    return this.columnPTColumnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FKeyColumn {
                get {
                    return this.columnFKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WHEREClauseColumn {
                get {
                    return this.columnWHEREClause;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CheckoutConfigurationRow this[int index] {
                get {
                    return ((tTS_CheckoutConfigurationRow)(this.Rows[index]));
                }
            }
            
            public event tTS_CheckoutConfigurationRowChangeEventHandler tTS_CheckoutConfigurationRowChanging;
            
            public event tTS_CheckoutConfigurationRowChangeEventHandler tTS_CheckoutConfigurationRowChanged;
            
            public event tTS_CheckoutConfigurationRowChangeEventHandler tTS_CheckoutConfigurationRowDeleting;
            
            public event tTS_CheckoutConfigurationRowChangeEventHandler tTS_CheckoutConfigurationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_CheckoutConfigurationRow(tTS_CheckoutConfigurationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CheckoutConfigurationRow AddtTS_CheckoutConfigurationRow(int ApplicationID, int Orders, string TableName, string ColumnName, string PTable, string PTColumnName, string FKey, string WHEREClause, string Comment, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_CheckoutConfigurationRow rowtTS_CheckoutConfigurationRow = ((tTS_CheckoutConfigurationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ApplicationID,
                        Orders,
                        TableName,
                        ColumnName,
                        PTable,
                        PTColumnName,
                        FKey,
                        WHEREClause,
                        Comment,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_CheckoutConfigurationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_CheckoutConfigurationRow);
                return rowtTS_CheckoutConfigurationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_CheckoutConfigurationDataTable cln = ((tTS_CheckoutConfigurationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_CheckoutConfigurationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnApplicationID = base.Columns["ApplicationID"];
                this.columnOrders = base.Columns["Orders"];
                this.columnTableName = base.Columns["TableName"];
                this.columnColumnName = base.Columns["ColumnName"];
                this.columnPTable = base.Columns["PTable"];
                this.columnPTColumnName = base.Columns["PTColumnName"];
                this.columnFKey = base.Columns["FKey"];
                this.columnWHEREClause = base.Columns["WHEREClause"];
                this.columnComment = base.Columns["Comment"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnApplicationID = new global::System.Data.DataColumn("ApplicationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationID);
                this.columnOrders = new global::System.Data.DataColumn("Orders", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrders);
                this.columnTableName = new global::System.Data.DataColumn("TableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableName);
                this.columnColumnName = new global::System.Data.DataColumn("ColumnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnName);
                this.columnPTable = new global::System.Data.DataColumn("PTable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTable);
                this.columnPTColumnName = new global::System.Data.DataColumn("PTColumnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTColumnName);
                this.columnFKey = new global::System.Data.DataColumn("FKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFKey);
                this.columnWHEREClause = new global::System.Data.DataColumn("WHEREClause", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHEREClause);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnApplicationID.ReadOnly = true;
                this.columnOrders.ReadOnly = true;
                this.columnTableName.ReadOnly = true;
                this.columnTableName.MaxLength = 128;
                this.columnColumnName.ReadOnly = true;
                this.columnColumnName.MaxLength = 128;
                this.columnPTable.ReadOnly = true;
                this.columnPTable.MaxLength = 128;
                this.columnPTColumnName.ReadOnly = true;
                this.columnPTColumnName.MaxLength = 128;
                this.columnFKey.ReadOnly = true;
                this.columnFKey.MaxLength = 128;
                this.columnWHEREClause.ReadOnly = true;
                this.columnWHEREClause.MaxLength = 128;
                this.columnComment.ReadOnly = true;
                this.columnComment.MaxLength = 1000;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CheckoutConfigurationRow NewtTS_CheckoutConfigurationRow() {
                return ((tTS_CheckoutConfigurationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_CheckoutConfigurationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_CheckoutConfigurationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_CheckoutConfigurationRowChanged != null)) {
                    this.tTS_CheckoutConfigurationRowChanged(this, new tTS_CheckoutConfigurationRowChangeEvent(((tTS_CheckoutConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_CheckoutConfigurationRowChanging != null)) {
                    this.tTS_CheckoutConfigurationRowChanging(this, new tTS_CheckoutConfigurationRowChangeEvent(((tTS_CheckoutConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_CheckoutConfigurationRowDeleted != null)) {
                    this.tTS_CheckoutConfigurationRowDeleted(this, new tTS_CheckoutConfigurationRowChangeEvent(((tTS_CheckoutConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_CheckoutConfigurationRowDeleting != null)) {
                    this.tTS_CheckoutConfigurationRowDeleting(this, new tTS_CheckoutConfigurationRowChangeEvent(((tTS_CheckoutConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_CheckoutConfigurationRow(tTS_CheckoutConfigurationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_CheckoutConfigurationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_ApplicationDataTable : global::System.Data.TypedTableBase<tTS_ApplicationRow> {
            
            private global::System.Data.DataColumn columnApplicationID;
            
            private global::System.Data.DataColumn columnApplication;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_ApplicationDataTable() {
                this.TableName = "tTS_Application";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_ApplicationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_ApplicationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicationIDColumn {
                get {
                    return this.columnApplicationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicationColumn {
                get {
                    return this.columnApplication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_ApplicationRow this[int index] {
                get {
                    return ((tTS_ApplicationRow)(this.Rows[index]));
                }
            }
            
            public event tTS_ApplicationRowChangeEventHandler tTS_ApplicationRowChanging;
            
            public event tTS_ApplicationRowChangeEventHandler tTS_ApplicationRowChanged;
            
            public event tTS_ApplicationRowChangeEventHandler tTS_ApplicationRowDeleting;
            
            public event tTS_ApplicationRowChangeEventHandler tTS_ApplicationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_ApplicationRow(tTS_ApplicationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_ApplicationRow AddtTS_ApplicationRow(byte ApplicationID, string Application, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_ApplicationRow rowtTS_ApplicationRow = ((tTS_ApplicationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ApplicationID,
                        Application,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_ApplicationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_ApplicationRow);
                return rowtTS_ApplicationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_ApplicationDataTable cln = ((tTS_ApplicationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_ApplicationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnApplicationID = base.Columns["ApplicationID"];
                this.columnApplication = base.Columns["Application"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnApplicationID = new global::System.Data.DataColumn("ApplicationID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationID);
                this.columnApplication = new global::System.Data.DataColumn("Application", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplication);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnApplicationID.ReadOnly = true;
                this.columnApplication.ReadOnly = true;
                this.columnApplication.MaxLength = 20;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_ApplicationRow NewtTS_ApplicationRow() {
                return ((tTS_ApplicationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_ApplicationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_ApplicationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_ApplicationRowChanged != null)) {
                    this.tTS_ApplicationRowChanged(this, new tTS_ApplicationRowChangeEvent(((tTS_ApplicationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_ApplicationRowChanging != null)) {
                    this.tTS_ApplicationRowChanging(this, new tTS_ApplicationRowChangeEvent(((tTS_ApplicationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_ApplicationRowDeleted != null)) {
                    this.tTS_ApplicationRowDeleted(this, new tTS_ApplicationRowChangeEvent(((tTS_ApplicationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_ApplicationRowDeleting != null)) {
                    this.tTS_ApplicationRowDeleting(this, new tTS_ApplicationRowChangeEvent(((tTS_ApplicationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_ApplicationRow(tTS_ApplicationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_ApplicationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_FormMenuDataTable : global::System.Data.TypedTableBase<tTS_FormMenuRow> {
            
            private global::System.Data.DataColumn columnMenuGroupID;
            
            private global::System.Data.DataColumn columnMenuGroup;
            
            private global::System.Data.DataColumn columnGroupOrder;
            
            private global::System.Data.DataColumn columnApplicationID;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormMenuDataTable() {
                this.TableName = "tTS_FormMenu";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FormMenuDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_FormMenuDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MenuGroupIDColumn {
                get {
                    return this.columnMenuGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MenuGroupColumn {
                get {
                    return this.columnMenuGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupOrderColumn {
                get {
                    return this.columnGroupOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicationIDColumn {
                get {
                    return this.columnApplicationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormMenuRow this[int index] {
                get {
                    return ((tTS_FormMenuRow)(this.Rows[index]));
                }
            }
            
            public event tTS_FormMenuRowChangeEventHandler tTS_FormMenuRowChanging;
            
            public event tTS_FormMenuRowChangeEventHandler tTS_FormMenuRowChanged;
            
            public event tTS_FormMenuRowChangeEventHandler tTS_FormMenuRowDeleting;
            
            public event tTS_FormMenuRowChangeEventHandler tTS_FormMenuRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_FormMenuRow(tTS_FormMenuRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormMenuRow AddtTS_FormMenuRow(short MenuGroupID, string MenuGroup, byte GroupOrder, byte ApplicationID, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_FormMenuRow rowtTS_FormMenuRow = ((tTS_FormMenuRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MenuGroupID,
                        MenuGroup,
                        GroupOrder,
                        ApplicationID,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_FormMenuRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_FormMenuRow);
                return rowtTS_FormMenuRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_FormMenuDataTable cln = ((tTS_FormMenuDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_FormMenuDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMenuGroupID = base.Columns["MenuGroupID"];
                this.columnMenuGroup = base.Columns["MenuGroup"];
                this.columnGroupOrder = base.Columns["GroupOrder"];
                this.columnApplicationID = base.Columns["ApplicationID"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMenuGroupID = new global::System.Data.DataColumn("MenuGroupID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMenuGroupID);
                this.columnMenuGroup = new global::System.Data.DataColumn("MenuGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMenuGroup);
                this.columnGroupOrder = new global::System.Data.DataColumn("GroupOrder", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupOrder);
                this.columnApplicationID = new global::System.Data.DataColumn("ApplicationID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationID);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnMenuGroupID.ReadOnly = true;
                this.columnMenuGroup.ReadOnly = true;
                this.columnMenuGroup.MaxLength = 50;
                this.columnGroupOrder.ReadOnly = true;
                this.columnApplicationID.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormMenuRow NewtTS_FormMenuRow() {
                return ((tTS_FormMenuRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_FormMenuRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_FormMenuRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_FormMenuRowChanged != null)) {
                    this.tTS_FormMenuRowChanged(this, new tTS_FormMenuRowChangeEvent(((tTS_FormMenuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_FormMenuRowChanging != null)) {
                    this.tTS_FormMenuRowChanging(this, new tTS_FormMenuRowChangeEvent(((tTS_FormMenuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_FormMenuRowDeleted != null)) {
                    this.tTS_FormMenuRowDeleted(this, new tTS_FormMenuRowChangeEvent(((tTS_FormMenuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_FormMenuRowDeleting != null)) {
                    this.tTS_FormMenuRowDeleting(this, new tTS_FormMenuRowChangeEvent(((tTS_FormMenuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_FormMenuRow(tTS_FormMenuRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_FormMenuDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_CfgDataTable : global::System.Data.TypedTableBase<tTS_CfgRow> {
            
            private global::System.Data.DataColumn columnCfgName;
            
            private global::System.Data.DataColumn columnCfgValue;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnApplicationID;
            
            private global::System.Data.DataColumn columnDisplayName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CfgDataTable() {
                this.TableName = "tTS_Cfg";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_CfgDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_CfgDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CfgNameColumn {
                get {
                    return this.columnCfgName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CfgValueColumn {
                get {
                    return this.columnCfgValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicationIDColumn {
                get {
                    return this.columnApplicationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayNameColumn {
                get {
                    return this.columnDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CfgRow this[int index] {
                get {
                    return ((tTS_CfgRow)(this.Rows[index]));
                }
            }
            
            public event tTS_CfgRowChangeEventHandler tTS_CfgRowChanging;
            
            public event tTS_CfgRowChangeEventHandler tTS_CfgRowChanged;
            
            public event tTS_CfgRowChangeEventHandler tTS_CfgRowDeleting;
            
            public event tTS_CfgRowChangeEventHandler tTS_CfgRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_CfgRow(tTS_CfgRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CfgRow AddtTS_CfgRow(string CfgName, string CfgValue, string Description, byte ApplicationID, string DisplayName, byte Type, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_CfgRow rowtTS_CfgRow = ((tTS_CfgRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CfgName,
                        CfgValue,
                        Description,
                        ApplicationID,
                        DisplayName,
                        Type,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_CfgRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_CfgRow);
                return rowtTS_CfgRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_CfgDataTable cln = ((tTS_CfgDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_CfgDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCfgName = base.Columns["CfgName"];
                this.columnCfgValue = base.Columns["CfgValue"];
                this.columnDescription = base.Columns["Description"];
                this.columnApplicationID = base.Columns["ApplicationID"];
                this.columnDisplayName = base.Columns["DisplayName"];
                this.columnType = base.Columns["Type"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCfgName = new global::System.Data.DataColumn("CfgName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCfgName);
                this.columnCfgValue = new global::System.Data.DataColumn("CfgValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCfgValue);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnApplicationID = new global::System.Data.DataColumn("ApplicationID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationID);
                this.columnDisplayName = new global::System.Data.DataColumn("DisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnCfgName.ReadOnly = true;
                this.columnCfgName.MaxLength = 50;
                this.columnCfgValue.ReadOnly = true;
                this.columnCfgValue.MaxLength = 1000;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 100;
                this.columnApplicationID.ReadOnly = true;
                this.columnDisplayName.ReadOnly = true;
                this.columnDisplayName.MaxLength = 50;
                this.columnType.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CfgRow NewtTS_CfgRow() {
                return ((tTS_CfgRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_CfgRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_CfgRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_CfgRowChanged != null)) {
                    this.tTS_CfgRowChanged(this, new tTS_CfgRowChangeEvent(((tTS_CfgRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_CfgRowChanging != null)) {
                    this.tTS_CfgRowChanging(this, new tTS_CfgRowChangeEvent(((tTS_CfgRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_CfgRowDeleted != null)) {
                    this.tTS_CfgRowDeleted(this, new tTS_CfgRowChangeEvent(((tTS_CfgRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_CfgRowDeleting != null)) {
                    this.tTS_CfgRowDeleting(this, new tTS_CfgRowChangeEvent(((tTS_CfgRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_CfgRow(tTS_CfgRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_CfgDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_FormDataTable : global::System.Data.TypedTableBase<tTS_FormRow> {
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnFormFile;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnMenuName;
            
            private global::System.Data.DataColumn columnMenuOrder;
            
            private global::System.Data.DataColumn columnMenuGroupID;
            
            private global::System.Data.DataColumn columnIsSmartPart;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnWebHeight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormDataTable() {
                this.TableName = "tTS_Form";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FormDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_FormDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormFileColumn {
                get {
                    return this.columnFormFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MenuNameColumn {
                get {
                    return this.columnMenuName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MenuOrderColumn {
                get {
                    return this.columnMenuOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MenuGroupIDColumn {
                get {
                    return this.columnMenuGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSmartPartColumn {
                get {
                    return this.columnIsSmartPart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebHeightColumn {
                get {
                    return this.columnWebHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormRow this[int index] {
                get {
                    return ((tTS_FormRow)(this.Rows[index]));
                }
            }
            
            public event tTS_FormRowChangeEventHandler tTS_FormRowChanging;
            
            public event tTS_FormRowChangeEventHandler tTS_FormRowChanged;
            
            public event tTS_FormRowChangeEventHandler tTS_FormRowDeleting;
            
            public event tTS_FormRowChangeEventHandler tTS_FormRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_FormRow(tTS_FormRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormRow AddtTS_FormRow(int Form, string FormFile, string Description, string MenuName, byte MenuOrder, short MenuGroupID, bool IsSmartPart, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, int WebHeight) {
                tTS_FormRow rowtTS_FormRow = ((tTS_FormRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Form,
                        FormFile,
                        Description,
                        MenuName,
                        MenuOrder,
                        MenuGroupID,
                        IsSmartPart,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        WebHeight};
                rowtTS_FormRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_FormRow);
                return rowtTS_FormRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_FormDataTable cln = ((tTS_FormDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_FormDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnForm = base.Columns["Form"];
                this.columnFormFile = base.Columns["FormFile"];
                this.columnDescription = base.Columns["Description"];
                this.columnMenuName = base.Columns["MenuName"];
                this.columnMenuOrder = base.Columns["MenuOrder"];
                this.columnMenuGroupID = base.Columns["MenuGroupID"];
                this.columnIsSmartPart = base.Columns["IsSmartPart"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnWebHeight = base.Columns["WebHeight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnFormFile = new global::System.Data.DataColumn("FormFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormFile);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMenuName = new global::System.Data.DataColumn("MenuName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMenuName);
                this.columnMenuOrder = new global::System.Data.DataColumn("MenuOrder", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMenuOrder);
                this.columnMenuGroupID = new global::System.Data.DataColumn("MenuGroupID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMenuGroupID);
                this.columnIsSmartPart = new global::System.Data.DataColumn("IsSmartPart", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSmartPart);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnWebHeight = new global::System.Data.DataColumn("WebHeight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebHeight);
                this.columnForm.ReadOnly = true;
                this.columnFormFile.ReadOnly = true;
                this.columnFormFile.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 50;
                this.columnMenuName.ReadOnly = true;
                this.columnMenuName.MaxLength = 50;
                this.columnMenuOrder.ReadOnly = true;
                this.columnMenuGroupID.ReadOnly = true;
                this.columnIsSmartPart.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnWebHeight.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormRow NewtTS_FormRow() {
                return ((tTS_FormRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_FormRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_FormRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_FormRowChanged != null)) {
                    this.tTS_FormRowChanged(this, new tTS_FormRowChangeEvent(((tTS_FormRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_FormRowChanging != null)) {
                    this.tTS_FormRowChanging(this, new tTS_FormRowChangeEvent(((tTS_FormRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_FormRowDeleted != null)) {
                    this.tTS_FormRowDeleted(this, new tTS_FormRowChangeEvent(((tTS_FormRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_FormRowDeleting != null)) {
                    this.tTS_FormRowDeleting(this, new tTS_FormRowChangeEvent(((tTS_FormRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_FormRow(tTS_FormRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_FormDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_FormSandwichDataTable : global::System.Data.TypedTableBase<tTS_FormSandwichRow> {
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnKeyField;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnSubTitle1;
            
            private global::System.Data.DataColumn columnSubTitle2;
            
            private global::System.Data.DataColumn columnIsPrintVisible;
            
            private global::System.Data.DataColumn columnIsPreviewVisible;
            
            private global::System.Data.DataColumn columnIsEmailVisible;
            
            private global::System.Data.DataColumn columnIsNewVisible;
            
            private global::System.Data.DataColumn columnIsSaveVisible;
            
            private global::System.Data.DataColumn columnIsCancelVisible;
            
            private global::System.Data.DataColumn columnIsDeleteVisible;
            
            private global::System.Data.DataColumn columnIsAttachmentsVisible;
            
            private global::System.Data.DataColumn columnIsCommentsVisible;
            
            private global::System.Data.DataColumn columnIsQueryVisible;
            
            private global::System.Data.DataColumn columnIsNavVisible;
            
            private global::System.Data.DataColumn columnIsAuditVisible;
            
            private global::System.Data.DataColumn columnAuditReport;
            
            private global::System.Data.DataColumn columnReport;
            
            private global::System.Data.DataColumn columnAttachmentAs;
            
            private global::System.Data.DataColumn columnCommentAs;
            
            private global::System.Data.DataColumn columnAuditLinkLabel;
            
            private global::System.Data.DataColumn columnFeatureClassID;
            
            private global::System.Data.DataColumn columnIsKeyOpenDefault;
            
            private global::System.Data.DataColumn columnUseExtraParameter;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnIsFindOn;
            
            private global::System.Data.DataColumn columnIsQueryLoad;
            
            private global::System.Data.DataColumn columnIsAnalytics;
            
            private global::System.Data.DataColumn columnIsUpdate;
            
            private global::System.Data.DataColumn columnIsJerkFree;
            
            private global::System.Data.DataColumn columnBackgroundColor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSandwichDataTable() {
                this.TableName = "tTS_FormSandwich";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FormSandwichDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_FormSandwichDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeyFieldColumn {
                get {
                    return this.columnKeyField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTitle1Column {
                get {
                    return this.columnSubTitle1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTitle2Column {
                get {
                    return this.columnSubTitle2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPrintVisibleColumn {
                get {
                    return this.columnIsPrintVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPreviewVisibleColumn {
                get {
                    return this.columnIsPreviewVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsEmailVisibleColumn {
                get {
                    return this.columnIsEmailVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsNewVisibleColumn {
                get {
                    return this.columnIsNewVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSaveVisibleColumn {
                get {
                    return this.columnIsSaveVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCancelVisibleColumn {
                get {
                    return this.columnIsCancelVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeleteVisibleColumn {
                get {
                    return this.columnIsDeleteVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAttachmentsVisibleColumn {
                get {
                    return this.columnIsAttachmentsVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCommentsVisibleColumn {
                get {
                    return this.columnIsCommentsVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsQueryVisibleColumn {
                get {
                    return this.columnIsQueryVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsNavVisibleColumn {
                get {
                    return this.columnIsNavVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAuditVisibleColumn {
                get {
                    return this.columnIsAuditVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuditReportColumn {
                get {
                    return this.columnAuditReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportColumn {
                get {
                    return this.columnReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttachmentAsColumn {
                get {
                    return this.columnAttachmentAs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentAsColumn {
                get {
                    return this.columnCommentAs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuditLinkLabelColumn {
                get {
                    return this.columnAuditLinkLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeatureClassIDColumn {
                get {
                    return this.columnFeatureClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsKeyOpenDefaultColumn {
                get {
                    return this.columnIsKeyOpenDefault;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseExtraParameterColumn {
                get {
                    return this.columnUseExtraParameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsFindOnColumn {
                get {
                    return this.columnIsFindOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsQueryLoadColumn {
                get {
                    return this.columnIsQueryLoad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAnalyticsColumn {
                get {
                    return this.columnIsAnalytics;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsUpdateColumn {
                get {
                    return this.columnIsUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsJerkFreeColumn {
                get {
                    return this.columnIsJerkFree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackgroundColorColumn {
                get {
                    return this.columnBackgroundColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSandwichRow this[int index] {
                get {
                    return ((tTS_FormSandwichRow)(this.Rows[index]));
                }
            }
            
            public event tTS_FormSandwichRowChangeEventHandler tTS_FormSandwichRowChanging;
            
            public event tTS_FormSandwichRowChangeEventHandler tTS_FormSandwichRowChanged;
            
            public event tTS_FormSandwichRowChangeEventHandler tTS_FormSandwichRowDeleting;
            
            public event tTS_FormSandwichRowChangeEventHandler tTS_FormSandwichRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_FormSandwichRow(tTS_FormSandwichRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSandwichRow AddtTS_FormSandwichRow(
                        int Form, 
                        string KeyField, 
                        string Description, 
                        string SubTitle1, 
                        string SubTitle2, 
                        bool IsPrintVisible, 
                        bool IsPreviewVisible, 
                        bool IsEmailVisible, 
                        bool IsNewVisible, 
                        bool IsSaveVisible, 
                        bool IsCancelVisible, 
                        bool IsDeleteVisible, 
                        bool IsAttachmentsVisible, 
                        bool IsCommentsVisible, 
                        bool IsQueryVisible, 
                        bool IsNavVisible, 
                        bool IsAuditVisible, 
                        int AuditReport, 
                        int Report, 
                        int AttachmentAs, 
                        int CommentAs, 
                        string AuditLinkLabel, 
                        int FeatureClassID, 
                        bool IsKeyOpenDefault, 
                        byte UseExtraParameter, 
                        short ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        bool IsFindOn, 
                        bool IsQueryLoad, 
                        bool IsAnalytics, 
                        bool IsUpdate, 
                        bool IsJerkFree, 
                        string BackgroundColor) {
                tTS_FormSandwichRow rowtTS_FormSandwichRow = ((tTS_FormSandwichRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Form,
                        KeyField,
                        Description,
                        SubTitle1,
                        SubTitle2,
                        IsPrintVisible,
                        IsPreviewVisible,
                        IsEmailVisible,
                        IsNewVisible,
                        IsSaveVisible,
                        IsCancelVisible,
                        IsDeleteVisible,
                        IsAttachmentsVisible,
                        IsCommentsVisible,
                        IsQueryVisible,
                        IsNavVisible,
                        IsAuditVisible,
                        AuditReport,
                        Report,
                        AttachmentAs,
                        CommentAs,
                        AuditLinkLabel,
                        FeatureClassID,
                        IsKeyOpenDefault,
                        UseExtraParameter,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        IsFindOn,
                        IsQueryLoad,
                        IsAnalytics,
                        IsUpdate,
                        IsJerkFree,
                        BackgroundColor};
                rowtTS_FormSandwichRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_FormSandwichRow);
                return rowtTS_FormSandwichRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_FormSandwichDataTable cln = ((tTS_FormSandwichDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_FormSandwichDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnForm = base.Columns["Form"];
                this.columnKeyField = base.Columns["KeyField"];
                this.columnDescription = base.Columns["Description"];
                this.columnSubTitle1 = base.Columns["SubTitle1"];
                this.columnSubTitle2 = base.Columns["SubTitle2"];
                this.columnIsPrintVisible = base.Columns["IsPrintVisible"];
                this.columnIsPreviewVisible = base.Columns["IsPreviewVisible"];
                this.columnIsEmailVisible = base.Columns["IsEmailVisible"];
                this.columnIsNewVisible = base.Columns["IsNewVisible"];
                this.columnIsSaveVisible = base.Columns["IsSaveVisible"];
                this.columnIsCancelVisible = base.Columns["IsCancelVisible"];
                this.columnIsDeleteVisible = base.Columns["IsDeleteVisible"];
                this.columnIsAttachmentsVisible = base.Columns["IsAttachmentsVisible"];
                this.columnIsCommentsVisible = base.Columns["IsCommentsVisible"];
                this.columnIsQueryVisible = base.Columns["IsQueryVisible"];
                this.columnIsNavVisible = base.Columns["IsNavVisible"];
                this.columnIsAuditVisible = base.Columns["IsAuditVisible"];
                this.columnAuditReport = base.Columns["AuditReport"];
                this.columnReport = base.Columns["Report"];
                this.columnAttachmentAs = base.Columns["AttachmentAs"];
                this.columnCommentAs = base.Columns["CommentAs"];
                this.columnAuditLinkLabel = base.Columns["AuditLinkLabel"];
                this.columnFeatureClassID = base.Columns["FeatureClassID"];
                this.columnIsKeyOpenDefault = base.Columns["IsKeyOpenDefault"];
                this.columnUseExtraParameter = base.Columns["UseExtraParameter"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnIsFindOn = base.Columns["IsFindOn"];
                this.columnIsQueryLoad = base.Columns["IsQueryLoad"];
                this.columnIsAnalytics = base.Columns["IsAnalytics"];
                this.columnIsUpdate = base.Columns["IsUpdate"];
                this.columnIsJerkFree = base.Columns["IsJerkFree"];
                this.columnBackgroundColor = base.Columns["BackgroundColor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnKeyField = new global::System.Data.DataColumn("KeyField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyField);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnSubTitle1 = new global::System.Data.DataColumn("SubTitle1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTitle1);
                this.columnSubTitle2 = new global::System.Data.DataColumn("SubTitle2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTitle2);
                this.columnIsPrintVisible = new global::System.Data.DataColumn("IsPrintVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPrintVisible);
                this.columnIsPreviewVisible = new global::System.Data.DataColumn("IsPreviewVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPreviewVisible);
                this.columnIsEmailVisible = new global::System.Data.DataColumn("IsEmailVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEmailVisible);
                this.columnIsNewVisible = new global::System.Data.DataColumn("IsNewVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNewVisible);
                this.columnIsSaveVisible = new global::System.Data.DataColumn("IsSaveVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSaveVisible);
                this.columnIsCancelVisible = new global::System.Data.DataColumn("IsCancelVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCancelVisible);
                this.columnIsDeleteVisible = new global::System.Data.DataColumn("IsDeleteVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleteVisible);
                this.columnIsAttachmentsVisible = new global::System.Data.DataColumn("IsAttachmentsVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAttachmentsVisible);
                this.columnIsCommentsVisible = new global::System.Data.DataColumn("IsCommentsVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCommentsVisible);
                this.columnIsQueryVisible = new global::System.Data.DataColumn("IsQueryVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsQueryVisible);
                this.columnIsNavVisible = new global::System.Data.DataColumn("IsNavVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNavVisible);
                this.columnIsAuditVisible = new global::System.Data.DataColumn("IsAuditVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAuditVisible);
                this.columnAuditReport = new global::System.Data.DataColumn("AuditReport", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuditReport);
                this.columnReport = new global::System.Data.DataColumn("Report", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReport);
                this.columnAttachmentAs = new global::System.Data.DataColumn("AttachmentAs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachmentAs);
                this.columnCommentAs = new global::System.Data.DataColumn("CommentAs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentAs);
                this.columnAuditLinkLabel = new global::System.Data.DataColumn("AuditLinkLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuditLinkLabel);
                this.columnFeatureClassID = new global::System.Data.DataColumn("FeatureClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeatureClassID);
                this.columnIsKeyOpenDefault = new global::System.Data.DataColumn("IsKeyOpenDefault", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsKeyOpenDefault);
                this.columnUseExtraParameter = new global::System.Data.DataColumn("UseExtraParameter", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseExtraParameter);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnIsFindOn = new global::System.Data.DataColumn("IsFindOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFindOn);
                this.columnIsQueryLoad = new global::System.Data.DataColumn("IsQueryLoad", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsQueryLoad);
                this.columnIsAnalytics = new global::System.Data.DataColumn("IsAnalytics", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAnalytics);
                this.columnIsUpdate = new global::System.Data.DataColumn("IsUpdate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUpdate);
                this.columnIsJerkFree = new global::System.Data.DataColumn("IsJerkFree", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsJerkFree);
                this.columnBackgroundColor = new global::System.Data.DataColumn("BackgroundColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackgroundColor);
                this.columnForm.ReadOnly = true;
                this.columnKeyField.ReadOnly = true;
                this.columnKeyField.MaxLength = 20;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 200;
                this.columnSubTitle1.ReadOnly = true;
                this.columnSubTitle1.MaxLength = 1000;
                this.columnSubTitle2.ReadOnly = true;
                this.columnSubTitle2.MaxLength = 1000;
                this.columnIsPrintVisible.ReadOnly = true;
                this.columnIsPreviewVisible.ReadOnly = true;
                this.columnIsEmailVisible.ReadOnly = true;
                this.columnIsNewVisible.ReadOnly = true;
                this.columnIsSaveVisible.ReadOnly = true;
                this.columnIsCancelVisible.ReadOnly = true;
                this.columnIsDeleteVisible.ReadOnly = true;
                this.columnIsAttachmentsVisible.ReadOnly = true;
                this.columnIsCommentsVisible.ReadOnly = true;
                this.columnIsQueryVisible.ReadOnly = true;
                this.columnIsNavVisible.ReadOnly = true;
                this.columnIsAuditVisible.ReadOnly = true;
                this.columnAuditReport.ReadOnly = true;
                this.columnReport.ReadOnly = true;
                this.columnAttachmentAs.ReadOnly = true;
                this.columnCommentAs.ReadOnly = true;
                this.columnAuditLinkLabel.ReadOnly = true;
                this.columnAuditLinkLabel.MaxLength = 50;
                this.columnFeatureClassID.ReadOnly = true;
                this.columnIsKeyOpenDefault.ReadOnly = true;
                this.columnUseExtraParameter.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnIsFindOn.ReadOnly = true;
                this.columnIsQueryLoad.ReadOnly = true;
                this.columnIsAnalytics.ReadOnly = true;
                this.columnIsUpdate.ReadOnly = true;
                this.columnIsJerkFree.ReadOnly = true;
                this.columnBackgroundColor.ReadOnly = true;
                this.columnBackgroundColor.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSandwichRow NewtTS_FormSandwichRow() {
                return ((tTS_FormSandwichRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_FormSandwichRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_FormSandwichRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_FormSandwichRowChanged != null)) {
                    this.tTS_FormSandwichRowChanged(this, new tTS_FormSandwichRowChangeEvent(((tTS_FormSandwichRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_FormSandwichRowChanging != null)) {
                    this.tTS_FormSandwichRowChanging(this, new tTS_FormSandwichRowChangeEvent(((tTS_FormSandwichRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_FormSandwichRowDeleted != null)) {
                    this.tTS_FormSandwichRowDeleted(this, new tTS_FormSandwichRowChangeEvent(((tTS_FormSandwichRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_FormSandwichRowDeleting != null)) {
                    this.tTS_FormSandwichRowDeleting(this, new tTS_FormSandwichRowChangeEvent(((tTS_FormSandwichRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_FormSandwichRow(tTS_FormSandwichRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_FormSandwichDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_FormConfigDataTable : global::System.Data.TypedTableBase<tTS_FormConfigRow> {
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnReport;
            
            private global::System.Data.DataColumn columnApplicationID;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormConfigDataTable() {
                this.TableName = "tTS_FormConfig";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FormConfigDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_FormConfigDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportColumn {
                get {
                    return this.columnReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicationIDColumn {
                get {
                    return this.columnApplicationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormConfigRow this[int index] {
                get {
                    return ((tTS_FormConfigRow)(this.Rows[index]));
                }
            }
            
            public event tTS_FormConfigRowChangeEventHandler tTS_FormConfigRowChanging;
            
            public event tTS_FormConfigRowChangeEventHandler tTS_FormConfigRowChanged;
            
            public event tTS_FormConfigRowChangeEventHandler tTS_FormConfigRowDeleting;
            
            public event tTS_FormConfigRowChangeEventHandler tTS_FormConfigRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_FormConfigRow(tTS_FormConfigRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormConfigRow AddtTS_FormConfigRow(int Form, int Report, byte ApplicationID, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_FormConfigRow rowtTS_FormConfigRow = ((tTS_FormConfigRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Form,
                        Report,
                        ApplicationID,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_FormConfigRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_FormConfigRow);
                return rowtTS_FormConfigRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_FormConfigDataTable cln = ((tTS_FormConfigDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_FormConfigDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnForm = base.Columns["Form"];
                this.columnReport = base.Columns["Report"];
                this.columnApplicationID = base.Columns["ApplicationID"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnReport = new global::System.Data.DataColumn("Report", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReport);
                this.columnApplicationID = new global::System.Data.DataColumn("ApplicationID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationID);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnForm.ReadOnly = true;
                this.columnReport.ReadOnly = true;
                this.columnApplicationID.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormConfigRow NewtTS_FormConfigRow() {
                return ((tTS_FormConfigRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_FormConfigRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_FormConfigRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_FormConfigRowChanged != null)) {
                    this.tTS_FormConfigRowChanged(this, new tTS_FormConfigRowChangeEvent(((tTS_FormConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_FormConfigRowChanging != null)) {
                    this.tTS_FormConfigRowChanging(this, new tTS_FormConfigRowChangeEvent(((tTS_FormConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_FormConfigRowDeleted != null)) {
                    this.tTS_FormConfigRowDeleted(this, new tTS_FormConfigRowChangeEvent(((tTS_FormConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_FormConfigRowDeleting != null)) {
                    this.tTS_FormConfigRowDeleting(this, new tTS_FormConfigRowChangeEvent(((tTS_FormConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_FormConfigRow(tTS_FormConfigRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_FormConfigDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_FormSliceDataTable : global::System.Data.TypedTableBase<tTS_FormSliceRow> {
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnSubForm;
            
            private global::System.Data.DataColumn columnFormOrder;
            
            private global::System.Data.DataColumn columnIsExpanded;
            
            private global::System.Data.DataColumn columnTabColor;
            
            private global::System.Data.DataColumn columnBaseURL;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSliceDataTable() {
                this.TableName = "tTS_FormSlice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FormSliceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_FormSliceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubFormColumn {
                get {
                    return this.columnSubForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormOrderColumn {
                get {
                    return this.columnFormOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExpandedColumn {
                get {
                    return this.columnIsExpanded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TabColorColumn {
                get {
                    return this.columnTabColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaseURLColumn {
                get {
                    return this.columnBaseURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSliceRow this[int index] {
                get {
                    return ((tTS_FormSliceRow)(this.Rows[index]));
                }
            }
            
            public event tTS_FormSliceRowChangeEventHandler tTS_FormSliceRowChanging;
            
            public event tTS_FormSliceRowChangeEventHandler tTS_FormSliceRowChanged;
            
            public event tTS_FormSliceRowChangeEventHandler tTS_FormSliceRowDeleting;
            
            public event tTS_FormSliceRowChangeEventHandler tTS_FormSliceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_FormSliceRow(tTS_FormSliceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSliceRow AddtTS_FormSliceRow(int Form, int SubForm, byte FormOrder, bool IsExpanded, string TabColor, string BaseURL, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_FormSliceRow rowtTS_FormSliceRow = ((tTS_FormSliceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Form,
                        SubForm,
                        FormOrder,
                        IsExpanded,
                        TabColor,
                        BaseURL,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_FormSliceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_FormSliceRow);
                return rowtTS_FormSliceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_FormSliceDataTable cln = ((tTS_FormSliceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_FormSliceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnForm = base.Columns["Form"];
                this.columnSubForm = base.Columns["SubForm"];
                this.columnFormOrder = base.Columns["FormOrder"];
                this.columnIsExpanded = base.Columns["IsExpanded"];
                this.columnTabColor = base.Columns["TabColor"];
                this.columnBaseURL = base.Columns["BaseURL"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnSubForm = new global::System.Data.DataColumn("SubForm", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubForm);
                this.columnFormOrder = new global::System.Data.DataColumn("FormOrder", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormOrder);
                this.columnIsExpanded = new global::System.Data.DataColumn("IsExpanded", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExpanded);
                this.columnTabColor = new global::System.Data.DataColumn("TabColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabColor);
                this.columnBaseURL = new global::System.Data.DataColumn("BaseURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseURL);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnForm.ReadOnly = true;
                this.columnSubForm.ReadOnly = true;
                this.columnFormOrder.ReadOnly = true;
                this.columnIsExpanded.ReadOnly = true;
                this.columnTabColor.ReadOnly = true;
                this.columnTabColor.MaxLength = 11;
                this.columnBaseURL.ReadOnly = true;
                this.columnBaseURL.MaxLength = 1000;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSliceRow NewtTS_FormSliceRow() {
                return ((tTS_FormSliceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_FormSliceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_FormSliceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_FormSliceRowChanged != null)) {
                    this.tTS_FormSliceRowChanged(this, new tTS_FormSliceRowChangeEvent(((tTS_FormSliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_FormSliceRowChanging != null)) {
                    this.tTS_FormSliceRowChanging(this, new tTS_FormSliceRowChangeEvent(((tTS_FormSliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_FormSliceRowDeleted != null)) {
                    this.tTS_FormSliceRowDeleted(this, new tTS_FormSliceRowChangeEvent(((tTS_FormSliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_FormSliceRowDeleting != null)) {
                    this.tTS_FormSliceRowDeleting(this, new tTS_FormSliceRowChangeEvent(((tTS_FormSliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_FormSliceRow(tTS_FormSliceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_FormSliceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_ValueSliceDataTable : global::System.Data.TypedTableBase<tAA_ValueSliceRow> {
            
            private global::System.Data.DataColumn columnValueSliceID;
            
            private global::System.Data.DataColumn columnObjectID;
            
            private global::System.Data.DataColumn columnSliceTypeID;
            
            private global::System.Data.DataColumn columnValue;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnIsNewConstruction;
            
            private global::System.Data.DataColumn columnIsValue;
            
            private global::System.Data.DataColumn columnIsRoll;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnNewConstruction;
            
            private global::System.Data.DataColumn columnconversion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ValueSliceDataTable() {
                this.TableName = "tAA_ValueSlice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ValueSliceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_ValueSliceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueSliceIDColumn {
                get {
                    return this.columnValueSliceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectIDColumn {
                get {
                    return this.columnObjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SliceTypeIDColumn {
                get {
                    return this.columnSliceTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsNewConstructionColumn {
                get {
                    return this.columnIsNewConstruction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsValueColumn {
                get {
                    return this.columnIsValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRollColumn {
                get {
                    return this.columnIsRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewConstructionColumn {
                get {
                    return this.columnNewConstruction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conversionColumn {
                get {
                    return this.columnconversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ValueSliceRow this[int index] {
                get {
                    return ((tAA_ValueSliceRow)(this.Rows[index]));
                }
            }
            
            public event tAA_ValueSliceRowChangeEventHandler tAA_ValueSliceRowChanging;
            
            public event tAA_ValueSliceRowChangeEventHandler tAA_ValueSliceRowChanged;
            
            public event tAA_ValueSliceRowChangeEventHandler tAA_ValueSliceRowDeleting;
            
            public event tAA_ValueSliceRowChangeEventHandler tAA_ValueSliceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_ValueSliceRow(tAA_ValueSliceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ValueSliceRow AddtAA_ValueSliceRow(
                        int ValueSliceID, 
                        int ObjectID, 
                        short SliceTypeID, 
                        decimal Value, 
                        decimal Amount, 
                        string Description, 
                        bool IsNewConstruction, 
                        bool IsValue, 
                        bool IsRoll, 
                        byte Type, 
                        int ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        decimal NewConstruction, 
                        string conversion) {
                tAA_ValueSliceRow rowtAA_ValueSliceRow = ((tAA_ValueSliceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ValueSliceID,
                        ObjectID,
                        SliceTypeID,
                        Value,
                        Amount,
                        Description,
                        IsNewConstruction,
                        IsValue,
                        IsRoll,
                        Type,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        NewConstruction,
                        conversion};
                rowtAA_ValueSliceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_ValueSliceRow);
                return rowtAA_ValueSliceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_ValueSliceDataTable cln = ((tAA_ValueSliceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_ValueSliceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnValueSliceID = base.Columns["ValueSliceID"];
                this.columnObjectID = base.Columns["ObjectID"];
                this.columnSliceTypeID = base.Columns["SliceTypeID"];
                this.columnValue = base.Columns["Value"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDescription = base.Columns["Description"];
                this.columnIsNewConstruction = base.Columns["IsNewConstruction"];
                this.columnIsValue = base.Columns["IsValue"];
                this.columnIsRoll = base.Columns["IsRoll"];
                this.columnType = base.Columns["Type"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnNewConstruction = base.Columns["NewConstruction"];
                this.columnconversion = base.Columns["conversion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnValueSliceID = new global::System.Data.DataColumn("ValueSliceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueSliceID);
                this.columnObjectID = new global::System.Data.DataColumn("ObjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectID);
                this.columnSliceTypeID = new global::System.Data.DataColumn("SliceTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSliceTypeID);
                this.columnValue = new global::System.Data.DataColumn("Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnIsNewConstruction = new global::System.Data.DataColumn("IsNewConstruction", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNewConstruction);
                this.columnIsValue = new global::System.Data.DataColumn("IsValue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsValue);
                this.columnIsRoll = new global::System.Data.DataColumn("IsRoll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRoll);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnNewConstruction = new global::System.Data.DataColumn("NewConstruction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewConstruction);
                this.columnconversion = new global::System.Data.DataColumn("conversion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconversion);
                this.columnValueSliceID.ReadOnly = true;
                this.columnObjectID.ReadOnly = true;
                this.columnSliceTypeID.ReadOnly = true;
                this.columnValue.ReadOnly = true;
                this.columnAmount.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 50;
                this.columnIsNewConstruction.ReadOnly = true;
                this.columnIsValue.ReadOnly = true;
                this.columnIsRoll.ReadOnly = true;
                this.columnType.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnNewConstruction.ReadOnly = true;
                this.columnconversion.ReadOnly = true;
                this.columnconversion.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ValueSliceRow NewtAA_ValueSliceRow() {
                return ((tAA_ValueSliceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_ValueSliceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_ValueSliceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_ValueSliceRowChanged != null)) {
                    this.tAA_ValueSliceRowChanged(this, new tAA_ValueSliceRowChangeEvent(((tAA_ValueSliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_ValueSliceRowChanging != null)) {
                    this.tAA_ValueSliceRowChanging(this, new tAA_ValueSliceRowChangeEvent(((tAA_ValueSliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_ValueSliceRowDeleted != null)) {
                    this.tAA_ValueSliceRowDeleted(this, new tAA_ValueSliceRowChangeEvent(((tAA_ValueSliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_ValueSliceRowDeleting != null)) {
                    this.tAA_ValueSliceRowDeleting(this, new tAA_ValueSliceRowChangeEvent(((tAA_ValueSliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_ValueSliceRow(tAA_ValueSliceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_ValueSliceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_Object2SliceDataTable : global::System.Data.TypedTableBase<tAA_Object2SliceRow> {
            
            private global::System.Data.DataColumn columnObjectTypeID;
            
            private global::System.Data.DataColumn columnSliceTypeID;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Object2SliceDataTable() {
                this.TableName = "tAA_Object2Slice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_Object2SliceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_Object2SliceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectTypeIDColumn {
                get {
                    return this.columnObjectTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SliceTypeIDColumn {
                get {
                    return this.columnSliceTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Object2SliceRow this[int index] {
                get {
                    return ((tAA_Object2SliceRow)(this.Rows[index]));
                }
            }
            
            public event tAA_Object2SliceRowChangeEventHandler tAA_Object2SliceRowChanging;
            
            public event tAA_Object2SliceRowChangeEventHandler tAA_Object2SliceRowChanged;
            
            public event tAA_Object2SliceRowChangeEventHandler tAA_Object2SliceRowDeleting;
            
            public event tAA_Object2SliceRowChangeEventHandler tAA_Object2SliceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_Object2SliceRow(tAA_Object2SliceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Object2SliceRow AddtAA_Object2SliceRow(short ObjectTypeID, short SliceTypeID, int ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tAA_Object2SliceRow rowtAA_Object2SliceRow = ((tAA_Object2SliceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ObjectTypeID,
                        SliceTypeID,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_Object2SliceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_Object2SliceRow);
                return rowtAA_Object2SliceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_Object2SliceDataTable cln = ((tAA_Object2SliceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_Object2SliceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnObjectTypeID = base.Columns["ObjectTypeID"];
                this.columnSliceTypeID = base.Columns["SliceTypeID"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnObjectTypeID = new global::System.Data.DataColumn("ObjectTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectTypeID);
                this.columnSliceTypeID = new global::System.Data.DataColumn("SliceTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSliceTypeID);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnObjectTypeID.ReadOnly = true;
                this.columnSliceTypeID.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Object2SliceRow NewtAA_Object2SliceRow() {
                return ((tAA_Object2SliceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_Object2SliceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_Object2SliceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_Object2SliceRowChanged != null)) {
                    this.tAA_Object2SliceRowChanged(this, new tAA_Object2SliceRowChangeEvent(((tAA_Object2SliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_Object2SliceRowChanging != null)) {
                    this.tAA_Object2SliceRowChanging(this, new tAA_Object2SliceRowChangeEvent(((tAA_Object2SliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_Object2SliceRowDeleted != null)) {
                    this.tAA_Object2SliceRowDeleted(this, new tAA_Object2SliceRowChangeEvent(((tAA_Object2SliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_Object2SliceRowDeleting != null)) {
                    this.tAA_Object2SliceRowDeleting(this, new tAA_Object2SliceRowChangeEvent(((tAA_Object2SliceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_Object2SliceRow(tAA_Object2SliceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_Object2SliceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tGD_SystemDataTable : global::System.Data.TypedTableBase<tGD_SystemRow> {
            
            private global::System.Data.DataColumn columnSystemID;
            
            private global::System.Data.DataColumn columnSystem;
            
            private global::System.Data.DataColumn columnSystemColor;
            
            private global::System.Data.DataColumn columnETime;
            
            private global::System.Data.DataColumn columnWTime;
            
            private global::System.Data.DataColumn columnEMaterials;
            
            private global::System.Data.DataColumn columnWMaterials;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnWOASPX;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_SystemDataTable() {
                this.TableName = "tGD_System";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tGD_SystemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tGD_SystemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SystemIDColumn {
                get {
                    return this.columnSystemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SystemColumn {
                get {
                    return this.columnSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SystemColorColumn {
                get {
                    return this.columnSystemColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETimeColumn {
                get {
                    return this.columnETime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WTimeColumn {
                get {
                    return this.columnWTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMaterialsColumn {
                get {
                    return this.columnEMaterials;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WMaterialsColumn {
                get {
                    return this.columnWMaterials;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WOASPXColumn {
                get {
                    return this.columnWOASPX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_SystemRow this[int index] {
                get {
                    return ((tGD_SystemRow)(this.Rows[index]));
                }
            }
            
            public event tGD_SystemRowChangeEventHandler tGD_SystemRowChanging;
            
            public event tGD_SystemRowChangeEventHandler tGD_SystemRowChanged;
            
            public event tGD_SystemRowChangeEventHandler tGD_SystemRowDeleting;
            
            public event tGD_SystemRowChangeEventHandler tGD_SystemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtGD_SystemRow(tGD_SystemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_SystemRow AddtGD_SystemRow(short SystemID, string System, string SystemColor, bool ETime, bool WTime, bool EMaterials, bool WMaterials, bool IsActive, string WOASPX, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tGD_SystemRow rowtGD_SystemRow = ((tGD_SystemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SystemID,
                        System,
                        SystemColor,
                        ETime,
                        WTime,
                        EMaterials,
                        WMaterials,
                        IsActive,
                        WOASPX,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtGD_SystemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtGD_SystemRow);
                return rowtGD_SystemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tGD_SystemDataTable cln = ((tGD_SystemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tGD_SystemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSystemID = base.Columns["SystemID"];
                this.columnSystem = base.Columns["System"];
                this.columnSystemColor = base.Columns["SystemColor"];
                this.columnETime = base.Columns["ETime"];
                this.columnWTime = base.Columns["WTime"];
                this.columnEMaterials = base.Columns["EMaterials"];
                this.columnWMaterials = base.Columns["WMaterials"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnWOASPX = base.Columns["WOASPX"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSystemID = new global::System.Data.DataColumn("SystemID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemID);
                this.columnSystem = new global::System.Data.DataColumn("System", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystem);
                this.columnSystemColor = new global::System.Data.DataColumn("SystemColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemColor);
                this.columnETime = new global::System.Data.DataColumn("ETime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETime);
                this.columnWTime = new global::System.Data.DataColumn("WTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWTime);
                this.columnEMaterials = new global::System.Data.DataColumn("EMaterials", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMaterials);
                this.columnWMaterials = new global::System.Data.DataColumn("WMaterials", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWMaterials);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnWOASPX = new global::System.Data.DataColumn("WOASPX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWOASPX);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnSystemID.ReadOnly = true;
                this.columnSystem.ReadOnly = true;
                this.columnSystem.MaxLength = 50;
                this.columnSystemColor.ReadOnly = true;
                this.columnSystemColor.MaxLength = 30;
                this.columnETime.ReadOnly = true;
                this.columnWTime.ReadOnly = true;
                this.columnEMaterials.ReadOnly = true;
                this.columnWMaterials.ReadOnly = true;
                this.columnIsActive.ReadOnly = true;
                this.columnWOASPX.ReadOnly = true;
                this.columnWOASPX.MaxLength = 200;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_SystemRow NewtGD_SystemRow() {
                return ((tGD_SystemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tGD_SystemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tGD_SystemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tGD_SystemRowChanged != null)) {
                    this.tGD_SystemRowChanged(this, new tGD_SystemRowChangeEvent(((tGD_SystemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tGD_SystemRowChanging != null)) {
                    this.tGD_SystemRowChanging(this, new tGD_SystemRowChangeEvent(((tGD_SystemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tGD_SystemRowDeleted != null)) {
                    this.tGD_SystemRowDeleted(this, new tGD_SystemRowChangeEvent(((tGD_SystemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tGD_SystemRowDeleting != null)) {
                    this.tGD_SystemRowDeleting(this, new tGD_SystemRowChangeEvent(((tGD_SystemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetGD_SystemRow(tGD_SystemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tGD_SystemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_ParcelDataTable : global::System.Data.TypedTableBase<tAA_ParcelRow> {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnFIPS;
            
            private global::System.Data.DataColumn columnParcelTypeID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnIsRetired;
            
            private global::System.Data.DataColumn columnIsExempt;
            
            private global::System.Data.DataColumn columnLockAppraisalBy;
            
            private global::System.Data.DataColumn columnLockAssessmentBy;
            
            private global::System.Data.DataColumn columnLockValueBy;
            
            private global::System.Data.DataColumn columnLockAdminBy;
            
            private global::System.Data.DataColumn columnO1Value;
            
            private global::System.Data.DataColumn columnO2Value;
            
            private global::System.Data.DataColumn columnO3Value;
            
            private global::System.Data.DataColumn columnNBHDID;
            
            private global::System.Data.DataColumn columnTaxDistrictID;
            
            private global::System.Data.DataColumn columnStateCode;
            
            private global::System.Data.DataColumn columnMID1;
            
            private global::System.Data.DataColumn columnMID2;
            
            private global::System.Data.DataColumn columnMID3;
            
            private global::System.Data.DataColumn columnMID4;
            
            private global::System.Data.DataColumn columnMID5;
            
            private global::System.Data.DataColumn columnMapNumber;
            
            private global::System.Data.DataColumn columnCAMAModelID;
            
            private global::System.Data.DataColumn columnAAModelID;
            
            private global::System.Data.DataColumn columnMortgageID;
            
            private global::System.Data.DataColumn columnLoanNumber;
            
            private global::System.Data.DataColumn columnIsOwnerPrimary;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnField1;
            
            private global::System.Data.DataColumn columnField2;
            
            private global::System.Data.DataColumn columnField3;
            
            private global::System.Data.DataColumn columnField4;
            
            private global::System.Data.DataColumn columnField5;
            
            private global::System.Data.DataColumn columnAssessmentTypeID;
            
            private global::System.Data.DataColumn columnMID6;
            
            private global::System.Data.DataColumn columnMID7;
            
            private global::System.Data.DataColumn columnMID8;
            
            private global::System.Data.DataColumn columnImprovementID;
            
            private global::System.Data.DataColumn columnLandTypeID;
            
            private global::System.Data.DataColumn columnFieldStatusID;
            
            private global::System.Data.DataColumn columnInspectedByUserID;
            
            private global::System.Data.DataColumn columnDateInspected;
            
            private global::System.Data.DataColumn columnInspectionTypeID;
            
            private global::System.Data.DataColumn columnReviewedByUserID;
            
            private global::System.Data.DataColumn columnReviewDate;
            
            private global::System.Data.DataColumn columnLat;
            
            private global::System.Data.DataColumn columnLong;
            
            private global::System.Data.DataColumn columnUndividedOwnershipID;
            
            private global::System.Data.DataColumn columnAglandImprovementClass;
            
            private global::System.Data.DataColumn columnNonAgImprovementClass;
            
            private global::System.Data.DataColumn columnClassAgLandID;
            
            private global::System.Data.DataColumn columnClassNonAgLandID;
            
            private global::System.Data.DataColumn columnClassAgImprovementID;
            
            private global::System.Data.DataColumn columnClassNonAgImprovementID;
            
            private global::System.Data.DataColumn columnClassNonAgResidentialID;
            
            private global::System.Data.DataColumn columnOwnerOccupiedID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelDataTable() {
                this.TableName = "tAA_Parcel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ParcelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_ParcelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIPSColumn {
                get {
                    return this.columnFIPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelTypeIDColumn {
                get {
                    return this.columnParcelTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRetiredColumn {
                get {
                    return this.columnIsRetired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsExemptColumn {
                get {
                    return this.columnIsExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAppraisalByColumn {
                get {
                    return this.columnLockAppraisalBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAssessmentByColumn {
                get {
                    return this.columnLockAssessmentBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockValueByColumn {
                get {
                    return this.columnLockValueBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAdminByColumn {
                get {
                    return this.columnLockAdminBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O1ValueColumn {
                get {
                    return this.columnO1Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O2ValueColumn {
                get {
                    return this.columnO2Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O3ValueColumn {
                get {
                    return this.columnO3Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxDistrictIDColumn {
                get {
                    return this.columnTaxDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeColumn {
                get {
                    return this.columnStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID1Column {
                get {
                    return this.columnMID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID2Column {
                get {
                    return this.columnMID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID3Column {
                get {
                    return this.columnMID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID4Column {
                get {
                    return this.columnMID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID5Column {
                get {
                    return this.columnMID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MapNumberColumn {
                get {
                    return this.columnMapNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CAMAModelIDColumn {
                get {
                    return this.columnCAMAModelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AAModelIDColumn {
                get {
                    return this.columnAAModelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MortgageIDColumn {
                get {
                    return this.columnMortgageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoanNumberColumn {
                get {
                    return this.columnLoanNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOwnerPrimaryColumn {
                get {
                    return this.columnIsOwnerPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field1Column {
                get {
                    return this.columnField1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field2Column {
                get {
                    return this.columnField2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field3Column {
                get {
                    return this.columnField3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field4Column {
                get {
                    return this.columnField4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Field5Column {
                get {
                    return this.columnField5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessmentTypeIDColumn {
                get {
                    return this.columnAssessmentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID6Column {
                get {
                    return this.columnMID6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID7Column {
                get {
                    return this.columnMID7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID8Column {
                get {
                    return this.columnMID8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImprovementIDColumn {
                get {
                    return this.columnImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeIDColumn {
                get {
                    return this.columnLandTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldStatusIDColumn {
                get {
                    return this.columnFieldStatusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectedByUserIDColumn {
                get {
                    return this.columnInspectedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateInspectedColumn {
                get {
                    return this.columnDateInspected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspectionTypeIDColumn {
                get {
                    return this.columnInspectionTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewedByUserIDColumn {
                get {
                    return this.columnReviewedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewDateColumn {
                get {
                    return this.columnReviewDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatColumn {
                get {
                    return this.columnLat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongColumn {
                get {
                    return this.columnLong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UndividedOwnershipIDColumn {
                get {
                    return this.columnUndividedOwnershipID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AglandImprovementClassColumn {
                get {
                    return this.columnAglandImprovementClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonAgImprovementClassColumn {
                get {
                    return this.columnNonAgImprovementClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassAgLandIDColumn {
                get {
                    return this.columnClassAgLandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAgLandIDColumn {
                get {
                    return this.columnClassNonAgLandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassAgImprovementIDColumn {
                get {
                    return this.columnClassAgImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAgImprovementIDColumn {
                get {
                    return this.columnClassNonAgImprovementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNonAgResidentialIDColumn {
                get {
                    return this.columnClassNonAgResidentialID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerOccupiedIDColumn {
                get {
                    return this.columnOwnerOccupiedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelRow this[int index] {
                get {
                    return ((tAA_ParcelRow)(this.Rows[index]));
                }
            }
            
            public event tAA_ParcelRowChangeEventHandler tAA_ParcelRowChanging;
            
            public event tAA_ParcelRowChangeEventHandler tAA_ParcelRowChanged;
            
            public event tAA_ParcelRowChangeEventHandler tAA_ParcelRowDeleting;
            
            public event tAA_ParcelRowChangeEventHandler tAA_ParcelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_ParcelRow(tAA_ParcelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelRow AddtAA_ParcelRow(
                        int ParcelID, 
                        string ParcelNumber, 
                        short RollYear, 
                        int FIPS, 
                        byte ParcelTypeID, 
                        string Description, 
                        bool IsRetired, 
                        bool IsExempt, 
                        int LockAppraisalBy, 
                        int LockAssessmentBy, 
                        int LockValueBy, 
                        int LockAdminBy, 
                        decimal O1Value, 
                        decimal O2Value, 
                        decimal O3Value, 
                        int NBHDID, 
                        int TaxDistrictID, 
                        string StateCode, 
                        string MID1, 
                        string MID2, 
                        string MID3, 
                        string MID4, 
                        string MID5, 
                        string MapNumber, 
                        short CAMAModelID, 
                        short AAModelID, 
                        int MortgageID, 
                        int LoanNumber, 
                        bool IsOwnerPrimary, 
                        int ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        bool Field1, 
                        bool Field2, 
                        bool Field3, 
                        bool Field4, 
                        bool Field5, 
                        short AssessmentTypeID, 
                        string MID6, 
                        string MID7, 
                        string MID8, 
                        int ImprovementID, 
                        int LandTypeID, 
                        byte FieldStatusID, 
                        int InspectedByUserID, 
                        System.DateTime DateInspected, 
                        short InspectionTypeID, 
                        int ReviewedByUserID, 
                        System.DateTime ReviewDate, 
                        decimal Lat, 
                        decimal Long, 
                        byte UndividedOwnershipID, 
                        string AglandImprovementClass, 
                        string NonAgImprovementClass, 
                        int ClassAgLandID, 
                        int ClassNonAgLandID, 
                        int ClassAgImprovementID, 
                        int ClassNonAgImprovementID, 
                        int ClassNonAgResidentialID, 
                        int OwnerOccupiedID) {
                tAA_ParcelRow rowtAA_ParcelRow = ((tAA_ParcelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelID,
                        ParcelNumber,
                        RollYear,
                        FIPS,
                        ParcelTypeID,
                        Description,
                        IsRetired,
                        IsExempt,
                        LockAppraisalBy,
                        LockAssessmentBy,
                        LockValueBy,
                        LockAdminBy,
                        O1Value,
                        O2Value,
                        O3Value,
                        NBHDID,
                        TaxDistrictID,
                        StateCode,
                        MID1,
                        MID2,
                        MID3,
                        MID4,
                        MID5,
                        MapNumber,
                        CAMAModelID,
                        AAModelID,
                        MortgageID,
                        LoanNumber,
                        IsOwnerPrimary,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        Field1,
                        Field2,
                        Field3,
                        Field4,
                        Field5,
                        AssessmentTypeID,
                        MID6,
                        MID7,
                        MID8,
                        ImprovementID,
                        LandTypeID,
                        FieldStatusID,
                        InspectedByUserID,
                        DateInspected,
                        InspectionTypeID,
                        ReviewedByUserID,
                        ReviewDate,
                        Lat,
                        Long,
                        UndividedOwnershipID,
                        AglandImprovementClass,
                        NonAgImprovementClass,
                        ClassAgLandID,
                        ClassNonAgLandID,
                        ClassAgImprovementID,
                        ClassNonAgImprovementID,
                        ClassNonAgResidentialID,
                        OwnerOccupiedID};
                rowtAA_ParcelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_ParcelRow);
                return rowtAA_ParcelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_ParcelDataTable cln = ((tAA_ParcelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_ParcelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnFIPS = base.Columns["FIPS"];
                this.columnParcelTypeID = base.Columns["ParcelTypeID"];
                this.columnDescription = base.Columns["Description"];
                this.columnIsRetired = base.Columns["IsRetired"];
                this.columnIsExempt = base.Columns["IsExempt"];
                this.columnLockAppraisalBy = base.Columns["LockAppraisalBy"];
                this.columnLockAssessmentBy = base.Columns["LockAssessmentBy"];
                this.columnLockValueBy = base.Columns["LockValueBy"];
                this.columnLockAdminBy = base.Columns["LockAdminBy"];
                this.columnO1Value = base.Columns["O1Value"];
                this.columnO2Value = base.Columns["O2Value"];
                this.columnO3Value = base.Columns["O3Value"];
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnTaxDistrictID = base.Columns["TaxDistrictID"];
                this.columnStateCode = base.Columns["StateCode"];
                this.columnMID1 = base.Columns["MID1"];
                this.columnMID2 = base.Columns["MID2"];
                this.columnMID3 = base.Columns["MID3"];
                this.columnMID4 = base.Columns["MID4"];
                this.columnMID5 = base.Columns["MID5"];
                this.columnMapNumber = base.Columns["MapNumber"];
                this.columnCAMAModelID = base.Columns["CAMAModelID"];
                this.columnAAModelID = base.Columns["AAModelID"];
                this.columnMortgageID = base.Columns["MortgageID"];
                this.columnLoanNumber = base.Columns["LoanNumber"];
                this.columnIsOwnerPrimary = base.Columns["IsOwnerPrimary"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnField1 = base.Columns["Field1"];
                this.columnField2 = base.Columns["Field2"];
                this.columnField3 = base.Columns["Field3"];
                this.columnField4 = base.Columns["Field4"];
                this.columnField5 = base.Columns["Field5"];
                this.columnAssessmentTypeID = base.Columns["AssessmentTypeID"];
                this.columnMID6 = base.Columns["MID6"];
                this.columnMID7 = base.Columns["MID7"];
                this.columnMID8 = base.Columns["MID8"];
                this.columnImprovementID = base.Columns["ImprovementID"];
                this.columnLandTypeID = base.Columns["LandTypeID"];
                this.columnFieldStatusID = base.Columns["FieldStatusID"];
                this.columnInspectedByUserID = base.Columns["InspectedByUserID"];
                this.columnDateInspected = base.Columns["DateInspected"];
                this.columnInspectionTypeID = base.Columns["InspectionTypeID"];
                this.columnReviewedByUserID = base.Columns["ReviewedByUserID"];
                this.columnReviewDate = base.Columns["ReviewDate"];
                this.columnLat = base.Columns["Lat"];
                this.columnLong = base.Columns["Long"];
                this.columnUndividedOwnershipID = base.Columns["UndividedOwnershipID"];
                this.columnAglandImprovementClass = base.Columns["AglandImprovementClass"];
                this.columnNonAgImprovementClass = base.Columns["NonAgImprovementClass"];
                this.columnClassAgLandID = base.Columns["ClassAgLandID"];
                this.columnClassNonAgLandID = base.Columns["ClassNonAgLandID"];
                this.columnClassAgImprovementID = base.Columns["ClassAgImprovementID"];
                this.columnClassNonAgImprovementID = base.Columns["ClassNonAgImprovementID"];
                this.columnClassNonAgResidentialID = base.Columns["ClassNonAgResidentialID"];
                this.columnOwnerOccupiedID = base.Columns["OwnerOccupiedID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnFIPS = new global::System.Data.DataColumn("FIPS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIPS);
                this.columnParcelTypeID = new global::System.Data.DataColumn("ParcelTypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelTypeID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnIsRetired = new global::System.Data.DataColumn("IsRetired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRetired);
                this.columnIsExempt = new global::System.Data.DataColumn("IsExempt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExempt);
                this.columnLockAppraisalBy = new global::System.Data.DataColumn("LockAppraisalBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAppraisalBy);
                this.columnLockAssessmentBy = new global::System.Data.DataColumn("LockAssessmentBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAssessmentBy);
                this.columnLockValueBy = new global::System.Data.DataColumn("LockValueBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockValueBy);
                this.columnLockAdminBy = new global::System.Data.DataColumn("LockAdminBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAdminBy);
                this.columnO1Value = new global::System.Data.DataColumn("O1Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO1Value);
                this.columnO2Value = new global::System.Data.DataColumn("O2Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2Value);
                this.columnO3Value = new global::System.Data.DataColumn("O3Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO3Value);
                this.columnNBHDID = new global::System.Data.DataColumn("NBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnTaxDistrictID = new global::System.Data.DataColumn("TaxDistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxDistrictID);
                this.columnStateCode = new global::System.Data.DataColumn("StateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCode);
                this.columnMID1 = new global::System.Data.DataColumn("MID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID1);
                this.columnMID2 = new global::System.Data.DataColumn("MID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID2);
                this.columnMID3 = new global::System.Data.DataColumn("MID3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID3);
                this.columnMID4 = new global::System.Data.DataColumn("MID4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID4);
                this.columnMID5 = new global::System.Data.DataColumn("MID5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID5);
                this.columnMapNumber = new global::System.Data.DataColumn("MapNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMapNumber);
                this.columnCAMAModelID = new global::System.Data.DataColumn("CAMAModelID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAMAModelID);
                this.columnAAModelID = new global::System.Data.DataColumn("AAModelID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAAModelID);
                this.columnMortgageID = new global::System.Data.DataColumn("MortgageID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMortgageID);
                this.columnLoanNumber = new global::System.Data.DataColumn("LoanNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoanNumber);
                this.columnIsOwnerPrimary = new global::System.Data.DataColumn("IsOwnerPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOwnerPrimary);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnField1 = new global::System.Data.DataColumn("Field1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField1);
                this.columnField2 = new global::System.Data.DataColumn("Field2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField2);
                this.columnField3 = new global::System.Data.DataColumn("Field3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField3);
                this.columnField4 = new global::System.Data.DataColumn("Field4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField4);
                this.columnField5 = new global::System.Data.DataColumn("Field5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnField5);
                this.columnAssessmentTypeID = new global::System.Data.DataColumn("AssessmentTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessmentTypeID);
                this.columnMID6 = new global::System.Data.DataColumn("MID6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID6);
                this.columnMID7 = new global::System.Data.DataColumn("MID7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID7);
                this.columnMID8 = new global::System.Data.DataColumn("MID8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID8);
                this.columnImprovementID = new global::System.Data.DataColumn("ImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImprovementID);
                this.columnLandTypeID = new global::System.Data.DataColumn("LandTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID);
                this.columnFieldStatusID = new global::System.Data.DataColumn("FieldStatusID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldStatusID);
                this.columnInspectedByUserID = new global::System.Data.DataColumn("InspectedByUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectedByUserID);
                this.columnDateInspected = new global::System.Data.DataColumn("DateInspected", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateInspected);
                this.columnInspectionTypeID = new global::System.Data.DataColumn("InspectionTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionTypeID);
                this.columnReviewedByUserID = new global::System.Data.DataColumn("ReviewedByUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewedByUserID);
                this.columnReviewDate = new global::System.Data.DataColumn("ReviewDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewDate);
                this.columnLat = new global::System.Data.DataColumn("Lat", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLat);
                this.columnLong = new global::System.Data.DataColumn("Long", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLong);
                this.columnUndividedOwnershipID = new global::System.Data.DataColumn("UndividedOwnershipID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUndividedOwnershipID);
                this.columnAglandImprovementClass = new global::System.Data.DataColumn("AglandImprovementClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAglandImprovementClass);
                this.columnNonAgImprovementClass = new global::System.Data.DataColumn("NonAgImprovementClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonAgImprovementClass);
                this.columnClassAgLandID = new global::System.Data.DataColumn("ClassAgLandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassAgLandID);
                this.columnClassNonAgLandID = new global::System.Data.DataColumn("ClassNonAgLandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAgLandID);
                this.columnClassAgImprovementID = new global::System.Data.DataColumn("ClassAgImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassAgImprovementID);
                this.columnClassNonAgImprovementID = new global::System.Data.DataColumn("ClassNonAgImprovementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAgImprovementID);
                this.columnClassNonAgResidentialID = new global::System.Data.DataColumn("ClassNonAgResidentialID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassNonAgResidentialID);
                this.columnOwnerOccupiedID = new global::System.Data.DataColumn("OwnerOccupiedID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerOccupiedID);
                this.columnParcelID.ReadOnly = true;
                this.columnParcelNumber.ReadOnly = true;
                this.columnParcelNumber.MaxLength = 50;
                this.columnRollYear.ReadOnly = true;
                this.columnFIPS.ReadOnly = true;
                this.columnParcelTypeID.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 50;
                this.columnIsRetired.ReadOnly = true;
                this.columnIsExempt.ReadOnly = true;
                this.columnLockAppraisalBy.ReadOnly = true;
                this.columnLockAssessmentBy.ReadOnly = true;
                this.columnLockValueBy.ReadOnly = true;
                this.columnLockAdminBy.ReadOnly = true;
                this.columnO1Value.ReadOnly = true;
                this.columnO2Value.ReadOnly = true;
                this.columnO3Value.ReadOnly = true;
                this.columnNBHDID.ReadOnly = true;
                this.columnTaxDistrictID.ReadOnly = true;
                this.columnStateCode.ReadOnly = true;
                this.columnStateCode.MaxLength = 50;
                this.columnMID1.ReadOnly = true;
                this.columnMID1.MaxLength = 50;
                this.columnMID2.ReadOnly = true;
                this.columnMID2.MaxLength = 50;
                this.columnMID3.ReadOnly = true;
                this.columnMID3.MaxLength = 50;
                this.columnMID4.ReadOnly = true;
                this.columnMID4.MaxLength = 50;
                this.columnMID5.ReadOnly = true;
                this.columnMID5.MaxLength = 50;
                this.columnMapNumber.ReadOnly = true;
                this.columnMapNumber.MaxLength = 50;
                this.columnCAMAModelID.ReadOnly = true;
                this.columnAAModelID.ReadOnly = true;
                this.columnMortgageID.ReadOnly = true;
                this.columnLoanNumber.ReadOnly = true;
                this.columnIsOwnerPrimary.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnField1.ReadOnly = true;
                this.columnField2.ReadOnly = true;
                this.columnField3.ReadOnly = true;
                this.columnField4.ReadOnly = true;
                this.columnField5.ReadOnly = true;
                this.columnAssessmentTypeID.ReadOnly = true;
                this.columnMID6.ReadOnly = true;
                this.columnMID6.MaxLength = 50;
                this.columnMID7.ReadOnly = true;
                this.columnMID7.MaxLength = 50;
                this.columnMID8.ReadOnly = true;
                this.columnMID8.MaxLength = 50;
                this.columnImprovementID.ReadOnly = true;
                this.columnLandTypeID.ReadOnly = true;
                this.columnFieldStatusID.ReadOnly = true;
                this.columnInspectedByUserID.ReadOnly = true;
                this.columnDateInspected.ReadOnly = true;
                this.columnInspectionTypeID.ReadOnly = true;
                this.columnReviewedByUserID.ReadOnly = true;
                this.columnReviewDate.ReadOnly = true;
                this.columnLat.ReadOnly = true;
                this.columnLong.ReadOnly = true;
                this.columnUndividedOwnershipID.ReadOnly = true;
                this.columnAglandImprovementClass.ReadOnly = true;
                this.columnAglandImprovementClass.MaxLength = 20;
                this.columnNonAgImprovementClass.ReadOnly = true;
                this.columnNonAgImprovementClass.MaxLength = 20;
                this.columnClassAgLandID.ReadOnly = true;
                this.columnClassNonAgLandID.ReadOnly = true;
                this.columnClassAgImprovementID.ReadOnly = true;
                this.columnClassNonAgImprovementID.ReadOnly = true;
                this.columnClassNonAgResidentialID.ReadOnly = true;
                this.columnOwnerOccupiedID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelRow NewtAA_ParcelRow() {
                return ((tAA_ParcelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_ParcelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_ParcelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_ParcelRowChanged != null)) {
                    this.tAA_ParcelRowChanged(this, new tAA_ParcelRowChangeEvent(((tAA_ParcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_ParcelRowChanging != null)) {
                    this.tAA_ParcelRowChanging(this, new tAA_ParcelRowChangeEvent(((tAA_ParcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_ParcelRowDeleted != null)) {
                    this.tAA_ParcelRowDeleted(this, new tAA_ParcelRowChangeEvent(((tAA_ParcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_ParcelRowDeleting != null)) {
                    this.tAA_ParcelRowDeleting(this, new tAA_ParcelRowChangeEvent(((tAA_ParcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_ParcelRow(tAA_ParcelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_ParcelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_ObjectDataTable : global::System.Data.TypedTableBase<tAA_ObjectRow> {
            
            private global::System.Data.DataColumn columnObjectID;
            
            private global::System.Data.DataColumn columnPObjectID;
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnObjectTypeID;
            
            private global::System.Data.DataColumn columnOValue;
            
            private global::System.Data.DataColumn columnIsValue;
            
            private global::System.Data.DataColumn columnIsRoll;
            
            private global::System.Data.DataColumn columnStateCode;
            
            private global::System.Data.DataColumn columnBedrooms;
            
            private global::System.Data.DataColumn columnBathrooms;
            
            private global::System.Data.DataColumn columnRental;
            
            private global::System.Data.DataColumn columnYearSeptic;
            
            private global::System.Data.DataColumn columnYearWater;
            
            private global::System.Data.DataColumn columnYearBuilt;
            
            private global::System.Data.DataColumn columnEffectiveAge;
            
            private global::System.Data.DataColumn columnLife;
            
            private global::System.Data.DataColumn columnYearRemodel;
            
            private global::System.Data.DataColumn columnCondition;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnconversion;
            
            private global::System.Data.DataColumn columnPageID;
            
            private global::System.Data.DataColumn columnIsAgriculture;
            
            private global::System.Data.DataColumn columnClassID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectDataTable() {
                this.TableName = "tAA_Object";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ObjectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_ObjectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectIDColumn {
                get {
                    return this.columnObjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PObjectIDColumn {
                get {
                    return this.columnPObjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectTypeIDColumn {
                get {
                    return this.columnObjectTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OValueColumn {
                get {
                    return this.columnOValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsValueColumn {
                get {
                    return this.columnIsValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRollColumn {
                get {
                    return this.columnIsRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeColumn {
                get {
                    return this.columnStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BedroomsColumn {
                get {
                    return this.columnBedrooms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BathroomsColumn {
                get {
                    return this.columnBathrooms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RentalColumn {
                get {
                    return this.columnRental;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearSepticColumn {
                get {
                    return this.columnYearSeptic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearWaterColumn {
                get {
                    return this.columnYearWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearBuiltColumn {
                get {
                    return this.columnYearBuilt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveAgeColumn {
                get {
                    return this.columnEffectiveAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LifeColumn {
                get {
                    return this.columnLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearRemodelColumn {
                get {
                    return this.columnYearRemodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConditionColumn {
                get {
                    return this.columnCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conversionColumn {
                get {
                    return this.columnconversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageIDColumn {
                get {
                    return this.columnPageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAgricultureColumn {
                get {
                    return this.columnIsAgriculture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassIDColumn {
                get {
                    return this.columnClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectRow this[int index] {
                get {
                    return ((tAA_ObjectRow)(this.Rows[index]));
                }
            }
            
            public event tAA_ObjectRowChangeEventHandler tAA_ObjectRowChanging;
            
            public event tAA_ObjectRowChangeEventHandler tAA_ObjectRowChanged;
            
            public event tAA_ObjectRowChangeEventHandler tAA_ObjectRowDeleting;
            
            public event tAA_ObjectRowChangeEventHandler tAA_ObjectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_ObjectRow(tAA_ObjectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectRow AddtAA_ObjectRow(
                        int ObjectID, 
                        int PObjectID, 
                        int ParcelID, 
                        string Description, 
                        short ObjectTypeID, 
                        decimal OValue, 
                        bool IsValue, 
                        bool IsRoll, 
                        string StateCode, 
                        decimal Bedrooms, 
                        decimal Bathrooms, 
                        bool Rental, 
                        short YearSeptic, 
                        short YearWater, 
                        short YearBuilt, 
                        byte EffectiveAge, 
                        byte Life, 
                        short YearRemodel, 
                        decimal Condition, 
                        int ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        string conversion, 
                        int PageID, 
                        bool IsAgriculture, 
                        int ClassID) {
                tAA_ObjectRow rowtAA_ObjectRow = ((tAA_ObjectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ObjectID,
                        PObjectID,
                        ParcelID,
                        Description,
                        ObjectTypeID,
                        OValue,
                        IsValue,
                        IsRoll,
                        StateCode,
                        Bedrooms,
                        Bathrooms,
                        Rental,
                        YearSeptic,
                        YearWater,
                        YearBuilt,
                        EffectiveAge,
                        Life,
                        YearRemodel,
                        Condition,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        conversion,
                        PageID,
                        IsAgriculture,
                        ClassID};
                rowtAA_ObjectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_ObjectRow);
                return rowtAA_ObjectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_ObjectDataTable cln = ((tAA_ObjectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_ObjectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnObjectID = base.Columns["ObjectID"];
                this.columnPObjectID = base.Columns["PObjectID"];
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnDescription = base.Columns["Description"];
                this.columnObjectTypeID = base.Columns["ObjectTypeID"];
                this.columnOValue = base.Columns["OValue"];
                this.columnIsValue = base.Columns["IsValue"];
                this.columnIsRoll = base.Columns["IsRoll"];
                this.columnStateCode = base.Columns["StateCode"];
                this.columnBedrooms = base.Columns["Bedrooms"];
                this.columnBathrooms = base.Columns["Bathrooms"];
                this.columnRental = base.Columns["Rental"];
                this.columnYearSeptic = base.Columns["YearSeptic"];
                this.columnYearWater = base.Columns["YearWater"];
                this.columnYearBuilt = base.Columns["YearBuilt"];
                this.columnEffectiveAge = base.Columns["EffectiveAge"];
                this.columnLife = base.Columns["Life"];
                this.columnYearRemodel = base.Columns["YearRemodel"];
                this.columnCondition = base.Columns["Condition"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnconversion = base.Columns["conversion"];
                this.columnPageID = base.Columns["PageID"];
                this.columnIsAgriculture = base.Columns["IsAgriculture"];
                this.columnClassID = base.Columns["ClassID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnObjectID = new global::System.Data.DataColumn("ObjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectID);
                this.columnPObjectID = new global::System.Data.DataColumn("PObjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPObjectID);
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnObjectTypeID = new global::System.Data.DataColumn("ObjectTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectTypeID);
                this.columnOValue = new global::System.Data.DataColumn("OValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOValue);
                this.columnIsValue = new global::System.Data.DataColumn("IsValue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsValue);
                this.columnIsRoll = new global::System.Data.DataColumn("IsRoll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRoll);
                this.columnStateCode = new global::System.Data.DataColumn("StateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCode);
                this.columnBedrooms = new global::System.Data.DataColumn("Bedrooms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBedrooms);
                this.columnBathrooms = new global::System.Data.DataColumn("Bathrooms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBathrooms);
                this.columnRental = new global::System.Data.DataColumn("Rental", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRental);
                this.columnYearSeptic = new global::System.Data.DataColumn("YearSeptic", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearSeptic);
                this.columnYearWater = new global::System.Data.DataColumn("YearWater", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearWater);
                this.columnYearBuilt = new global::System.Data.DataColumn("YearBuilt", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearBuilt);
                this.columnEffectiveAge = new global::System.Data.DataColumn("EffectiveAge", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveAge);
                this.columnLife = new global::System.Data.DataColumn("Life", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLife);
                this.columnYearRemodel = new global::System.Data.DataColumn("YearRemodel", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearRemodel);
                this.columnCondition = new global::System.Data.DataColumn("Condition", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnconversion = new global::System.Data.DataColumn("conversion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconversion);
                this.columnPageID = new global::System.Data.DataColumn("PageID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageID);
                this.columnIsAgriculture = new global::System.Data.DataColumn("IsAgriculture", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAgriculture);
                this.columnClassID = new global::System.Data.DataColumn("ClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassID);
                this.columnObjectID.ReadOnly = true;
                this.columnPObjectID.ReadOnly = true;
                this.columnParcelID.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 200;
                this.columnObjectTypeID.ReadOnly = true;
                this.columnOValue.ReadOnly = true;
                this.columnIsValue.ReadOnly = true;
                this.columnIsRoll.ReadOnly = true;
                this.columnStateCode.ReadOnly = true;
                this.columnStateCode.MaxLength = 50;
                this.columnBedrooms.ReadOnly = true;
                this.columnBathrooms.ReadOnly = true;
                this.columnRental.ReadOnly = true;
                this.columnYearSeptic.ReadOnly = true;
                this.columnYearWater.ReadOnly = true;
                this.columnYearBuilt.ReadOnly = true;
                this.columnEffectiveAge.ReadOnly = true;
                this.columnLife.ReadOnly = true;
                this.columnYearRemodel.ReadOnly = true;
                this.columnCondition.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnconversion.ReadOnly = true;
                this.columnconversion.MaxLength = 50;
                this.columnPageID.ReadOnly = true;
                this.columnIsAgriculture.ReadOnly = true;
                this.columnClassID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectRow NewtAA_ObjectRow() {
                return ((tAA_ObjectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_ObjectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_ObjectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_ObjectRowChanged != null)) {
                    this.tAA_ObjectRowChanged(this, new tAA_ObjectRowChangeEvent(((tAA_ObjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_ObjectRowChanging != null)) {
                    this.tAA_ObjectRowChanging(this, new tAA_ObjectRowChangeEvent(((tAA_ObjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_ObjectRowDeleted != null)) {
                    this.tAA_ObjectRowDeleted(this, new tAA_ObjectRowChangeEvent(((tAA_ObjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_ObjectRowDeleting != null)) {
                    this.tAA_ObjectRowDeleting(this, new tAA_ObjectRowChangeEvent(((tAA_ObjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_ObjectRow(tAA_ObjectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_ObjectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_SliceTypeDataTable : global::System.Data.TypedTableBase<tAA_SliceTypeRow> {
            
            private global::System.Data.DataColumn columnSliceTypeID;
            
            private global::System.Data.DataColumn columnSliceType;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_SliceTypeDataTable() {
                this.TableName = "tAA_SliceType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_SliceTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_SliceTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SliceTypeIDColumn {
                get {
                    return this.columnSliceTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SliceTypeColumn {
                get {
                    return this.columnSliceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_SliceTypeRow this[int index] {
                get {
                    return ((tAA_SliceTypeRow)(this.Rows[index]));
                }
            }
            
            public event tAA_SliceTypeRowChangeEventHandler tAA_SliceTypeRowChanging;
            
            public event tAA_SliceTypeRowChangeEventHandler tAA_SliceTypeRowChanged;
            
            public event tAA_SliceTypeRowChangeEventHandler tAA_SliceTypeRowDeleting;
            
            public event tAA_SliceTypeRowChangeEventHandler tAA_SliceTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_SliceTypeRow(tAA_SliceTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_SliceTypeRow AddtAA_SliceTypeRow(short SliceTypeID, string SliceType, string Description, bool IsActive, int Form, int ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tAA_SliceTypeRow rowtAA_SliceTypeRow = ((tAA_SliceTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SliceTypeID,
                        SliceType,
                        Description,
                        IsActive,
                        Form,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_SliceTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_SliceTypeRow);
                return rowtAA_SliceTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_SliceTypeDataTable cln = ((tAA_SliceTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_SliceTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSliceTypeID = base.Columns["SliceTypeID"];
                this.columnSliceType = base.Columns["SliceType"];
                this.columnDescription = base.Columns["Description"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnForm = base.Columns["Form"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSliceTypeID = new global::System.Data.DataColumn("SliceTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSliceTypeID);
                this.columnSliceType = new global::System.Data.DataColumn("SliceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSliceType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnSliceTypeID.ReadOnly = true;
                this.columnSliceType.ReadOnly = true;
                this.columnSliceType.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 50;
                this.columnIsActive.ReadOnly = true;
                this.columnForm.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_SliceTypeRow NewtAA_SliceTypeRow() {
                return ((tAA_SliceTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_SliceTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_SliceTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_SliceTypeRowChanged != null)) {
                    this.tAA_SliceTypeRowChanged(this, new tAA_SliceTypeRowChangeEvent(((tAA_SliceTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_SliceTypeRowChanging != null)) {
                    this.tAA_SliceTypeRowChanging(this, new tAA_SliceTypeRowChangeEvent(((tAA_SliceTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_SliceTypeRowDeleted != null)) {
                    this.tAA_SliceTypeRowDeleted(this, new tAA_SliceTypeRowChangeEvent(((tAA_SliceTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_SliceTypeRowDeleting != null)) {
                    this.tAA_SliceTypeRowDeleting(this, new tAA_SliceTypeRowChangeEvent(((tAA_SliceTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_SliceTypeRow(tAA_SliceTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_SliceTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_QueryViewDataTable : global::System.Data.TypedTableBase<tTS_QueryViewRow> {
            
            private global::System.Data.DataColumn columnQueryViewID;
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnQueryView;
            
            private global::System.Data.DataColumn columnQueryViewName;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnMenuOrder;
            
            private global::System.Data.DataColumn columnQueryViewDescription;
            
            private global::System.Data.DataColumn columnDesignedBy;
            
            private global::System.Data.DataColumn columnIsTurbo;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnForeignKeyName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewDataTable() {
                this.TableName = "tTS_QueryView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_QueryViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_QueryViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QueryViewIDColumn {
                get {
                    return this.columnQueryViewID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QueryViewColumn {
                get {
                    return this.columnQueryView;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QueryViewNameColumn {
                get {
                    return this.columnQueryViewName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MenuOrderColumn {
                get {
                    return this.columnMenuOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QueryViewDescriptionColumn {
                get {
                    return this.columnQueryViewDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignedByColumn {
                get {
                    return this.columnDesignedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsTurboColumn {
                get {
                    return this.columnIsTurbo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForeignKeyNameColumn {
                get {
                    return this.columnForeignKeyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewRow this[int index] {
                get {
                    return ((tTS_QueryViewRow)(this.Rows[index]));
                }
            }
            
            public event tTS_QueryViewRowChangeEventHandler tTS_QueryViewRowChanging;
            
            public event tTS_QueryViewRowChangeEventHandler tTS_QueryViewRowChanged;
            
            public event tTS_QueryViewRowChangeEventHandler tTS_QueryViewRowDeleting;
            
            public event tTS_QueryViewRowChangeEventHandler tTS_QueryViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_QueryViewRow(tTS_QueryViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewRow AddtTS_QueryViewRow(int QueryViewID, int Form, string QueryView, string QueryViewName, int ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, int MenuOrder, string QueryViewDescription, string DesignedBy, bool IsTurbo, bool IsActive, string ForeignKeyName) {
                tTS_QueryViewRow rowtTS_QueryViewRow = ((tTS_QueryViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        QueryViewID,
                        Form,
                        QueryView,
                        QueryViewName,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        MenuOrder,
                        QueryViewDescription,
                        DesignedBy,
                        IsTurbo,
                        IsActive,
                        ForeignKeyName};
                rowtTS_QueryViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_QueryViewRow);
                return rowtTS_QueryViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_QueryViewDataTable cln = ((tTS_QueryViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_QueryViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnQueryViewID = base.Columns["QueryViewID"];
                this.columnForm = base.Columns["Form"];
                this.columnQueryView = base.Columns["QueryView"];
                this.columnQueryViewName = base.Columns["QueryViewName"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnMenuOrder = base.Columns["MenuOrder"];
                this.columnQueryViewDescription = base.Columns["QueryViewDescription"];
                this.columnDesignedBy = base.Columns["DesignedBy"];
                this.columnIsTurbo = base.Columns["IsTurbo"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnForeignKeyName = base.Columns["ForeignKeyName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnQueryViewID = new global::System.Data.DataColumn("QueryViewID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueryViewID);
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnQueryView = new global::System.Data.DataColumn("QueryView", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueryView);
                this.columnQueryViewName = new global::System.Data.DataColumn("QueryViewName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueryViewName);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnMenuOrder = new global::System.Data.DataColumn("MenuOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMenuOrder);
                this.columnQueryViewDescription = new global::System.Data.DataColumn("QueryViewDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueryViewDescription);
                this.columnDesignedBy = new global::System.Data.DataColumn("DesignedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignedBy);
                this.columnIsTurbo = new global::System.Data.DataColumn("IsTurbo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTurbo);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnForeignKeyName = new global::System.Data.DataColumn("ForeignKeyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignKeyName);
                this.columnQueryViewID.ReadOnly = true;
                this.columnForm.ReadOnly = true;
                this.columnQueryView.ReadOnly = true;
                this.columnQueryView.MaxLength = 50;
                this.columnQueryViewName.ReadOnly = true;
                this.columnQueryViewName.MaxLength = 50;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnMenuOrder.ReadOnly = true;
                this.columnQueryViewDescription.ReadOnly = true;
                this.columnQueryViewDescription.MaxLength = 300;
                this.columnDesignedBy.ReadOnly = true;
                this.columnDesignedBy.MaxLength = 20;
                this.columnIsTurbo.ReadOnly = true;
                this.columnIsActive.ReadOnly = true;
                this.columnForeignKeyName.ReadOnly = true;
                this.columnForeignKeyName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewRow NewtTS_QueryViewRow() {
                return ((tTS_QueryViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_QueryViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_QueryViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_QueryViewRowChanged != null)) {
                    this.tTS_QueryViewRowChanged(this, new tTS_QueryViewRowChangeEvent(((tTS_QueryViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_QueryViewRowChanging != null)) {
                    this.tTS_QueryViewRowChanging(this, new tTS_QueryViewRowChangeEvent(((tTS_QueryViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_QueryViewRowDeleted != null)) {
                    this.tTS_QueryViewRowDeleted(this, new tTS_QueryViewRowChangeEvent(((tTS_QueryViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_QueryViewRowDeleting != null)) {
                    this.tTS_QueryViewRowDeleting(this, new tTS_QueryViewRowChangeEvent(((tTS_QueryViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_QueryViewRow(tTS_QueryViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_QueryViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_NBHDDataTable : global::System.Data.TypedTableBase<tAA_NBHDRow> {
            
            private global::System.Data.DataColumn columnNBHDID;
            
            private global::System.Data.DataColumn columnPNBHDID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnNBHDType;
            
            private global::System.Data.DataColumn columnNeighborhood;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnMarketReview;
            
            private global::System.Data.DataColumn columnReviewedBy;
            
            private global::System.Data.DataColumn columnNBHDGroupID;
            
            private global::System.Data.DataColumn columnZoningID;
            
            private global::System.Data.DataColumn columnCAMAModelID;
            
            private global::System.Data.DataColumn columnAAModelID;
            
            private global::System.Data.DataColumn columnMSVersionID;
            
            private global::System.Data.DataColumn columnMSCVersionID;
            
            private global::System.Data.DataColumn columnMSR_Factor;
            
            private global::System.Data.DataColumn columnMSC_Factor;
            
            private global::System.Data.DataColumn columnLockAppraisalBy;
            
            private global::System.Data.DataColumn columnLockAssessmentBy;
            
            private global::System.Data.DataColumn columnLockAdminBy;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDDataTable() {
                this.TableName = "tAA_NBHD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_NBHDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_NBHDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNBHDIDColumn {
                get {
                    return this.columnPNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDTypeColumn {
                get {
                    return this.columnNBHDType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeighborhoodColumn {
                get {
                    return this.columnNeighborhood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarketReviewColumn {
                get {
                    return this.columnMarketReview;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewedByColumn {
                get {
                    return this.columnReviewedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDGroupIDColumn {
                get {
                    return this.columnNBHDGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoningIDColumn {
                get {
                    return this.columnZoningID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CAMAModelIDColumn {
                get {
                    return this.columnCAMAModelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AAModelIDColumn {
                get {
                    return this.columnAAModelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSVersionIDColumn {
                get {
                    return this.columnMSVersionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSCVersionIDColumn {
                get {
                    return this.columnMSCVersionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSR_FactorColumn {
                get {
                    return this.columnMSR_Factor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSC_FactorColumn {
                get {
                    return this.columnMSC_Factor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAppraisalByColumn {
                get {
                    return this.columnLockAppraisalBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAssessmentByColumn {
                get {
                    return this.columnLockAssessmentBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAdminByColumn {
                get {
                    return this.columnLockAdminBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDRow this[int index] {
                get {
                    return ((tAA_NBHDRow)(this.Rows[index]));
                }
            }
            
            public event tAA_NBHDRowChangeEventHandler tAA_NBHDRowChanging;
            
            public event tAA_NBHDRowChangeEventHandler tAA_NBHDRowChanged;
            
            public event tAA_NBHDRowChangeEventHandler tAA_NBHDRowDeleting;
            
            public event tAA_NBHDRowChangeEventHandler tAA_NBHDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_NBHDRow(tAA_NBHDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDRow AddtAA_NBHDRow(
                        int NBHDID, 
                        int PNBHDID, 
                        short RollYear, 
                        byte NBHDType, 
                        string Neighborhood, 
                        string Description, 
                        string MarketReview, 
                        int ReviewedBy, 
                        int NBHDGroupID, 
                        int ZoningID, 
                        short CAMAModelID, 
                        short AAModelID, 
                        int MSVersionID, 
                        int MSCVersionID, 
                        decimal MSR_Factor, 
                        decimal MSC_Factor, 
                        int LockAppraisalBy, 
                        int LockAssessmentBy, 
                        int LockAdminBy, 
                        int ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted) {
                tAA_NBHDRow rowtAA_NBHDRow = ((tAA_NBHDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NBHDID,
                        PNBHDID,
                        RollYear,
                        NBHDType,
                        Neighborhood,
                        Description,
                        MarketReview,
                        ReviewedBy,
                        NBHDGroupID,
                        ZoningID,
                        CAMAModelID,
                        AAModelID,
                        MSVersionID,
                        MSCVersionID,
                        MSR_Factor,
                        MSC_Factor,
                        LockAppraisalBy,
                        LockAssessmentBy,
                        LockAdminBy,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_NBHDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_NBHDRow);
                return rowtAA_NBHDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_NBHDDataTable cln = ((tAA_NBHDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_NBHDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnPNBHDID = base.Columns["PNBHDID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnNBHDType = base.Columns["NBHDType"];
                this.columnNeighborhood = base.Columns["Neighborhood"];
                this.columnDescription = base.Columns["Description"];
                this.columnMarketReview = base.Columns["MarketReview"];
                this.columnReviewedBy = base.Columns["ReviewedBy"];
                this.columnNBHDGroupID = base.Columns["NBHDGroupID"];
                this.columnZoningID = base.Columns["ZoningID"];
                this.columnCAMAModelID = base.Columns["CAMAModelID"];
                this.columnAAModelID = base.Columns["AAModelID"];
                this.columnMSVersionID = base.Columns["MSVersionID"];
                this.columnMSCVersionID = base.Columns["MSCVersionID"];
                this.columnMSR_Factor = base.Columns["MSR_Factor"];
                this.columnMSC_Factor = base.Columns["MSC_Factor"];
                this.columnLockAppraisalBy = base.Columns["LockAppraisalBy"];
                this.columnLockAssessmentBy = base.Columns["LockAssessmentBy"];
                this.columnLockAdminBy = base.Columns["LockAdminBy"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNBHDID = new global::System.Data.DataColumn("NBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnPNBHDID = new global::System.Data.DataColumn("PNBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNBHDID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnNBHDType = new global::System.Data.DataColumn("NBHDType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDType);
                this.columnNeighborhood = new global::System.Data.DataColumn("Neighborhood", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhood);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMarketReview = new global::System.Data.DataColumn("MarketReview", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketReview);
                this.columnReviewedBy = new global::System.Data.DataColumn("ReviewedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewedBy);
                this.columnNBHDGroupID = new global::System.Data.DataColumn("NBHDGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDGroupID);
                this.columnZoningID = new global::System.Data.DataColumn("ZoningID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoningID);
                this.columnCAMAModelID = new global::System.Data.DataColumn("CAMAModelID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAMAModelID);
                this.columnAAModelID = new global::System.Data.DataColumn("AAModelID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAAModelID);
                this.columnMSVersionID = new global::System.Data.DataColumn("MSVersionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSVersionID);
                this.columnMSCVersionID = new global::System.Data.DataColumn("MSCVersionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSCVersionID);
                this.columnMSR_Factor = new global::System.Data.DataColumn("MSR_Factor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSR_Factor);
                this.columnMSC_Factor = new global::System.Data.DataColumn("MSC_Factor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSC_Factor);
                this.columnLockAppraisalBy = new global::System.Data.DataColumn("LockAppraisalBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAppraisalBy);
                this.columnLockAssessmentBy = new global::System.Data.DataColumn("LockAssessmentBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAssessmentBy);
                this.columnLockAdminBy = new global::System.Data.DataColumn("LockAdminBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAdminBy);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnNBHDID.ReadOnly = true;
                this.columnPNBHDID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnNBHDType.ReadOnly = true;
                this.columnNeighborhood.ReadOnly = true;
                this.columnNeighborhood.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 2000;
                this.columnMarketReview.ReadOnly = true;
                this.columnMarketReview.MaxLength = 2000;
                this.columnReviewedBy.ReadOnly = true;
                this.columnNBHDGroupID.ReadOnly = true;
                this.columnZoningID.ReadOnly = true;
                this.columnCAMAModelID.ReadOnly = true;
                this.columnAAModelID.ReadOnly = true;
                this.columnMSVersionID.ReadOnly = true;
                this.columnMSCVersionID.ReadOnly = true;
                this.columnMSR_Factor.ReadOnly = true;
                this.columnMSC_Factor.ReadOnly = true;
                this.columnLockAppraisalBy.ReadOnly = true;
                this.columnLockAssessmentBy.ReadOnly = true;
                this.columnLockAdminBy.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDRow NewtAA_NBHDRow() {
                return ((tAA_NBHDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_NBHDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_NBHDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_NBHDRowChanged != null)) {
                    this.tAA_NBHDRowChanged(this, new tAA_NBHDRowChangeEvent(((tAA_NBHDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_NBHDRowChanging != null)) {
                    this.tAA_NBHDRowChanging(this, new tAA_NBHDRowChangeEvent(((tAA_NBHDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_NBHDRowDeleted != null)) {
                    this.tAA_NBHDRowDeleted(this, new tAA_NBHDRowChangeEvent(((tAA_NBHDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_NBHDRowDeleting != null)) {
                    this.tAA_NBHDRowDeleting(this, new tAA_NBHDRowChangeEvent(((tAA_NBHDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_NBHDRow(tAA_NBHDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_NBHDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_DistrictDataTable : global::System.Data.TypedTableBase<tTS_DistrictRow> {
            
            private global::System.Data.DataColumn columnDistrictID;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnDistrictTypeID;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnNewDistrictID;
            
            private global::System.Data.DataColumn columnExciseRateID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_DistrictDataTable() {
                this.TableName = "tTS_District";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_DistrictDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_DistrictDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictIDColumn {
                get {
                    return this.columnDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictTypeIDColumn {
                get {
                    return this.columnDistrictTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewDistrictIDColumn {
                get {
                    return this.columnNewDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseRateIDColumn {
                get {
                    return this.columnExciseRateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_DistrictRow this[int index] {
                get {
                    return ((tTS_DistrictRow)(this.Rows[index]));
                }
            }
            
            public event tTS_DistrictRowChangeEventHandler tTS_DistrictRowChanging;
            
            public event tTS_DistrictRowChangeEventHandler tTS_DistrictRowChanged;
            
            public event tTS_DistrictRowChangeEventHandler tTS_DistrictRowDeleting;
            
            public event tTS_DistrictRowChangeEventHandler tTS_DistrictRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_DistrictRow(tTS_DistrictRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_DistrictRow AddtTS_DistrictRow(int DistrictID, string District, string Description, short RollYear, bool IsActive, short DistrictTypeID, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, int NewDistrictID, int ExciseRateID) {
                tTS_DistrictRow rowtTS_DistrictRow = ((tTS_DistrictRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DistrictID,
                        District,
                        Description,
                        RollYear,
                        IsActive,
                        DistrictTypeID,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        NewDistrictID,
                        ExciseRateID};
                rowtTS_DistrictRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_DistrictRow);
                return rowtTS_DistrictRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_DistrictDataTable cln = ((tTS_DistrictDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_DistrictDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistrictID = base.Columns["DistrictID"];
                this.columnDistrict = base.Columns["District"];
                this.columnDescription = base.Columns["Description"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnDistrictTypeID = base.Columns["DistrictTypeID"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnNewDistrictID = base.Columns["NewDistrictID"];
                this.columnExciseRateID = base.Columns["ExciseRateID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistrictID = new global::System.Data.DataColumn("DistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictID);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnDistrictTypeID = new global::System.Data.DataColumn("DistrictTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictTypeID);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnNewDistrictID = new global::System.Data.DataColumn("NewDistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewDistrictID);
                this.columnExciseRateID = new global::System.Data.DataColumn("ExciseRateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseRateID);
                this.columnDistrictID.ReadOnly = true;
                this.columnDistrict.ReadOnly = true;
                this.columnDistrict.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 50;
                this.columnRollYear.ReadOnly = true;
                this.columnIsActive.ReadOnly = true;
                this.columnDistrictTypeID.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnNewDistrictID.ReadOnly = true;
                this.columnExciseRateID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_DistrictRow NewtTS_DistrictRow() {
                return ((tTS_DistrictRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_DistrictRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_DistrictRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_DistrictRowChanged != null)) {
                    this.tTS_DistrictRowChanged(this, new tTS_DistrictRowChangeEvent(((tTS_DistrictRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_DistrictRowChanging != null)) {
                    this.tTS_DistrictRowChanging(this, new tTS_DistrictRowChangeEvent(((tTS_DistrictRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_DistrictRowDeleted != null)) {
                    this.tTS_DistrictRowDeleted(this, new tTS_DistrictRowChangeEvent(((tTS_DistrictRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_DistrictRowDeleting != null)) {
                    this.tTS_DistrictRowDeleting(this, new tTS_DistrictRowChangeEvent(((tTS_DistrictRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_DistrictRow(tTS_DistrictRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_DistrictDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_ParcelTypeDataTable : global::System.Data.TypedTableBase<tAA_ParcelTypeRow> {
            
            private global::System.Data.DataColumn columnParcelTypeID;
            
            private global::System.Data.DataColumn columnParcelType;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelTypeDataTable() {
                this.TableName = "tAA_ParcelType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ParcelTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_ParcelTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelTypeIDColumn {
                get {
                    return this.columnParcelTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelTypeColumn {
                get {
                    return this.columnParcelType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelTypeRow this[int index] {
                get {
                    return ((tAA_ParcelTypeRow)(this.Rows[index]));
                }
            }
            
            public event tAA_ParcelTypeRowChangeEventHandler tAA_ParcelTypeRowChanging;
            
            public event tAA_ParcelTypeRowChangeEventHandler tAA_ParcelTypeRowChanged;
            
            public event tAA_ParcelTypeRowChangeEventHandler tAA_ParcelTypeRowDeleting;
            
            public event tAA_ParcelTypeRowChangeEventHandler tAA_ParcelTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_ParcelTypeRow(tAA_ParcelTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelTypeRow AddtAA_ParcelTypeRow(byte ParcelTypeID, string ParcelType, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tAA_ParcelTypeRow rowtAA_ParcelTypeRow = ((tAA_ParcelTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ParcelTypeID,
                        ParcelType,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_ParcelTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_ParcelTypeRow);
                return rowtAA_ParcelTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_ParcelTypeDataTable cln = ((tAA_ParcelTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_ParcelTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelTypeID = base.Columns["ParcelTypeID"];
                this.columnParcelType = base.Columns["ParcelType"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelTypeID = new global::System.Data.DataColumn("ParcelTypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelTypeID);
                this.columnParcelType = new global::System.Data.DataColumn("ParcelType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelType);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnParcelTypeID.ReadOnly = true;
                this.columnParcelType.ReadOnly = true;
                this.columnParcelType.MaxLength = 50;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelTypeRow NewtAA_ParcelTypeRow() {
                return ((tAA_ParcelTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_ParcelTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_ParcelTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_ParcelTypeRowChanged != null)) {
                    this.tAA_ParcelTypeRowChanged(this, new tAA_ParcelTypeRowChangeEvent(((tAA_ParcelTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_ParcelTypeRowChanging != null)) {
                    this.tAA_ParcelTypeRowChanging(this, new tAA_ParcelTypeRowChangeEvent(((tAA_ParcelTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_ParcelTypeRowDeleted != null)) {
                    this.tAA_ParcelTypeRowDeleted(this, new tAA_ParcelTypeRowChangeEvent(((tAA_ParcelTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_ParcelTypeRowDeleting != null)) {
                    this.tAA_ParcelTypeRowDeleting(this, new tAA_ParcelTypeRowChangeEvent(((tAA_ParcelTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_ParcelTypeRow(tAA_ParcelTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_ParcelTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_SubDivisionDataTable : global::System.Data.TypedTableBase<tTS_SubDivisionRow> {
            
            private global::System.Data.DataColumn columnSubdivisionID;
            
            private global::System.Data.DataColumn columnSubName;
            
            private global::System.Data.DataColumn columnSection;
            
            private global::System.Data.DataColumn columnTownShip;
            
            private global::System.Data.DataColumn columnRange;
            
            private global::System.Data.DataColumn columnIsSubDivision;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnSub_Code;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SubDivisionDataTable() {
                this.TableName = "tTS_SubDivision";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_SubDivisionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_SubDivisionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubdivisionIDColumn {
                get {
                    return this.columnSubdivisionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubNameColumn {
                get {
                    return this.columnSubName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn {
                get {
                    return this.columnSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TownShipColumn {
                get {
                    return this.columnTownShip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RangeColumn {
                get {
                    return this.columnRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSubDivisionColumn {
                get {
                    return this.columnIsSubDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sub_CodeColumn {
                get {
                    return this.columnSub_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SubDivisionRow this[int index] {
                get {
                    return ((tTS_SubDivisionRow)(this.Rows[index]));
                }
            }
            
            public event tTS_SubDivisionRowChangeEventHandler tTS_SubDivisionRowChanging;
            
            public event tTS_SubDivisionRowChangeEventHandler tTS_SubDivisionRowChanged;
            
            public event tTS_SubDivisionRowChangeEventHandler tTS_SubDivisionRowDeleting;
            
            public event tTS_SubDivisionRowChangeEventHandler tTS_SubDivisionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_SubDivisionRow(tTS_SubDivisionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SubDivisionRow AddtTS_SubDivisionRow(int SubdivisionID, string SubName, string Section, string TownShip, string Range, bool IsSubDivision, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted, string Sub_Code) {
                tTS_SubDivisionRow rowtTS_SubDivisionRow = ((tTS_SubDivisionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubdivisionID,
                        SubName,
                        Section,
                        TownShip,
                        Range,
                        IsSubDivision,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        Sub_Code};
                rowtTS_SubDivisionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_SubDivisionRow);
                return rowtTS_SubDivisionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_SubDivisionDataTable cln = ((tTS_SubDivisionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_SubDivisionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSubdivisionID = base.Columns["SubdivisionID"];
                this.columnSubName = base.Columns["SubName"];
                this.columnSection = base.Columns["Section"];
                this.columnTownShip = base.Columns["TownShip"];
                this.columnRange = base.Columns["Range"];
                this.columnIsSubDivision = base.Columns["IsSubDivision"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnSub_Code = base.Columns["Sub_Code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSubdivisionID = new global::System.Data.DataColumn("SubdivisionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubdivisionID);
                this.columnSubName = new global::System.Data.DataColumn("SubName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubName);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnTownShip = new global::System.Data.DataColumn("TownShip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTownShip);
                this.columnRange = new global::System.Data.DataColumn("Range", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRange);
                this.columnIsSubDivision = new global::System.Data.DataColumn("IsSubDivision", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSubDivision);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnSub_Code = new global::System.Data.DataColumn("Sub_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSub_Code);
                this.columnSubdivisionID.ReadOnly = true;
                this.columnSubName.ReadOnly = true;
                this.columnSubName.MaxLength = 75;
                this.columnSection.ReadOnly = true;
                this.columnSection.MaxLength = 75;
                this.columnTownShip.ReadOnly = true;
                this.columnTownShip.MaxLength = 75;
                this.columnRange.ReadOnly = true;
                this.columnRange.MaxLength = 75;
                this.columnIsSubDivision.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnSub_Code.ReadOnly = true;
                this.columnSub_Code.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SubDivisionRow NewtTS_SubDivisionRow() {
                return ((tTS_SubDivisionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_SubDivisionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_SubDivisionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_SubDivisionRowChanged != null)) {
                    this.tTS_SubDivisionRowChanged(this, new tTS_SubDivisionRowChangeEvent(((tTS_SubDivisionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_SubDivisionRowChanging != null)) {
                    this.tTS_SubDivisionRowChanging(this, new tTS_SubDivisionRowChangeEvent(((tTS_SubDivisionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_SubDivisionRowDeleted != null)) {
                    this.tTS_SubDivisionRowDeleted(this, new tTS_SubDivisionRowChangeEvent(((tTS_SubDivisionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_SubDivisionRowDeleting != null)) {
                    this.tTS_SubDivisionRowDeleting(this, new tTS_SubDivisionRowChangeEvent(((tTS_SubDivisionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_SubDivisionRow(tTS_SubDivisionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_SubDivisionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_LegalDataTable : global::System.Data.TypedTableBase<tTS_LegalRow> {
            
            private global::System.Data.DataColumn columnLegalID;
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnSubdivisionID;
            
            private global::System.Data.DataColumn columnLot;
            
            private global::System.Data.DataColumn columnIsPartialLot;
            
            private global::System.Data.DataColumn columnBlock;
            
            private global::System.Data.DataColumn columnIsPartialBlock;
            
            private global::System.Data.DataColumn columnAssembledLegal;
            
            private global::System.Data.DataColumn columnUserLegal;
            
            private global::System.Data.DataColumn columnNWNW;
            
            private global::System.Data.DataColumn columnNENW;
            
            private global::System.Data.DataColumn columnSWNW;
            
            private global::System.Data.DataColumn columnSENW;
            
            private global::System.Data.DataColumn columnNWNE;
            
            private global::System.Data.DataColumn columnNENE;
            
            private global::System.Data.DataColumn columnSWNE;
            
            private global::System.Data.DataColumn columnSENE;
            
            private global::System.Data.DataColumn columnNWSW;
            
            private global::System.Data.DataColumn columnNESW;
            
            private global::System.Data.DataColumn columnSWSW;
            
            private global::System.Data.DataColumn columnSESW;
            
            private global::System.Data.DataColumn columnNWSE;
            
            private global::System.Data.DataColumn columnNESE;
            
            private global::System.Data.DataColumn columnSWSE;
            
            private global::System.Data.DataColumn columnSESE;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_LegalDataTable() {
                this.TableName = "tTS_Legal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_LegalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_LegalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LegalIDColumn {
                get {
                    return this.columnLegalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubdivisionIDColumn {
                get {
                    return this.columnSubdivisionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LotColumn {
                get {
                    return this.columnLot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPartialLotColumn {
                get {
                    return this.columnIsPartialLot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockColumn {
                get {
                    return this.columnBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPartialBlockColumn {
                get {
                    return this.columnIsPartialBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssembledLegalColumn {
                get {
                    return this.columnAssembledLegal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserLegalColumn {
                get {
                    return this.columnUserLegal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWNWColumn {
                get {
                    return this.columnNWNW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NENWColumn {
                get {
                    return this.columnNENW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWNWColumn {
                get {
                    return this.columnSWNW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENWColumn {
                get {
                    return this.columnSENW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWNEColumn {
                get {
                    return this.columnNWNE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NENEColumn {
                get {
                    return this.columnNENE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWNEColumn {
                get {
                    return this.columnSWNE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENEColumn {
                get {
                    return this.columnSENE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWSWColumn {
                get {
                    return this.columnNWSW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NESWColumn {
                get {
                    return this.columnNESW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWSWColumn {
                get {
                    return this.columnSWSW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SESWColumn {
                get {
                    return this.columnSESW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NWSEColumn {
                get {
                    return this.columnNWSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NESEColumn {
                get {
                    return this.columnNESE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SWSEColumn {
                get {
                    return this.columnSWSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SESEColumn {
                get {
                    return this.columnSESE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_LegalRow this[int index] {
                get {
                    return ((tTS_LegalRow)(this.Rows[index]));
                }
            }
            
            public event tTS_LegalRowChangeEventHandler tTS_LegalRowChanging;
            
            public event tTS_LegalRowChangeEventHandler tTS_LegalRowChanged;
            
            public event tTS_LegalRowChangeEventHandler tTS_LegalRowDeleting;
            
            public event tTS_LegalRowChangeEventHandler tTS_LegalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_LegalRow(tTS_LegalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_LegalRow AddtTS_LegalRow(
                        int LegalID, 
                        int ParcelID, 
                        int SubdivisionID, 
                        string Lot, 
                        bool IsPartialLot, 
                        string Block, 
                        bool IsPartialBlock, 
                        string AssembledLegal, 
                        string UserLegal, 
                        byte NWNW, 
                        byte NENW, 
                        byte SWNW, 
                        byte SENW, 
                        byte NWNE, 
                        byte NENE, 
                        byte SWNE, 
                        byte SENE, 
                        byte NWSW, 
                        byte NESW, 
                        byte SWSW, 
                        byte SESW, 
                        byte NWSE, 
                        byte NESE, 
                        byte SWSE, 
                        byte SESE, 
                        short ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted) {
                tTS_LegalRow rowtTS_LegalRow = ((tTS_LegalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LegalID,
                        ParcelID,
                        SubdivisionID,
                        Lot,
                        IsPartialLot,
                        Block,
                        IsPartialBlock,
                        AssembledLegal,
                        UserLegal,
                        NWNW,
                        NENW,
                        SWNW,
                        SENW,
                        NWNE,
                        NENE,
                        SWNE,
                        SENE,
                        NWSW,
                        NESW,
                        SWSW,
                        SESW,
                        NWSE,
                        NESE,
                        SWSE,
                        SESE,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_LegalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_LegalRow);
                return rowtTS_LegalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_LegalDataTable cln = ((tTS_LegalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_LegalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLegalID = base.Columns["LegalID"];
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnSubdivisionID = base.Columns["SubdivisionID"];
                this.columnLot = base.Columns["Lot"];
                this.columnIsPartialLot = base.Columns["IsPartialLot"];
                this.columnBlock = base.Columns["Block"];
                this.columnIsPartialBlock = base.Columns["IsPartialBlock"];
                this.columnAssembledLegal = base.Columns["AssembledLegal"];
                this.columnUserLegal = base.Columns["UserLegal"];
                this.columnNWNW = base.Columns["NWNW"];
                this.columnNENW = base.Columns["NENW"];
                this.columnSWNW = base.Columns["SWNW"];
                this.columnSENW = base.Columns["SENW"];
                this.columnNWNE = base.Columns["NWNE"];
                this.columnNENE = base.Columns["NENE"];
                this.columnSWNE = base.Columns["SWNE"];
                this.columnSENE = base.Columns["SENE"];
                this.columnNWSW = base.Columns["NWSW"];
                this.columnNESW = base.Columns["NESW"];
                this.columnSWSW = base.Columns["SWSW"];
                this.columnSESW = base.Columns["SESW"];
                this.columnNWSE = base.Columns["NWSE"];
                this.columnNESE = base.Columns["NESE"];
                this.columnSWSE = base.Columns["SWSE"];
                this.columnSESE = base.Columns["SESE"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLegalID = new global::System.Data.DataColumn("LegalID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLegalID);
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnSubdivisionID = new global::System.Data.DataColumn("SubdivisionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubdivisionID);
                this.columnLot = new global::System.Data.DataColumn("Lot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLot);
                this.columnIsPartialLot = new global::System.Data.DataColumn("IsPartialLot", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPartialLot);
                this.columnBlock = new global::System.Data.DataColumn("Block", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlock);
                this.columnIsPartialBlock = new global::System.Data.DataColumn("IsPartialBlock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPartialBlock);
                this.columnAssembledLegal = new global::System.Data.DataColumn("AssembledLegal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssembledLegal);
                this.columnUserLegal = new global::System.Data.DataColumn("UserLegal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserLegal);
                this.columnNWNW = new global::System.Data.DataColumn("NWNW", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWNW);
                this.columnNENW = new global::System.Data.DataColumn("NENW", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNENW);
                this.columnSWNW = new global::System.Data.DataColumn("SWNW", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWNW);
                this.columnSENW = new global::System.Data.DataColumn("SENW", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENW);
                this.columnNWNE = new global::System.Data.DataColumn("NWNE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWNE);
                this.columnNENE = new global::System.Data.DataColumn("NENE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNENE);
                this.columnSWNE = new global::System.Data.DataColumn("SWNE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWNE);
                this.columnSENE = new global::System.Data.DataColumn("SENE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENE);
                this.columnNWSW = new global::System.Data.DataColumn("NWSW", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWSW);
                this.columnNESW = new global::System.Data.DataColumn("NESW", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNESW);
                this.columnSWSW = new global::System.Data.DataColumn("SWSW", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWSW);
                this.columnSESW = new global::System.Data.DataColumn("SESW", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESW);
                this.columnNWSE = new global::System.Data.DataColumn("NWSE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNWSE);
                this.columnNESE = new global::System.Data.DataColumn("NESE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNESE);
                this.columnSWSE = new global::System.Data.DataColumn("SWSE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWSE);
                this.columnSESE = new global::System.Data.DataColumn("SESE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESE);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnLegalID.ReadOnly = true;
                this.columnParcelID.ReadOnly = true;
                this.columnSubdivisionID.ReadOnly = true;
                this.columnLot.ReadOnly = true;
                this.columnLot.MaxLength = 10;
                this.columnIsPartialLot.ReadOnly = true;
                this.columnBlock.ReadOnly = true;
                this.columnBlock.MaxLength = 10;
                this.columnIsPartialBlock.ReadOnly = true;
                this.columnAssembledLegal.ReadOnly = true;
                this.columnAssembledLegal.MaxLength = 250;
                this.columnUserLegal.ReadOnly = true;
                this.columnUserLegal.MaxLength = 5000;
                this.columnNWNW.ReadOnly = true;
                this.columnNENW.ReadOnly = true;
                this.columnSWNW.ReadOnly = true;
                this.columnSENW.ReadOnly = true;
                this.columnNWNE.ReadOnly = true;
                this.columnNENE.ReadOnly = true;
                this.columnSWNE.ReadOnly = true;
                this.columnSENE.ReadOnly = true;
                this.columnNWSW.ReadOnly = true;
                this.columnNESW.ReadOnly = true;
                this.columnSWSW.ReadOnly = true;
                this.columnSESW.ReadOnly = true;
                this.columnNWSE.ReadOnly = true;
                this.columnNESE.ReadOnly = true;
                this.columnSWSE.ReadOnly = true;
                this.columnSESE.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_LegalRow NewtTS_LegalRow() {
                return ((tTS_LegalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_LegalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_LegalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_LegalRowChanged != null)) {
                    this.tTS_LegalRowChanged(this, new tTS_LegalRowChangeEvent(((tTS_LegalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_LegalRowChanging != null)) {
                    this.tTS_LegalRowChanging(this, new tTS_LegalRowChangeEvent(((tTS_LegalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_LegalRowDeleted != null)) {
                    this.tTS_LegalRowDeleted(this, new tTS_LegalRowChangeEvent(((tTS_LegalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_LegalRowDeleting != null)) {
                    this.tTS_LegalRowDeleting(this, new tTS_LegalRowChangeEvent(((tTS_LegalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_LegalRow(tTS_LegalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_LegalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_SitusDataTable : global::System.Data.TypedTableBase<tTS_SitusRow> {
            
            private global::System.Data.DataColumn columnSitusID;
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnAddressID;
            
            private global::System.Data.DataColumn columnStreetID;
            
            private global::System.Data.DataColumn columnHouseNumber;
            
            private global::System.Data.DataColumn columnStreetName;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnZipCode;
            
            private global::System.Data.DataColumn columnSitus;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnUnitType;
            
            private global::System.Data.DataColumn columnUnitNumber;
            
            private global::System.Data.DataColumn columnX_Coord;
            
            private global::System.Data.DataColumn columnY_Coord;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SitusDataTable() {
                this.TableName = "tTS_Situs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_SitusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_SitusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SitusIDColumn {
                get {
                    return this.columnSitusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressIDColumn {
                get {
                    return this.columnAddressID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetIDColumn {
                get {
                    return this.columnStreetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HouseNumberColumn {
                get {
                    return this.columnHouseNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetNameColumn {
                get {
                    return this.columnStreetName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipCodeColumn {
                get {
                    return this.columnZipCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SitusColumn {
                get {
                    return this.columnSitus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitTypeColumn {
                get {
                    return this.columnUnitType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNumberColumn {
                get {
                    return this.columnUnitNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn X_CoordColumn {
                get {
                    return this.columnX_Coord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Y_CoordColumn {
                get {
                    return this.columnY_Coord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SitusRow this[int index] {
                get {
                    return ((tTS_SitusRow)(this.Rows[index]));
                }
            }
            
            public event tTS_SitusRowChangeEventHandler tTS_SitusRowChanging;
            
            public event tTS_SitusRowChangeEventHandler tTS_SitusRowChanged;
            
            public event tTS_SitusRowChangeEventHandler tTS_SitusRowDeleting;
            
            public event tTS_SitusRowChangeEventHandler tTS_SitusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_SitusRow(tTS_SitusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SitusRow AddtTS_SitusRow(
                        int SitusID, 
                        int ParcelID, 
                        int AddressID, 
                        int StreetID, 
                        string HouseNumber, 
                        string StreetName, 
                        string City, 
                        string ZipCode, 
                        string Situs, 
                        int UnitID, 
                        string UnitType, 
                        string UnitNumber, 
                        decimal X_Coord, 
                        decimal Y_Coord, 
                        short ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted) {
                tTS_SitusRow rowtTS_SitusRow = ((tTS_SitusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SitusID,
                        ParcelID,
                        AddressID,
                        StreetID,
                        HouseNumber,
                        StreetName,
                        City,
                        ZipCode,
                        Situs,
                        UnitID,
                        UnitType,
                        UnitNumber,
                        X_Coord,
                        Y_Coord,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_SitusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_SitusRow);
                return rowtTS_SitusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_SitusDataTable cln = ((tTS_SitusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_SitusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSitusID = base.Columns["SitusID"];
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnAddressID = base.Columns["AddressID"];
                this.columnStreetID = base.Columns["StreetID"];
                this.columnHouseNumber = base.Columns["HouseNumber"];
                this.columnStreetName = base.Columns["StreetName"];
                this.columnCity = base.Columns["City"];
                this.columnZipCode = base.Columns["ZipCode"];
                this.columnSitus = base.Columns["Situs"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnUnitType = base.Columns["UnitType"];
                this.columnUnitNumber = base.Columns["UnitNumber"];
                this.columnX_Coord = base.Columns["X_Coord"];
                this.columnY_Coord = base.Columns["Y_Coord"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSitusID = new global::System.Data.DataColumn("SitusID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSitusID);
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnAddressID = new global::System.Data.DataColumn("AddressID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressID);
                this.columnStreetID = new global::System.Data.DataColumn("StreetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetID);
                this.columnHouseNumber = new global::System.Data.DataColumn("HouseNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouseNumber);
                this.columnStreetName = new global::System.Data.DataColumn("StreetName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetName);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnZipCode = new global::System.Data.DataColumn("ZipCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZipCode);
                this.columnSitus = new global::System.Data.DataColumn("Situs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSitus);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnUnitType = new global::System.Data.DataColumn("UnitType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitType);
                this.columnUnitNumber = new global::System.Data.DataColumn("UnitNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNumber);
                this.columnX_Coord = new global::System.Data.DataColumn("X_Coord", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Coord);
                this.columnY_Coord = new global::System.Data.DataColumn("Y_Coord", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnY_Coord);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnSitusID.ReadOnly = true;
                this.columnParcelID.ReadOnly = true;
                this.columnAddressID.ReadOnly = true;
                this.columnStreetID.ReadOnly = true;
                this.columnHouseNumber.ReadOnly = true;
                this.columnHouseNumber.MaxLength = 35;
                this.columnStreetName.ReadOnly = true;
                this.columnStreetName.MaxLength = 100;
                this.columnCity.ReadOnly = true;
                this.columnCity.MaxLength = 150;
                this.columnZipCode.ReadOnly = true;
                this.columnZipCode.MaxLength = 20;
                this.columnSitus.ReadOnly = true;
                this.columnSitus.MaxLength = 400;
                this.columnUnitID.ReadOnly = true;
                this.columnUnitType.ReadOnly = true;
                this.columnUnitType.MaxLength = 50;
                this.columnUnitNumber.ReadOnly = true;
                this.columnUnitNumber.MaxLength = 20;
                this.columnX_Coord.ReadOnly = true;
                this.columnY_Coord.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SitusRow NewtTS_SitusRow() {
                return ((tTS_SitusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_SitusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_SitusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_SitusRowChanged != null)) {
                    this.tTS_SitusRowChanged(this, new tTS_SitusRowChangeEvent(((tTS_SitusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_SitusRowChanging != null)) {
                    this.tTS_SitusRowChanging(this, new tTS_SitusRowChangeEvent(((tTS_SitusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_SitusRowDeleted != null)) {
                    this.tTS_SitusRowDeleted(this, new tTS_SitusRowChangeEvent(((tTS_SitusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_SitusRowDeleting != null)) {
                    this.tTS_SitusRowDeleting(this, new tTS_SitusRowChangeEvent(((tTS_SitusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_SitusRow(tTS_SitusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_SitusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_ObjectGroupDataTable : global::System.Data.TypedTableBase<tAA_ObjectGroupRow> {
            
            private global::System.Data.DataColumn columnObjectGroupID;
            
            private global::System.Data.DataColumn columnGroupOrder;
            
            private global::System.Data.DataColumn columnObjectGroup;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectGroupDataTable() {
                this.TableName = "tAA_ObjectGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ObjectGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_ObjectGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectGroupIDColumn {
                get {
                    return this.columnObjectGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupOrderColumn {
                get {
                    return this.columnGroupOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectGroupColumn {
                get {
                    return this.columnObjectGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectGroupRow this[int index] {
                get {
                    return ((tAA_ObjectGroupRow)(this.Rows[index]));
                }
            }
            
            public event tAA_ObjectGroupRowChangeEventHandler tAA_ObjectGroupRowChanging;
            
            public event tAA_ObjectGroupRowChangeEventHandler tAA_ObjectGroupRowChanged;
            
            public event tAA_ObjectGroupRowChangeEventHandler tAA_ObjectGroupRowDeleting;
            
            public event tAA_ObjectGroupRowChangeEventHandler tAA_ObjectGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_ObjectGroupRow(tAA_ObjectGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectGroupRow AddtAA_ObjectGroupRow(short ObjectGroupID, byte GroupOrder, string ObjectGroup, bool IsActive, int ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tAA_ObjectGroupRow rowtAA_ObjectGroupRow = ((tAA_ObjectGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ObjectGroupID,
                        GroupOrder,
                        ObjectGroup,
                        IsActive,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_ObjectGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_ObjectGroupRow);
                return rowtAA_ObjectGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_ObjectGroupDataTable cln = ((tAA_ObjectGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_ObjectGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnObjectGroupID = base.Columns["ObjectGroupID"];
                this.columnGroupOrder = base.Columns["GroupOrder"];
                this.columnObjectGroup = base.Columns["ObjectGroup"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnObjectGroupID = new global::System.Data.DataColumn("ObjectGroupID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectGroupID);
                this.columnGroupOrder = new global::System.Data.DataColumn("GroupOrder", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupOrder);
                this.columnObjectGroup = new global::System.Data.DataColumn("ObjectGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectGroup);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnObjectGroupID.ReadOnly = true;
                this.columnGroupOrder.ReadOnly = true;
                this.columnObjectGroup.ReadOnly = true;
                this.columnObjectGroup.MaxLength = 50;
                this.columnIsActive.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectGroupRow NewtAA_ObjectGroupRow() {
                return ((tAA_ObjectGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_ObjectGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_ObjectGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_ObjectGroupRowChanged != null)) {
                    this.tAA_ObjectGroupRowChanged(this, new tAA_ObjectGroupRowChangeEvent(((tAA_ObjectGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_ObjectGroupRowChanging != null)) {
                    this.tAA_ObjectGroupRowChanging(this, new tAA_ObjectGroupRowChangeEvent(((tAA_ObjectGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_ObjectGroupRowDeleted != null)) {
                    this.tAA_ObjectGroupRowDeleted(this, new tAA_ObjectGroupRowChangeEvent(((tAA_ObjectGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_ObjectGroupRowDeleting != null)) {
                    this.tAA_ObjectGroupRowDeleting(this, new tAA_ObjectGroupRowChangeEvent(((tAA_ObjectGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_ObjectGroupRow(tAA_ObjectGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_ObjectGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_ObjectTypeDataTable : global::System.Data.TypedTableBase<tAA_ObjectTypeRow> {
            
            private global::System.Data.DataColumn columnObjectTypeID;
            
            private global::System.Data.DataColumn columnObjectType;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnObjectGroupID;
            
            private global::System.Data.DataColumn columnObjectOrder;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectTypeDataTable() {
                this.TableName = "tAA_ObjectType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ObjectTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_ObjectTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectTypeIDColumn {
                get {
                    return this.columnObjectTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectTypeColumn {
                get {
                    return this.columnObjectType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectGroupIDColumn {
                get {
                    return this.columnObjectGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectOrderColumn {
                get {
                    return this.columnObjectOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectTypeRow this[int index] {
                get {
                    return ((tAA_ObjectTypeRow)(this.Rows[index]));
                }
            }
            
            public event tAA_ObjectTypeRowChangeEventHandler tAA_ObjectTypeRowChanging;
            
            public event tAA_ObjectTypeRowChangeEventHandler tAA_ObjectTypeRowChanged;
            
            public event tAA_ObjectTypeRowChangeEventHandler tAA_ObjectTypeRowDeleting;
            
            public event tAA_ObjectTypeRowChangeEventHandler tAA_ObjectTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_ObjectTypeRow(tAA_ObjectTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectTypeRow AddtAA_ObjectTypeRow(short ObjectTypeID, string ObjectType, string Description, short ObjectGroupID, byte ObjectOrder, bool IsActive, int ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tAA_ObjectTypeRow rowtAA_ObjectTypeRow = ((tAA_ObjectTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ObjectTypeID,
                        ObjectType,
                        Description,
                        ObjectGroupID,
                        ObjectOrder,
                        IsActive,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtAA_ObjectTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_ObjectTypeRow);
                return rowtAA_ObjectTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_ObjectTypeDataTable cln = ((tAA_ObjectTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_ObjectTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnObjectTypeID = base.Columns["ObjectTypeID"];
                this.columnObjectType = base.Columns["ObjectType"];
                this.columnDescription = base.Columns["Description"];
                this.columnObjectGroupID = base.Columns["ObjectGroupID"];
                this.columnObjectOrder = base.Columns["ObjectOrder"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnObjectTypeID = new global::System.Data.DataColumn("ObjectTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectTypeID);
                this.columnObjectType = new global::System.Data.DataColumn("ObjectType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnObjectGroupID = new global::System.Data.DataColumn("ObjectGroupID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectGroupID);
                this.columnObjectOrder = new global::System.Data.DataColumn("ObjectOrder", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectOrder);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnObjectTypeID.ReadOnly = true;
                this.columnObjectType.ReadOnly = true;
                this.columnObjectType.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 100;
                this.columnObjectGroupID.ReadOnly = true;
                this.columnObjectOrder.ReadOnly = true;
                this.columnIsActive.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectTypeRow NewtAA_ObjectTypeRow() {
                return ((tAA_ObjectTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_ObjectTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_ObjectTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_ObjectTypeRowChanged != null)) {
                    this.tAA_ObjectTypeRowChanged(this, new tAA_ObjectTypeRowChangeEvent(((tAA_ObjectTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_ObjectTypeRowChanging != null)) {
                    this.tAA_ObjectTypeRowChanging(this, new tAA_ObjectTypeRowChangeEvent(((tAA_ObjectTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_ObjectTypeRowDeleted != null)) {
                    this.tAA_ObjectTypeRowDeleted(this, new tAA_ObjectTypeRowChangeEvent(((tAA_ObjectTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_ObjectTypeRowDeleting != null)) {
                    this.tAA_ObjectTypeRowDeleting(this, new tAA_ObjectTypeRowChangeEvent(((tAA_ObjectTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_ObjectTypeRow(tAA_ObjectTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_ObjectTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_Misc_CatalogDataTable : global::System.Data.TypedTableBase<tAA_Misc_CatalogRow> {
            
            private global::System.Data.DataColumn columnMICodeID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnMICode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnVFormula;
            
            private global::System.Data.DataColumn columnL01;
            
            private global::System.Data.DataColumn columnD01;
            
            private global::System.Data.DataColumn columnF01;
            
            private global::System.Data.DataColumn columnL02;
            
            private global::System.Data.DataColumn columnD02;
            
            private global::System.Data.DataColumn columnF02;
            
            private global::System.Data.DataColumn columnL03;
            
            private global::System.Data.DataColumn columnD03;
            
            private global::System.Data.DataColumn columnF03;
            
            private global::System.Data.DataColumn columnL04;
            
            private global::System.Data.DataColumn columnD04;
            
            private global::System.Data.DataColumn columnF04;
            
            private global::System.Data.DataColumn columnL05;
            
            private global::System.Data.DataColumn columnD05;
            
            private global::System.Data.DataColumn columnF05;
            
            private global::System.Data.DataColumn columnL06;
            
            private global::System.Data.DataColumn columnD06;
            
            private global::System.Data.DataColumn columnF06;
            
            private global::System.Data.DataColumn columnL07;
            
            private global::System.Data.DataColumn columnD07;
            
            private global::System.Data.DataColumn columnF07;
            
            private global::System.Data.DataColumn columnL08;
            
            private global::System.Data.DataColumn columnD08;
            
            private global::System.Data.DataColumn columnF08;
            
            private global::System.Data.DataColumn columnL09;
            
            private global::System.Data.DataColumn columnD09;
            
            private global::System.Data.DataColumn columnF09;
            
            private global::System.Data.DataColumn columnL10;
            
            private global::System.Data.DataColumn columnD10;
            
            private global::System.Data.DataColumn columnF10;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnS01;
            
            private global::System.Data.DataColumn columnS02;
            
            private global::System.Data.DataColumn columnS03;
            
            private global::System.Data.DataColumn columnS04;
            
            private global::System.Data.DataColumn columnS05;
            
            private global::System.Data.DataColumn columnS06;
            
            private global::System.Data.DataColumn columnS07;
            
            private global::System.Data.DataColumn columnS08;
            
            private global::System.Data.DataColumn columnS09;
            
            private global::System.Data.DataColumn columnS10;
            
            private global::System.Data.DataColumn columnconversion;
            
            private global::System.Data.DataColumn columnC01;
            
            private global::System.Data.DataColumn columnC02;
            
            private global::System.Data.DataColumn columnC03;
            
            private global::System.Data.DataColumn columnC04;
            
            private global::System.Data.DataColumn columnC05;
            
            private global::System.Data.DataColumn columnC06;
            
            private global::System.Data.DataColumn columnC07;
            
            private global::System.Data.DataColumn columnC08;
            
            private global::System.Data.DataColumn columnC09;
            
            private global::System.Data.DataColumn columnC10;
            
            private global::System.Data.DataColumn columnL11;
            
            private global::System.Data.DataColumn columnD11;
            
            private global::System.Data.DataColumn columnS11;
            
            private global::System.Data.DataColumn columnC11;
            
            private global::System.Data.DataColumn columnF11;
            
            private global::System.Data.DataColumn columnL12;
            
            private global::System.Data.DataColumn columnD12;
            
            private global::System.Data.DataColumn columnS12;
            
            private global::System.Data.DataColumn columnC12;
            
            private global::System.Data.DataColumn columnF12;
            
            private global::System.Data.DataColumn columnDeprTableID;
            
            private global::System.Data.DataColumn columnWithPrimary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogDataTable() {
                this.TableName = "tAA_Misc_Catalog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_Misc_CatalogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_Misc_CatalogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MICodeIDColumn {
                get {
                    return this.columnMICodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MICodeColumn {
                get {
                    return this.columnMICode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VFormulaColumn {
                get {
                    return this.columnVFormula;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L01Column {
                get {
                    return this.columnL01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D01Column {
                get {
                    return this.columnD01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F01Column {
                get {
                    return this.columnF01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L02Column {
                get {
                    return this.columnL02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D02Column {
                get {
                    return this.columnD02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F02Column {
                get {
                    return this.columnF02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L03Column {
                get {
                    return this.columnL03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D03Column {
                get {
                    return this.columnD03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F03Column {
                get {
                    return this.columnF03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L04Column {
                get {
                    return this.columnL04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D04Column {
                get {
                    return this.columnD04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F04Column {
                get {
                    return this.columnF04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L05Column {
                get {
                    return this.columnL05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D05Column {
                get {
                    return this.columnD05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F05Column {
                get {
                    return this.columnF05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L06Column {
                get {
                    return this.columnL06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D06Column {
                get {
                    return this.columnD06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F06Column {
                get {
                    return this.columnF06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L07Column {
                get {
                    return this.columnL07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D07Column {
                get {
                    return this.columnD07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F07Column {
                get {
                    return this.columnF07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L08Column {
                get {
                    return this.columnL08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D08Column {
                get {
                    return this.columnD08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F08Column {
                get {
                    return this.columnF08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L09Column {
                get {
                    return this.columnL09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D09Column {
                get {
                    return this.columnD09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F09Column {
                get {
                    return this.columnF09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L10Column {
                get {
                    return this.columnL10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D10Column {
                get {
                    return this.columnD10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F10Column {
                get {
                    return this.columnF10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S01Column {
                get {
                    return this.columnS01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S02Column {
                get {
                    return this.columnS02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S03Column {
                get {
                    return this.columnS03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S04Column {
                get {
                    return this.columnS04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S05Column {
                get {
                    return this.columnS05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S06Column {
                get {
                    return this.columnS06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S07Column {
                get {
                    return this.columnS07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S08Column {
                get {
                    return this.columnS08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S09Column {
                get {
                    return this.columnS09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S10Column {
                get {
                    return this.columnS10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conversionColumn {
                get {
                    return this.columnconversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C01Column {
                get {
                    return this.columnC01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C02Column {
                get {
                    return this.columnC02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C03Column {
                get {
                    return this.columnC03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C04Column {
                get {
                    return this.columnC04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C05Column {
                get {
                    return this.columnC05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C06Column {
                get {
                    return this.columnC06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C07Column {
                get {
                    return this.columnC07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C08Column {
                get {
                    return this.columnC08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C09Column {
                get {
                    return this.columnC09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C10Column {
                get {
                    return this.columnC10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L11Column {
                get {
                    return this.columnL11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D11Column {
                get {
                    return this.columnD11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S11Column {
                get {
                    return this.columnS11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C11Column {
                get {
                    return this.columnC11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F11Column {
                get {
                    return this.columnF11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L12Column {
                get {
                    return this.columnL12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D12Column {
                get {
                    return this.columnD12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S12Column {
                get {
                    return this.columnS12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C12Column {
                get {
                    return this.columnC12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F12Column {
                get {
                    return this.columnF12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprTableIDColumn {
                get {
                    return this.columnDeprTableID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WithPrimaryColumn {
                get {
                    return this.columnWithPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogRow this[int index] {
                get {
                    return ((tAA_Misc_CatalogRow)(this.Rows[index]));
                }
            }
            
            public event tAA_Misc_CatalogRowChangeEventHandler tAA_Misc_CatalogRowChanging;
            
            public event tAA_Misc_CatalogRowChangeEventHandler tAA_Misc_CatalogRowChanged;
            
            public event tAA_Misc_CatalogRowChangeEventHandler tAA_Misc_CatalogRowDeleting;
            
            public event tAA_Misc_CatalogRowChangeEventHandler tAA_Misc_CatalogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_Misc_CatalogRow(tAA_Misc_CatalogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogRow AddtAA_Misc_CatalogRow(
                        int MICodeID, 
                        short RollYear, 
                        string MICode, 
                        string Description, 
                        string VFormula, 
                        string L01, 
                        byte D01, 
                        string F01, 
                        string L02, 
                        byte D02, 
                        string F02, 
                        string L03, 
                        byte D03, 
                        string F03, 
                        string L04, 
                        byte D04, 
                        string F04, 
                        string L05, 
                        byte D05, 
                        string F05, 
                        string L06, 
                        byte D06, 
                        string F06, 
                        string L07, 
                        byte D07, 
                        string F07, 
                        string L08, 
                        byte D08, 
                        string F08, 
                        string L09, 
                        byte D09, 
                        string F09, 
                        string L10, 
                        byte D10, 
                        string F10, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        bool S01, 
                        bool S02, 
                        bool S03, 
                        bool S04, 
                        bool S05, 
                        bool S06, 
                        bool S07, 
                        bool S08, 
                        bool S09, 
                        bool S10, 
                        string conversion, 
                        bool C01, 
                        bool C02, 
                        bool C03, 
                        bool C04, 
                        bool C05, 
                        bool C06, 
                        bool C07, 
                        bool C08, 
                        bool C09, 
                        bool C10, 
                        string L11, 
                        byte D11, 
                        bool S11, 
                        bool C11, 
                        string F11, 
                        string L12, 
                        byte D12, 
                        bool S12, 
                        bool C12, 
                        string F12, 
                        int DeprTableID, 
                        bool WithPrimary) {
                tAA_Misc_CatalogRow rowtAA_Misc_CatalogRow = ((tAA_Misc_CatalogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MICodeID,
                        RollYear,
                        MICode,
                        Description,
                        VFormula,
                        L01,
                        D01,
                        F01,
                        L02,
                        D02,
                        F02,
                        L03,
                        D03,
                        F03,
                        L04,
                        D04,
                        F04,
                        L05,
                        D05,
                        F05,
                        L06,
                        D06,
                        F06,
                        L07,
                        D07,
                        F07,
                        L08,
                        D08,
                        F08,
                        L09,
                        D09,
                        F09,
                        L10,
                        D10,
                        F10,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        S01,
                        S02,
                        S03,
                        S04,
                        S05,
                        S06,
                        S07,
                        S08,
                        S09,
                        S10,
                        conversion,
                        C01,
                        C02,
                        C03,
                        C04,
                        C05,
                        C06,
                        C07,
                        C08,
                        C09,
                        C10,
                        L11,
                        D11,
                        S11,
                        C11,
                        F11,
                        L12,
                        D12,
                        S12,
                        C12,
                        F12,
                        DeprTableID,
                        WithPrimary};
                rowtAA_Misc_CatalogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_Misc_CatalogRow);
                return rowtAA_Misc_CatalogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_Misc_CatalogDataTable cln = ((tAA_Misc_CatalogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_Misc_CatalogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMICodeID = base.Columns["MICodeID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnMICode = base.Columns["MICode"];
                this.columnDescription = base.Columns["Description"];
                this.columnVFormula = base.Columns["VFormula"];
                this.columnL01 = base.Columns["L01"];
                this.columnD01 = base.Columns["D01"];
                this.columnF01 = base.Columns["F01"];
                this.columnL02 = base.Columns["L02"];
                this.columnD02 = base.Columns["D02"];
                this.columnF02 = base.Columns["F02"];
                this.columnL03 = base.Columns["L03"];
                this.columnD03 = base.Columns["D03"];
                this.columnF03 = base.Columns["F03"];
                this.columnL04 = base.Columns["L04"];
                this.columnD04 = base.Columns["D04"];
                this.columnF04 = base.Columns["F04"];
                this.columnL05 = base.Columns["L05"];
                this.columnD05 = base.Columns["D05"];
                this.columnF05 = base.Columns["F05"];
                this.columnL06 = base.Columns["L06"];
                this.columnD06 = base.Columns["D06"];
                this.columnF06 = base.Columns["F06"];
                this.columnL07 = base.Columns["L07"];
                this.columnD07 = base.Columns["D07"];
                this.columnF07 = base.Columns["F07"];
                this.columnL08 = base.Columns["L08"];
                this.columnD08 = base.Columns["D08"];
                this.columnF08 = base.Columns["F08"];
                this.columnL09 = base.Columns["L09"];
                this.columnD09 = base.Columns["D09"];
                this.columnF09 = base.Columns["F09"];
                this.columnL10 = base.Columns["L10"];
                this.columnD10 = base.Columns["D10"];
                this.columnF10 = base.Columns["F10"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnS01 = base.Columns["S01"];
                this.columnS02 = base.Columns["S02"];
                this.columnS03 = base.Columns["S03"];
                this.columnS04 = base.Columns["S04"];
                this.columnS05 = base.Columns["S05"];
                this.columnS06 = base.Columns["S06"];
                this.columnS07 = base.Columns["S07"];
                this.columnS08 = base.Columns["S08"];
                this.columnS09 = base.Columns["S09"];
                this.columnS10 = base.Columns["S10"];
                this.columnconversion = base.Columns["conversion"];
                this.columnC01 = base.Columns["C01"];
                this.columnC02 = base.Columns["C02"];
                this.columnC03 = base.Columns["C03"];
                this.columnC04 = base.Columns["C04"];
                this.columnC05 = base.Columns["C05"];
                this.columnC06 = base.Columns["C06"];
                this.columnC07 = base.Columns["C07"];
                this.columnC08 = base.Columns["C08"];
                this.columnC09 = base.Columns["C09"];
                this.columnC10 = base.Columns["C10"];
                this.columnL11 = base.Columns["L11"];
                this.columnD11 = base.Columns["D11"];
                this.columnS11 = base.Columns["S11"];
                this.columnC11 = base.Columns["C11"];
                this.columnF11 = base.Columns["F11"];
                this.columnL12 = base.Columns["L12"];
                this.columnD12 = base.Columns["D12"];
                this.columnS12 = base.Columns["S12"];
                this.columnC12 = base.Columns["C12"];
                this.columnF12 = base.Columns["F12"];
                this.columnDeprTableID = base.Columns["DeprTableID"];
                this.columnWithPrimary = base.Columns["WithPrimary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMICodeID = new global::System.Data.DataColumn("MICodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMICodeID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnMICode = new global::System.Data.DataColumn("MICode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMICode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnVFormula = new global::System.Data.DataColumn("VFormula", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVFormula);
                this.columnL01 = new global::System.Data.DataColumn("L01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL01);
                this.columnD01 = new global::System.Data.DataColumn("D01", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD01);
                this.columnF01 = new global::System.Data.DataColumn("F01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF01);
                this.columnL02 = new global::System.Data.DataColumn("L02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL02);
                this.columnD02 = new global::System.Data.DataColumn("D02", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD02);
                this.columnF02 = new global::System.Data.DataColumn("F02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF02);
                this.columnL03 = new global::System.Data.DataColumn("L03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL03);
                this.columnD03 = new global::System.Data.DataColumn("D03", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD03);
                this.columnF03 = new global::System.Data.DataColumn("F03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF03);
                this.columnL04 = new global::System.Data.DataColumn("L04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL04);
                this.columnD04 = new global::System.Data.DataColumn("D04", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD04);
                this.columnF04 = new global::System.Data.DataColumn("F04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF04);
                this.columnL05 = new global::System.Data.DataColumn("L05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL05);
                this.columnD05 = new global::System.Data.DataColumn("D05", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD05);
                this.columnF05 = new global::System.Data.DataColumn("F05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF05);
                this.columnL06 = new global::System.Data.DataColumn("L06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL06);
                this.columnD06 = new global::System.Data.DataColumn("D06", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD06);
                this.columnF06 = new global::System.Data.DataColumn("F06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF06);
                this.columnL07 = new global::System.Data.DataColumn("L07", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL07);
                this.columnD07 = new global::System.Data.DataColumn("D07", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD07);
                this.columnF07 = new global::System.Data.DataColumn("F07", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF07);
                this.columnL08 = new global::System.Data.DataColumn("L08", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL08);
                this.columnD08 = new global::System.Data.DataColumn("D08", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD08);
                this.columnF08 = new global::System.Data.DataColumn("F08", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF08);
                this.columnL09 = new global::System.Data.DataColumn("L09", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL09);
                this.columnD09 = new global::System.Data.DataColumn("D09", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD09);
                this.columnF09 = new global::System.Data.DataColumn("F09", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF09);
                this.columnL10 = new global::System.Data.DataColumn("L10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL10);
                this.columnD10 = new global::System.Data.DataColumn("D10", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD10);
                this.columnF10 = new global::System.Data.DataColumn("F10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF10);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnS01 = new global::System.Data.DataColumn("S01", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS01);
                this.columnS02 = new global::System.Data.DataColumn("S02", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS02);
                this.columnS03 = new global::System.Data.DataColumn("S03", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS03);
                this.columnS04 = new global::System.Data.DataColumn("S04", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS04);
                this.columnS05 = new global::System.Data.DataColumn("S05", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS05);
                this.columnS06 = new global::System.Data.DataColumn("S06", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS06);
                this.columnS07 = new global::System.Data.DataColumn("S07", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS07);
                this.columnS08 = new global::System.Data.DataColumn("S08", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS08);
                this.columnS09 = new global::System.Data.DataColumn("S09", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS09);
                this.columnS10 = new global::System.Data.DataColumn("S10", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS10);
                this.columnconversion = new global::System.Data.DataColumn("conversion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconversion);
                this.columnC01 = new global::System.Data.DataColumn("C01", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC01);
                this.columnC02 = new global::System.Data.DataColumn("C02", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC02);
                this.columnC03 = new global::System.Data.DataColumn("C03", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC03);
                this.columnC04 = new global::System.Data.DataColumn("C04", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC04);
                this.columnC05 = new global::System.Data.DataColumn("C05", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC05);
                this.columnC06 = new global::System.Data.DataColumn("C06", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC06);
                this.columnC07 = new global::System.Data.DataColumn("C07", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC07);
                this.columnC08 = new global::System.Data.DataColumn("C08", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC08);
                this.columnC09 = new global::System.Data.DataColumn("C09", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC09);
                this.columnC10 = new global::System.Data.DataColumn("C10", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC10);
                this.columnL11 = new global::System.Data.DataColumn("L11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL11);
                this.columnD11 = new global::System.Data.DataColumn("D11", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD11);
                this.columnS11 = new global::System.Data.DataColumn("S11", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS11);
                this.columnC11 = new global::System.Data.DataColumn("C11", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC11);
                this.columnF11 = new global::System.Data.DataColumn("F11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF11);
                this.columnL12 = new global::System.Data.DataColumn("L12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL12);
                this.columnD12 = new global::System.Data.DataColumn("D12", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD12);
                this.columnS12 = new global::System.Data.DataColumn("S12", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS12);
                this.columnC12 = new global::System.Data.DataColumn("C12", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC12);
                this.columnF12 = new global::System.Data.DataColumn("F12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF12);
                this.columnDeprTableID = new global::System.Data.DataColumn("DeprTableID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprTableID);
                this.columnWithPrimary = new global::System.Data.DataColumn("WithPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithPrimary);
                this.columnMICodeID.ReadOnly = true;
                this.columnRollYear.ReadOnly = true;
                this.columnMICode.ReadOnly = true;
                this.columnMICode.MaxLength = 10;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 40;
                this.columnVFormula.ReadOnly = true;
                this.columnVFormula.MaxLength = 1500;
                this.columnL01.ReadOnly = true;
                this.columnL01.MaxLength = 12;
                this.columnD01.ReadOnly = true;
                this.columnF01.ReadOnly = true;
                this.columnF01.MaxLength = 1500;
                this.columnL02.ReadOnly = true;
                this.columnL02.MaxLength = 12;
                this.columnD02.ReadOnly = true;
                this.columnF02.ReadOnly = true;
                this.columnF02.MaxLength = 1500;
                this.columnL03.ReadOnly = true;
                this.columnL03.MaxLength = 12;
                this.columnD03.ReadOnly = true;
                this.columnF03.ReadOnly = true;
                this.columnF03.MaxLength = 1500;
                this.columnL04.ReadOnly = true;
                this.columnL04.MaxLength = 12;
                this.columnD04.ReadOnly = true;
                this.columnF04.ReadOnly = true;
                this.columnF04.MaxLength = 1500;
                this.columnL05.ReadOnly = true;
                this.columnL05.MaxLength = 12;
                this.columnD05.ReadOnly = true;
                this.columnF05.ReadOnly = true;
                this.columnF05.MaxLength = 1500;
                this.columnL06.ReadOnly = true;
                this.columnL06.MaxLength = 12;
                this.columnD06.ReadOnly = true;
                this.columnF06.ReadOnly = true;
                this.columnF06.MaxLength = 1500;
                this.columnL07.ReadOnly = true;
                this.columnL07.MaxLength = 12;
                this.columnD07.ReadOnly = true;
                this.columnF07.ReadOnly = true;
                this.columnF07.MaxLength = 1500;
                this.columnL08.ReadOnly = true;
                this.columnL08.MaxLength = 12;
                this.columnD08.ReadOnly = true;
                this.columnF08.ReadOnly = true;
                this.columnF08.MaxLength = 1500;
                this.columnL09.ReadOnly = true;
                this.columnL09.MaxLength = 12;
                this.columnD09.ReadOnly = true;
                this.columnF09.ReadOnly = true;
                this.columnF09.MaxLength = 1500;
                this.columnL10.ReadOnly = true;
                this.columnL10.MaxLength = 12;
                this.columnD10.ReadOnly = true;
                this.columnF10.ReadOnly = true;
                this.columnF10.MaxLength = 1500;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnS01.ReadOnly = true;
                this.columnS02.ReadOnly = true;
                this.columnS03.ReadOnly = true;
                this.columnS04.ReadOnly = true;
                this.columnS05.ReadOnly = true;
                this.columnS06.ReadOnly = true;
                this.columnS07.ReadOnly = true;
                this.columnS08.ReadOnly = true;
                this.columnS09.ReadOnly = true;
                this.columnS10.ReadOnly = true;
                this.columnconversion.ReadOnly = true;
                this.columnconversion.MaxLength = 50;
                this.columnC01.ReadOnly = true;
                this.columnC02.ReadOnly = true;
                this.columnC03.ReadOnly = true;
                this.columnC04.ReadOnly = true;
                this.columnC05.ReadOnly = true;
                this.columnC06.ReadOnly = true;
                this.columnC07.ReadOnly = true;
                this.columnC08.ReadOnly = true;
                this.columnC09.ReadOnly = true;
                this.columnC10.ReadOnly = true;
                this.columnL11.ReadOnly = true;
                this.columnL11.MaxLength = 12;
                this.columnD11.ReadOnly = true;
                this.columnS11.ReadOnly = true;
                this.columnC11.ReadOnly = true;
                this.columnF11.ReadOnly = true;
                this.columnF11.MaxLength = 1500;
                this.columnL12.ReadOnly = true;
                this.columnL12.MaxLength = 12;
                this.columnD12.ReadOnly = true;
                this.columnS12.ReadOnly = true;
                this.columnC12.ReadOnly = true;
                this.columnF12.ReadOnly = true;
                this.columnF12.MaxLength = 1500;
                this.columnDeprTableID.ReadOnly = true;
                this.columnWithPrimary.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogRow NewtAA_Misc_CatalogRow() {
                return ((tAA_Misc_CatalogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_Misc_CatalogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_Misc_CatalogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_Misc_CatalogRowChanged != null)) {
                    this.tAA_Misc_CatalogRowChanged(this, new tAA_Misc_CatalogRowChangeEvent(((tAA_Misc_CatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_Misc_CatalogRowChanging != null)) {
                    this.tAA_Misc_CatalogRowChanging(this, new tAA_Misc_CatalogRowChangeEvent(((tAA_Misc_CatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_Misc_CatalogRowDeleted != null)) {
                    this.tAA_Misc_CatalogRowDeleted(this, new tAA_Misc_CatalogRowChangeEvent(((tAA_Misc_CatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_Misc_CatalogRowDeleting != null)) {
                    this.tAA_Misc_CatalogRowDeleting(this, new tAA_Misc_CatalogRowChangeEvent(((tAA_Misc_CatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_Misc_CatalogRow(tAA_Misc_CatalogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_Misc_CatalogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MiscDataTable : global::System.Data.TypedTableBase<tAA_MiscRow> {
            
            private global::System.Data.DataColumn columnMID;
            
            private global::System.Data.DataColumn columnValueSliceID;
            
            private global::System.Data.DataColumn columnMICodeID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnValueBase;
            
            private global::System.Data.DataColumn columnValueOveride;
            
            private global::System.Data.DataColumn columnDeprYearin;
            
            private global::System.Data.DataColumn columnDeprTableID;
            
            private global::System.Data.DataColumn columnDeprWithPrimary;
            
            private global::System.Data.DataColumn columnDeprPercent;
            
            private global::System.Data.DataColumn columnV01;
            
            private global::System.Data.DataColumn columnV02;
            
            private global::System.Data.DataColumn columnV03;
            
            private global::System.Data.DataColumn columnV04;
            
            private global::System.Data.DataColumn columnV05;
            
            private global::System.Data.DataColumn columnV06;
            
            private global::System.Data.DataColumn columnV07;
            
            private global::System.Data.DataColumn columnV08;
            
            private global::System.Data.DataColumn columnV09;
            
            private global::System.Data.DataColumn columnV10;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnDeprCondition;
            
            private global::System.Data.DataColumn columnDeprQuality;
            
            private global::System.Data.DataColumn columnDeprEconLife;
            
            private global::System.Data.DataColumn columnDeprEAge;
            
            private global::System.Data.DataColumn columnDeprFuncID;
            
            private global::System.Data.DataColumn columnDeprFuncPercent;
            
            private global::System.Data.DataColumn columnPhysDepr;
            
            private global::System.Data.DataColumn columnFuncDepr;
            
            private global::System.Data.DataColumn columnValueFinal;
            
            private global::System.Data.DataColumn columnV11;
            
            private global::System.Data.DataColumn columnV12;
            
            private global::System.Data.DataColumn columnMIChoiceID01;
            
            private global::System.Data.DataColumn columnMIChoiceID02;
            
            private global::System.Data.DataColumn columnMIChoiceID03;
            
            private global::System.Data.DataColumn columnMIChoiceID04;
            
            private global::System.Data.DataColumn columnMIChoiceID05;
            
            private global::System.Data.DataColumn columnMIChoiceID06;
            
            private global::System.Data.DataColumn columnMIChoiceID07;
            
            private global::System.Data.DataColumn columnMIChoiceID08;
            
            private global::System.Data.DataColumn columnMIChoiceID09;
            
            private global::System.Data.DataColumn columnMIChoiceID10;
            
            private global::System.Data.DataColumn columnMIChoiceID11;
            
            private global::System.Data.DataColumn columnMIChoiceID12;
            
            private global::System.Data.DataColumn columnPolygonID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscDataTable() {
                this.TableName = "tAA_Misc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MiscDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MiscDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIDColumn {
                get {
                    return this.columnMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueSliceIDColumn {
                get {
                    return this.columnValueSliceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MICodeIDColumn {
                get {
                    return this.columnMICodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueBaseColumn {
                get {
                    return this.columnValueBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueOverideColumn {
                get {
                    return this.columnValueOveride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprYearinColumn {
                get {
                    return this.columnDeprYearin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprTableIDColumn {
                get {
                    return this.columnDeprTableID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprWithPrimaryColumn {
                get {
                    return this.columnDeprWithPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprPercentColumn {
                get {
                    return this.columnDeprPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V01Column {
                get {
                    return this.columnV01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V02Column {
                get {
                    return this.columnV02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V03Column {
                get {
                    return this.columnV03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V04Column {
                get {
                    return this.columnV04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V05Column {
                get {
                    return this.columnV05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V06Column {
                get {
                    return this.columnV06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V07Column {
                get {
                    return this.columnV07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V08Column {
                get {
                    return this.columnV08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V09Column {
                get {
                    return this.columnV09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V10Column {
                get {
                    return this.columnV10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprConditionColumn {
                get {
                    return this.columnDeprCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprQualityColumn {
                get {
                    return this.columnDeprQuality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprEconLifeColumn {
                get {
                    return this.columnDeprEconLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprEAgeColumn {
                get {
                    return this.columnDeprEAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprFuncIDColumn {
                get {
                    return this.columnDeprFuncID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprFuncPercentColumn {
                get {
                    return this.columnDeprFuncPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhysDeprColumn {
                get {
                    return this.columnPhysDepr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FuncDeprColumn {
                get {
                    return this.columnFuncDepr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueFinalColumn {
                get {
                    return this.columnValueFinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V11Column {
                get {
                    return this.columnV11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V12Column {
                get {
                    return this.columnV12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID01Column {
                get {
                    return this.columnMIChoiceID01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID02Column {
                get {
                    return this.columnMIChoiceID02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID03Column {
                get {
                    return this.columnMIChoiceID03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID04Column {
                get {
                    return this.columnMIChoiceID04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID05Column {
                get {
                    return this.columnMIChoiceID05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID06Column {
                get {
                    return this.columnMIChoiceID06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID07Column {
                get {
                    return this.columnMIChoiceID07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID08Column {
                get {
                    return this.columnMIChoiceID08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID09Column {
                get {
                    return this.columnMIChoiceID09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID10Column {
                get {
                    return this.columnMIChoiceID10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID11Column {
                get {
                    return this.columnMIChoiceID11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceID12Column {
                get {
                    return this.columnMIChoiceID12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PolygonIDColumn {
                get {
                    return this.columnPolygonID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscRow this[int index] {
                get {
                    return ((tAA_MiscRow)(this.Rows[index]));
                }
            }
            
            public event tAA_MiscRowChangeEventHandler tAA_MiscRowChanging;
            
            public event tAA_MiscRowChangeEventHandler tAA_MiscRowChanged;
            
            public event tAA_MiscRowChangeEventHandler tAA_MiscRowDeleting;
            
            public event tAA_MiscRowChangeEventHandler tAA_MiscRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MiscRow(tAA_MiscRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscRow AddtAA_MiscRow(
                        int MID, 
                        int ValueSliceID, 
                        int MICodeID, 
                        string Description, 
                        int ValueBase, 
                        int ValueOveride, 
                        short DeprYearin, 
                        int DeprTableID, 
                        bool DeprWithPrimary, 
                        decimal DeprPercent, 
                        decimal V01, 
                        decimal V02, 
                        decimal V03, 
                        decimal V04, 
                        decimal V05, 
                        decimal V06, 
                        decimal V07, 
                        decimal V08, 
                        decimal V09, 
                        decimal V10, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        decimal DeprCondition, 
                        decimal DeprQuality, 
                        byte DeprEconLife, 
                        byte DeprEAge, 
                        byte DeprFuncID, 
                        decimal DeprFuncPercent, 
                        int PhysDepr, 
                        int FuncDepr, 
                        int ValueFinal, 
                        decimal V11, 
                        decimal V12, 
                        int MIChoiceID01, 
                        int MIChoiceID02, 
                        int MIChoiceID03, 
                        int MIChoiceID04, 
                        int MIChoiceID05, 
                        int MIChoiceID06, 
                        int MIChoiceID07, 
                        int MIChoiceID08, 
                        int MIChoiceID09, 
                        int MIChoiceID10, 
                        int MIChoiceID11, 
                        int MIChoiceID12, 
                        int PolygonID) {
                tAA_MiscRow rowtAA_MiscRow = ((tAA_MiscRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MID,
                        ValueSliceID,
                        MICodeID,
                        Description,
                        ValueBase,
                        ValueOveride,
                        DeprYearin,
                        DeprTableID,
                        DeprWithPrimary,
                        DeprPercent,
                        V01,
                        V02,
                        V03,
                        V04,
                        V05,
                        V06,
                        V07,
                        V08,
                        V09,
                        V10,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        DeprCondition,
                        DeprQuality,
                        DeprEconLife,
                        DeprEAge,
                        DeprFuncID,
                        DeprFuncPercent,
                        PhysDepr,
                        FuncDepr,
                        ValueFinal,
                        V11,
                        V12,
                        MIChoiceID01,
                        MIChoiceID02,
                        MIChoiceID03,
                        MIChoiceID04,
                        MIChoiceID05,
                        MIChoiceID06,
                        MIChoiceID07,
                        MIChoiceID08,
                        MIChoiceID09,
                        MIChoiceID10,
                        MIChoiceID11,
                        MIChoiceID12,
                        PolygonID};
                rowtAA_MiscRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MiscRow);
                return rowtAA_MiscRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MiscDataTable cln = ((tAA_MiscDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MiscDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMID = base.Columns["MID"];
                this.columnValueSliceID = base.Columns["ValueSliceID"];
                this.columnMICodeID = base.Columns["MICodeID"];
                this.columnDescription = base.Columns["Description"];
                this.columnValueBase = base.Columns["ValueBase"];
                this.columnValueOveride = base.Columns["ValueOveride"];
                this.columnDeprYearin = base.Columns["DeprYearin"];
                this.columnDeprTableID = base.Columns["DeprTableID"];
                this.columnDeprWithPrimary = base.Columns["DeprWithPrimary"];
                this.columnDeprPercent = base.Columns["DeprPercent"];
                this.columnV01 = base.Columns["V01"];
                this.columnV02 = base.Columns["V02"];
                this.columnV03 = base.Columns["V03"];
                this.columnV04 = base.Columns["V04"];
                this.columnV05 = base.Columns["V05"];
                this.columnV06 = base.Columns["V06"];
                this.columnV07 = base.Columns["V07"];
                this.columnV08 = base.Columns["V08"];
                this.columnV09 = base.Columns["V09"];
                this.columnV10 = base.Columns["V10"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnDeprCondition = base.Columns["DeprCondition"];
                this.columnDeprQuality = base.Columns["DeprQuality"];
                this.columnDeprEconLife = base.Columns["DeprEconLife"];
                this.columnDeprEAge = base.Columns["DeprEAge"];
                this.columnDeprFuncID = base.Columns["DeprFuncID"];
                this.columnDeprFuncPercent = base.Columns["DeprFuncPercent"];
                this.columnPhysDepr = base.Columns["PhysDepr"];
                this.columnFuncDepr = base.Columns["FuncDepr"];
                this.columnValueFinal = base.Columns["ValueFinal"];
                this.columnV11 = base.Columns["V11"];
                this.columnV12 = base.Columns["V12"];
                this.columnMIChoiceID01 = base.Columns["MIChoiceID01"];
                this.columnMIChoiceID02 = base.Columns["MIChoiceID02"];
                this.columnMIChoiceID03 = base.Columns["MIChoiceID03"];
                this.columnMIChoiceID04 = base.Columns["MIChoiceID04"];
                this.columnMIChoiceID05 = base.Columns["MIChoiceID05"];
                this.columnMIChoiceID06 = base.Columns["MIChoiceID06"];
                this.columnMIChoiceID07 = base.Columns["MIChoiceID07"];
                this.columnMIChoiceID08 = base.Columns["MIChoiceID08"];
                this.columnMIChoiceID09 = base.Columns["MIChoiceID09"];
                this.columnMIChoiceID10 = base.Columns["MIChoiceID10"];
                this.columnMIChoiceID11 = base.Columns["MIChoiceID11"];
                this.columnMIChoiceID12 = base.Columns["MIChoiceID12"];
                this.columnPolygonID = base.Columns["PolygonID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMID = new global::System.Data.DataColumn("MID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID);
                this.columnValueSliceID = new global::System.Data.DataColumn("ValueSliceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueSliceID);
                this.columnMICodeID = new global::System.Data.DataColumn("MICodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMICodeID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnValueBase = new global::System.Data.DataColumn("ValueBase", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueBase);
                this.columnValueOveride = new global::System.Data.DataColumn("ValueOveride", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueOveride);
                this.columnDeprYearin = new global::System.Data.DataColumn("DeprYearin", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprYearin);
                this.columnDeprTableID = new global::System.Data.DataColumn("DeprTableID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprTableID);
                this.columnDeprWithPrimary = new global::System.Data.DataColumn("DeprWithPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprWithPrimary);
                this.columnDeprPercent = new global::System.Data.DataColumn("DeprPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprPercent);
                this.columnV01 = new global::System.Data.DataColumn("V01", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV01);
                this.columnV02 = new global::System.Data.DataColumn("V02", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV02);
                this.columnV03 = new global::System.Data.DataColumn("V03", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV03);
                this.columnV04 = new global::System.Data.DataColumn("V04", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV04);
                this.columnV05 = new global::System.Data.DataColumn("V05", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV05);
                this.columnV06 = new global::System.Data.DataColumn("V06", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV06);
                this.columnV07 = new global::System.Data.DataColumn("V07", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV07);
                this.columnV08 = new global::System.Data.DataColumn("V08", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV08);
                this.columnV09 = new global::System.Data.DataColumn("V09", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV09);
                this.columnV10 = new global::System.Data.DataColumn("V10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV10);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnDeprCondition = new global::System.Data.DataColumn("DeprCondition", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprCondition);
                this.columnDeprQuality = new global::System.Data.DataColumn("DeprQuality", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprQuality);
                this.columnDeprEconLife = new global::System.Data.DataColumn("DeprEconLife", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprEconLife);
                this.columnDeprEAge = new global::System.Data.DataColumn("DeprEAge", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprEAge);
                this.columnDeprFuncID = new global::System.Data.DataColumn("DeprFuncID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprFuncID);
                this.columnDeprFuncPercent = new global::System.Data.DataColumn("DeprFuncPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprFuncPercent);
                this.columnPhysDepr = new global::System.Data.DataColumn("PhysDepr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysDepr);
                this.columnFuncDepr = new global::System.Data.DataColumn("FuncDepr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuncDepr);
                this.columnValueFinal = new global::System.Data.DataColumn("ValueFinal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueFinal);
                this.columnV11 = new global::System.Data.DataColumn("V11", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV11);
                this.columnV12 = new global::System.Data.DataColumn("V12", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV12);
                this.columnMIChoiceID01 = new global::System.Data.DataColumn("MIChoiceID01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID01);
                this.columnMIChoiceID02 = new global::System.Data.DataColumn("MIChoiceID02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID02);
                this.columnMIChoiceID03 = new global::System.Data.DataColumn("MIChoiceID03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID03);
                this.columnMIChoiceID04 = new global::System.Data.DataColumn("MIChoiceID04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID04);
                this.columnMIChoiceID05 = new global::System.Data.DataColumn("MIChoiceID05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID05);
                this.columnMIChoiceID06 = new global::System.Data.DataColumn("MIChoiceID06", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID06);
                this.columnMIChoiceID07 = new global::System.Data.DataColumn("MIChoiceID07", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID07);
                this.columnMIChoiceID08 = new global::System.Data.DataColumn("MIChoiceID08", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID08);
                this.columnMIChoiceID09 = new global::System.Data.DataColumn("MIChoiceID09", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID09);
                this.columnMIChoiceID10 = new global::System.Data.DataColumn("MIChoiceID10", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID10);
                this.columnMIChoiceID11 = new global::System.Data.DataColumn("MIChoiceID11", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID11);
                this.columnMIChoiceID12 = new global::System.Data.DataColumn("MIChoiceID12", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID12);
                this.columnPolygonID = new global::System.Data.DataColumn("PolygonID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolygonID);
                this.columnMID.ReadOnly = true;
                this.columnValueSliceID.ReadOnly = true;
                this.columnMICodeID.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 40;
                this.columnValueBase.ReadOnly = true;
                this.columnValueOveride.ReadOnly = true;
                this.columnDeprYearin.ReadOnly = true;
                this.columnDeprTableID.ReadOnly = true;
                this.columnDeprWithPrimary.ReadOnly = true;
                this.columnDeprPercent.ReadOnly = true;
                this.columnV01.ReadOnly = true;
                this.columnV02.ReadOnly = true;
                this.columnV03.ReadOnly = true;
                this.columnV04.ReadOnly = true;
                this.columnV05.ReadOnly = true;
                this.columnV06.ReadOnly = true;
                this.columnV07.ReadOnly = true;
                this.columnV08.ReadOnly = true;
                this.columnV09.ReadOnly = true;
                this.columnV10.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnDeprCondition.ReadOnly = true;
                this.columnDeprQuality.ReadOnly = true;
                this.columnDeprEconLife.ReadOnly = true;
                this.columnDeprEAge.ReadOnly = true;
                this.columnDeprFuncID.ReadOnly = true;
                this.columnDeprFuncPercent.ReadOnly = true;
                this.columnPhysDepr.ReadOnly = true;
                this.columnFuncDepr.ReadOnly = true;
                this.columnValueFinal.ReadOnly = true;
                this.columnV11.ReadOnly = true;
                this.columnV12.ReadOnly = true;
                this.columnMIChoiceID01.ReadOnly = true;
                this.columnMIChoiceID02.ReadOnly = true;
                this.columnMIChoiceID03.ReadOnly = true;
                this.columnMIChoiceID04.ReadOnly = true;
                this.columnMIChoiceID05.ReadOnly = true;
                this.columnMIChoiceID06.ReadOnly = true;
                this.columnMIChoiceID07.ReadOnly = true;
                this.columnMIChoiceID08.ReadOnly = true;
                this.columnMIChoiceID09.ReadOnly = true;
                this.columnMIChoiceID10.ReadOnly = true;
                this.columnMIChoiceID11.ReadOnly = true;
                this.columnMIChoiceID12.ReadOnly = true;
                this.columnPolygonID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscRow NewtAA_MiscRow() {
                return ((tAA_MiscRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MiscRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MiscRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MiscRowChanged != null)) {
                    this.tAA_MiscRowChanged(this, new tAA_MiscRowChangeEvent(((tAA_MiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MiscRowChanging != null)) {
                    this.tAA_MiscRowChanging(this, new tAA_MiscRowChangeEvent(((tAA_MiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MiscRowDeleted != null)) {
                    this.tAA_MiscRowDeleted(this, new tAA_MiscRowChangeEvent(((tAA_MiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MiscRowDeleting != null)) {
                    this.tAA_MiscRowDeleting(this, new tAA_MiscRowChangeEvent(((tAA_MiscRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MiscRow(tAA_MiscRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MiscDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_UnitDataTable : global::System.Data.TypedTableBase<tTS_UnitRow> {
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UnitDataTable() {
                this.TableName = "tTS_Unit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_UnitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_UnitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UnitRow this[int index] {
                get {
                    return ((tTS_UnitRow)(this.Rows[index]));
                }
            }
            
            public event tTS_UnitRowChangeEventHandler tTS_UnitRowChanging;
            
            public event tTS_UnitRowChangeEventHandler tTS_UnitRowChanged;
            
            public event tTS_UnitRowChangeEventHandler tTS_UnitRowDeleting;
            
            public event tTS_UnitRowChangeEventHandler tTS_UnitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_UnitRow(tTS_UnitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UnitRow AddtTS_UnitRow(int UnitID, string Unit, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_UnitRow rowtTS_UnitRow = ((tTS_UnitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UnitID,
                        Unit,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_UnitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_UnitRow);
                return rowtTS_UnitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_UnitDataTable cln = ((tTS_UnitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_UnitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUnitID = base.Columns["UnitID"];
                this.columnUnit = base.Columns["Unit"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnUnitID.ReadOnly = true;
                this.columnUnit.ReadOnly = true;
                this.columnUnit.MaxLength = 50;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UnitRow NewtTS_UnitRow() {
                return ((tTS_UnitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_UnitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_UnitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_UnitRowChanged != null)) {
                    this.tTS_UnitRowChanged(this, new tTS_UnitRowChangeEvent(((tTS_UnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_UnitRowChanging != null)) {
                    this.tTS_UnitRowChanging(this, new tTS_UnitRowChangeEvent(((tTS_UnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_UnitRowDeleted != null)) {
                    this.tTS_UnitRowDeleted(this, new tTS_UnitRowChangeEvent(((tTS_UnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_UnitRowDeleting != null)) {
                    this.tTS_UnitRowDeleting(this, new tTS_UnitRowChangeEvent(((tTS_UnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_UnitRow(tTS_UnitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_UnitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_StreetListDataTable : global::System.Data.TypedTableBase<tTS_StreetListRow> {
            
            private global::System.Data.DataColumn columnStreetID;
            
            private global::System.Data.DataColumn columnRootName;
            
            private global::System.Data.DataColumn columnSuffix;
            
            private global::System.Data.DataColumn columnDirectional;
            
            private global::System.Data.DataColumn columnStreetName;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnZipCode;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_StreetListDataTable() {
                this.TableName = "tTS_StreetList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_StreetListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_StreetListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetIDColumn {
                get {
                    return this.columnStreetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RootNameColumn {
                get {
                    return this.columnRootName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuffixColumn {
                get {
                    return this.columnSuffix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DirectionalColumn {
                get {
                    return this.columnDirectional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetNameColumn {
                get {
                    return this.columnStreetName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipCodeColumn {
                get {
                    return this.columnZipCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_StreetListRow this[int index] {
                get {
                    return ((tTS_StreetListRow)(this.Rows[index]));
                }
            }
            
            public event tTS_StreetListRowChangeEventHandler tTS_StreetListRowChanging;
            
            public event tTS_StreetListRowChangeEventHandler tTS_StreetListRowChanged;
            
            public event tTS_StreetListRowChangeEventHandler tTS_StreetListRowDeleting;
            
            public event tTS_StreetListRowChangeEventHandler tTS_StreetListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_StreetListRow(tTS_StreetListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_StreetListRow AddtTS_StreetListRow(int StreetID, string RootName, string Suffix, string Directional, string StreetName, string City, string ZipCode, int ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_StreetListRow rowtTS_StreetListRow = ((tTS_StreetListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StreetID,
                        RootName,
                        Suffix,
                        Directional,
                        StreetName,
                        City,
                        ZipCode,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_StreetListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_StreetListRow);
                return rowtTS_StreetListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_StreetListDataTable cln = ((tTS_StreetListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_StreetListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStreetID = base.Columns["StreetID"];
                this.columnRootName = base.Columns["RootName"];
                this.columnSuffix = base.Columns["Suffix"];
                this.columnDirectional = base.Columns["Directional"];
                this.columnStreetName = base.Columns["StreetName"];
                this.columnCity = base.Columns["City"];
                this.columnZipCode = base.Columns["ZipCode"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStreetID = new global::System.Data.DataColumn("StreetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetID);
                this.columnRootName = new global::System.Data.DataColumn("RootName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRootName);
                this.columnSuffix = new global::System.Data.DataColumn("Suffix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuffix);
                this.columnDirectional = new global::System.Data.DataColumn("Directional", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectional);
                this.columnStreetName = new global::System.Data.DataColumn("StreetName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetName);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnZipCode = new global::System.Data.DataColumn("ZipCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZipCode);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnStreetID.ReadOnly = true;
                this.columnRootName.ReadOnly = true;
                this.columnRootName.MaxLength = 50;
                this.columnSuffix.ReadOnly = true;
                this.columnSuffix.MaxLength = 10;
                this.columnDirectional.ReadOnly = true;
                this.columnDirectional.MaxLength = 10;
                this.columnStreetName.ReadOnly = true;
                this.columnStreetName.MaxLength = 100;
                this.columnCity.ReadOnly = true;
                this.columnCity.MaxLength = 150;
                this.columnZipCode.ReadOnly = true;
                this.columnZipCode.MaxLength = 20;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_StreetListRow NewtTS_StreetListRow() {
                return ((tTS_StreetListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_StreetListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_StreetListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_StreetListRowChanged != null)) {
                    this.tTS_StreetListRowChanged(this, new tTS_StreetListRowChangeEvent(((tTS_StreetListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_StreetListRowChanging != null)) {
                    this.tTS_StreetListRowChanging(this, new tTS_StreetListRowChangeEvent(((tTS_StreetListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_StreetListRowDeleted != null)) {
                    this.tTS_StreetListRowDeleted(this, new tTS_StreetListRowChangeEvent(((tTS_StreetListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_StreetListRowDeleting != null)) {
                    this.tTS_StreetListRowDeleting(this, new tTS_StreetListRowChangeEvent(((tTS_StreetListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_StreetListRow(tTS_StreetListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_StreetListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tGD_FeatureClassDataTable : global::System.Data.TypedTableBase<tGD_FeatureClassRow> {
            
            private global::System.Data.DataColumn columnFeatureClassID;
            
            private global::System.Data.DataColumn columnFeatureClass;
            
            private global::System.Data.DataColumn columnSystemID;
            
            private global::System.Data.DataColumn columnGISLayerName;
            
            private global::System.Data.DataColumn columnGISKeyField;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnIsWorkOrder;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_FeatureClassDataTable() {
                this.TableName = "tGD_FeatureClass";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tGD_FeatureClassDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tGD_FeatureClassDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeatureClassIDColumn {
                get {
                    return this.columnFeatureClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeatureClassColumn {
                get {
                    return this.columnFeatureClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SystemIDColumn {
                get {
                    return this.columnSystemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GISLayerNameColumn {
                get {
                    return this.columnGISLayerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GISKeyFieldColumn {
                get {
                    return this.columnGISKeyField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsWorkOrderColumn {
                get {
                    return this.columnIsWorkOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_FeatureClassRow this[int index] {
                get {
                    return ((tGD_FeatureClassRow)(this.Rows[index]));
                }
            }
            
            public event tGD_FeatureClassRowChangeEventHandler tGD_FeatureClassRowChanging;
            
            public event tGD_FeatureClassRowChangeEventHandler tGD_FeatureClassRowChanged;
            
            public event tGD_FeatureClassRowChangeEventHandler tGD_FeatureClassRowDeleting;
            
            public event tGD_FeatureClassRowChangeEventHandler tGD_FeatureClassRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtGD_FeatureClassRow(tGD_FeatureClassRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_FeatureClassRow AddtGD_FeatureClassRow(int FeatureClassID, string FeatureClass, short SystemID, string GISLayerName, string GISKeyField, bool IsActive, bool IsWorkOrder, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tGD_FeatureClassRow rowtGD_FeatureClassRow = ((tGD_FeatureClassRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FeatureClassID,
                        FeatureClass,
                        SystemID,
                        GISLayerName,
                        GISKeyField,
                        IsActive,
                        IsWorkOrder,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtGD_FeatureClassRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtGD_FeatureClassRow);
                return rowtGD_FeatureClassRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tGD_FeatureClassDataTable cln = ((tGD_FeatureClassDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tGD_FeatureClassDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFeatureClassID = base.Columns["FeatureClassID"];
                this.columnFeatureClass = base.Columns["FeatureClass"];
                this.columnSystemID = base.Columns["SystemID"];
                this.columnGISLayerName = base.Columns["GISLayerName"];
                this.columnGISKeyField = base.Columns["GISKeyField"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnIsWorkOrder = base.Columns["IsWorkOrder"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFeatureClassID = new global::System.Data.DataColumn("FeatureClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeatureClassID);
                this.columnFeatureClass = new global::System.Data.DataColumn("FeatureClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeatureClass);
                this.columnSystemID = new global::System.Data.DataColumn("SystemID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemID);
                this.columnGISLayerName = new global::System.Data.DataColumn("GISLayerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGISLayerName);
                this.columnGISKeyField = new global::System.Data.DataColumn("GISKeyField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGISKeyField);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnIsWorkOrder = new global::System.Data.DataColumn("IsWorkOrder", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsWorkOrder);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnFeatureClassID.ReadOnly = true;
                this.columnFeatureClass.ReadOnly = true;
                this.columnFeatureClass.MaxLength = 50;
                this.columnSystemID.ReadOnly = true;
                this.columnGISLayerName.ReadOnly = true;
                this.columnGISLayerName.MaxLength = 50;
                this.columnGISKeyField.ReadOnly = true;
                this.columnGISKeyField.MaxLength = 20;
                this.columnIsActive.ReadOnly = true;
                this.columnIsWorkOrder.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_FeatureClassRow NewtGD_FeatureClassRow() {
                return ((tGD_FeatureClassRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tGD_FeatureClassRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tGD_FeatureClassRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tGD_FeatureClassRowChanged != null)) {
                    this.tGD_FeatureClassRowChanged(this, new tGD_FeatureClassRowChangeEvent(((tGD_FeatureClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tGD_FeatureClassRowChanging != null)) {
                    this.tGD_FeatureClassRowChanging(this, new tGD_FeatureClassRowChangeEvent(((tGD_FeatureClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tGD_FeatureClassRowDeleted != null)) {
                    this.tGD_FeatureClassRowDeleted(this, new tGD_FeatureClassRowChangeEvent(((tGD_FeatureClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tGD_FeatureClassRowDeleting != null)) {
                    this.tGD_FeatureClassRowDeleting(this, new tGD_FeatureClassRowChangeEvent(((tGD_FeatureClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetGD_FeatureClassRow(tGD_FeatureClassRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tGD_FeatureClassDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tGD_EventTypeDataTable : global::System.Data.TypedTableBase<tGD_EventTypeRow> {
            
            private global::System.Data.DataColumn columnEventTypeID;
            
            private global::System.Data.DataColumn columnFeatureClassID;
            
            private global::System.Data.DataColumn columnEventType;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventTypeDataTable() {
                this.TableName = "tGD_EventType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tGD_EventTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tGD_EventTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventTypeIDColumn {
                get {
                    return this.columnEventTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeatureClassIDColumn {
                get {
                    return this.columnFeatureClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventTypeColumn {
                get {
                    return this.columnEventType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventTypeRow this[int index] {
                get {
                    return ((tGD_EventTypeRow)(this.Rows[index]));
                }
            }
            
            public event tGD_EventTypeRowChangeEventHandler tGD_EventTypeRowChanging;
            
            public event tGD_EventTypeRowChangeEventHandler tGD_EventTypeRowChanged;
            
            public event tGD_EventTypeRowChangeEventHandler tGD_EventTypeRowDeleting;
            
            public event tGD_EventTypeRowChangeEventHandler tGD_EventTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtGD_EventTypeRow(tGD_EventTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventTypeRow AddtGD_EventTypeRow(int EventTypeID, int FeatureClassID, string EventType, bool IsActive, string Comment, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tGD_EventTypeRow rowtGD_EventTypeRow = ((tGD_EventTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EventTypeID,
                        FeatureClassID,
                        EventType,
                        IsActive,
                        Comment,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtGD_EventTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtGD_EventTypeRow);
                return rowtGD_EventTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tGD_EventTypeDataTable cln = ((tGD_EventTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tGD_EventTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEventTypeID = base.Columns["EventTypeID"];
                this.columnFeatureClassID = base.Columns["FeatureClassID"];
                this.columnEventType = base.Columns["EventType"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnComment = base.Columns["Comment"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEventTypeID = new global::System.Data.DataColumn("EventTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventTypeID);
                this.columnFeatureClassID = new global::System.Data.DataColumn("FeatureClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeatureClassID);
                this.columnEventType = new global::System.Data.DataColumn("EventType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventType);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnEventTypeID.ReadOnly = true;
                this.columnFeatureClassID.ReadOnly = true;
                this.columnEventType.ReadOnly = true;
                this.columnEventType.MaxLength = 50;
                this.columnIsActive.ReadOnly = true;
                this.columnComment.ReadOnly = true;
                this.columnComment.MaxLength = 50;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventTypeRow NewtGD_EventTypeRow() {
                return ((tGD_EventTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tGD_EventTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tGD_EventTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tGD_EventTypeRowChanged != null)) {
                    this.tGD_EventTypeRowChanged(this, new tGD_EventTypeRowChangeEvent(((tGD_EventTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tGD_EventTypeRowChanging != null)) {
                    this.tGD_EventTypeRowChanging(this, new tGD_EventTypeRowChangeEvent(((tGD_EventTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tGD_EventTypeRowDeleted != null)) {
                    this.tGD_EventTypeRowDeleted(this, new tGD_EventTypeRowChangeEvent(((tGD_EventTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tGD_EventTypeRowDeleting != null)) {
                    this.tGD_EventTypeRowDeleting(this, new tGD_EventTypeRowChangeEvent(((tGD_EventTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetGD_EventTypeRow(tGD_EventTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tGD_EventTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tGD_EG_StatusDataTable : global::System.Data.TypedTableBase<tGD_EG_StatusRow> {
            
            private global::System.Data.DataColumn columnStatusID;
            
            private global::System.Data.DataColumn columnFeatureClassID;
            
            private global::System.Data.DataColumn columnStatusColor;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EG_StatusDataTable() {
                this.TableName = "tGD_EG_Status";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tGD_EG_StatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tGD_EG_StatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusIDColumn {
                get {
                    return this.columnStatusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeatureClassIDColumn {
                get {
                    return this.columnFeatureClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColorColumn {
                get {
                    return this.columnStatusColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EG_StatusRow this[int index] {
                get {
                    return ((tGD_EG_StatusRow)(this.Rows[index]));
                }
            }
            
            public event tGD_EG_StatusRowChangeEventHandler tGD_EG_StatusRowChanging;
            
            public event tGD_EG_StatusRowChangeEventHandler tGD_EG_StatusRowChanged;
            
            public event tGD_EG_StatusRowChangeEventHandler tGD_EG_StatusRowDeleting;
            
            public event tGD_EG_StatusRowChangeEventHandler tGD_EG_StatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtGD_EG_StatusRow(tGD_EG_StatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EG_StatusRow AddtGD_EG_StatusRow(int StatusID, int FeatureClassID, string StatusColor, string Status, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tGD_EG_StatusRow rowtGD_EG_StatusRow = ((tGD_EG_StatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StatusID,
                        FeatureClassID,
                        StatusColor,
                        Status,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtGD_EG_StatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtGD_EG_StatusRow);
                return rowtGD_EG_StatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tGD_EG_StatusDataTable cln = ((tGD_EG_StatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tGD_EG_StatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStatusID = base.Columns["StatusID"];
                this.columnFeatureClassID = base.Columns["FeatureClassID"];
                this.columnStatusColor = base.Columns["StatusColor"];
                this.columnStatus = base.Columns["Status"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStatusID = new global::System.Data.DataColumn("StatusID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusID);
                this.columnFeatureClassID = new global::System.Data.DataColumn("FeatureClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeatureClassID);
                this.columnStatusColor = new global::System.Data.DataColumn("StatusColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusColor);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnStatusID.ReadOnly = true;
                this.columnFeatureClassID.ReadOnly = true;
                this.columnStatusColor.ReadOnly = true;
                this.columnStatusColor.MaxLength = 50;
                this.columnStatus.ReadOnly = true;
                this.columnStatus.MaxLength = 50;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EG_StatusRow NewtGD_EG_StatusRow() {
                return ((tGD_EG_StatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tGD_EG_StatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tGD_EG_StatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tGD_EG_StatusRowChanged != null)) {
                    this.tGD_EG_StatusRowChanged(this, new tGD_EG_StatusRowChangeEvent(((tGD_EG_StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tGD_EG_StatusRowChanging != null)) {
                    this.tGD_EG_StatusRowChanging(this, new tGD_EG_StatusRowChangeEvent(((tGD_EG_StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tGD_EG_StatusRowDeleted != null)) {
                    this.tGD_EG_StatusRowDeleted(this, new tGD_EG_StatusRowChangeEvent(((tGD_EG_StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tGD_EG_StatusRowDeleting != null)) {
                    this.tGD_EG_StatusRowDeleting(this, new tGD_EG_StatusRowChangeEvent(((tGD_EG_StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetGD_EG_StatusRow(tGD_EG_StatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tGD_EG_StatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tGD_EventDataTable : global::System.Data.TypedTableBase<tGD_EventRow> {
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnPEventID;
            
            private global::System.Data.DataColumn columnEventNumber;
            
            private global::System.Data.DataColumn columnFeatureID;
            
            private global::System.Data.DataColumn columnEventTypeID;
            
            private global::System.Data.DataColumn columnWOID;
            
            private global::System.Data.DataColumn columnEventDate;
            
            private global::System.Data.DataColumn columnStatusID;
            
            private global::System.Data.DataColumn columnIsComplete;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnconversion;
            
            private global::System.Data.DataColumn columnEndDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventDataTable() {
                this.TableName = "tGD_Event";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tGD_EventDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tGD_EventDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PEventIDColumn {
                get {
                    return this.columnPEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventNumberColumn {
                get {
                    return this.columnEventNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeatureIDColumn {
                get {
                    return this.columnFeatureID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventTypeIDColumn {
                get {
                    return this.columnEventTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WOIDColumn {
                get {
                    return this.columnWOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventDateColumn {
                get {
                    return this.columnEventDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusIDColumn {
                get {
                    return this.columnStatusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCompleteColumn {
                get {
                    return this.columnIsComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conversionColumn {
                get {
                    return this.columnconversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventRow this[int index] {
                get {
                    return ((tGD_EventRow)(this.Rows[index]));
                }
            }
            
            public event tGD_EventRowChangeEventHandler tGD_EventRowChanging;
            
            public event tGD_EventRowChangeEventHandler tGD_EventRowChanged;
            
            public event tGD_EventRowChangeEventHandler tGD_EventRowDeleting;
            
            public event tGD_EventRowChangeEventHandler tGD_EventRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtGD_EventRow(tGD_EventRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventRow AddtGD_EventRow(
                        int EventID, 
                        int PEventID, 
                        string EventNumber, 
                        int FeatureID, 
                        int EventTypeID, 
                        int WOID, 
                        System.DateTime EventDate, 
                        int StatusID, 
                        bool IsComplete, 
                        string Description, 
                        short ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        string conversion, 
                        System.DateTime EndDate) {
                tGD_EventRow rowtGD_EventRow = ((tGD_EventRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EventID,
                        PEventID,
                        EventNumber,
                        FeatureID,
                        EventTypeID,
                        WOID,
                        EventDate,
                        StatusID,
                        IsComplete,
                        Description,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        conversion,
                        EndDate};
                rowtGD_EventRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtGD_EventRow);
                return rowtGD_EventRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tGD_EventDataTable cln = ((tGD_EventDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tGD_EventDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEventID = base.Columns["EventID"];
                this.columnPEventID = base.Columns["PEventID"];
                this.columnEventNumber = base.Columns["EventNumber"];
                this.columnFeatureID = base.Columns["FeatureID"];
                this.columnEventTypeID = base.Columns["EventTypeID"];
                this.columnWOID = base.Columns["WOID"];
                this.columnEventDate = base.Columns["EventDate"];
                this.columnStatusID = base.Columns["StatusID"];
                this.columnIsComplete = base.Columns["IsComplete"];
                this.columnDescription = base.Columns["Description"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnconversion = base.Columns["conversion"];
                this.columnEndDate = base.Columns["EndDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnPEventID = new global::System.Data.DataColumn("PEventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEventID);
                this.columnEventNumber = new global::System.Data.DataColumn("EventNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventNumber);
                this.columnFeatureID = new global::System.Data.DataColumn("FeatureID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeatureID);
                this.columnEventTypeID = new global::System.Data.DataColumn("EventTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventTypeID);
                this.columnWOID = new global::System.Data.DataColumn("WOID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWOID);
                this.columnEventDate = new global::System.Data.DataColumn("EventDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventDate);
                this.columnStatusID = new global::System.Data.DataColumn("StatusID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusID);
                this.columnIsComplete = new global::System.Data.DataColumn("IsComplete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsComplete);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnconversion = new global::System.Data.DataColumn("conversion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconversion);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnEventID.ReadOnly = true;
                this.columnPEventID.ReadOnly = true;
                this.columnEventNumber.ReadOnly = true;
                this.columnEventNumber.MaxLength = 50;
                this.columnFeatureID.ReadOnly = true;
                this.columnEventTypeID.ReadOnly = true;
                this.columnWOID.ReadOnly = true;
                this.columnEventDate.ReadOnly = true;
                this.columnStatusID.ReadOnly = true;
                this.columnIsComplete.ReadOnly = true;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 100;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnconversion.ReadOnly = true;
                this.columnconversion.MaxLength = 100;
                this.columnEndDate.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventRow NewtGD_EventRow() {
                return ((tGD_EventRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tGD_EventRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tGD_EventRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tGD_EventRowChanged != null)) {
                    this.tGD_EventRowChanged(this, new tGD_EventRowChangeEvent(((tGD_EventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tGD_EventRowChanging != null)) {
                    this.tGD_EventRowChanging(this, new tGD_EventRowChangeEvent(((tGD_EventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tGD_EventRowDeleted != null)) {
                    this.tGD_EventRowDeleted(this, new tGD_EventRowChangeEvent(((tGD_EventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tGD_EventRowDeleting != null)) {
                    this.tGD_EventRowDeleting(this, new tGD_EventRowChangeEvent(((tGD_EventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetGD_EventRow(tGD_EventRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tGD_EventDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_UserGroupDataTable : global::System.Data.TypedTableBase<tTS_UserGroupRow> {
            
            private global::System.Data.DataColumn columnGroupID;
            
            private global::System.Data.DataColumn columnGroupName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnApplicationID;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserGroupDataTable() {
                this.TableName = "tTS_UserGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_UserGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_UserGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupIDColumn {
                get {
                    return this.columnGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupNameColumn {
                get {
                    return this.columnGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicationIDColumn {
                get {
                    return this.columnApplicationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserGroupRow this[int index] {
                get {
                    return ((tTS_UserGroupRow)(this.Rows[index]));
                }
            }
            
            public event tTS_UserGroupRowChangeEventHandler tTS_UserGroupRowChanging;
            
            public event tTS_UserGroupRowChangeEventHandler tTS_UserGroupRowChanged;
            
            public event tTS_UserGroupRowChangeEventHandler tTS_UserGroupRowDeleting;
            
            public event tTS_UserGroupRowChangeEventHandler tTS_UserGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_UserGroupRow(tTS_UserGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserGroupRow AddtTS_UserGroupRow(short GroupID, string GroupName, string Description, byte ApplicationID, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_UserGroupRow rowtTS_UserGroupRow = ((tTS_UserGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GroupID,
                        GroupName,
                        Description,
                        ApplicationID,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_UserGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_UserGroupRow);
                return rowtTS_UserGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_UserGroupDataTable cln = ((tTS_UserGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_UserGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGroupID = base.Columns["GroupID"];
                this.columnGroupName = base.Columns["GroupName"];
                this.columnDescription = base.Columns["Description"];
                this.columnApplicationID = base.Columns["ApplicationID"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGroupID = new global::System.Data.DataColumn("GroupID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupID);
                this.columnGroupName = new global::System.Data.DataColumn("GroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnApplicationID = new global::System.Data.DataColumn("ApplicationID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationID);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnGroupID.ReadOnly = true;
                this.columnGroupName.ReadOnly = true;
                this.columnGroupName.MaxLength = 50;
                this.columnDescription.ReadOnly = true;
                this.columnDescription.MaxLength = 100;
                this.columnApplicationID.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserGroupRow NewtTS_UserGroupRow() {
                return ((tTS_UserGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_UserGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_UserGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_UserGroupRowChanged != null)) {
                    this.tTS_UserGroupRowChanged(this, new tTS_UserGroupRowChangeEvent(((tTS_UserGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_UserGroupRowChanging != null)) {
                    this.tTS_UserGroupRowChanging(this, new tTS_UserGroupRowChangeEvent(((tTS_UserGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_UserGroupRowDeleted != null)) {
                    this.tTS_UserGroupRowDeleted(this, new tTS_UserGroupRowChangeEvent(((tTS_UserGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_UserGroupRowDeleting != null)) {
                    this.tTS_UserGroupRowDeleting(this, new tTS_UserGroupRowChangeEvent(((tTS_UserGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_UserGroupRow(tTS_UserGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_UserGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_UserDataTable : global::System.Data.TypedTableBase<tTS_UserRow> {
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnName_Display;
            
            private global::System.Data.DataColumn columnName_Full;
            
            private global::System.Data.DataColumn columnName_Net;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnIsAdministrator;
            
            private global::System.Data.DataColumn columnApplicationID;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserDataTable() {
                this.TableName = "tTS_User";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_UserDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_UserDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name_DisplayColumn {
                get {
                    return this.columnName_Display;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name_FullColumn {
                get {
                    return this.columnName_Full;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name_NetColumn {
                get {
                    return this.columnName_Net;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAdministratorColumn {
                get {
                    return this.columnIsAdministrator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicationIDColumn {
                get {
                    return this.columnApplicationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserRow this[int index] {
                get {
                    return ((tTS_UserRow)(this.Rows[index]));
                }
            }
            
            public event tTS_UserRowChangeEventHandler tTS_UserRowChanging;
            
            public event tTS_UserRowChangeEventHandler tTS_UserRowChanged;
            
            public event tTS_UserRowChangeEventHandler tTS_UserRowDeleting;
            
            public event tTS_UserRowChangeEventHandler tTS_UserRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_UserRow(tTS_UserRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserRow AddtTS_UserRow(int UserID, string Name_Display, string Name_Full, string Name_Net, string Email, float Rate, bool IsActive, bool IsAdministrator, byte ApplicationID, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_UserRow rowtTS_UserRow = ((tTS_UserRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UserID,
                        Name_Display,
                        Name_Full,
                        Name_Net,
                        Email,
                        Rate,
                        IsActive,
                        IsAdministrator,
                        ApplicationID,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_UserRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_UserRow);
                return rowtTS_UserRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_UserDataTable cln = ((tTS_UserDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_UserDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserID = base.Columns["UserID"];
                this.columnName_Display = base.Columns["Name_Display"];
                this.columnName_Full = base.Columns["Name_Full"];
                this.columnName_Net = base.Columns["Name_Net"];
                this.columnEmail = base.Columns["Email"];
                this.columnRate = base.Columns["Rate"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnIsAdministrator = base.Columns["IsAdministrator"];
                this.columnApplicationID = base.Columns["ApplicationID"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnName_Display = new global::System.Data.DataColumn("Name_Display", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName_Display);
                this.columnName_Full = new global::System.Data.DataColumn("Name_Full", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName_Full);
                this.columnName_Net = new global::System.Data.DataColumn("Name_Net", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName_Net);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnIsAdministrator = new global::System.Data.DataColumn("IsAdministrator", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAdministrator);
                this.columnApplicationID = new global::System.Data.DataColumn("ApplicationID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationID);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnUserID.ReadOnly = true;
                this.columnName_Display.ReadOnly = true;
                this.columnName_Display.MaxLength = 50;
                this.columnName_Full.ReadOnly = true;
                this.columnName_Full.MaxLength = 50;
                this.columnName_Net.ReadOnly = true;
                this.columnName_Net.MaxLength = 50;
                this.columnEmail.ReadOnly = true;
                this.columnEmail.MaxLength = 50;
                this.columnRate.ReadOnly = true;
                this.columnIsActive.ReadOnly = true;
                this.columnIsAdministrator.ReadOnly = true;
                this.columnApplicationID.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserRow NewtTS_UserRow() {
                return ((tTS_UserRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_UserRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_UserRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_UserRowChanged != null)) {
                    this.tTS_UserRowChanged(this, new tTS_UserRowChangeEvent(((tTS_UserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_UserRowChanging != null)) {
                    this.tTS_UserRowChanging(this, new tTS_UserRowChangeEvent(((tTS_UserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_UserRowDeleted != null)) {
                    this.tTS_UserRowDeleted(this, new tTS_UserRowChangeEvent(((tTS_UserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_UserRowDeleting != null)) {
                    this.tTS_UserRowDeleting(this, new tTS_UserRowChangeEvent(((tTS_UserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_UserRow(tTS_UserRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_UserDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_User2GroupDataTable : global::System.Data.TypedTableBase<tTS_User2GroupRow> {
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnGroupID;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_User2GroupDataTable() {
                this.TableName = "tTS_User2Group";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_User2GroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_User2GroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupIDColumn {
                get {
                    return this.columnGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_User2GroupRow this[int index] {
                get {
                    return ((tTS_User2GroupRow)(this.Rows[index]));
                }
            }
            
            public event tTS_User2GroupRowChangeEventHandler tTS_User2GroupRowChanging;
            
            public event tTS_User2GroupRowChangeEventHandler tTS_User2GroupRowChanged;
            
            public event tTS_User2GroupRowChangeEventHandler tTS_User2GroupRowDeleting;
            
            public event tTS_User2GroupRowChangeEventHandler tTS_User2GroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_User2GroupRow(tTS_User2GroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_User2GroupRow AddtTS_User2GroupRow(int UserID, short GroupID, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_User2GroupRow rowtTS_User2GroupRow = ((tTS_User2GroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UserID,
                        GroupID,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_User2GroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_User2GroupRow);
                return rowtTS_User2GroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_User2GroupDataTable cln = ((tTS_User2GroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_User2GroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserID = base.Columns["UserID"];
                this.columnGroupID = base.Columns["GroupID"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnGroupID = new global::System.Data.DataColumn("GroupID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupID);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnUserID.ReadOnly = true;
                this.columnGroupID.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_User2GroupRow NewtTS_User2GroupRow() {
                return ((tTS_User2GroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_User2GroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_User2GroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_User2GroupRowChanged != null)) {
                    this.tTS_User2GroupRowChanged(this, new tTS_User2GroupRowChangeEvent(((tTS_User2GroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_User2GroupRowChanging != null)) {
                    this.tTS_User2GroupRowChanging(this, new tTS_User2GroupRowChangeEvent(((tTS_User2GroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_User2GroupRowDeleted != null)) {
                    this.tTS_User2GroupRowDeleted(this, new tTS_User2GroupRowChangeEvent(((tTS_User2GroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_User2GroupRowDeleting != null)) {
                    this.tTS_User2GroupRowDeleting(this, new tTS_User2GroupRowChangeEvent(((tTS_User2GroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_User2GroupRow(tTS_User2GroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_User2GroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_UserPermissionDataTable : global::System.Data.TypedTableBase<tTS_UserPermissionRow> {
            
            private global::System.Data.DataColumn columnGroupID;
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnIsPermissionMenu;
            
            private global::System.Data.DataColumn columnIsPermissionOpen;
            
            private global::System.Data.DataColumn columnIsPermissionAdd;
            
            private global::System.Data.DataColumn columnIsPermissionEdit;
            
            private global::System.Data.DataColumn columnIsPermissionDelete;
            
            private global::System.Data.DataColumn columnApplicationID;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserPermissionDataTable() {
                this.TableName = "tTS_UserPermission";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_UserPermissionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_UserPermissionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupIDColumn {
                get {
                    return this.columnGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPermissionMenuColumn {
                get {
                    return this.columnIsPermissionMenu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPermissionOpenColumn {
                get {
                    return this.columnIsPermissionOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPermissionAddColumn {
                get {
                    return this.columnIsPermissionAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPermissionEditColumn {
                get {
                    return this.columnIsPermissionEdit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPermissionDeleteColumn {
                get {
                    return this.columnIsPermissionDelete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplicationIDColumn {
                get {
                    return this.columnApplicationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserPermissionRow this[int index] {
                get {
                    return ((tTS_UserPermissionRow)(this.Rows[index]));
                }
            }
            
            public event tTS_UserPermissionRowChangeEventHandler tTS_UserPermissionRowChanging;
            
            public event tTS_UserPermissionRowChangeEventHandler tTS_UserPermissionRowChanged;
            
            public event tTS_UserPermissionRowChangeEventHandler tTS_UserPermissionRowDeleting;
            
            public event tTS_UserPermissionRowChangeEventHandler tTS_UserPermissionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_UserPermissionRow(tTS_UserPermissionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserPermissionRow AddtTS_UserPermissionRow(short GroupID, int Form, bool IsPermissionMenu, bool IsPermissionOpen, bool IsPermissionAdd, bool IsPermissionEdit, bool IsPermissionDelete, byte ApplicationID, short ModuleID, int InsertedBy, System.DateTime InsertedDate, int UpdatedBy, bool IsDeleted) {
                tTS_UserPermissionRow rowtTS_UserPermissionRow = ((tTS_UserPermissionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GroupID,
                        Form,
                        IsPermissionMenu,
                        IsPermissionOpen,
                        IsPermissionAdd,
                        IsPermissionEdit,
                        IsPermissionDelete,
                        ApplicationID,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted};
                rowtTS_UserPermissionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_UserPermissionRow);
                return rowtTS_UserPermissionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_UserPermissionDataTable cln = ((tTS_UserPermissionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_UserPermissionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGroupID = base.Columns["GroupID"];
                this.columnForm = base.Columns["Form"];
                this.columnIsPermissionMenu = base.Columns["IsPermissionMenu"];
                this.columnIsPermissionOpen = base.Columns["IsPermissionOpen"];
                this.columnIsPermissionAdd = base.Columns["IsPermissionAdd"];
                this.columnIsPermissionEdit = base.Columns["IsPermissionEdit"];
                this.columnIsPermissionDelete = base.Columns["IsPermissionDelete"];
                this.columnApplicationID = base.Columns["ApplicationID"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGroupID = new global::System.Data.DataColumn("GroupID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupID);
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnIsPermissionMenu = new global::System.Data.DataColumn("IsPermissionMenu", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPermissionMenu);
                this.columnIsPermissionOpen = new global::System.Data.DataColumn("IsPermissionOpen", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPermissionOpen);
                this.columnIsPermissionAdd = new global::System.Data.DataColumn("IsPermissionAdd", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPermissionAdd);
                this.columnIsPermissionEdit = new global::System.Data.DataColumn("IsPermissionEdit", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPermissionEdit);
                this.columnIsPermissionDelete = new global::System.Data.DataColumn("IsPermissionDelete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPermissionDelete);
                this.columnApplicationID = new global::System.Data.DataColumn("ApplicationID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationID);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnGroupID.ReadOnly = true;
                this.columnForm.ReadOnly = true;
                this.columnIsPermissionMenu.ReadOnly = true;
                this.columnIsPermissionOpen.ReadOnly = true;
                this.columnIsPermissionAdd.ReadOnly = true;
                this.columnIsPermissionEdit.ReadOnly = true;
                this.columnIsPermissionDelete.ReadOnly = true;
                this.columnApplicationID.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserPermissionRow NewtTS_UserPermissionRow() {
                return ((tTS_UserPermissionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_UserPermissionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_UserPermissionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_UserPermissionRowChanged != null)) {
                    this.tTS_UserPermissionRowChanged(this, new tTS_UserPermissionRowChangeEvent(((tTS_UserPermissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_UserPermissionRowChanging != null)) {
                    this.tTS_UserPermissionRowChanging(this, new tTS_UserPermissionRowChangeEvent(((tTS_UserPermissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_UserPermissionRowDeleted != null)) {
                    this.tTS_UserPermissionRowDeleted(this, new tTS_UserPermissionRowChangeEvent(((tTS_UserPermissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_UserPermissionRowDeleting != null)) {
                    this.tTS_UserPermissionRowDeleting(this, new tTS_UserPermissionRowChangeEvent(((tTS_UserPermissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_UserPermissionRow(tTS_UserPermissionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_UserPermissionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tTS_OwnerDataTable : global::System.Data.TypedTableBase<tTS_OwnerRow> {
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnIsPurchaser;
            
            private global::System.Data.DataColumn columnIsDeceased;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnOwnerCode;
            
            private global::System.Data.DataColumn columnconversion;
            
            private global::System.Data.DataColumn columnLastFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_OwnerDataTable() {
                this.TableName = "tTS_Owner";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_OwnerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tTS_OwnerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPurchaserColumn {
                get {
                    return this.columnIsPurchaser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeceasedColumn {
                get {
                    return this.columnIsDeceased;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerCodeColumn {
                get {
                    return this.columnOwnerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conversionColumn {
                get {
                    return this.columnconversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastFirstColumn {
                get {
                    return this.columnLastFirst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_OwnerRow this[int index] {
                get {
                    return ((tTS_OwnerRow)(this.Rows[index]));
                }
            }
            
            public event tTS_OwnerRowChangeEventHandler tTS_OwnerRowChanging;
            
            public event tTS_OwnerRowChangeEventHandler tTS_OwnerRowChanged;
            
            public event tTS_OwnerRowChangeEventHandler tTS_OwnerRowDeleting;
            
            public event tTS_OwnerRowChangeEventHandler tTS_OwnerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtTS_OwnerRow(tTS_OwnerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_OwnerRow AddtTS_OwnerRow(
                        int OwnerID, 
                        string LastName, 
                        string FirstName, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string State, 
                        string Zip, 
                        string Phone, 
                        string Email, 
                        bool IsActive, 
                        bool IsPurchaser, 
                        bool IsDeceased, 
                        short ModuleID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        string OwnerCode, 
                        string conversion, 
                        string LastFirst) {
                tTS_OwnerRow rowtTS_OwnerRow = ((tTS_OwnerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OwnerID,
                        LastName,
                        FirstName,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone,
                        Email,
                        IsActive,
                        IsPurchaser,
                        IsDeceased,
                        ModuleID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        OwnerCode,
                        conversion,
                        LastFirst};
                rowtTS_OwnerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtTS_OwnerRow);
                return rowtTS_OwnerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tTS_OwnerDataTable cln = ((tTS_OwnerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tTS_OwnerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnLastName = base.Columns["LastName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
                this.columnPhone = base.Columns["Phone"];
                this.columnEmail = base.Columns["Email"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnIsPurchaser = base.Columns["IsPurchaser"];
                this.columnIsDeceased = base.Columns["IsDeceased"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnOwnerCode = base.Columns["OwnerCode"];
                this.columnconversion = base.Columns["conversion"];
                this.columnLastFirst = base.Columns["LastFirst"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnIsPurchaser = new global::System.Data.DataColumn("IsPurchaser", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPurchaser);
                this.columnIsDeceased = new global::System.Data.DataColumn("IsDeceased", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeceased);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnOwnerCode = new global::System.Data.DataColumn("OwnerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerCode);
                this.columnconversion = new global::System.Data.DataColumn("conversion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconversion);
                this.columnLastFirst = new global::System.Data.DataColumn("LastFirst", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastFirst);
                this.columnOwnerID.ReadOnly = true;
                this.columnLastName.ReadOnly = true;
                this.columnLastName.MaxLength = 50;
                this.columnFirstName.ReadOnly = true;
                this.columnFirstName.MaxLength = 50;
                this.columnAddress1.ReadOnly = true;
                this.columnAddress1.MaxLength = 50;
                this.columnAddress2.ReadOnly = true;
                this.columnAddress2.MaxLength = 50;
                this.columnCity.ReadOnly = true;
                this.columnCity.MaxLength = 50;
                this.columnState.ReadOnly = true;
                this.columnState.MaxLength = 50;
                this.columnZip.ReadOnly = true;
                this.columnZip.MaxLength = 50;
                this.columnPhone.ReadOnly = true;
                this.columnPhone.MaxLength = 50;
                this.columnEmail.ReadOnly = true;
                this.columnEmail.MaxLength = 200;
                this.columnIsActive.ReadOnly = true;
                this.columnIsPurchaser.ReadOnly = true;
                this.columnIsDeceased.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnOwnerCode.ReadOnly = true;
                this.columnOwnerCode.MaxLength = 20;
                this.columnconversion.ReadOnly = true;
                this.columnconversion.MaxLength = 50;
                this.columnLastFirst.ReadOnly = true;
                this.columnLastFirst.MaxLength = 102;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_OwnerRow NewtTS_OwnerRow() {
                return ((tTS_OwnerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tTS_OwnerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tTS_OwnerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tTS_OwnerRowChanged != null)) {
                    this.tTS_OwnerRowChanged(this, new tTS_OwnerRowChangeEvent(((tTS_OwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tTS_OwnerRowChanging != null)) {
                    this.tTS_OwnerRowChanging(this, new tTS_OwnerRowChangeEvent(((tTS_OwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tTS_OwnerRowDeleted != null)) {
                    this.tTS_OwnerRowDeleted(this, new tTS_OwnerRowChangeEvent(((tTS_OwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tTS_OwnerRowDeleting != null)) {
                    this.tTS_OwnerRowDeleting(this, new tTS_OwnerRowChangeEvent(((tTS_OwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetTS_OwnerRow(tTS_OwnerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tTS_OwnerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tAA_MOwnerDataTable : global::System.Data.TypedTableBase<tAA_MOwnerRow> {
            
            private global::System.Data.DataColumn columnMOwnerID;
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnOwnerPercent;
            
            private global::System.Data.DataColumn columnMownerTypeID;
            
            private global::System.Data.DataColumn columnInsertedBy;
            
            private global::System.Data.DataColumn columnInsertedDate;
            
            private global::System.Data.DataColumn columnUpdatedBy;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnModuleID;
            
            private global::System.Data.DataColumn columnconversion;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnIsCurrent;
            
            private global::System.Data.DataColumn columnIsPrimary;
            
            private global::System.Data.DataColumn columnIsTaxPayer;
            
            private global::System.Data.DataColumn columnIsTRExtra;
            
            private global::System.Data.DataColumn columnIsTRSelected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MOwnerDataTable() {
                this.TableName = "tAA_MOwner";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MOwnerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tAA_MOwnerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOwnerIDColumn {
                get {
                    return this.columnMOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerPercentColumn {
                get {
                    return this.columnOwnerPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MownerTypeIDColumn {
                get {
                    return this.columnMownerTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedByColumn {
                get {
                    return this.columnInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsertedDateColumn {
                get {
                    return this.columnInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedByColumn {
                get {
                    return this.columnUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuleIDColumn {
                get {
                    return this.columnModuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conversionColumn {
                get {
                    return this.columnconversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCurrentColumn {
                get {
                    return this.columnIsCurrent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPrimaryColumn {
                get {
                    return this.columnIsPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsTaxPayerColumn {
                get {
                    return this.columnIsTaxPayer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsTRExtraColumn {
                get {
                    return this.columnIsTRExtra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsTRSelectedColumn {
                get {
                    return this.columnIsTRSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MOwnerRow this[int index] {
                get {
                    return ((tAA_MOwnerRow)(this.Rows[index]));
                }
            }
            
            public event tAA_MOwnerRowChangeEventHandler tAA_MOwnerRowChanging;
            
            public event tAA_MOwnerRowChangeEventHandler tAA_MOwnerRowChanged;
            
            public event tAA_MOwnerRowChangeEventHandler tAA_MOwnerRowDeleting;
            
            public event tAA_MOwnerRowChangeEventHandler tAA_MOwnerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtAA_MOwnerRow(tAA_MOwnerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MOwnerRow AddtAA_MOwnerRow(
                        int MOwnerID, 
                        int OwnerID, 
                        decimal OwnerPercent, 
                        byte MownerTypeID, 
                        int InsertedBy, 
                        System.DateTime InsertedDate, 
                        int UpdatedBy, 
                        bool IsDeleted, 
                        short ModuleID, 
                        string conversion, 
                        string ParcelNumber, 
                        short RollYear, 
                        bool IsCurrent, 
                        bool IsPrimary, 
                        bool IsTaxPayer, 
                        bool IsTRExtra, 
                        bool IsTRSelected) {
                tAA_MOwnerRow rowtAA_MOwnerRow = ((tAA_MOwnerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MOwnerID,
                        OwnerID,
                        OwnerPercent,
                        MownerTypeID,
                        InsertedBy,
                        InsertedDate,
                        UpdatedBy,
                        IsDeleted,
                        ModuleID,
                        conversion,
                        ParcelNumber,
                        RollYear,
                        IsCurrent,
                        IsPrimary,
                        IsTaxPayer,
                        IsTRExtra,
                        IsTRSelected};
                rowtAA_MOwnerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtAA_MOwnerRow);
                return rowtAA_MOwnerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tAA_MOwnerDataTable cln = ((tAA_MOwnerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tAA_MOwnerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMOwnerID = base.Columns["MOwnerID"];
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnOwnerPercent = base.Columns["OwnerPercent"];
                this.columnMownerTypeID = base.Columns["MownerTypeID"];
                this.columnInsertedBy = base.Columns["InsertedBy"];
                this.columnInsertedDate = base.Columns["InsertedDate"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnModuleID = base.Columns["ModuleID"];
                this.columnconversion = base.Columns["conversion"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnIsCurrent = base.Columns["IsCurrent"];
                this.columnIsPrimary = base.Columns["IsPrimary"];
                this.columnIsTaxPayer = base.Columns["IsTaxPayer"];
                this.columnIsTRExtra = base.Columns["IsTRExtra"];
                this.columnIsTRSelected = base.Columns["IsTRSelected"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMOwnerID = new global::System.Data.DataColumn("MOwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOwnerID);
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnOwnerPercent = new global::System.Data.DataColumn("OwnerPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerPercent);
                this.columnMownerTypeID = new global::System.Data.DataColumn("MownerTypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMownerTypeID);
                this.columnInsertedBy = new global::System.Data.DataColumn("InsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedBy);
                this.columnInsertedDate = new global::System.Data.DataColumn("InsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertedDate);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnModuleID = new global::System.Data.DataColumn("ModuleID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuleID);
                this.columnconversion = new global::System.Data.DataColumn("conversion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconversion);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnIsCurrent = new global::System.Data.DataColumn("IsCurrent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCurrent);
                this.columnIsPrimary = new global::System.Data.DataColumn("IsPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPrimary);
                this.columnIsTaxPayer = new global::System.Data.DataColumn("IsTaxPayer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTaxPayer);
                this.columnIsTRExtra = new global::System.Data.DataColumn("IsTRExtra", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTRExtra);
                this.columnIsTRSelected = new global::System.Data.DataColumn("IsTRSelected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTRSelected);
                this.columnMOwnerID.ReadOnly = true;
                this.columnOwnerID.ReadOnly = true;
                this.columnOwnerPercent.ReadOnly = true;
                this.columnMownerTypeID.ReadOnly = true;
                this.columnInsertedBy.ReadOnly = true;
                this.columnInsertedDate.ReadOnly = true;
                this.columnUpdatedBy.ReadOnly = true;
                this.columnIsDeleted.ReadOnly = true;
                this.columnModuleID.ReadOnly = true;
                this.columnconversion.ReadOnly = true;
                this.columnconversion.MaxLength = 20;
                this.columnParcelNumber.ReadOnly = true;
                this.columnParcelNumber.MaxLength = 50;
                this.columnRollYear.ReadOnly = true;
                this.columnIsCurrent.ReadOnly = true;
                this.columnIsPrimary.ReadOnly = true;
                this.columnIsTaxPayer.ReadOnly = true;
                this.columnIsTRExtra.ReadOnly = true;
                this.columnIsTRSelected.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MOwnerRow NewtAA_MOwnerRow() {
                return ((tAA_MOwnerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tAA_MOwnerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tAA_MOwnerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tAA_MOwnerRowChanged != null)) {
                    this.tAA_MOwnerRowChanged(this, new tAA_MOwnerRowChangeEvent(((tAA_MOwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tAA_MOwnerRowChanging != null)) {
                    this.tAA_MOwnerRowChanging(this, new tAA_MOwnerRowChangeEvent(((tAA_MOwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tAA_MOwnerRowDeleted != null)) {
                    this.tAA_MOwnerRowDeleted(this, new tAA_MOwnerRowChangeEvent(((tAA_MOwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tAA_MOwnerRowDeleting != null)) {
                    this.tAA_MOwnerRowDeleting(this, new tAA_MOwnerRowChangeEvent(((tAA_MOwnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetAA_MOwnerRow(tAA_MOwnerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tAA_MOwnerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetChkOutXMLDataTable : global::System.Data.TypedTableBase<GetChkOutXMLRow> {
            
            private global::System.Data.DataColumn columnChkOutXML;
            
            private global::System.Data.DataColumn columnTableXML;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetChkOutXMLDataTable() {
                this.TableName = "GetChkOutXML";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetChkOutXMLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetChkOutXMLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChkOutXMLColumn {
                get {
                    return this.columnChkOutXML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TableXMLColumn {
                get {
                    return this.columnTableXML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetChkOutXMLRow this[int index] {
                get {
                    return ((GetChkOutXMLRow)(this.Rows[index]));
                }
            }
            
            public event GetChkOutXMLRowChangeEventHandler GetChkOutXMLRowChanging;
            
            public event GetChkOutXMLRowChangeEventHandler GetChkOutXMLRowChanged;
            
            public event GetChkOutXMLRowChangeEventHandler GetChkOutXMLRowDeleting;
            
            public event GetChkOutXMLRowChangeEventHandler GetChkOutXMLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetChkOutXMLRow(GetChkOutXMLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetChkOutXMLRow AddGetChkOutXMLRow(string ChkOutXML, string TableXML) {
                GetChkOutXMLRow rowGetChkOutXMLRow = ((GetChkOutXMLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChkOutXML,
                        TableXML};
                rowGetChkOutXMLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetChkOutXMLRow);
                return rowGetChkOutXMLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetChkOutXMLDataTable cln = ((GetChkOutXMLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetChkOutXMLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnChkOutXML = base.Columns["ChkOutXML"];
                this.columnTableXML = base.Columns["TableXML"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnChkOutXML = new global::System.Data.DataColumn("ChkOutXML", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChkOutXML);
                this.columnTableXML = new global::System.Data.DataColumn("TableXML", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableXML);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetChkOutXMLRow NewGetChkOutXMLRow() {
                return ((GetChkOutXMLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetChkOutXMLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetChkOutXMLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetChkOutXMLRowChanged != null)) {
                    this.GetChkOutXMLRowChanged(this, new GetChkOutXMLRowChangeEvent(((GetChkOutXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetChkOutXMLRowChanging != null)) {
                    this.GetChkOutXMLRowChanging(this, new GetChkOutXMLRowChangeEvent(((GetChkOutXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetChkOutXMLRowDeleted != null)) {
                    this.GetChkOutXMLRowDeleted(this, new GetChkOutXMLRowChangeEvent(((GetChkOutXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetChkOutXMLRowDeleting != null)) {
                    this.GetChkOutXMLRowDeleting(this, new GetChkOutXMLRowChangeEvent(((GetChkOutXMLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetChkOutXMLRow(GetChkOutXMLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F9065FieldUseData ds = new F9065FieldUseData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetChkOutXMLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListSnapshotTableRow : global::System.Data.DataRow {
            
            private ListSnapshotTableDataTable tableListSnapshotTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListSnapshotTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListSnapshotTable = ((ListSnapshotTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SnapshotID {
                get {
                    try {
                        return ((int)(this[this.tableListSnapshotTable.SnapshotIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SnapshotID\' in table \'ListSnapshotTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListSnapshotTable.SnapshotIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SnapshotName {
                get {
                    try {
                        return ((string)(this[this.tableListSnapshotTable.SnapshotNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SnapshotName\' in table \'ListSnapshotTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListSnapshotTable.SnapshotNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tableListSnapshotTable.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'ListSnapshotTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListSnapshotTable.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SnapshotNote {
                get {
                    try {
                        return ((string)(this[this.tableListSnapshotTable.SnapshotNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SnapshotNote\' in table \'ListSnapshotTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListSnapshotTable.SnapshotNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RecordCount {
                get {
                    try {
                        return ((int)(this[this.tableListSnapshotTable.RecordCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordCount\' in table \'ListSnapshotTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListSnapshotTable.RecordCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableListSnapshotTable.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'ListSnapshotTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListSnapshotTable.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tableListSnapshotTable.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'ListSnapshotTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListSnapshotTable.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsertedDate {
                get {
                    try {
                        return ((string)(this[this.tableListSnapshotTable.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'ListSnapshotTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListSnapshotTable.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSnapshotIDNull() {
                return this.IsNull(this.tableListSnapshotTable.SnapshotIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSnapshotIDNull() {
                this[this.tableListSnapshotTable.SnapshotIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSnapshotNameNull() {
                return this.IsNull(this.tableListSnapshotTable.SnapshotNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSnapshotNameNull() {
                this[this.tableListSnapshotTable.SnapshotNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tableListSnapshotTable.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tableListSnapshotTable.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSnapshotNoteNull() {
                return this.IsNull(this.tableListSnapshotTable.SnapshotNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSnapshotNoteNull() {
                this[this.tableListSnapshotTable.SnapshotNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordCountNull() {
                return this.IsNull(this.tableListSnapshotTable.RecordCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordCountNull() {
                this[this.tableListSnapshotTable.RecordCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableListSnapshotTable.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableListSnapshotTable.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tableListSnapshotTable.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tableListSnapshotTable.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tableListSnapshotTable.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tableListSnapshotTable.InsertedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListPreviewDetailTableRow : global::System.Data.DataRow {
            
            private ListPreviewDetailTableDataTable tableListPreviewDetailTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListPreviewDetailTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListPreviewDetailTable = ((ListPreviewDetailTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SnapCount {
                get {
                    try {
                        return ((int)(this[this.tableListPreviewDetailTable.SnapCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SnapCount\' in table \'ListPreviewDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListPreviewDetailTable.SnapCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelCount {
                get {
                    try {
                        return ((int)(this[this.tableListPreviewDetailTable.ParcelCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelCount\' in table \'ListPreviewDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListPreviewDetailTable.ParcelCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockedParcel {
                get {
                    try {
                        return ((int)(this[this.tableListPreviewDetailTable.LockedParcelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockedParcel\' in table \'ListPreviewDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListPreviewDetailTable.LockedParcelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckedOut {
                get {
                    try {
                        return ((bool)(this[this.tableListPreviewDetailTable.IsCheckedOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCheckedOut\' in table \'ListPreviewDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListPreviewDetailTable.IsCheckedOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSnapCountNull() {
                return this.IsNull(this.tableListPreviewDetailTable.SnapCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSnapCountNull() {
                this[this.tableListPreviewDetailTable.SnapCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelCountNull() {
                return this.IsNull(this.tableListPreviewDetailTable.ParcelCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelCountNull() {
                this[this.tableListPreviewDetailTable.ParcelCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockedParcelNull() {
                return this.IsNull(this.tableListPreviewDetailTable.LockedParcelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockedParcelNull() {
                this[this.tableListPreviewDetailTable.LockedParcelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCheckedOutNull() {
                return this.IsNull(this.tableListPreviewDetailTable.IsCheckedOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCheckedOutNull() {
                this[this.tableListPreviewDetailTable.IsCheckedOutColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListCfgConfigTableRow : global::System.Data.DataRow {
            
            private ListCfgConfigTableDataTable tableListCfgConfigTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListCfgConfigTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListCfgConfigTable = ((ListCfgConfigTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConfigurationValue {
                get {
                    try {
                        return ((string)(this[this.tableListCfgConfigTable.ConfigurationValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfigurationValue\' in table \'ListCfgConfigTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableListCfgConfigTable.ConfigurationValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfigurationValueNull() {
                return this.IsNull(this.tableListCfgConfigTable.ConfigurationValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfigurationValueNull() {
                this[this.tableListCfgConfigTable.ConfigurationValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_CheckoutConfigurationRow : global::System.Data.DataRow {
            
            private tTS_CheckoutConfigurationDataTable tabletTS_CheckoutConfiguration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_CheckoutConfigurationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_CheckoutConfiguration = ((tTS_CheckoutConfigurationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplicationID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_CheckoutConfiguration.ApplicationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicationID\' in table \'tTS_CheckoutConfiguration\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.ApplicationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Orders {
                get {
                    try {
                        return ((int)(this[this.tabletTS_CheckoutConfiguration.OrdersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orders\' in table \'tTS_CheckoutConfiguration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.OrdersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TableName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_CheckoutConfiguration.TableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TableName\' in table \'tTS_CheckoutConfiguration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.TableNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColumnName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_CheckoutConfiguration.ColumnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnName\' in table \'tTS_CheckoutConfiguration\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.ColumnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PTable {
                get {
                    try {
                        return ((string)(this[this.tabletTS_CheckoutConfiguration.PTableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PTable\' in table \'tTS_CheckoutConfiguration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.PTableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PTColumnName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_CheckoutConfiguration.PTColumnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PTColumnName\' in table \'tTS_CheckoutConfiguration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.PTColumnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FKey {
                get {
                    try {
                        return ((string)(this[this.tabletTS_CheckoutConfiguration.FKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FKey\' in table \'tTS_CheckoutConfiguration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.FKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WHEREClause {
                get {
                    try {
                        return ((string)(this[this.tabletTS_CheckoutConfiguration.WHEREClauseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHEREClause\' in table \'tTS_CheckoutConfiguration\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.WHEREClauseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tabletTS_CheckoutConfiguration.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'tTS_CheckoutConfiguration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_CheckoutConfiguration.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_CheckoutConfiguration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_CheckoutConfiguration.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_CheckoutConfiguration\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_CheckoutConfiguration.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_CheckoutConfiguration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_CheckoutConfiguration.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_CheckoutConfiguration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_CheckoutConfiguration.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_CheckoutConfiguration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_CheckoutConfiguration.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationIDNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.ApplicationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationIDNull() {
                this[this.tabletTS_CheckoutConfiguration.ApplicationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrdersNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.OrdersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrdersNull() {
                this[this.tabletTS_CheckoutConfiguration.OrdersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTableNameNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.TableNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTableNameNull() {
                this[this.tabletTS_CheckoutConfiguration.TableNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumnNameNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.ColumnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumnNameNull() {
                this[this.tabletTS_CheckoutConfiguration.ColumnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPTableNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.PTableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPTableNull() {
                this[this.tabletTS_CheckoutConfiguration.PTableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPTColumnNameNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.PTColumnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPTColumnNameNull() {
                this[this.tabletTS_CheckoutConfiguration.PTColumnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFKeyNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.FKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFKeyNull() {
                this[this.tabletTS_CheckoutConfiguration.FKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWHEREClauseNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.WHEREClauseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWHEREClauseNull() {
                this[this.tabletTS_CheckoutConfiguration.WHEREClauseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tabletTS_CheckoutConfiguration.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_CheckoutConfiguration.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_CheckoutConfiguration.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_CheckoutConfiguration.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_CheckoutConfiguration.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_CheckoutConfiguration.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_CheckoutConfiguration.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_ApplicationRow : global::System.Data.DataRow {
            
            private tTS_ApplicationDataTable tabletTS_Application;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_ApplicationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_Application = ((tTS_ApplicationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ApplicationID {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Application.ApplicationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicationID\' in table \'tTS_Application\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Application.ApplicationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Application {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Application.ApplicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Application\' in table \'tTS_Application\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Application.ApplicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_Application.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_Application\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Application.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Application.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_Application\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Application.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_Application.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_Application\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Application.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Application.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_Application\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Application.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Application.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_Application\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Application.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationIDNull() {
                return this.IsNull(this.tabletTS_Application.ApplicationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationIDNull() {
                this[this.tabletTS_Application.ApplicationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationNull() {
                return this.IsNull(this.tabletTS_Application.ApplicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationNull() {
                this[this.tabletTS_Application.ApplicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_Application.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_Application.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_Application.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_Application.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_Application.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_Application.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_Application.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_Application.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_Application.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_Application.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_FormMenuRow : global::System.Data.DataRow {
            
            private tTS_FormMenuDataTable tabletTS_FormMenu;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FormMenuRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_FormMenu = ((tTS_FormMenuDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MenuGroupID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_FormMenu.MenuGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MenuGroupID\' in table \'tTS_FormMenu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormMenu.MenuGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MenuGroup {
                get {
                    try {
                        return ((string)(this[this.tabletTS_FormMenu.MenuGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MenuGroup\' in table \'tTS_FormMenu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormMenu.MenuGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte GroupOrder {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_FormMenu.GroupOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupOrder\' in table \'tTS_FormMenu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormMenu.GroupOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ApplicationID {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_FormMenu.ApplicationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicationID\' in table \'tTS_FormMenu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormMenu.ApplicationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_FormMenu.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_FormMenu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormMenu.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormMenu.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_FormMenu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormMenu.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_FormMenu.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_FormMenu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormMenu.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormMenu.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_FormMenu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormMenu.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormMenu.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_FormMenu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormMenu.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMenuGroupIDNull() {
                return this.IsNull(this.tabletTS_FormMenu.MenuGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMenuGroupIDNull() {
                this[this.tabletTS_FormMenu.MenuGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMenuGroupNull() {
                return this.IsNull(this.tabletTS_FormMenu.MenuGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMenuGroupNull() {
                this[this.tabletTS_FormMenu.MenuGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupOrderNull() {
                return this.IsNull(this.tabletTS_FormMenu.GroupOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupOrderNull() {
                this[this.tabletTS_FormMenu.GroupOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationIDNull() {
                return this.IsNull(this.tabletTS_FormMenu.ApplicationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationIDNull() {
                this[this.tabletTS_FormMenu.ApplicationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_FormMenu.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_FormMenu.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_FormMenu.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_FormMenu.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_FormMenu.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_FormMenu.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_FormMenu.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_FormMenu.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_FormMenu.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_FormMenu.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_CfgRow : global::System.Data.DataRow {
            
            private tTS_CfgDataTable tabletTS_Cfg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_CfgRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_Cfg = ((tTS_CfgDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CfgName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Cfg.CfgNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CfgName\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.CfgNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CfgValue {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Cfg.CfgValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CfgValue\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.CfgValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Cfg.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ApplicationID {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Cfg.ApplicationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicationID\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.ApplicationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DisplayName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Cfg.DisplayNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisplayName\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.DisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Type {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Cfg.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_Cfg.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Cfg.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_Cfg.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Cfg.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Cfg.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_Cfg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Cfg.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCfgNameNull() {
                return this.IsNull(this.tabletTS_Cfg.CfgNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCfgNameNull() {
                this[this.tabletTS_Cfg.CfgNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCfgValueNull() {
                return this.IsNull(this.tabletTS_Cfg.CfgValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCfgValueNull() {
                this[this.tabletTS_Cfg.CfgValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletTS_Cfg.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletTS_Cfg.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationIDNull() {
                return this.IsNull(this.tabletTS_Cfg.ApplicationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationIDNull() {
                this[this.tabletTS_Cfg.ApplicationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplayNameNull() {
                return this.IsNull(this.tabletTS_Cfg.DisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplayNameNull() {
                this[this.tabletTS_Cfg.DisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tabletTS_Cfg.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tabletTS_Cfg.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_Cfg.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_Cfg.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_Cfg.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_Cfg.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_Cfg.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_Cfg.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_Cfg.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_Cfg.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_Cfg.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_Cfg.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_FormRow : global::System.Data.DataRow {
            
            private tTS_FormDataTable tabletTS_Form;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FormRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_Form = ((tTS_FormDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Form.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FormFile {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Form.FormFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormFile\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.FormFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Form.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MenuName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Form.MenuNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MenuName\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.MenuNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte MenuOrder {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Form.MenuOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MenuOrder\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.MenuOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MenuGroupID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_Form.MenuGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MenuGroupID\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.MenuGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSmartPart {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Form.IsSmartPartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSmartPart\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.IsSmartPartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_Form.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Form.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_Form.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Form.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Form.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WebHeight {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Form.WebHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WebHeight\' in table \'tTS_Form\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Form.WebHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tabletTS_Form.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tabletTS_Form.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormFileNull() {
                return this.IsNull(this.tabletTS_Form.FormFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormFileNull() {
                this[this.tabletTS_Form.FormFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletTS_Form.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletTS_Form.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMenuNameNull() {
                return this.IsNull(this.tabletTS_Form.MenuNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMenuNameNull() {
                this[this.tabletTS_Form.MenuNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMenuOrderNull() {
                return this.IsNull(this.tabletTS_Form.MenuOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMenuOrderNull() {
                this[this.tabletTS_Form.MenuOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMenuGroupIDNull() {
                return this.IsNull(this.tabletTS_Form.MenuGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMenuGroupIDNull() {
                this[this.tabletTS_Form.MenuGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsSmartPartNull() {
                return this.IsNull(this.tabletTS_Form.IsSmartPartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsSmartPartNull() {
                this[this.tabletTS_Form.IsSmartPartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_Form.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_Form.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_Form.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_Form.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_Form.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_Form.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_Form.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_Form.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_Form.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_Form.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebHeightNull() {
                return this.IsNull(this.tabletTS_Form.WebHeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebHeightNull() {
                this[this.tabletTS_Form.WebHeightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_FormSandwichRow : global::System.Data.DataRow {
            
            private tTS_FormSandwichDataTable tabletTS_FormSandwich;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FormSandwichRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_FormSandwich = ((tTS_FormSandwichDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSandwich.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KeyField {
                get {
                    try {
                        return ((string)(this[this.tabletTS_FormSandwich.KeyFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeyField\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.KeyFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletTS_FormSandwich.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubTitle1 {
                get {
                    try {
                        return ((string)(this[this.tabletTS_FormSandwich.SubTitle1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTitle1\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.SubTitle1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubTitle2 {
                get {
                    try {
                        return ((string)(this[this.tabletTS_FormSandwich.SubTitle2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTitle2\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.SubTitle2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsPrintVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPrintVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsPrintVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreviewVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsPreviewVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPreviewVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsPreviewVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsEmailVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsEmailVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsEmailVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsNewVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNewVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsNewVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaveVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsSaveVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSaveVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsSaveVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancelVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsCancelVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCancelVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsCancelVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleteVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsDeleteVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleteVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsDeleteVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttachmentsVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsAttachmentsVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAttachmentsVisible\' in table \'tTS_FormSandwich\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsAttachmentsVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsCommentsVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCommentsVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsCommentsVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQueryVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsQueryVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsQueryVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsQueryVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNavVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsNavVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNavVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsNavVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuditVisible {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsAuditVisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAuditVisible\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsAuditVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AuditReport {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSandwich.AuditReportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuditReport\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.AuditReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Report {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSandwich.ReportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Report\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.ReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AttachmentAs {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSandwich.AttachmentAsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttachmentAs\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.AttachmentAsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CommentAs {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSandwich.CommentAsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommentAs\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.CommentAsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AuditLinkLabel {
                get {
                    try {
                        return ((string)(this[this.tabletTS_FormSandwich.AuditLinkLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuditLinkLabel\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.AuditLinkLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeatureClassID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSandwich.FeatureClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeatureClassID\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.FeatureClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeyOpenDefault {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsKeyOpenDefaultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsKeyOpenDefault\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsKeyOpenDefaultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte UseExtraParameter {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_FormSandwich.UseExtraParameterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseExtraParameter\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.UseExtraParameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_FormSandwich.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSandwich.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_FormSandwich.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSandwich.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFindOn {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsFindOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFindOn\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsFindOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQueryLoad {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsQueryLoadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsQueryLoad\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsQueryLoadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnalytics {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsAnalyticsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAnalytics\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsAnalyticsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdate {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsUpdate\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJerkFree {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSandwich.IsJerkFreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsJerkFree\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.IsJerkFreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BackgroundColor {
                get {
                    try {
                        return ((string)(this[this.tabletTS_FormSandwich.BackgroundColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackgroundColor\' in table \'tTS_FormSandwich\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSandwich.BackgroundColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tabletTS_FormSandwich.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tabletTS_FormSandwich.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeyFieldNull() {
                return this.IsNull(this.tabletTS_FormSandwich.KeyFieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeyFieldNull() {
                this[this.tabletTS_FormSandwich.KeyFieldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletTS_FormSandwich.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletTS_FormSandwich.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTitle1Null() {
                return this.IsNull(this.tabletTS_FormSandwich.SubTitle1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTitle1Null() {
                this[this.tabletTS_FormSandwich.SubTitle1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTitle2Null() {
                return this.IsNull(this.tabletTS_FormSandwich.SubTitle2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTitle2Null() {
                this[this.tabletTS_FormSandwich.SubTitle2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPrintVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsPrintVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPrintVisibleNull() {
                this[this.tabletTS_FormSandwich.IsPrintVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPreviewVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsPreviewVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPreviewVisibleNull() {
                this[this.tabletTS_FormSandwich.IsPreviewVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsEmailVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsEmailVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsEmailVisibleNull() {
                this[this.tabletTS_FormSandwich.IsEmailVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsNewVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsNewVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsNewVisibleNull() {
                this[this.tabletTS_FormSandwich.IsNewVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsSaveVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsSaveVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsSaveVisibleNull() {
                this[this.tabletTS_FormSandwich.IsSaveVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCancelVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsCancelVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCancelVisibleNull() {
                this[this.tabletTS_FormSandwich.IsCancelVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeleteVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsDeleteVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeleteVisibleNull() {
                this[this.tabletTS_FormSandwich.IsDeleteVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAttachmentsVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsAttachmentsVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAttachmentsVisibleNull() {
                this[this.tabletTS_FormSandwich.IsAttachmentsVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCommentsVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsCommentsVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCommentsVisibleNull() {
                this[this.tabletTS_FormSandwich.IsCommentsVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsQueryVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsQueryVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsQueryVisibleNull() {
                this[this.tabletTS_FormSandwich.IsQueryVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsNavVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsNavVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsNavVisibleNull() {
                this[this.tabletTS_FormSandwich.IsNavVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAuditVisibleNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsAuditVisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAuditVisibleNull() {
                this[this.tabletTS_FormSandwich.IsAuditVisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuditReportNull() {
                return this.IsNull(this.tabletTS_FormSandwich.AuditReportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuditReportNull() {
                this[this.tabletTS_FormSandwich.AuditReportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportNull() {
                return this.IsNull(this.tabletTS_FormSandwich.ReportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportNull() {
                this[this.tabletTS_FormSandwich.ReportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttachmentAsNull() {
                return this.IsNull(this.tabletTS_FormSandwich.AttachmentAsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttachmentAsNull() {
                this[this.tabletTS_FormSandwich.AttachmentAsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentAsNull() {
                return this.IsNull(this.tabletTS_FormSandwich.CommentAsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentAsNull() {
                this[this.tabletTS_FormSandwich.CommentAsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuditLinkLabelNull() {
                return this.IsNull(this.tabletTS_FormSandwich.AuditLinkLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuditLinkLabelNull() {
                this[this.tabletTS_FormSandwich.AuditLinkLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeatureClassIDNull() {
                return this.IsNull(this.tabletTS_FormSandwich.FeatureClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeatureClassIDNull() {
                this[this.tabletTS_FormSandwich.FeatureClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsKeyOpenDefaultNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsKeyOpenDefaultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsKeyOpenDefaultNull() {
                this[this.tabletTS_FormSandwich.IsKeyOpenDefaultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseExtraParameterNull() {
                return this.IsNull(this.tabletTS_FormSandwich.UseExtraParameterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseExtraParameterNull() {
                this[this.tabletTS_FormSandwich.UseExtraParameterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_FormSandwich.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_FormSandwich.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_FormSandwich.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_FormSandwich.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_FormSandwich.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_FormSandwich.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_FormSandwich.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_FormSandwich.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_FormSandwich.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsFindOnNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsFindOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsFindOnNull() {
                this[this.tabletTS_FormSandwich.IsFindOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsQueryLoadNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsQueryLoadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsQueryLoadNull() {
                this[this.tabletTS_FormSandwich.IsQueryLoadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAnalyticsNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsAnalyticsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAnalyticsNull() {
                this[this.tabletTS_FormSandwich.IsAnalyticsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsUpdateNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsUpdateNull() {
                this[this.tabletTS_FormSandwich.IsUpdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsJerkFreeNull() {
                return this.IsNull(this.tabletTS_FormSandwich.IsJerkFreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsJerkFreeNull() {
                this[this.tabletTS_FormSandwich.IsJerkFreeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackgroundColorNull() {
                return this.IsNull(this.tabletTS_FormSandwich.BackgroundColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackgroundColorNull() {
                this[this.tabletTS_FormSandwich.BackgroundColorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_FormConfigRow : global::System.Data.DataRow {
            
            private tTS_FormConfigDataTable tabletTS_FormConfig;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FormConfigRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_FormConfig = ((tTS_FormConfigDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormConfig.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'tTS_FormConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormConfig.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Report {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormConfig.ReportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Report\' in table \'tTS_FormConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormConfig.ReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ApplicationID {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_FormConfig.ApplicationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicationID\' in table \'tTS_FormConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormConfig.ApplicationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_FormConfig.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_FormConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormConfig.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormConfig.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_FormConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormConfig.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_FormConfig.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_FormConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormConfig.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormConfig.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_FormConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormConfig.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormConfig.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_FormConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormConfig.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tabletTS_FormConfig.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tabletTS_FormConfig.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportNull() {
                return this.IsNull(this.tabletTS_FormConfig.ReportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportNull() {
                this[this.tabletTS_FormConfig.ReportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationIDNull() {
                return this.IsNull(this.tabletTS_FormConfig.ApplicationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationIDNull() {
                this[this.tabletTS_FormConfig.ApplicationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_FormConfig.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_FormConfig.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_FormConfig.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_FormConfig.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_FormConfig.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_FormConfig.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_FormConfig.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_FormConfig.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_FormConfig.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_FormConfig.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_FormSliceRow : global::System.Data.DataRow {
            
            private tTS_FormSliceDataTable tabletTS_FormSlice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_FormSliceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_FormSlice = ((tTS_FormSliceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSlice.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubForm {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSlice.SubFormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubForm\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.SubFormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte FormOrder {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_FormSlice.FormOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormOrder\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.FormOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpanded {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSlice.IsExpandedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExpanded\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.IsExpandedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TabColor {
                get {
                    try {
                        return ((string)(this[this.tabletTS_FormSlice.TabColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabColor\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.TabColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BaseURL {
                get {
                    try {
                        return ((string)(this[this.tabletTS_FormSlice.BaseURLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseURL\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.BaseURLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_FormSlice.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSlice.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_FormSlice.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_FormSlice.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_FormSlice.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_FormSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_FormSlice.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tabletTS_FormSlice.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tabletTS_FormSlice.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubFormNull() {
                return this.IsNull(this.tabletTS_FormSlice.SubFormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubFormNull() {
                this[this.tabletTS_FormSlice.SubFormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormOrderNull() {
                return this.IsNull(this.tabletTS_FormSlice.FormOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormOrderNull() {
                this[this.tabletTS_FormSlice.FormOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExpandedNull() {
                return this.IsNull(this.tabletTS_FormSlice.IsExpandedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExpandedNull() {
                this[this.tabletTS_FormSlice.IsExpandedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTabColorNull() {
                return this.IsNull(this.tabletTS_FormSlice.TabColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTabColorNull() {
                this[this.tabletTS_FormSlice.TabColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaseURLNull() {
                return this.IsNull(this.tabletTS_FormSlice.BaseURLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaseURLNull() {
                this[this.tabletTS_FormSlice.BaseURLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_FormSlice.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_FormSlice.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_FormSlice.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_FormSlice.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_FormSlice.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_FormSlice.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_FormSlice.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_FormSlice.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_FormSlice.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_FormSlice.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_ValueSliceRow : global::System.Data.DataRow {
            
            private tAA_ValueSliceDataTable tabletAA_ValueSlice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ValueSliceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_ValueSlice = ((tAA_ValueSliceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueSliceID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ValueSlice.ValueSliceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueSliceID\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.ValueSliceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ObjectID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ValueSlice.ObjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectID\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.ObjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SliceTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_ValueSlice.SliceTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SliceTypeID\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.SliceTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Value {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ValueSlice.ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ValueSlice.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_ValueSlice.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewConstruction {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ValueSlice.IsNewConstructionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNewConstruction\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.IsNewConstructionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ValueSlice.IsValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsValue\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.IsValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoll {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ValueSlice.IsRollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRoll\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.IsRollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Type {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_ValueSlice.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ValueSlice.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ValueSlice.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_ValueSlice.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ValueSlice.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ValueSlice.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NewConstruction {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_ValueSlice.NewConstructionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewConstruction\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.NewConstructionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conversion {
                get {
                    try {
                        return ((string)(this[this.tabletAA_ValueSlice.conversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conversion\' in table \'tAA_ValueSlice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ValueSlice.conversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueSliceIDNull() {
                return this.IsNull(this.tabletAA_ValueSlice.ValueSliceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueSliceIDNull() {
                this[this.tabletAA_ValueSlice.ValueSliceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectIDNull() {
                return this.IsNull(this.tabletAA_ValueSlice.ObjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectIDNull() {
                this[this.tabletAA_ValueSlice.ObjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSliceTypeIDNull() {
                return this.IsNull(this.tabletAA_ValueSlice.SliceTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSliceTypeIDNull() {
                this[this.tabletAA_ValueSlice.SliceTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNull() {
                return this.IsNull(this.tabletAA_ValueSlice.ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNull() {
                this[this.tabletAA_ValueSlice.ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletAA_ValueSlice.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletAA_ValueSlice.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_ValueSlice.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_ValueSlice.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsNewConstructionNull() {
                return this.IsNull(this.tabletAA_ValueSlice.IsNewConstructionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsNewConstructionNull() {
                this[this.tabletAA_ValueSlice.IsNewConstructionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsValueNull() {
                return this.IsNull(this.tabletAA_ValueSlice.IsValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsValueNull() {
                this[this.tabletAA_ValueSlice.IsValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRollNull() {
                return this.IsNull(this.tabletAA_ValueSlice.IsRollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRollNull() {
                this[this.tabletAA_ValueSlice.IsRollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tabletAA_ValueSlice.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tabletAA_ValueSlice.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_ValueSlice.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_ValueSlice.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_ValueSlice.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_ValueSlice.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_ValueSlice.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_ValueSlice.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_ValueSlice.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_ValueSlice.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_ValueSlice.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_ValueSlice.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewConstructionNull() {
                return this.IsNull(this.tabletAA_ValueSlice.NewConstructionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewConstructionNull() {
                this[this.tabletAA_ValueSlice.NewConstructionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconversionNull() {
                return this.IsNull(this.tabletAA_ValueSlice.conversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconversionNull() {
                this[this.tabletAA_ValueSlice.conversionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_Object2SliceRow : global::System.Data.DataRow {
            
            private tAA_Object2SliceDataTable tabletAA_Object2Slice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_Object2SliceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Object2Slice = ((tAA_Object2SliceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ObjectTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object2Slice.ObjectTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectTypeID\' in table \'tAA_Object2Slice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object2Slice.ObjectTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SliceTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object2Slice.SliceTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SliceTypeID\' in table \'tAA_Object2Slice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object2Slice.SliceTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object2Slice.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Object2Slice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object2Slice.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object2Slice.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Object2Slice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object2Slice.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Object2Slice.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Object2Slice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object2Slice.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object2Slice.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Object2Slice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object2Slice.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object2Slice.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_Object2Slice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object2Slice.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectTypeIDNull() {
                return this.IsNull(this.tabletAA_Object2Slice.ObjectTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectTypeIDNull() {
                this[this.tabletAA_Object2Slice.ObjectTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSliceTypeIDNull() {
                return this.IsNull(this.tabletAA_Object2Slice.SliceTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSliceTypeIDNull() {
                this[this.tabletAA_Object2Slice.SliceTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Object2Slice.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Object2Slice.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Object2Slice.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Object2Slice.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Object2Slice.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Object2Slice.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Object2Slice.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Object2Slice.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_Object2Slice.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_Object2Slice.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tGD_SystemRow : global::System.Data.DataRow {
            
            private tGD_SystemDataTable tabletGD_System;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tGD_SystemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletGD_System = ((tGD_SystemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SystemID {
                get {
                    try {
                        return ((short)(this[this.tabletGD_System.SystemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystemID\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.SystemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string System {
                get {
                    try {
                        return ((string)(this[this.tabletGD_System.SystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'System\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.SystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SystemColor {
                get {
                    try {
                        return ((string)(this[this.tabletGD_System.SystemColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystemColor\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.SystemColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ETime {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_System.ETimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ETime\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.ETimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WTime {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_System.WTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WTime\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.WTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EMaterials {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_System.EMaterialsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMaterials\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.EMaterialsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WMaterials {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_System.WMaterialsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WMaterials\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.WMaterialsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_System.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WOASPX {
                get {
                    try {
                        return ((string)(this[this.tabletGD_System.WOASPXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WOASPX\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.WOASPXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletGD_System.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletGD_System.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletGD_System.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletGD_System.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_System.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tGD_System\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_System.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystemIDNull() {
                return this.IsNull(this.tabletGD_System.SystemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystemIDNull() {
                this[this.tabletGD_System.SystemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystemNull() {
                return this.IsNull(this.tabletGD_System.SystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystemNull() {
                this[this.tabletGD_System.SystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystemColorNull() {
                return this.IsNull(this.tabletGD_System.SystemColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystemColorNull() {
                this[this.tabletGD_System.SystemColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETimeNull() {
                return this.IsNull(this.tabletGD_System.ETimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETimeNull() {
                this[this.tabletGD_System.ETimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWTimeNull() {
                return this.IsNull(this.tabletGD_System.WTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWTimeNull() {
                this[this.tabletGD_System.WTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMaterialsNull() {
                return this.IsNull(this.tabletGD_System.EMaterialsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMaterialsNull() {
                this[this.tabletGD_System.EMaterialsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWMaterialsNull() {
                return this.IsNull(this.tabletGD_System.WMaterialsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWMaterialsNull() {
                this[this.tabletGD_System.WMaterialsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletGD_System.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletGD_System.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWOASPXNull() {
                return this.IsNull(this.tabletGD_System.WOASPXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWOASPXNull() {
                this[this.tabletGD_System.WOASPXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletGD_System.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletGD_System.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletGD_System.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletGD_System.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletGD_System.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletGD_System.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletGD_System.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletGD_System.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletGD_System.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletGD_System.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_ParcelRow : global::System.Data.DataRow {
            
            private tAA_ParcelDataTable tabletAA_Parcel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ParcelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Parcel = ((tAA_ParcelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.ParcelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Parcel.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FIPS {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.FIPSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIPS\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.FIPSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ParcelTypeID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Parcel.ParcelTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelTypeID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ParcelTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetired {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.IsRetiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRetired\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.IsRetiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExempt {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.IsExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExempt\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.IsExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAppraisalBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LockAppraisalByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAppraisalBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LockAppraisalByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAssessmentBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LockAssessmentByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAssessmentBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LockAssessmentByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockValueBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LockValueByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockValueBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LockValueByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAdminBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LockAdminByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAdminBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LockAdminByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O1Value {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Parcel.O1ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O1Value\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.O1ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O2Value {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Parcel.O2ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2Value\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.O2ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal O3Value {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Parcel.O3ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O3Value\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.O3ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.NBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.NBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TaxDistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.TaxDistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxDistrictID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.TaxDistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateCode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.StateCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StateCode\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.StateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID1 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID1\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID2 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID2\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID3 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID3\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID4 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID4\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID5 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID5\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MapNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MapNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MapNumber\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MapNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CAMAModelID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Parcel.CAMAModelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAMAModelID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.CAMAModelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AAModelID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Parcel.AAModelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AAModelID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.AAModelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MortgageID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.MortgageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MortgageID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MortgageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoanNumber {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LoanNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoanNumber\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LoanNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerPrimary {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.IsOwnerPrimaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOwnerPrimary\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.IsOwnerPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Parcel.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Field1 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.Field1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Field1\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.Field1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Field2 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.Field2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Field2\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.Field2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Field3 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.Field3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Field3\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.Field3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Field4 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.Field4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Field4\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.Field4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Field5 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Parcel.Field5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Field5\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.Field5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AssessmentTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Parcel.AssessmentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessmentTypeID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.AssessmentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID6 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID6\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID7 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID7\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID8 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.MID8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID8\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.MID8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ImprovementID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImprovementID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.LandTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LandTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte FieldStatusID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Parcel.FieldStatusIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldStatusID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.FieldStatusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InspectedByUserID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.InspectedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InspectedByUserID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.InspectedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateInspected {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Parcel.DateInspectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateInspected\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.DateInspectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short InspectionTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Parcel.InspectionTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InspectionTypeID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.InspectionTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReviewedByUserID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ReviewedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewedByUserID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ReviewedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReviewDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Parcel.ReviewDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewDate\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ReviewDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Lat {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Parcel.LatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lat\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Long {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Parcel.LongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Long\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.LongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte UndividedOwnershipID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Parcel.UndividedOwnershipIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UndividedOwnershipID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.UndividedOwnershipIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AglandImprovementClass {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.AglandImprovementClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AglandImprovementClass\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.AglandImprovementClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NonAgImprovementClass {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Parcel.NonAgImprovementClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonAgImprovementClass\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.NonAgImprovementClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassAgLandID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ClassAgLandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassAgLandID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ClassAgLandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAgLandID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ClassNonAgLandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAgLandID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ClassNonAgLandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassAgImprovementID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ClassAgImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassAgImprovementID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ClassAgImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAgImprovementID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ClassNonAgImprovementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAgImprovementID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ClassNonAgImprovementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassNonAgResidentialID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.ClassNonAgResidentialIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassNonAgResidentialID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.ClassNonAgResidentialIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerOccupiedID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Parcel.OwnerOccupiedIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerOccupiedID\' in table \'tAA_Parcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Parcel.OwnerOccupiedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_Parcel.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tabletAA_Parcel.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tabletAA_Parcel.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_Parcel.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_Parcel.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIPSNull() {
                return this.IsNull(this.tabletAA_Parcel.FIPSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIPSNull() {
                this[this.tabletAA_Parcel.FIPSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelTypeIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ParcelTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelTypeIDNull() {
                this[this.tabletAA_Parcel.ParcelTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_Parcel.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_Parcel.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRetiredNull() {
                return this.IsNull(this.tabletAA_Parcel.IsRetiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRetiredNull() {
                this[this.tabletAA_Parcel.IsRetiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsExemptNull() {
                return this.IsNull(this.tabletAA_Parcel.IsExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsExemptNull() {
                this[this.tabletAA_Parcel.IsExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAppraisalByNull() {
                return this.IsNull(this.tabletAA_Parcel.LockAppraisalByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAppraisalByNull() {
                this[this.tabletAA_Parcel.LockAppraisalByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAssessmentByNull() {
                return this.IsNull(this.tabletAA_Parcel.LockAssessmentByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAssessmentByNull() {
                this[this.tabletAA_Parcel.LockAssessmentByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockValueByNull() {
                return this.IsNull(this.tabletAA_Parcel.LockValueByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockValueByNull() {
                this[this.tabletAA_Parcel.LockValueByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAdminByNull() {
                return this.IsNull(this.tabletAA_Parcel.LockAdminByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAdminByNull() {
                this[this.tabletAA_Parcel.LockAdminByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO1ValueNull() {
                return this.IsNull(this.tabletAA_Parcel.O1ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO1ValueNull() {
                this[this.tabletAA_Parcel.O1ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO2ValueNull() {
                return this.IsNull(this.tabletAA_Parcel.O2ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO2ValueNull() {
                this[this.tabletAA_Parcel.O2ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO3ValueNull() {
                return this.IsNull(this.tabletAA_Parcel.O3ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO3ValueNull() {
                this[this.tabletAA_Parcel.O3ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tabletAA_Parcel.NBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tabletAA_Parcel.NBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxDistrictIDNull() {
                return this.IsNull(this.tabletAA_Parcel.TaxDistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxDistrictIDNull() {
                this[this.tabletAA_Parcel.TaxDistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeNull() {
                return this.IsNull(this.tabletAA_Parcel.StateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeNull() {
                this[this.tabletAA_Parcel.StateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID1Null() {
                return this.IsNull(this.tabletAA_Parcel.MID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID1Null() {
                this[this.tabletAA_Parcel.MID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID2Null() {
                return this.IsNull(this.tabletAA_Parcel.MID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID2Null() {
                this[this.tabletAA_Parcel.MID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID3Null() {
                return this.IsNull(this.tabletAA_Parcel.MID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID3Null() {
                this[this.tabletAA_Parcel.MID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID4Null() {
                return this.IsNull(this.tabletAA_Parcel.MID4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID4Null() {
                this[this.tabletAA_Parcel.MID4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID5Null() {
                return this.IsNull(this.tabletAA_Parcel.MID5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID5Null() {
                this[this.tabletAA_Parcel.MID5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMapNumberNull() {
                return this.IsNull(this.tabletAA_Parcel.MapNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMapNumberNull() {
                this[this.tabletAA_Parcel.MapNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAMAModelIDNull() {
                return this.IsNull(this.tabletAA_Parcel.CAMAModelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAMAModelIDNull() {
                this[this.tabletAA_Parcel.CAMAModelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAAModelIDNull() {
                return this.IsNull(this.tabletAA_Parcel.AAModelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAAModelIDNull() {
                this[this.tabletAA_Parcel.AAModelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMortgageIDNull() {
                return this.IsNull(this.tabletAA_Parcel.MortgageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMortgageIDNull() {
                this[this.tabletAA_Parcel.MortgageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoanNumberNull() {
                return this.IsNull(this.tabletAA_Parcel.LoanNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoanNumberNull() {
                this[this.tabletAA_Parcel.LoanNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOwnerPrimaryNull() {
                return this.IsNull(this.tabletAA_Parcel.IsOwnerPrimaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOwnerPrimaryNull() {
                this[this.tabletAA_Parcel.IsOwnerPrimaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Parcel.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Parcel.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Parcel.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Parcel.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Parcel.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Parcel.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Parcel.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_Parcel.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_Parcel.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField1Null() {
                return this.IsNull(this.tabletAA_Parcel.Field1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField1Null() {
                this[this.tabletAA_Parcel.Field1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField2Null() {
                return this.IsNull(this.tabletAA_Parcel.Field2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField2Null() {
                this[this.tabletAA_Parcel.Field2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField3Null() {
                return this.IsNull(this.tabletAA_Parcel.Field3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField3Null() {
                this[this.tabletAA_Parcel.Field3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField4Null() {
                return this.IsNull(this.tabletAA_Parcel.Field4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField4Null() {
                this[this.tabletAA_Parcel.Field4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsField5Null() {
                return this.IsNull(this.tabletAA_Parcel.Field5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetField5Null() {
                this[this.tabletAA_Parcel.Field5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessmentTypeIDNull() {
                return this.IsNull(this.tabletAA_Parcel.AssessmentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessmentTypeIDNull() {
                this[this.tabletAA_Parcel.AssessmentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID6Null() {
                return this.IsNull(this.tabletAA_Parcel.MID6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID6Null() {
                this[this.tabletAA_Parcel.MID6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID7Null() {
                return this.IsNull(this.tabletAA_Parcel.MID7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID7Null() {
                this[this.tabletAA_Parcel.MID7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID8Null() {
                return this.IsNull(this.tabletAA_Parcel.MID8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID8Null() {
                this[this.tabletAA_Parcel.MID8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImprovementIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImprovementIDNull() {
                this[this.tabletAA_Parcel.ImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeIDNull() {
                return this.IsNull(this.tabletAA_Parcel.LandTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeIDNull() {
                this[this.tabletAA_Parcel.LandTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFieldStatusIDNull() {
                return this.IsNull(this.tabletAA_Parcel.FieldStatusIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFieldStatusIDNull() {
                this[this.tabletAA_Parcel.FieldStatusIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectedByUserIDNull() {
                return this.IsNull(this.tabletAA_Parcel.InspectedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectedByUserIDNull() {
                this[this.tabletAA_Parcel.InspectedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateInspectedNull() {
                return this.IsNull(this.tabletAA_Parcel.DateInspectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateInspectedNull() {
                this[this.tabletAA_Parcel.DateInspectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspectionTypeIDNull() {
                return this.IsNull(this.tabletAA_Parcel.InspectionTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspectionTypeIDNull() {
                this[this.tabletAA_Parcel.InspectionTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewedByUserIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ReviewedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewedByUserIDNull() {
                this[this.tabletAA_Parcel.ReviewedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewDateNull() {
                return this.IsNull(this.tabletAA_Parcel.ReviewDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewDateNull() {
                this[this.tabletAA_Parcel.ReviewDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatNull() {
                return this.IsNull(this.tabletAA_Parcel.LatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatNull() {
                this[this.tabletAA_Parcel.LatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongNull() {
                return this.IsNull(this.tabletAA_Parcel.LongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongNull() {
                this[this.tabletAA_Parcel.LongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUndividedOwnershipIDNull() {
                return this.IsNull(this.tabletAA_Parcel.UndividedOwnershipIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUndividedOwnershipIDNull() {
                this[this.tabletAA_Parcel.UndividedOwnershipIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAglandImprovementClassNull() {
                return this.IsNull(this.tabletAA_Parcel.AglandImprovementClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAglandImprovementClassNull() {
                this[this.tabletAA_Parcel.AglandImprovementClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonAgImprovementClassNull() {
                return this.IsNull(this.tabletAA_Parcel.NonAgImprovementClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonAgImprovementClassNull() {
                this[this.tabletAA_Parcel.NonAgImprovementClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassAgLandIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ClassAgLandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassAgLandIDNull() {
                this[this.tabletAA_Parcel.ClassAgLandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAgLandIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ClassNonAgLandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAgLandIDNull() {
                this[this.tabletAA_Parcel.ClassNonAgLandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassAgImprovementIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ClassAgImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassAgImprovementIDNull() {
                this[this.tabletAA_Parcel.ClassAgImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAgImprovementIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ClassNonAgImprovementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAgImprovementIDNull() {
                this[this.tabletAA_Parcel.ClassNonAgImprovementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNonAgResidentialIDNull() {
                return this.IsNull(this.tabletAA_Parcel.ClassNonAgResidentialIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNonAgResidentialIDNull() {
                this[this.tabletAA_Parcel.ClassNonAgResidentialIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerOccupiedIDNull() {
                return this.IsNull(this.tabletAA_Parcel.OwnerOccupiedIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerOccupiedIDNull() {
                this[this.tabletAA_Parcel.OwnerOccupiedIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_ObjectRow : global::System.Data.DataRow {
            
            private tAA_ObjectDataTable tabletAA_Object;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ObjectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Object = ((tAA_ObjectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ObjectID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.ObjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ObjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PObjectID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.PObjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PObjectID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.PObjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Object.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ObjectTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object.ObjectTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectTypeID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ObjectTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OValue {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Object.OValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OValue\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.OValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object.IsValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsValue\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.IsValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoll {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object.IsRollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRoll\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.IsRollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateCode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Object.StateCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StateCode\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.StateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Bedrooms {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Object.BedroomsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bedrooms\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.BedroomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Bathrooms {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Object.BathroomsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bathrooms\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.BathroomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Rental {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object.RentalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rental\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.RentalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short YearSeptic {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object.YearSepticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearSeptic\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.YearSepticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short YearWater {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object.YearWaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearWater\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.YearWaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short YearBuilt {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object.YearBuiltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearBuilt\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.YearBuiltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte EffectiveAge {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Object.EffectiveAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveAge\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.EffectiveAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Life {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Object.LifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Life\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.LifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short YearRemodel {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Object.YearRemodelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearRemodel\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.YearRemodelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Condition {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Object.ConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Condition\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Object.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conversion {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Object.conversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conversion\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.conversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PageID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.PageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PageID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.PageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgriculture {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Object.IsAgricultureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAgriculture\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.IsAgricultureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Object.ClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassID\' in table \'tAA_Object\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Object.ClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectIDNull() {
                return this.IsNull(this.tabletAA_Object.ObjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectIDNull() {
                this[this.tabletAA_Object.ObjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPObjectIDNull() {
                return this.IsNull(this.tabletAA_Object.PObjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPObjectIDNull() {
                this[this.tabletAA_Object.PObjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletAA_Object.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletAA_Object.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_Object.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_Object.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectTypeIDNull() {
                return this.IsNull(this.tabletAA_Object.ObjectTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectTypeIDNull() {
                this[this.tabletAA_Object.ObjectTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOValueNull() {
                return this.IsNull(this.tabletAA_Object.OValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOValueNull() {
                this[this.tabletAA_Object.OValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsValueNull() {
                return this.IsNull(this.tabletAA_Object.IsValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsValueNull() {
                this[this.tabletAA_Object.IsValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRollNull() {
                return this.IsNull(this.tabletAA_Object.IsRollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRollNull() {
                this[this.tabletAA_Object.IsRollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeNull() {
                return this.IsNull(this.tabletAA_Object.StateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeNull() {
                this[this.tabletAA_Object.StateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBedroomsNull() {
                return this.IsNull(this.tabletAA_Object.BedroomsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBedroomsNull() {
                this[this.tabletAA_Object.BedroomsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBathroomsNull() {
                return this.IsNull(this.tabletAA_Object.BathroomsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBathroomsNull() {
                this[this.tabletAA_Object.BathroomsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRentalNull() {
                return this.IsNull(this.tabletAA_Object.RentalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRentalNull() {
                this[this.tabletAA_Object.RentalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearSepticNull() {
                return this.IsNull(this.tabletAA_Object.YearSepticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearSepticNull() {
                this[this.tabletAA_Object.YearSepticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearWaterNull() {
                return this.IsNull(this.tabletAA_Object.YearWaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearWaterNull() {
                this[this.tabletAA_Object.YearWaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearBuiltNull() {
                return this.IsNull(this.tabletAA_Object.YearBuiltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearBuiltNull() {
                this[this.tabletAA_Object.YearBuiltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveAgeNull() {
                return this.IsNull(this.tabletAA_Object.EffectiveAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveAgeNull() {
                this[this.tabletAA_Object.EffectiveAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLifeNull() {
                return this.IsNull(this.tabletAA_Object.LifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLifeNull() {
                this[this.tabletAA_Object.LifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearRemodelNull() {
                return this.IsNull(this.tabletAA_Object.YearRemodelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearRemodelNull() {
                this[this.tabletAA_Object.YearRemodelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConditionNull() {
                return this.IsNull(this.tabletAA_Object.ConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConditionNull() {
                this[this.tabletAA_Object.ConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Object.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Object.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Object.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Object.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Object.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Object.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Object.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Object.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_Object.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_Object.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconversionNull() {
                return this.IsNull(this.tabletAA_Object.conversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconversionNull() {
                this[this.tabletAA_Object.conversionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPageIDNull() {
                return this.IsNull(this.tabletAA_Object.PageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPageIDNull() {
                this[this.tabletAA_Object.PageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAgricultureNull() {
                return this.IsNull(this.tabletAA_Object.IsAgricultureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAgricultureNull() {
                this[this.tabletAA_Object.IsAgricultureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassIDNull() {
                return this.IsNull(this.tabletAA_Object.ClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassIDNull() {
                this[this.tabletAA_Object.ClassIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_SliceTypeRow : global::System.Data.DataRow {
            
            private tAA_SliceTypeDataTable tabletAA_SliceType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_SliceTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_SliceType = ((tAA_SliceTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SliceTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_SliceType.SliceTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SliceTypeID\' in table \'tAA_SliceType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_SliceType.SliceTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SliceType {
                get {
                    try {
                        return ((string)(this[this.tabletAA_SliceType.SliceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SliceType\' in table \'tAA_SliceType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_SliceType.SliceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_SliceType.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_SliceType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_SliceType.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_SliceType.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tAA_SliceType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_SliceType.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tabletAA_SliceType.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'tAA_SliceType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_SliceType.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_SliceType.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_SliceType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_SliceType.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_SliceType.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_SliceType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_SliceType.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_SliceType.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_SliceType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_SliceType.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_SliceType.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_SliceType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_SliceType.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_SliceType.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_SliceType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_SliceType.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSliceTypeIDNull() {
                return this.IsNull(this.tabletAA_SliceType.SliceTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSliceTypeIDNull() {
                this[this.tabletAA_SliceType.SliceTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSliceTypeNull() {
                return this.IsNull(this.tabletAA_SliceType.SliceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSliceTypeNull() {
                this[this.tabletAA_SliceType.SliceTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_SliceType.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_SliceType.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletAA_SliceType.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletAA_SliceType.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tabletAA_SliceType.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tabletAA_SliceType.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_SliceType.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_SliceType.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_SliceType.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_SliceType.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_SliceType.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_SliceType.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_SliceType.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_SliceType.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_SliceType.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_SliceType.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_QueryViewRow : global::System.Data.DataRow {
            
            private tTS_QueryViewDataTable tabletTS_QueryView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_QueryViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_QueryView = ((tTS_QueryViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QueryViewID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryView.QueryViewIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QueryViewID\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.QueryViewIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryView.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QueryView {
                get {
                    try {
                        return ((string)(this[this.tabletTS_QueryView.QueryViewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QueryView\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.QueryViewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QueryViewName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_QueryView.QueryViewNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QueryViewName\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.QueryViewNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryView.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryView.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_QueryView.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryView.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_QueryView.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MenuOrder {
                get {
                    try {
                        return ((int)(this[this.tabletTS_QueryView.MenuOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MenuOrder\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.MenuOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QueryViewDescription {
                get {
                    try {
                        return ((string)(this[this.tabletTS_QueryView.QueryViewDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QueryViewDescription\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.QueryViewDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DesignedBy {
                get {
                    try {
                        return ((string)(this[this.tabletTS_QueryView.DesignedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DesignedBy\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.DesignedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTurbo {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_QueryView.IsTurboColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTurbo\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.IsTurboColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_QueryView.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForeignKeyName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_QueryView.ForeignKeyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForeignKeyName\' in table \'tTS_QueryView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_QueryView.ForeignKeyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQueryViewIDNull() {
                return this.IsNull(this.tabletTS_QueryView.QueryViewIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQueryViewIDNull() {
                this[this.tabletTS_QueryView.QueryViewIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tabletTS_QueryView.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tabletTS_QueryView.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQueryViewNull() {
                return this.IsNull(this.tabletTS_QueryView.QueryViewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQueryViewNull() {
                this[this.tabletTS_QueryView.QueryViewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQueryViewNameNull() {
                return this.IsNull(this.tabletTS_QueryView.QueryViewNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQueryViewNameNull() {
                this[this.tabletTS_QueryView.QueryViewNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_QueryView.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_QueryView.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_QueryView.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_QueryView.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_QueryView.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_QueryView.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_QueryView.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_QueryView.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_QueryView.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_QueryView.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMenuOrderNull() {
                return this.IsNull(this.tabletTS_QueryView.MenuOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMenuOrderNull() {
                this[this.tabletTS_QueryView.MenuOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQueryViewDescriptionNull() {
                return this.IsNull(this.tabletTS_QueryView.QueryViewDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQueryViewDescriptionNull() {
                this[this.tabletTS_QueryView.QueryViewDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignedByNull() {
                return this.IsNull(this.tabletTS_QueryView.DesignedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignedByNull() {
                this[this.tabletTS_QueryView.DesignedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsTurboNull() {
                return this.IsNull(this.tabletTS_QueryView.IsTurboColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsTurboNull() {
                this[this.tabletTS_QueryView.IsTurboColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletTS_QueryView.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletTS_QueryView.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForeignKeyNameNull() {
                return this.IsNull(this.tabletTS_QueryView.ForeignKeyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForeignKeyNameNull() {
                this[this.tabletTS_QueryView.ForeignKeyNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_NBHDRow : global::System.Data.DataRow {
            
            private tAA_NBHDDataTable tabletAA_NBHD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_NBHDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_NBHD = ((tAA_NBHDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.NBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.NBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PNBHDID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.PNBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNBHDID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.PNBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_NBHD.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NBHDType {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_NBHD.NBHDTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDType\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.NBHDTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Neighborhood {
                get {
                    try {
                        return ((string)(this[this.tabletAA_NBHD.NeighborhoodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Neighborhood\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.NeighborhoodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_NBHD.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MarketReview {
                get {
                    try {
                        return ((string)(this[this.tabletAA_NBHD.MarketReviewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketReview\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.MarketReviewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReviewedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.ReviewedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewedBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.ReviewedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDGroupID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.NBHDGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDGroupID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.NBHDGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ZoningID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.ZoningIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoningID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.ZoningIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CAMAModelID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_NBHD.CAMAModelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAMAModelID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.CAMAModelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AAModelID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_NBHD.AAModelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AAModelID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.AAModelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MSVersionID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.MSVersionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSVersionID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.MSVersionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MSCVersionID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.MSCVersionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSCVersionID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.MSCVersionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MSR_Factor {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_NBHD.MSR_FactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSR_Factor\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.MSR_FactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MSC_Factor {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_NBHD.MSC_FactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSC_Factor\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.MSC_FactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAppraisalBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.LockAppraisalByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAppraisalBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.LockAppraisalByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAssessmentBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.LockAssessmentByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAssessmentBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.LockAssessmentByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAdminBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.LockAdminByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAdminBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.LockAdminByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_NBHD.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_NBHD.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_NBHD.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_NBHD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_NBHD.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tabletAA_NBHD.NBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tabletAA_NBHD.NBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNBHDIDNull() {
                return this.IsNull(this.tabletAA_NBHD.PNBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNBHDIDNull() {
                this[this.tabletAA_NBHD.PNBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_NBHD.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_NBHD.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDTypeNull() {
                return this.IsNull(this.tabletAA_NBHD.NBHDTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDTypeNull() {
                this[this.tabletAA_NBHD.NBHDTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodNull() {
                return this.IsNull(this.tabletAA_NBHD.NeighborhoodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodNull() {
                this[this.tabletAA_NBHD.NeighborhoodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_NBHD.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_NBHD.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarketReviewNull() {
                return this.IsNull(this.tabletAA_NBHD.MarketReviewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarketReviewNull() {
                this[this.tabletAA_NBHD.MarketReviewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewedByNull() {
                return this.IsNull(this.tabletAA_NBHD.ReviewedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewedByNull() {
                this[this.tabletAA_NBHD.ReviewedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDGroupIDNull() {
                return this.IsNull(this.tabletAA_NBHD.NBHDGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDGroupIDNull() {
                this[this.tabletAA_NBHD.NBHDGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoningIDNull() {
                return this.IsNull(this.tabletAA_NBHD.ZoningIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoningIDNull() {
                this[this.tabletAA_NBHD.ZoningIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAMAModelIDNull() {
                return this.IsNull(this.tabletAA_NBHD.CAMAModelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAMAModelIDNull() {
                this[this.tabletAA_NBHD.CAMAModelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAAModelIDNull() {
                return this.IsNull(this.tabletAA_NBHD.AAModelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAAModelIDNull() {
                this[this.tabletAA_NBHD.AAModelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSVersionIDNull() {
                return this.IsNull(this.tabletAA_NBHD.MSVersionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSVersionIDNull() {
                this[this.tabletAA_NBHD.MSVersionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSCVersionIDNull() {
                return this.IsNull(this.tabletAA_NBHD.MSCVersionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSCVersionIDNull() {
                this[this.tabletAA_NBHD.MSCVersionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSR_FactorNull() {
                return this.IsNull(this.tabletAA_NBHD.MSR_FactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSR_FactorNull() {
                this[this.tabletAA_NBHD.MSR_FactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSC_FactorNull() {
                return this.IsNull(this.tabletAA_NBHD.MSC_FactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSC_FactorNull() {
                this[this.tabletAA_NBHD.MSC_FactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAppraisalByNull() {
                return this.IsNull(this.tabletAA_NBHD.LockAppraisalByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAppraisalByNull() {
                this[this.tabletAA_NBHD.LockAppraisalByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAssessmentByNull() {
                return this.IsNull(this.tabletAA_NBHD.LockAssessmentByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAssessmentByNull() {
                this[this.tabletAA_NBHD.LockAssessmentByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAdminByNull() {
                return this.IsNull(this.tabletAA_NBHD.LockAdminByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAdminByNull() {
                this[this.tabletAA_NBHD.LockAdminByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_NBHD.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_NBHD.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_NBHD.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_NBHD.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_NBHD.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_NBHD.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_NBHD.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_NBHD.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_NBHD.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_NBHD.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_DistrictRow : global::System.Data.DataRow {
            
            private tTS_DistrictDataTable tabletTS_District;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_DistrictRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_District = ((tTS_DistrictDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_District.DistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictID\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.DistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tabletTS_District.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletTS_District.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletTS_District.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_District.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DistrictTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_District.DistrictTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictTypeID\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.DistrictTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_District.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_District.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_District.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_District.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_District.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NewDistrictID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_District.NewDistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewDistrictID\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.NewDistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExciseRateID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_District.ExciseRateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseRateID\' in table \'tTS_District\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_District.ExciseRateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictIDNull() {
                return this.IsNull(this.tabletTS_District.DistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictIDNull() {
                this[this.tabletTS_District.DistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tabletTS_District.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tabletTS_District.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletTS_District.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletTS_District.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletTS_District.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletTS_District.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletTS_District.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletTS_District.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictTypeIDNull() {
                return this.IsNull(this.tabletTS_District.DistrictTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictTypeIDNull() {
                this[this.tabletTS_District.DistrictTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_District.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_District.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_District.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_District.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_District.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_District.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_District.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_District.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_District.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_District.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewDistrictIDNull() {
                return this.IsNull(this.tabletTS_District.NewDistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewDistrictIDNull() {
                this[this.tabletTS_District.NewDistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseRateIDNull() {
                return this.IsNull(this.tabletTS_District.ExciseRateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseRateIDNull() {
                this[this.tabletTS_District.ExciseRateIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_ParcelTypeRow : global::System.Data.DataRow {
            
            private tAA_ParcelTypeDataTable tabletAA_ParcelType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ParcelTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_ParcelType = ((tAA_ParcelTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ParcelTypeID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_ParcelType.ParcelTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelTypeID\' in table \'tAA_ParcelType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelType.ParcelTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelType {
                get {
                    try {
                        return ((string)(this[this.tabletAA_ParcelType.ParcelTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelType\' in table \'tAA_ParcelType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelType.ParcelTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_ParcelType.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_ParcelType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelType.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ParcelType.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_ParcelType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelType.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_ParcelType.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_ParcelType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelType.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ParcelType.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_ParcelType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelType.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ParcelType.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_ParcelType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ParcelType.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelTypeIDNull() {
                return this.IsNull(this.tabletAA_ParcelType.ParcelTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelTypeIDNull() {
                this[this.tabletAA_ParcelType.ParcelTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelTypeNull() {
                return this.IsNull(this.tabletAA_ParcelType.ParcelTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelTypeNull() {
                this[this.tabletAA_ParcelType.ParcelTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_ParcelType.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_ParcelType.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_ParcelType.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_ParcelType.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_ParcelType.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_ParcelType.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_ParcelType.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_ParcelType.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_ParcelType.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_ParcelType.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_SubDivisionRow : global::System.Data.DataRow {
            
            private tTS_SubDivisionDataTable tabletTS_SubDivision;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_SubDivisionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_SubDivision = ((tTS_SubDivisionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubdivisionID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_SubDivision.SubdivisionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubdivisionID\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.SubdivisionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_SubDivision.SubNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubName\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.SubNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section {
                get {
                    try {
                        return ((string)(this[this.tabletTS_SubDivision.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.SectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TownShip {
                get {
                    try {
                        return ((string)(this[this.tabletTS_SubDivision.TownShipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TownShip\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.TownShipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Range {
                get {
                    try {
                        return ((string)(this[this.tabletTS_SubDivision.RangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Range\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.RangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubDivision {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_SubDivision.IsSubDivisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSubDivision\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.IsSubDivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_SubDivision.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_SubDivision.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_SubDivision.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_SubDivision.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_SubDivision.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sub_Code {
                get {
                    try {
                        return ((string)(this[this.tabletTS_SubDivision.Sub_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sub_Code\' in table \'tTS_SubDivision\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_SubDivision.Sub_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubdivisionIDNull() {
                return this.IsNull(this.tabletTS_SubDivision.SubdivisionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubdivisionIDNull() {
                this[this.tabletTS_SubDivision.SubdivisionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubNameNull() {
                return this.IsNull(this.tabletTS_SubDivision.SubNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubNameNull() {
                this[this.tabletTS_SubDivision.SubNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull() {
                return this.IsNull(this.tabletTS_SubDivision.SectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull() {
                this[this.tabletTS_SubDivision.SectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTownShipNull() {
                return this.IsNull(this.tabletTS_SubDivision.TownShipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTownShipNull() {
                this[this.tabletTS_SubDivision.TownShipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRangeNull() {
                return this.IsNull(this.tabletTS_SubDivision.RangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRangeNull() {
                this[this.tabletTS_SubDivision.RangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsSubDivisionNull() {
                return this.IsNull(this.tabletTS_SubDivision.IsSubDivisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsSubDivisionNull() {
                this[this.tabletTS_SubDivision.IsSubDivisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_SubDivision.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_SubDivision.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_SubDivision.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_SubDivision.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_SubDivision.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_SubDivision.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_SubDivision.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_SubDivision.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_SubDivision.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_SubDivision.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSub_CodeNull() {
                return this.IsNull(this.tabletTS_SubDivision.Sub_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSub_CodeNull() {
                this[this.tabletTS_SubDivision.Sub_CodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_LegalRow : global::System.Data.DataRow {
            
            private tTS_LegalDataTable tabletTS_Legal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_LegalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_Legal = ((tTS_LegalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LegalID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Legal.LegalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LegalID\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.LegalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Legal.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubdivisionID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Legal.SubdivisionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubdivisionID\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.SubdivisionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lot {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Legal.LotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lot\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.LotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartialLot {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Legal.IsPartialLotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPartialLot\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.IsPartialLotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Block {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Legal.BlockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Block\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.BlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartialBlock {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Legal.IsPartialBlockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPartialBlock\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.IsPartialBlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssembledLegal {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Legal.AssembledLegalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssembledLegal\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.AssembledLegalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserLegal {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Legal.UserLegalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserLegal\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.UserLegalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NWNW {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.NWNWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWNW\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.NWNWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NENW {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.NENWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NENW\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.NENWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte SWNW {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.SWNWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWNW\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.SWNWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte SENW {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.SENWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SENW\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.SENWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NWNE {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.NWNEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWNE\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.NWNEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NENE {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.NENEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NENE\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.NENEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte SWNE {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.SWNEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWNE\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.SWNEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte SENE {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.SENEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SENE\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.SENEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NWSW {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.NWSWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWSW\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.NWSWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NESW {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.NESWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NESW\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.NESWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte SWSW {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.SWSWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWSW\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.SWSWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte SESW {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.SESWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SESW\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.SESWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NWSE {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.NWSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NWSE\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.NWSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NESE {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.NESEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NESE\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.NESEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte SWSE {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.SWSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWSE\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.SWSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte SESE {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_Legal.SESEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SESE\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.SESEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_Legal.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Legal.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_Legal.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Legal.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Legal.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_Legal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Legal.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLegalIDNull() {
                return this.IsNull(this.tabletTS_Legal.LegalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLegalIDNull() {
                this[this.tabletTS_Legal.LegalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletTS_Legal.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletTS_Legal.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubdivisionIDNull() {
                return this.IsNull(this.tabletTS_Legal.SubdivisionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubdivisionIDNull() {
                this[this.tabletTS_Legal.SubdivisionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLotNull() {
                return this.IsNull(this.tabletTS_Legal.LotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLotNull() {
                this[this.tabletTS_Legal.LotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPartialLotNull() {
                return this.IsNull(this.tabletTS_Legal.IsPartialLotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPartialLotNull() {
                this[this.tabletTS_Legal.IsPartialLotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockNull() {
                return this.IsNull(this.tabletTS_Legal.BlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockNull() {
                this[this.tabletTS_Legal.BlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPartialBlockNull() {
                return this.IsNull(this.tabletTS_Legal.IsPartialBlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPartialBlockNull() {
                this[this.tabletTS_Legal.IsPartialBlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssembledLegalNull() {
                return this.IsNull(this.tabletTS_Legal.AssembledLegalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssembledLegalNull() {
                this[this.tabletTS_Legal.AssembledLegalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserLegalNull() {
                return this.IsNull(this.tabletTS_Legal.UserLegalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserLegalNull() {
                this[this.tabletTS_Legal.UserLegalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWNWNull() {
                return this.IsNull(this.tabletTS_Legal.NWNWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWNWNull() {
                this[this.tabletTS_Legal.NWNWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNENWNull() {
                return this.IsNull(this.tabletTS_Legal.NENWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNENWNull() {
                this[this.tabletTS_Legal.NENWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWNWNull() {
                return this.IsNull(this.tabletTS_Legal.SWNWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWNWNull() {
                this[this.tabletTS_Legal.SWNWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENWNull() {
                return this.IsNull(this.tabletTS_Legal.SENWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENWNull() {
                this[this.tabletTS_Legal.SENWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWNENull() {
                return this.IsNull(this.tabletTS_Legal.NWNEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWNENull() {
                this[this.tabletTS_Legal.NWNEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNENENull() {
                return this.IsNull(this.tabletTS_Legal.NENEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNENENull() {
                this[this.tabletTS_Legal.NENEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWNENull() {
                return this.IsNull(this.tabletTS_Legal.SWNEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWNENull() {
                this[this.tabletTS_Legal.SWNEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENENull() {
                return this.IsNull(this.tabletTS_Legal.SENEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENENull() {
                this[this.tabletTS_Legal.SENEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWSWNull() {
                return this.IsNull(this.tabletTS_Legal.NWSWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWSWNull() {
                this[this.tabletTS_Legal.NWSWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNESWNull() {
                return this.IsNull(this.tabletTS_Legal.NESWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNESWNull() {
                this[this.tabletTS_Legal.NESWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWSWNull() {
                return this.IsNull(this.tabletTS_Legal.SWSWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWSWNull() {
                this[this.tabletTS_Legal.SWSWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSESWNull() {
                return this.IsNull(this.tabletTS_Legal.SESWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSESWNull() {
                this[this.tabletTS_Legal.SESWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNWSENull() {
                return this.IsNull(this.tabletTS_Legal.NWSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNWSENull() {
                this[this.tabletTS_Legal.NWSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNESENull() {
                return this.IsNull(this.tabletTS_Legal.NESEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNESENull() {
                this[this.tabletTS_Legal.NESEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSWSENull() {
                return this.IsNull(this.tabletTS_Legal.SWSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSWSENull() {
                this[this.tabletTS_Legal.SWSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSESENull() {
                return this.IsNull(this.tabletTS_Legal.SESEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSESENull() {
                this[this.tabletTS_Legal.SESEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_Legal.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_Legal.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_Legal.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_Legal.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_Legal.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_Legal.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_Legal.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_Legal.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_Legal.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_Legal.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_SitusRow : global::System.Data.DataRow {
            
            private tTS_SitusDataTable tabletTS_Situs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_SitusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_Situs = ((tTS_SitusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SitusID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Situs.SitusIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SitusID\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.SitusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Situs.ParcelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelID\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddressID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Situs.AddressIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddressID\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.AddressIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StreetID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Situs.StreetIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StreetID\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.StreetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HouseNumber {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Situs.HouseNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HouseNumber\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.HouseNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StreetName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Situs.StreetNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StreetName\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.StreetNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Situs.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZipCode {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Situs.ZipCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZipCode\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.ZipCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Situs {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Situs.SitusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Situs\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.SitusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Situs.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitType {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Situs.UnitTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitType\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.UnitTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitNumber {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Situs.UnitNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitNumber\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.UnitNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal X_Coord {
                get {
                    try {
                        return ((decimal)(this[this.tabletTS_Situs.X_CoordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'X_Coord\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.X_CoordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Y_Coord {
                get {
                    try {
                        return ((decimal)(this[this.tabletTS_Situs.Y_CoordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Y_Coord\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.Y_CoordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_Situs.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Situs.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_Situs.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Situs.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Situs.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_Situs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Situs.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSitusIDNull() {
                return this.IsNull(this.tabletTS_Situs.SitusIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSitusIDNull() {
                this[this.tabletTS_Situs.SitusIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelIDNull() {
                return this.IsNull(this.tabletTS_Situs.ParcelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelIDNull() {
                this[this.tabletTS_Situs.ParcelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressIDNull() {
                return this.IsNull(this.tabletTS_Situs.AddressIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressIDNull() {
                this[this.tabletTS_Situs.AddressIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetIDNull() {
                return this.IsNull(this.tabletTS_Situs.StreetIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetIDNull() {
                this[this.tabletTS_Situs.StreetIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHouseNumberNull() {
                return this.IsNull(this.tabletTS_Situs.HouseNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHouseNumberNull() {
                this[this.tabletTS_Situs.HouseNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNameNull() {
                return this.IsNull(this.tabletTS_Situs.StreetNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNameNull() {
                this[this.tabletTS_Situs.StreetNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tabletTS_Situs.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tabletTS_Situs.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipCodeNull() {
                return this.IsNull(this.tabletTS_Situs.ZipCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipCodeNull() {
                this[this.tabletTS_Situs.ZipCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSitusNull() {
                return this.IsNull(this.tabletTS_Situs.SitusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSitusNull() {
                this[this.tabletTS_Situs.SitusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tabletTS_Situs.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitIDNull() {
                this[this.tabletTS_Situs.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitTypeNull() {
                return this.IsNull(this.tabletTS_Situs.UnitTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitTypeNull() {
                this[this.tabletTS_Situs.UnitTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNumberNull() {
                return this.IsNull(this.tabletTS_Situs.UnitNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNumberNull() {
                this[this.tabletTS_Situs.UnitNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsX_CoordNull() {
                return this.IsNull(this.tabletTS_Situs.X_CoordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetX_CoordNull() {
                this[this.tabletTS_Situs.X_CoordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsY_CoordNull() {
                return this.IsNull(this.tabletTS_Situs.Y_CoordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetY_CoordNull() {
                this[this.tabletTS_Situs.Y_CoordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_Situs.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_Situs.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_Situs.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_Situs.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_Situs.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_Situs.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_Situs.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_Situs.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_Situs.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_Situs.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_ObjectGroupRow : global::System.Data.DataRow {
            
            private tAA_ObjectGroupDataTable tabletAA_ObjectGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ObjectGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_ObjectGroup = ((tAA_ObjectGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ObjectGroupID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_ObjectGroup.ObjectGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectGroupID\' in table \'tAA_ObjectGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectGroup.ObjectGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte GroupOrder {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_ObjectGroup.GroupOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupOrder\' in table \'tAA_ObjectGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectGroup.GroupOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ObjectGroup {
                get {
                    try {
                        return ((string)(this[this.tabletAA_ObjectGroup.ObjectGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectGroup\' in table \'tAA_ObjectGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectGroup.ObjectGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ObjectGroup.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tAA_ObjectGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectGroup.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ObjectGroup.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_ObjectGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectGroup.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ObjectGroup.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_ObjectGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectGroup.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_ObjectGroup.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_ObjectGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectGroup.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ObjectGroup.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_ObjectGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectGroup.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ObjectGroup.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_ObjectGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectGroup.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectGroupIDNull() {
                return this.IsNull(this.tabletAA_ObjectGroup.ObjectGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectGroupIDNull() {
                this[this.tabletAA_ObjectGroup.ObjectGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupOrderNull() {
                return this.IsNull(this.tabletAA_ObjectGroup.GroupOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupOrderNull() {
                this[this.tabletAA_ObjectGroup.GroupOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectGroupNull() {
                return this.IsNull(this.tabletAA_ObjectGroup.ObjectGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectGroupNull() {
                this[this.tabletAA_ObjectGroup.ObjectGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletAA_ObjectGroup.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletAA_ObjectGroup.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_ObjectGroup.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_ObjectGroup.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_ObjectGroup.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_ObjectGroup.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_ObjectGroup.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_ObjectGroup.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_ObjectGroup.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_ObjectGroup.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_ObjectGroup.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_ObjectGroup.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_ObjectTypeRow : global::System.Data.DataRow {
            
            private tAA_ObjectTypeDataTable tabletAA_ObjectType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_ObjectTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_ObjectType = ((tAA_ObjectTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ObjectTypeID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_ObjectType.ObjectTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectTypeID\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.ObjectTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ObjectType {
                get {
                    try {
                        return ((string)(this[this.tabletAA_ObjectType.ObjectTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectType\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.ObjectTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_ObjectType.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ObjectGroupID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_ObjectType.ObjectGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectGroupID\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.ObjectGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ObjectOrder {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_ObjectType.ObjectOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectOrder\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.ObjectOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ObjectType.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ObjectType.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ObjectType.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_ObjectType.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_ObjectType.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_ObjectType.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_ObjectType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_ObjectType.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectTypeIDNull() {
                return this.IsNull(this.tabletAA_ObjectType.ObjectTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectTypeIDNull() {
                this[this.tabletAA_ObjectType.ObjectTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectTypeNull() {
                return this.IsNull(this.tabletAA_ObjectType.ObjectTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectTypeNull() {
                this[this.tabletAA_ObjectType.ObjectTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_ObjectType.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_ObjectType.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectGroupIDNull() {
                return this.IsNull(this.tabletAA_ObjectType.ObjectGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectGroupIDNull() {
                this[this.tabletAA_ObjectType.ObjectGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectOrderNull() {
                return this.IsNull(this.tabletAA_ObjectType.ObjectOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectOrderNull() {
                this[this.tabletAA_ObjectType.ObjectOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletAA_ObjectType.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletAA_ObjectType.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_ObjectType.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_ObjectType.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_ObjectType.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_ObjectType.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_ObjectType.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_ObjectType.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_ObjectType.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_ObjectType.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_ObjectType.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_ObjectType.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_Misc_CatalogRow : global::System.Data.DataRow {
            
            private tAA_Misc_CatalogDataTable tabletAA_Misc_Catalog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_Misc_CatalogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Misc_Catalog = ((tAA_Misc_CatalogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MICodeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc_Catalog.MICodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MICodeID\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.MICodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Misc_Catalog.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MICode {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.MICodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MICode\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.MICodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VFormula {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.VFormulaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VFormula\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.VFormulaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L01 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L01\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D01 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D01\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F01 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F01\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L02 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L02\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D02 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D02\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F02 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F02\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L03 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L03\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D03 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D03\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F03 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F03\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L04 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L04\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D04 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D04\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F04 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F04\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L05 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L05\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D05 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D05\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F05 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F05\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L06 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L06\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D06 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D06\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F06 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F06\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L07 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L07\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D07 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D07\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F07 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F07\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L08 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L08\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D08 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D08\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F08 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F08\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L09 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L09\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D09 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D09\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F09 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F09\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L10 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L10\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D10 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D10\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F10 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F10\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc_Catalog.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Misc_Catalog.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc_Catalog.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Misc_Catalog.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S01 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S01\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S02 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S02\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S03 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S03\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S04 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S04\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S05 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S05\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S06 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S06\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S07 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S07\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S08 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S08\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S09 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S09\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S10 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S10\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conversion {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.conversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conversion\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.conversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C01 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C01\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C02 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C02\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C03 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C03\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C04 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C04\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C05 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C05\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C06 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C06\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C07 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C07\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C08 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C08\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C09 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C09\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C10 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C10\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L11 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L11\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D11 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D11\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S11 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S11\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C11 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C11\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F11 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F11\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L12 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.L12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L12\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.L12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte D12 {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc_Catalog.D12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D12\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.D12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool S12 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.S12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S12\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.S12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool C12 {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.C12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C12\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.C12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F12 {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc_Catalog.F12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F12\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.F12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeprTableID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc_Catalog.DeprTableIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprTableID\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.DeprTableIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WithPrimary {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc_Catalog.WithPrimaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WithPrimary\' in table \'tAA_Misc_Catalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc_Catalog.WithPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMICodeIDNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.MICodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMICodeIDNull() {
                this[this.tabletAA_Misc_Catalog.MICodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_Misc_Catalog.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMICodeNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.MICodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMICodeNull() {
                this[this.tabletAA_Misc_Catalog.MICodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_Misc_Catalog.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVFormulaNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.VFormulaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVFormulaNull() {
                this[this.tabletAA_Misc_Catalog.VFormulaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL01Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL01Null() {
                this[this.tabletAA_Misc_Catalog.L01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD01Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD01Null() {
                this[this.tabletAA_Misc_Catalog.D01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF01Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF01Null() {
                this[this.tabletAA_Misc_Catalog.F01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL02Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL02Null() {
                this[this.tabletAA_Misc_Catalog.L02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD02Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD02Null() {
                this[this.tabletAA_Misc_Catalog.D02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF02Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF02Null() {
                this[this.tabletAA_Misc_Catalog.F02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL03Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL03Null() {
                this[this.tabletAA_Misc_Catalog.L03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD03Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD03Null() {
                this[this.tabletAA_Misc_Catalog.D03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF03Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF03Null() {
                this[this.tabletAA_Misc_Catalog.F03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL04Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL04Null() {
                this[this.tabletAA_Misc_Catalog.L04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD04Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD04Null() {
                this[this.tabletAA_Misc_Catalog.D04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF04Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF04Null() {
                this[this.tabletAA_Misc_Catalog.F04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL05Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL05Null() {
                this[this.tabletAA_Misc_Catalog.L05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD05Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD05Null() {
                this[this.tabletAA_Misc_Catalog.D05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF05Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF05Null() {
                this[this.tabletAA_Misc_Catalog.F05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL06Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL06Null() {
                this[this.tabletAA_Misc_Catalog.L06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD06Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD06Null() {
                this[this.tabletAA_Misc_Catalog.D06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF06Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF06Null() {
                this[this.tabletAA_Misc_Catalog.F06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL07Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL07Null() {
                this[this.tabletAA_Misc_Catalog.L07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD07Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD07Null() {
                this[this.tabletAA_Misc_Catalog.D07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF07Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF07Null() {
                this[this.tabletAA_Misc_Catalog.F07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL08Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL08Null() {
                this[this.tabletAA_Misc_Catalog.L08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD08Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD08Null() {
                this[this.tabletAA_Misc_Catalog.D08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF08Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF08Null() {
                this[this.tabletAA_Misc_Catalog.F08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL09Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL09Null() {
                this[this.tabletAA_Misc_Catalog.L09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD09Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD09Null() {
                this[this.tabletAA_Misc_Catalog.D09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF09Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF09Null() {
                this[this.tabletAA_Misc_Catalog.F09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL10Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL10Null() {
                this[this.tabletAA_Misc_Catalog.L10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD10Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD10Null() {
                this[this.tabletAA_Misc_Catalog.D10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF10Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF10Null() {
                this[this.tabletAA_Misc_Catalog.F10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Misc_Catalog.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Misc_Catalog.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Misc_Catalog.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_Misc_Catalog.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Misc_Catalog.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS01Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS01Null() {
                this[this.tabletAA_Misc_Catalog.S01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS02Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS02Null() {
                this[this.tabletAA_Misc_Catalog.S02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS03Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS03Null() {
                this[this.tabletAA_Misc_Catalog.S03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS04Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS04Null() {
                this[this.tabletAA_Misc_Catalog.S04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS05Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS05Null() {
                this[this.tabletAA_Misc_Catalog.S05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS06Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS06Null() {
                this[this.tabletAA_Misc_Catalog.S06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS07Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS07Null() {
                this[this.tabletAA_Misc_Catalog.S07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS08Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS08Null() {
                this[this.tabletAA_Misc_Catalog.S08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS09Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS09Null() {
                this[this.tabletAA_Misc_Catalog.S09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS10Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS10Null() {
                this[this.tabletAA_Misc_Catalog.S10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconversionNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.conversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconversionNull() {
                this[this.tabletAA_Misc_Catalog.conversionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC01Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC01Null() {
                this[this.tabletAA_Misc_Catalog.C01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC02Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC02Null() {
                this[this.tabletAA_Misc_Catalog.C02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC03Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC03Null() {
                this[this.tabletAA_Misc_Catalog.C03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC04Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC04Null() {
                this[this.tabletAA_Misc_Catalog.C04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC05Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC05Null() {
                this[this.tabletAA_Misc_Catalog.C05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC06Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC06Null() {
                this[this.tabletAA_Misc_Catalog.C06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC07Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC07Null() {
                this[this.tabletAA_Misc_Catalog.C07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC08Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC08Null() {
                this[this.tabletAA_Misc_Catalog.C08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC09Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC09Null() {
                this[this.tabletAA_Misc_Catalog.C09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC10Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC10Null() {
                this[this.tabletAA_Misc_Catalog.C10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL11Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL11Null() {
                this[this.tabletAA_Misc_Catalog.L11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD11Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD11Null() {
                this[this.tabletAA_Misc_Catalog.D11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS11Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS11Null() {
                this[this.tabletAA_Misc_Catalog.S11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC11Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC11Null() {
                this[this.tabletAA_Misc_Catalog.C11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF11Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF11Null() {
                this[this.tabletAA_Misc_Catalog.F11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL12Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.L12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL12Null() {
                this[this.tabletAA_Misc_Catalog.L12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD12Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.D12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD12Null() {
                this[this.tabletAA_Misc_Catalog.D12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS12Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.S12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS12Null() {
                this[this.tabletAA_Misc_Catalog.S12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC12Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.C12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC12Null() {
                this[this.tabletAA_Misc_Catalog.C12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF12Null() {
                return this.IsNull(this.tabletAA_Misc_Catalog.F12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF12Null() {
                this[this.tabletAA_Misc_Catalog.F12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprTableIDNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.DeprTableIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprTableIDNull() {
                this[this.tabletAA_Misc_Catalog.DeprTableIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWithPrimaryNull() {
                return this.IsNull(this.tabletAA_Misc_Catalog.WithPrimaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWithPrimaryNull() {
                this[this.tabletAA_Misc_Catalog.WithPrimaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MiscRow : global::System.Data.DataRow {
            
            private tAA_MiscDataTable tabletAA_Misc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MiscRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_Misc = ((tAA_MiscDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueSliceID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.ValueSliceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueSliceID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.ValueSliceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MICodeID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MICodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MICodeID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MICodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletAA_Misc.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueBase {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.ValueBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueBase\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.ValueBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueOveride {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.ValueOverideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueOveride\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.ValueOverideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DeprYearin {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Misc.DeprYearinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprYearin\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprYearinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeprTableID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.DeprTableIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprTableID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprTableIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DeprWithPrimary {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc.DeprWithPrimaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprWithPrimary\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprWithPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeprPercent {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.DeprPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprPercent\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V01 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V01\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V02 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V02\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V03 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V03\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V04 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V04\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V05 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V05\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V06 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V06\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V07 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V07\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V08 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V08\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V09 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V09\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V10 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V10\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_Misc.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_Misc.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_Misc.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeprCondition {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.DeprConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprCondition\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeprQuality {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.DeprQualityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprQuality\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprQualityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte DeprEconLife {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc.DeprEconLifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprEconLife\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprEconLifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte DeprEAge {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc.DeprEAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprEAge\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprEAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte DeprFuncID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_Misc.DeprFuncIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprFuncID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprFuncIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeprFuncPercent {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.DeprFuncPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprFuncPercent\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.DeprFuncPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PhysDepr {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.PhysDeprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysDepr\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.PhysDeprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FuncDepr {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.FuncDeprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuncDepr\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.FuncDeprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueFinal {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.ValueFinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueFinal\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.ValueFinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V11 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V11\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V12 {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_Misc.V12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V12\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.V12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID01 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID01\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID02 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID02\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID03 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID03\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID04 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID04\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID05 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID05\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID06 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID06\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID07 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID07\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID08 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID08\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID09 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID09\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID10 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID10\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID11 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID11\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID12 {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.MIChoiceID12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID12\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.MIChoiceID12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PolygonID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_Misc.PolygonIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PolygonID\' in table \'tAA_Misc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_Misc.PolygonIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDNull() {
                return this.IsNull(this.tabletAA_Misc.MIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDNull() {
                this[this.tabletAA_Misc.MIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueSliceIDNull() {
                return this.IsNull(this.tabletAA_Misc.ValueSliceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueSliceIDNull() {
                this[this.tabletAA_Misc.ValueSliceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMICodeIDNull() {
                return this.IsNull(this.tabletAA_Misc.MICodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMICodeIDNull() {
                this[this.tabletAA_Misc.MICodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletAA_Misc.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletAA_Misc.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueBaseNull() {
                return this.IsNull(this.tabletAA_Misc.ValueBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueBaseNull() {
                this[this.tabletAA_Misc.ValueBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueOverideNull() {
                return this.IsNull(this.tabletAA_Misc.ValueOverideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueOverideNull() {
                this[this.tabletAA_Misc.ValueOverideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprYearinNull() {
                return this.IsNull(this.tabletAA_Misc.DeprYearinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprYearinNull() {
                this[this.tabletAA_Misc.DeprYearinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprTableIDNull() {
                return this.IsNull(this.tabletAA_Misc.DeprTableIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprTableIDNull() {
                this[this.tabletAA_Misc.DeprTableIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprWithPrimaryNull() {
                return this.IsNull(this.tabletAA_Misc.DeprWithPrimaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprWithPrimaryNull() {
                this[this.tabletAA_Misc.DeprWithPrimaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprPercentNull() {
                return this.IsNull(this.tabletAA_Misc.DeprPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprPercentNull() {
                this[this.tabletAA_Misc.DeprPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV01Null() {
                return this.IsNull(this.tabletAA_Misc.V01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV01Null() {
                this[this.tabletAA_Misc.V01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV02Null() {
                return this.IsNull(this.tabletAA_Misc.V02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV02Null() {
                this[this.tabletAA_Misc.V02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV03Null() {
                return this.IsNull(this.tabletAA_Misc.V03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV03Null() {
                this[this.tabletAA_Misc.V03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV04Null() {
                return this.IsNull(this.tabletAA_Misc.V04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV04Null() {
                this[this.tabletAA_Misc.V04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV05Null() {
                return this.IsNull(this.tabletAA_Misc.V05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV05Null() {
                this[this.tabletAA_Misc.V05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV06Null() {
                return this.IsNull(this.tabletAA_Misc.V06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV06Null() {
                this[this.tabletAA_Misc.V06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV07Null() {
                return this.IsNull(this.tabletAA_Misc.V07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV07Null() {
                this[this.tabletAA_Misc.V07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV08Null() {
                return this.IsNull(this.tabletAA_Misc.V08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV08Null() {
                this[this.tabletAA_Misc.V08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV09Null() {
                return this.IsNull(this.tabletAA_Misc.V09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV09Null() {
                this[this.tabletAA_Misc.V09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV10Null() {
                return this.IsNull(this.tabletAA_Misc.V10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV10Null() {
                this[this.tabletAA_Misc.V10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_Misc.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_Misc.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_Misc.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_Misc.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_Misc.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_Misc.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_Misc.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_Misc.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_Misc.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_Misc.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprConditionNull() {
                return this.IsNull(this.tabletAA_Misc.DeprConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprConditionNull() {
                this[this.tabletAA_Misc.DeprConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprQualityNull() {
                return this.IsNull(this.tabletAA_Misc.DeprQualityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprQualityNull() {
                this[this.tabletAA_Misc.DeprQualityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprEconLifeNull() {
                return this.IsNull(this.tabletAA_Misc.DeprEconLifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprEconLifeNull() {
                this[this.tabletAA_Misc.DeprEconLifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprEAgeNull() {
                return this.IsNull(this.tabletAA_Misc.DeprEAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprEAgeNull() {
                this[this.tabletAA_Misc.DeprEAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprFuncIDNull() {
                return this.IsNull(this.tabletAA_Misc.DeprFuncIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprFuncIDNull() {
                this[this.tabletAA_Misc.DeprFuncIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprFuncPercentNull() {
                return this.IsNull(this.tabletAA_Misc.DeprFuncPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprFuncPercentNull() {
                this[this.tabletAA_Misc.DeprFuncPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhysDeprNull() {
                return this.IsNull(this.tabletAA_Misc.PhysDeprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhysDeprNull() {
                this[this.tabletAA_Misc.PhysDeprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFuncDeprNull() {
                return this.IsNull(this.tabletAA_Misc.FuncDeprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFuncDeprNull() {
                this[this.tabletAA_Misc.FuncDeprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueFinalNull() {
                return this.IsNull(this.tabletAA_Misc.ValueFinalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueFinalNull() {
                this[this.tabletAA_Misc.ValueFinalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV11Null() {
                return this.IsNull(this.tabletAA_Misc.V11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV11Null() {
                this[this.tabletAA_Misc.V11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV12Null() {
                return this.IsNull(this.tabletAA_Misc.V12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV12Null() {
                this[this.tabletAA_Misc.V12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID01Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID01Null() {
                this[this.tabletAA_Misc.MIChoiceID01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID02Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID02Null() {
                this[this.tabletAA_Misc.MIChoiceID02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID03Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID03Null() {
                this[this.tabletAA_Misc.MIChoiceID03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID04Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID04Null() {
                this[this.tabletAA_Misc.MIChoiceID04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID05Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID05Null() {
                this[this.tabletAA_Misc.MIChoiceID05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID06Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID06Null() {
                this[this.tabletAA_Misc.MIChoiceID06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID07Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID07Null() {
                this[this.tabletAA_Misc.MIChoiceID07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID08Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID08Null() {
                this[this.tabletAA_Misc.MIChoiceID08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID09Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID09Null() {
                this[this.tabletAA_Misc.MIChoiceID09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID10Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID10Null() {
                this[this.tabletAA_Misc.MIChoiceID10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID11Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID11Null() {
                this[this.tabletAA_Misc.MIChoiceID11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceID12Null() {
                return this.IsNull(this.tabletAA_Misc.MIChoiceID12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceID12Null() {
                this[this.tabletAA_Misc.MIChoiceID12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPolygonIDNull() {
                return this.IsNull(this.tabletAA_Misc.PolygonIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPolygonIDNull() {
                this[this.tabletAA_Misc.PolygonIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_UnitRow : global::System.Data.DataRow {
            
            private tTS_UnitDataTable tabletTS_Unit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_UnitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_Unit = ((tTS_UnitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Unit.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'tTS_Unit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Unit.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Unit.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'tTS_Unit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Unit.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_Unit.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_Unit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Unit.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Unit.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_Unit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Unit.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_Unit.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_Unit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Unit.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Unit.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_Unit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Unit.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Unit.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_Unit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Unit.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tabletTS_Unit.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitIDNull() {
                this[this.tabletTS_Unit.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tabletTS_Unit.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tabletTS_Unit.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_Unit.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_Unit.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_Unit.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_Unit.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_Unit.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_Unit.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_Unit.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_Unit.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_Unit.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_Unit.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_StreetListRow : global::System.Data.DataRow {
            
            private tTS_StreetListDataTable tabletTS_StreetList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_StreetListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_StreetList = ((tTS_StreetListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StreetID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_StreetList.StreetIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StreetID\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.StreetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RootName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_StreetList.RootNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RootName\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.RootNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Suffix {
                get {
                    try {
                        return ((string)(this[this.tabletTS_StreetList.SuffixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Suffix\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.SuffixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Directional {
                get {
                    try {
                        return ((string)(this[this.tabletTS_StreetList.DirectionalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Directional\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.DirectionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StreetName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_StreetList.StreetNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StreetName\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.StreetNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tabletTS_StreetList.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZipCode {
                get {
                    try {
                        return ((string)(this[this.tabletTS_StreetList.ZipCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZipCode\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.ZipCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuleID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_StreetList.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_StreetList.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_StreetList.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_StreetList.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_StreetList.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_StreetList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_StreetList.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetIDNull() {
                return this.IsNull(this.tabletTS_StreetList.StreetIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetIDNull() {
                this[this.tabletTS_StreetList.StreetIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRootNameNull() {
                return this.IsNull(this.tabletTS_StreetList.RootNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRootNameNull() {
                this[this.tabletTS_StreetList.RootNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuffixNull() {
                return this.IsNull(this.tabletTS_StreetList.SuffixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuffixNull() {
                this[this.tabletTS_StreetList.SuffixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirectionalNull() {
                return this.IsNull(this.tabletTS_StreetList.DirectionalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirectionalNull() {
                this[this.tabletTS_StreetList.DirectionalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNameNull() {
                return this.IsNull(this.tabletTS_StreetList.StreetNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNameNull() {
                this[this.tabletTS_StreetList.StreetNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tabletTS_StreetList.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tabletTS_StreetList.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipCodeNull() {
                return this.IsNull(this.tabletTS_StreetList.ZipCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipCodeNull() {
                this[this.tabletTS_StreetList.ZipCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_StreetList.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_StreetList.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_StreetList.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_StreetList.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_StreetList.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_StreetList.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_StreetList.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_StreetList.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_StreetList.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_StreetList.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tGD_FeatureClassRow : global::System.Data.DataRow {
            
            private tGD_FeatureClassDataTable tabletGD_FeatureClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tGD_FeatureClassRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletGD_FeatureClass = ((tGD_FeatureClassDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeatureClassID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_FeatureClass.FeatureClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeatureClassID\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.FeatureClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FeatureClass {
                get {
                    try {
                        return ((string)(this[this.tabletGD_FeatureClass.FeatureClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeatureClass\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.FeatureClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SystemID {
                get {
                    try {
                        return ((short)(this[this.tabletGD_FeatureClass.SystemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystemID\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.SystemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GISLayerName {
                get {
                    try {
                        return ((string)(this[this.tabletGD_FeatureClass.GISLayerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GISLayerName\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.GISLayerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GISKeyField {
                get {
                    try {
                        return ((string)(this[this.tabletGD_FeatureClass.GISKeyFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GISKeyField\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.GISKeyFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_FeatureClass.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkOrder {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_FeatureClass.IsWorkOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsWorkOrder\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.IsWorkOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletGD_FeatureClass.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletGD_FeatureClass.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletGD_FeatureClass.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletGD_FeatureClass.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_FeatureClass.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tGD_FeatureClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_FeatureClass.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeatureClassIDNull() {
                return this.IsNull(this.tabletGD_FeatureClass.FeatureClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeatureClassIDNull() {
                this[this.tabletGD_FeatureClass.FeatureClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeatureClassNull() {
                return this.IsNull(this.tabletGD_FeatureClass.FeatureClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeatureClassNull() {
                this[this.tabletGD_FeatureClass.FeatureClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystemIDNull() {
                return this.IsNull(this.tabletGD_FeatureClass.SystemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystemIDNull() {
                this[this.tabletGD_FeatureClass.SystemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGISLayerNameNull() {
                return this.IsNull(this.tabletGD_FeatureClass.GISLayerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGISLayerNameNull() {
                this[this.tabletGD_FeatureClass.GISLayerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGISKeyFieldNull() {
                return this.IsNull(this.tabletGD_FeatureClass.GISKeyFieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGISKeyFieldNull() {
                this[this.tabletGD_FeatureClass.GISKeyFieldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletGD_FeatureClass.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletGD_FeatureClass.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsWorkOrderNull() {
                return this.IsNull(this.tabletGD_FeatureClass.IsWorkOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsWorkOrderNull() {
                this[this.tabletGD_FeatureClass.IsWorkOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletGD_FeatureClass.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletGD_FeatureClass.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletGD_FeatureClass.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletGD_FeatureClass.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletGD_FeatureClass.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletGD_FeatureClass.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletGD_FeatureClass.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletGD_FeatureClass.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletGD_FeatureClass.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletGD_FeatureClass.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tGD_EventTypeRow : global::System.Data.DataRow {
            
            private tGD_EventTypeDataTable tabletGD_EventType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tGD_EventTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletGD_EventType = ((tGD_EventTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventTypeID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_EventType.EventTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventTypeID\' in table \'tGD_EventType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EventType.EventTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeatureClassID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_EventType.FeatureClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeatureClassID\' in table \'tGD_EventType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EventType.FeatureClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EventType {
                get {
                    try {
                        return ((string)(this[this.tabletGD_EventType.EventTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventType\' in table \'tGD_EventType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EventType.EventTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_EventType.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tGD_EventType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EventType.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tabletGD_EventType.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'tGD_EventType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EventType.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletGD_EventType.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tGD_EventType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EventType.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletGD_EventType.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tGD_EventType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EventType.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletGD_EventType.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tGD_EventType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EventType.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletGD_EventType.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tGD_EventType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EventType.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_EventType.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tGD_EventType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EventType.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventTypeIDNull() {
                return this.IsNull(this.tabletGD_EventType.EventTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventTypeIDNull() {
                this[this.tabletGD_EventType.EventTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeatureClassIDNull() {
                return this.IsNull(this.tabletGD_EventType.FeatureClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeatureClassIDNull() {
                this[this.tabletGD_EventType.FeatureClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventTypeNull() {
                return this.IsNull(this.tabletGD_EventType.EventTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventTypeNull() {
                this[this.tabletGD_EventType.EventTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletGD_EventType.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletGD_EventType.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tabletGD_EventType.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tabletGD_EventType.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletGD_EventType.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletGD_EventType.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletGD_EventType.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletGD_EventType.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletGD_EventType.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletGD_EventType.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletGD_EventType.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletGD_EventType.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletGD_EventType.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletGD_EventType.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tGD_EG_StatusRow : global::System.Data.DataRow {
            
            private tGD_EG_StatusDataTable tabletGD_EG_Status;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tGD_EG_StatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletGD_EG_Status = ((tGD_EG_StatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatusID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_EG_Status.StatusIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusID\' in table \'tGD_EG_Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EG_Status.StatusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeatureClassID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_EG_Status.FeatureClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeatureClassID\' in table \'tGD_EG_Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EG_Status.FeatureClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatusColor {
                get {
                    try {
                        return ((string)(this[this.tabletGD_EG_Status.StatusColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusColor\' in table \'tGD_EG_Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EG_Status.StatusColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabletGD_EG_Status.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'tGD_EG_Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EG_Status.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletGD_EG_Status.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tGD_EG_Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EG_Status.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletGD_EG_Status.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tGD_EG_Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EG_Status.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletGD_EG_Status.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tGD_EG_Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EG_Status.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletGD_EG_Status.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tGD_EG_Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EG_Status.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_EG_Status.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tGD_EG_Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_EG_Status.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusIDNull() {
                return this.IsNull(this.tabletGD_EG_Status.StatusIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusIDNull() {
                this[this.tabletGD_EG_Status.StatusIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeatureClassIDNull() {
                return this.IsNull(this.tabletGD_EG_Status.FeatureClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeatureClassIDNull() {
                this[this.tabletGD_EG_Status.FeatureClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusColorNull() {
                return this.IsNull(this.tabletGD_EG_Status.StatusColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusColorNull() {
                this[this.tabletGD_EG_Status.StatusColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabletGD_EG_Status.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabletGD_EG_Status.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletGD_EG_Status.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletGD_EG_Status.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletGD_EG_Status.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletGD_EG_Status.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletGD_EG_Status.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletGD_EG_Status.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletGD_EG_Status.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletGD_EG_Status.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletGD_EG_Status.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletGD_EG_Status.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tGD_EventRow : global::System.Data.DataRow {
            
            private tGD_EventDataTable tabletGD_Event;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tGD_EventRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletGD_Event = ((tGD_EventDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_Event.EventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventID\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PEventID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_Event.PEventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PEventID\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.PEventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EventNumber {
                get {
                    try {
                        return ((string)(this[this.tabletGD_Event.EventNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventNumber\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.EventNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeatureID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_Event.FeatureIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeatureID\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.FeatureIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventTypeID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_Event.EventTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventTypeID\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.EventTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WOID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_Event.WOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WOID\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.WOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EventDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletGD_Event.EventDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventDate\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.EventDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatusID {
                get {
                    try {
                        return ((int)(this[this.tabletGD_Event.StatusIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusID\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.StatusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplete {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_Event.IsCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsComplete\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.IsCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletGD_Event.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletGD_Event.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletGD_Event.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletGD_Event.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletGD_Event.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletGD_Event.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conversion {
                get {
                    try {
                        return ((string)(this[this.tabletGD_Event.conversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conversion\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.conversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletGD_Event.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'tGD_Event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletGD_Event.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventIDNull() {
                return this.IsNull(this.tabletGD_Event.EventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventIDNull() {
                this[this.tabletGD_Event.EventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPEventIDNull() {
                return this.IsNull(this.tabletGD_Event.PEventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPEventIDNull() {
                this[this.tabletGD_Event.PEventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventNumberNull() {
                return this.IsNull(this.tabletGD_Event.EventNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventNumberNull() {
                this[this.tabletGD_Event.EventNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeatureIDNull() {
                return this.IsNull(this.tabletGD_Event.FeatureIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeatureIDNull() {
                this[this.tabletGD_Event.FeatureIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventTypeIDNull() {
                return this.IsNull(this.tabletGD_Event.EventTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventTypeIDNull() {
                this[this.tabletGD_Event.EventTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWOIDNull() {
                return this.IsNull(this.tabletGD_Event.WOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWOIDNull() {
                this[this.tabletGD_Event.WOIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventDateNull() {
                return this.IsNull(this.tabletGD_Event.EventDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventDateNull() {
                this[this.tabletGD_Event.EventDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusIDNull() {
                return this.IsNull(this.tabletGD_Event.StatusIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusIDNull() {
                this[this.tabletGD_Event.StatusIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCompleteNull() {
                return this.IsNull(this.tabletGD_Event.IsCompleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCompleteNull() {
                this[this.tabletGD_Event.IsCompleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletGD_Event.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletGD_Event.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletGD_Event.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletGD_Event.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletGD_Event.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletGD_Event.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletGD_Event.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletGD_Event.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletGD_Event.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletGD_Event.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletGD_Event.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletGD_Event.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconversionNull() {
                return this.IsNull(this.tabletGD_Event.conversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconversionNull() {
                this[this.tabletGD_Event.conversionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tabletGD_Event.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tabletGD_Event.EndDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_UserGroupRow : global::System.Data.DataRow {
            
            private tTS_UserGroupDataTable tabletTS_UserGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_UserGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_UserGroup = ((tTS_UserGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short GroupID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_UserGroup.GroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupID\' in table \'tTS_UserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserGroup.GroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_UserGroup.GroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupName\' in table \'tTS_UserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserGroup.GroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletTS_UserGroup.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tTS_UserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserGroup.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ApplicationID {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_UserGroup.ApplicationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicationID\' in table \'tTS_UserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserGroup.ApplicationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_UserGroup.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_UserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserGroup.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_UserGroup.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_UserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserGroup.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_UserGroup.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_UserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserGroup.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_UserGroup.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_UserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserGroup.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_UserGroup.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_UserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserGroup.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupIDNull() {
                return this.IsNull(this.tabletTS_UserGroup.GroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupIDNull() {
                this[this.tabletTS_UserGroup.GroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupNameNull() {
                return this.IsNull(this.tabletTS_UserGroup.GroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupNameNull() {
                this[this.tabletTS_UserGroup.GroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletTS_UserGroup.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletTS_UserGroup.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationIDNull() {
                return this.IsNull(this.tabletTS_UserGroup.ApplicationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationIDNull() {
                this[this.tabletTS_UserGroup.ApplicationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_UserGroup.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_UserGroup.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_UserGroup.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_UserGroup.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_UserGroup.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_UserGroup.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_UserGroup.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_UserGroup.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_UserGroup.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_UserGroup.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_UserRow : global::System.Data.DataRow {
            
            private tTS_UserDataTable tabletTS_User;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_UserRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_User = ((tTS_UserDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_User.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name_Display {
                get {
                    try {
                        return ((string)(this[this.tabletTS_User.Name_DisplayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name_Display\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.Name_DisplayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name_Full {
                get {
                    try {
                        return ((string)(this[this.tabletTS_User.Name_FullColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name_Full\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.Name_FullColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name_Net {
                get {
                    try {
                        return ((string)(this[this.tabletTS_User.Name_NetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name_Net\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.Name_NetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tabletTS_User.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Rate {
                get {
                    try {
                        return ((float)(this[this.tabletTS_User.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_User.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdministrator {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_User.IsAdministratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAdministrator\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.IsAdministratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ApplicationID {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_User.ApplicationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicationID\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.ApplicationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_User.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_User.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_User.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_User.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_User.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tabletTS_User.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tabletTS_User.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName_DisplayNull() {
                return this.IsNull(this.tabletTS_User.Name_DisplayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName_DisplayNull() {
                this[this.tabletTS_User.Name_DisplayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName_FullNull() {
                return this.IsNull(this.tabletTS_User.Name_FullColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName_FullNull() {
                this[this.tabletTS_User.Name_FullColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName_NetNull() {
                return this.IsNull(this.tabletTS_User.Name_NetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName_NetNull() {
                this[this.tabletTS_User.Name_NetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tabletTS_User.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tabletTS_User.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tabletTS_User.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tabletTS_User.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletTS_User.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletTS_User.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAdministratorNull() {
                return this.IsNull(this.tabletTS_User.IsAdministratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAdministratorNull() {
                this[this.tabletTS_User.IsAdministratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationIDNull() {
                return this.IsNull(this.tabletTS_User.ApplicationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationIDNull() {
                this[this.tabletTS_User.ApplicationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_User.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_User.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_User.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_User.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_User.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_User.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_User.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_User.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_User.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_User.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_User2GroupRow : global::System.Data.DataRow {
            
            private tTS_User2GroupDataTable tabletTS_User2Group;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_User2GroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_User2Group = ((tTS_User2GroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_User2Group.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'tTS_User2Group\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User2Group.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short GroupID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_User2Group.GroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupID\' in table \'tTS_User2Group\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User2Group.GroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_User2Group.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_User2Group\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User2Group.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_User2Group.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_User2Group\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User2Group.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_User2Group.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_User2Group\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User2Group.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_User2Group.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_User2Group\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User2Group.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_User2Group.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_User2Group\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_User2Group.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tabletTS_User2Group.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tabletTS_User2Group.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupIDNull() {
                return this.IsNull(this.tabletTS_User2Group.GroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupIDNull() {
                this[this.tabletTS_User2Group.GroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_User2Group.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_User2Group.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_User2Group.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_User2Group.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_User2Group.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_User2Group.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_User2Group.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_User2Group.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_User2Group.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_User2Group.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_UserPermissionRow : global::System.Data.DataRow {
            
            private tTS_UserPermissionDataTable tabletTS_UserPermission;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_UserPermissionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_UserPermission = ((tTS_UserPermissionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short GroupID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_UserPermission.GroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupID\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.GroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tabletTS_UserPermission.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPermissionMenu {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_UserPermission.IsPermissionMenuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPermissionMenu\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.IsPermissionMenuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPermissionOpen {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_UserPermission.IsPermissionOpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPermissionOpen\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.IsPermissionOpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPermissionAdd {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_UserPermission.IsPermissionAddColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPermissionAdd\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.IsPermissionAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPermissionEdit {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_UserPermission.IsPermissionEditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPermissionEdit\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.IsPermissionEditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPermissionDelete {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_UserPermission.IsPermissionDeleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPermissionDelete\' in table \'tTS_UserPermission\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.IsPermissionDeleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ApplicationID {
                get {
                    try {
                        return ((byte)(this[this.tabletTS_UserPermission.ApplicationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplicationID\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.ApplicationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_UserPermission.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_UserPermission.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_UserPermission.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_UserPermission.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_UserPermission.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_UserPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_UserPermission.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupIDNull() {
                return this.IsNull(this.tabletTS_UserPermission.GroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupIDNull() {
                this[this.tabletTS_UserPermission.GroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tabletTS_UserPermission.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tabletTS_UserPermission.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPermissionMenuNull() {
                return this.IsNull(this.tabletTS_UserPermission.IsPermissionMenuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPermissionMenuNull() {
                this[this.tabletTS_UserPermission.IsPermissionMenuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPermissionOpenNull() {
                return this.IsNull(this.tabletTS_UserPermission.IsPermissionOpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPermissionOpenNull() {
                this[this.tabletTS_UserPermission.IsPermissionOpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPermissionAddNull() {
                return this.IsNull(this.tabletTS_UserPermission.IsPermissionAddColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPermissionAddNull() {
                this[this.tabletTS_UserPermission.IsPermissionAddColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPermissionEditNull() {
                return this.IsNull(this.tabletTS_UserPermission.IsPermissionEditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPermissionEditNull() {
                this[this.tabletTS_UserPermission.IsPermissionEditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPermissionDeleteNull() {
                return this.IsNull(this.tabletTS_UserPermission.IsPermissionDeleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPermissionDeleteNull() {
                this[this.tabletTS_UserPermission.IsPermissionDeleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationIDNull() {
                return this.IsNull(this.tabletTS_UserPermission.ApplicationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationIDNull() {
                this[this.tabletTS_UserPermission.ApplicationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_UserPermission.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_UserPermission.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_UserPermission.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_UserPermission.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_UserPermission.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_UserPermission.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_UserPermission.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_UserPermission.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_UserPermission.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_UserPermission.IsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tTS_OwnerRow : global::System.Data.DataRow {
            
            private tTS_OwnerDataTable tabletTS_Owner;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tTS_OwnerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletTS_Owner = ((tTS_OwnerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Owner.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.ZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zip\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Owner.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaser {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Owner.IsPurchaserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPurchaser\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.IsPurchaserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeceased {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Owner.IsDeceasedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeceased\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.IsDeceasedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletTS_Owner.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Owner.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletTS_Owner.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletTS_Owner.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletTS_Owner.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerCode {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.OwnerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerCode\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.OwnerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conversion {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.conversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conversion\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.conversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastFirst {
                get {
                    try {
                        return ((string)(this[this.tabletTS_Owner.LastFirstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastFirst\' in table \'tTS_Owner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletTS_Owner.LastFirstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tabletTS_Owner.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tabletTS_Owner.OwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tabletTS_Owner.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tabletTS_Owner.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tabletTS_Owner.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tabletTS_Owner.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabletTS_Owner.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tabletTS_Owner.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabletTS_Owner.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabletTS_Owner.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tabletTS_Owner.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tabletTS_Owner.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tabletTS_Owner.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tabletTS_Owner.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipNull() {
                return this.IsNull(this.tabletTS_Owner.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipNull() {
                this[this.tabletTS_Owner.ZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tabletTS_Owner.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tabletTS_Owner.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tabletTS_Owner.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tabletTS_Owner.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tabletTS_Owner.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tabletTS_Owner.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPurchaserNull() {
                return this.IsNull(this.tabletTS_Owner.IsPurchaserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPurchaserNull() {
                this[this.tabletTS_Owner.IsPurchaserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeceasedNull() {
                return this.IsNull(this.tabletTS_Owner.IsDeceasedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeceasedNull() {
                this[this.tabletTS_Owner.IsDeceasedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletTS_Owner.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletTS_Owner.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletTS_Owner.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletTS_Owner.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletTS_Owner.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletTS_Owner.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletTS_Owner.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletTS_Owner.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletTS_Owner.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletTS_Owner.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerCodeNull() {
                return this.IsNull(this.tabletTS_Owner.OwnerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerCodeNull() {
                this[this.tabletTS_Owner.OwnerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconversionNull() {
                return this.IsNull(this.tabletTS_Owner.conversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconversionNull() {
                this[this.tabletTS_Owner.conversionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastFirstNull() {
                return this.IsNull(this.tabletTS_Owner.LastFirstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastFirstNull() {
                this[this.tabletTS_Owner.LastFirstColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tAA_MOwnerRow : global::System.Data.DataRow {
            
            private tAA_MOwnerDataTable tabletAA_MOwner;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tAA_MOwnerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletAA_MOwner = ((tAA_MOwnerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOwnerID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MOwner.MOwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOwnerID\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.MOwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MOwner.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OwnerPercent {
                get {
                    try {
                        return ((decimal)(this[this.tabletAA_MOwner.OwnerPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerPercent\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.OwnerPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte MownerTypeID {
                get {
                    try {
                        return ((byte)(this[this.tabletAA_MOwner.MownerTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MownerTypeID\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.MownerTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InsertedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MOwner.InsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedBy\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.InsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletAA_MOwner.InsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertedDate\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.InsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tabletAA_MOwner.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.UpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MOwner.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModuleID {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MOwner.ModuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModuleID\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.ModuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conversion {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MOwner.conversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conversion\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.conversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    try {
                        return ((string)(this[this.tabletAA_MOwner.ParcelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNumber\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tabletAA_MOwner.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrent {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MOwner.IsCurrentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCurrent\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.IsCurrentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimary {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MOwner.IsPrimaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPrimary\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.IsPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxPayer {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MOwner.IsTaxPayerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTaxPayer\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.IsTaxPayerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRExtra {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MOwner.IsTRExtraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTRExtra\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.IsTRExtraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRSelected {
                get {
                    try {
                        return ((bool)(this[this.tabletAA_MOwner.IsTRSelectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTRSelected\' in table \'tAA_MOwner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletAA_MOwner.IsTRSelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOwnerIDNull() {
                return this.IsNull(this.tabletAA_MOwner.MOwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOwnerIDNull() {
                this[this.tabletAA_MOwner.MOwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tabletAA_MOwner.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tabletAA_MOwner.OwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerPercentNull() {
                return this.IsNull(this.tabletAA_MOwner.OwnerPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerPercentNull() {
                this[this.tabletAA_MOwner.OwnerPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMownerTypeIDNull() {
                return this.IsNull(this.tabletAA_MOwner.MownerTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMownerTypeIDNull() {
                this[this.tabletAA_MOwner.MownerTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedByNull() {
                return this.IsNull(this.tabletAA_MOwner.InsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedByNull() {
                this[this.tabletAA_MOwner.InsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsertedDateNull() {
                return this.IsNull(this.tabletAA_MOwner.InsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsertedDateNull() {
                this[this.tabletAA_MOwner.InsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedByNull() {
                return this.IsNull(this.tabletAA_MOwner.UpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedByNull() {
                this[this.tabletAA_MOwner.UpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tabletAA_MOwner.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeletedNull() {
                this[this.tabletAA_MOwner.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuleIDNull() {
                return this.IsNull(this.tabletAA_MOwner.ModuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuleIDNull() {
                this[this.tabletAA_MOwner.ModuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconversionNull() {
                return this.IsNull(this.tabletAA_MOwner.conversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconversionNull() {
                this[this.tabletAA_MOwner.conversionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tabletAA_MOwner.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tabletAA_MOwner.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tabletAA_MOwner.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tabletAA_MOwner.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCurrentNull() {
                return this.IsNull(this.tabletAA_MOwner.IsCurrentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCurrentNull() {
                this[this.tabletAA_MOwner.IsCurrentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPrimaryNull() {
                return this.IsNull(this.tabletAA_MOwner.IsPrimaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPrimaryNull() {
                this[this.tabletAA_MOwner.IsPrimaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsTaxPayerNull() {
                return this.IsNull(this.tabletAA_MOwner.IsTaxPayerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsTaxPayerNull() {
                this[this.tabletAA_MOwner.IsTaxPayerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsTRExtraNull() {
                return this.IsNull(this.tabletAA_MOwner.IsTRExtraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsTRExtraNull() {
                this[this.tabletAA_MOwner.IsTRExtraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsTRSelectedNull() {
                return this.IsNull(this.tabletAA_MOwner.IsTRSelectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsTRSelectedNull() {
                this[this.tabletAA_MOwner.IsTRSelectedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetChkOutXMLRow : global::System.Data.DataRow {
            
            private GetChkOutXMLDataTable tableGetChkOutXML;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetChkOutXMLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetChkOutXML = ((GetChkOutXMLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChkOutXML {
                get {
                    try {
                        return ((string)(this[this.tableGetChkOutXML.ChkOutXMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChkOutXML\' in table \'GetChkOutXML\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetChkOutXML.ChkOutXMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TableXML {
                get {
                    try {
                        return ((string)(this[this.tableGetChkOutXML.TableXMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TableXML\' in table \'GetChkOutXML\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetChkOutXML.TableXMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChkOutXMLNull() {
                return this.IsNull(this.tableGetChkOutXML.ChkOutXMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChkOutXMLNull() {
                this[this.tableGetChkOutXML.ChkOutXMLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTableXMLNull() {
                return this.IsNull(this.tableGetChkOutXML.TableXMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTableXMLNull() {
                this[this.tableGetChkOutXML.TableXMLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListSnapshotTableRowChangeEvent : global::System.EventArgs {
            
            private ListSnapshotTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListSnapshotTableRowChangeEvent(ListSnapshotTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListSnapshotTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListPreviewDetailTableRowChangeEvent : global::System.EventArgs {
            
            private ListPreviewDetailTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPreviewDetailTableRowChangeEvent(ListPreviewDetailTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListPreviewDetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListCfgConfigTableRowChangeEvent : global::System.EventArgs {
            
            private ListCfgConfigTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListCfgConfigTableRowChangeEvent(ListCfgConfigTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListCfgConfigTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_CheckoutConfigurationRowChangeEvent : global::System.EventArgs {
            
            private tTS_CheckoutConfigurationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CheckoutConfigurationRowChangeEvent(tTS_CheckoutConfigurationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CheckoutConfigurationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_ApplicationRowChangeEvent : global::System.EventArgs {
            
            private tTS_ApplicationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_ApplicationRowChangeEvent(tTS_ApplicationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_ApplicationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_FormMenuRowChangeEvent : global::System.EventArgs {
            
            private tTS_FormMenuRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormMenuRowChangeEvent(tTS_FormMenuRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormMenuRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_CfgRowChangeEvent : global::System.EventArgs {
            
            private tTS_CfgRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CfgRowChangeEvent(tTS_CfgRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_CfgRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_FormRowChangeEvent : global::System.EventArgs {
            
            private tTS_FormRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormRowChangeEvent(tTS_FormRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_FormSandwichRowChangeEvent : global::System.EventArgs {
            
            private tTS_FormSandwichRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSandwichRowChangeEvent(tTS_FormSandwichRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSandwichRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_FormConfigRowChangeEvent : global::System.EventArgs {
            
            private tTS_FormConfigRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormConfigRowChangeEvent(tTS_FormConfigRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormConfigRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_FormSliceRowChangeEvent : global::System.EventArgs {
            
            private tTS_FormSliceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSliceRowChangeEvent(tTS_FormSliceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_FormSliceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_ValueSliceRowChangeEvent : global::System.EventArgs {
            
            private tAA_ValueSliceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ValueSliceRowChangeEvent(tAA_ValueSliceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ValueSliceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_Object2SliceRowChangeEvent : global::System.EventArgs {
            
            private tAA_Object2SliceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Object2SliceRowChangeEvent(tAA_Object2SliceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Object2SliceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tGD_SystemRowChangeEvent : global::System.EventArgs {
            
            private tGD_SystemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_SystemRowChangeEvent(tGD_SystemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_SystemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_ParcelRowChangeEvent : global::System.EventArgs {
            
            private tAA_ParcelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelRowChangeEvent(tAA_ParcelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_ObjectRowChangeEvent : global::System.EventArgs {
            
            private tAA_ObjectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectRowChangeEvent(tAA_ObjectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_SliceTypeRowChangeEvent : global::System.EventArgs {
            
            private tAA_SliceTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_SliceTypeRowChangeEvent(tAA_SliceTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_SliceTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_QueryViewRowChangeEvent : global::System.EventArgs {
            
            private tTS_QueryViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewRowChangeEvent(tTS_QueryViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_QueryViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_NBHDRowChangeEvent : global::System.EventArgs {
            
            private tAA_NBHDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDRowChangeEvent(tAA_NBHDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_NBHDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_DistrictRowChangeEvent : global::System.EventArgs {
            
            private tTS_DistrictRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_DistrictRowChangeEvent(tTS_DistrictRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_DistrictRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_ParcelTypeRowChangeEvent : global::System.EventArgs {
            
            private tAA_ParcelTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelTypeRowChangeEvent(tAA_ParcelTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ParcelTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_SubDivisionRowChangeEvent : global::System.EventArgs {
            
            private tTS_SubDivisionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SubDivisionRowChangeEvent(tTS_SubDivisionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SubDivisionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_LegalRowChangeEvent : global::System.EventArgs {
            
            private tTS_LegalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_LegalRowChangeEvent(tTS_LegalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_LegalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_SitusRowChangeEvent : global::System.EventArgs {
            
            private tTS_SitusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SitusRowChangeEvent(tTS_SitusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_SitusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_ObjectGroupRowChangeEvent : global::System.EventArgs {
            
            private tAA_ObjectGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectGroupRowChangeEvent(tAA_ObjectGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_ObjectTypeRowChangeEvent : global::System.EventArgs {
            
            private tAA_ObjectTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectTypeRowChangeEvent(tAA_ObjectTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_ObjectTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_Misc_CatalogRowChangeEvent : global::System.EventArgs {
            
            private tAA_Misc_CatalogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogRowChangeEvent(tAA_Misc_CatalogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_Misc_CatalogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MiscRowChangeEvent : global::System.EventArgs {
            
            private tAA_MiscRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscRowChangeEvent(tAA_MiscRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MiscRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_UnitRowChangeEvent : global::System.EventArgs {
            
            private tTS_UnitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UnitRowChangeEvent(tTS_UnitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UnitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_StreetListRowChangeEvent : global::System.EventArgs {
            
            private tTS_StreetListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_StreetListRowChangeEvent(tTS_StreetListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_StreetListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tGD_FeatureClassRowChangeEvent : global::System.EventArgs {
            
            private tGD_FeatureClassRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_FeatureClassRowChangeEvent(tGD_FeatureClassRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_FeatureClassRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tGD_EventTypeRowChangeEvent : global::System.EventArgs {
            
            private tGD_EventTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventTypeRowChangeEvent(tGD_EventTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tGD_EG_StatusRowChangeEvent : global::System.EventArgs {
            
            private tGD_EG_StatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EG_StatusRowChangeEvent(tGD_EG_StatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EG_StatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tGD_EventRowChangeEvent : global::System.EventArgs {
            
            private tGD_EventRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventRowChangeEvent(tGD_EventRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tGD_EventRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_UserGroupRowChangeEvent : global::System.EventArgs {
            
            private tTS_UserGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserGroupRowChangeEvent(tTS_UserGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_UserRowChangeEvent : global::System.EventArgs {
            
            private tTS_UserRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserRowChangeEvent(tTS_UserRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_User2GroupRowChangeEvent : global::System.EventArgs {
            
            private tTS_User2GroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_User2GroupRowChangeEvent(tTS_User2GroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_User2GroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_UserPermissionRowChangeEvent : global::System.EventArgs {
            
            private tTS_UserPermissionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserPermissionRowChangeEvent(tTS_UserPermissionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_UserPermissionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tTS_OwnerRowChangeEvent : global::System.EventArgs {
            
            private tTS_OwnerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_OwnerRowChangeEvent(tTS_OwnerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tTS_OwnerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tAA_MOwnerRowChangeEvent : global::System.EventArgs {
            
            private tAA_MOwnerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MOwnerRowChangeEvent(tAA_MOwnerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tAA_MOwnerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetChkOutXMLRowChangeEvent : global::System.EventArgs {
            
            private GetChkOutXMLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetChkOutXMLRowChangeEvent(GetChkOutXMLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetChkOutXMLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591