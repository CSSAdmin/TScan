//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8689
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F29505CreateSubdivisionData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F29505CreateSubdivisionData : global::System.Data.DataSet {
        
        private F29505_StateCodeComboDetailsDataTable tableF29505_StateCodeComboDetails;
        
        private F29505_DistrictComboDetailsDataTable tableF29505_DistrictComboDetails;
        
        private F29505_NeighborhoodComboDetailsDataTable tableF29505_NeighborhoodComboDetails;
        
        private F29505_SubdivisionComboDetailsDataTable tableF29505_SubdivisionComboDetails;
        
        private F29505_LandType1ComboDetailsDataTable tableF29505_LandType1ComboDetails;
        
        private F29505_LandType2ComboDetailsDataTable tableF29505_LandType2ComboDetails;
        
        private F29505_LandType3ComboDetailsDataTable tableF29505_LandType3ComboDetails;
        
        private F29505_Get_SubdivisionGridDetailsDataTable tableF29505_Get_SubdivisionGridDetails;
        
        private F29505_Get_SubdivisionHeaderDetailsDataTable tableF29505_Get_SubdivisionHeaderDetails;
        
        private Get_LandCodeValueDataTable tableGet_LandCodeValue;
        
        private Get_LandCodeAllValueDataTable tableGet_LandCodeAllValue;
        
        private f36035ListLandCodesDataTable tablef36035ListLandCodes;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F29505CreateSubdivisionData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F29505CreateSubdivisionData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["F29505_StateCodeComboDetails"] != null)) {
                    base.Tables.Add(new F29505_StateCodeComboDetailsDataTable(ds.Tables["F29505_StateCodeComboDetails"]));
                }
                if ((ds.Tables["F29505_DistrictComboDetails"] != null)) {
                    base.Tables.Add(new F29505_DistrictComboDetailsDataTable(ds.Tables["F29505_DistrictComboDetails"]));
                }
                if ((ds.Tables["F29505_NeighborhoodComboDetails"] != null)) {
                    base.Tables.Add(new F29505_NeighborhoodComboDetailsDataTable(ds.Tables["F29505_NeighborhoodComboDetails"]));
                }
                if ((ds.Tables["F29505_SubdivisionComboDetails"] != null)) {
                    base.Tables.Add(new F29505_SubdivisionComboDetailsDataTable(ds.Tables["F29505_SubdivisionComboDetails"]));
                }
                if ((ds.Tables["F29505_LandType1ComboDetails"] != null)) {
                    base.Tables.Add(new F29505_LandType1ComboDetailsDataTable(ds.Tables["F29505_LandType1ComboDetails"]));
                }
                if ((ds.Tables["F29505_LandType2ComboDetails"] != null)) {
                    base.Tables.Add(new F29505_LandType2ComboDetailsDataTable(ds.Tables["F29505_LandType2ComboDetails"]));
                }
                if ((ds.Tables["F29505_LandType3ComboDetails"] != null)) {
                    base.Tables.Add(new F29505_LandType3ComboDetailsDataTable(ds.Tables["F29505_LandType3ComboDetails"]));
                }
                if ((ds.Tables["F29505_Get_SubdivisionGridDetails"] != null)) {
                    base.Tables.Add(new F29505_Get_SubdivisionGridDetailsDataTable(ds.Tables["F29505_Get_SubdivisionGridDetails"]));
                }
                if ((ds.Tables["F29505_Get_SubdivisionHeaderDetails"] != null)) {
                    base.Tables.Add(new F29505_Get_SubdivisionHeaderDetailsDataTable(ds.Tables["F29505_Get_SubdivisionHeaderDetails"]));
                }
                if ((ds.Tables["Get_LandCodeValue"] != null)) {
                    base.Tables.Add(new Get_LandCodeValueDataTable(ds.Tables["Get_LandCodeValue"]));
                }
                if ((ds.Tables["Get_LandCodeAllValue"] != null)) {
                    base.Tables.Add(new Get_LandCodeAllValueDataTable(ds.Tables["Get_LandCodeAllValue"]));
                }
                if ((ds.Tables["f36035ListLandCodes"] != null)) {
                    base.Tables.Add(new f36035ListLandCodesDataTable(ds.Tables["f36035ListLandCodes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F29505_StateCodeComboDetailsDataTable F29505_StateCodeComboDetails {
            get {
                return this.tableF29505_StateCodeComboDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F29505_DistrictComboDetailsDataTable F29505_DistrictComboDetails {
            get {
                return this.tableF29505_DistrictComboDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F29505_NeighborhoodComboDetailsDataTable F29505_NeighborhoodComboDetails {
            get {
                return this.tableF29505_NeighborhoodComboDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F29505_SubdivisionComboDetailsDataTable F29505_SubdivisionComboDetails {
            get {
                return this.tableF29505_SubdivisionComboDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F29505_LandType1ComboDetailsDataTable F29505_LandType1ComboDetails {
            get {
                return this.tableF29505_LandType1ComboDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F29505_LandType2ComboDetailsDataTable F29505_LandType2ComboDetails {
            get {
                return this.tableF29505_LandType2ComboDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F29505_LandType3ComboDetailsDataTable F29505_LandType3ComboDetails {
            get {
                return this.tableF29505_LandType3ComboDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F29505_Get_SubdivisionGridDetailsDataTable F29505_Get_SubdivisionGridDetails {
            get {
                return this.tableF29505_Get_SubdivisionGridDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F29505_Get_SubdivisionHeaderDetailsDataTable F29505_Get_SubdivisionHeaderDetails {
            get {
                return this.tableF29505_Get_SubdivisionHeaderDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Get_LandCodeValueDataTable Get_LandCodeValue {
            get {
                return this.tableGet_LandCodeValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Get_LandCodeAllValueDataTable Get_LandCodeAllValue {
            get {
                return this.tableGet_LandCodeAllValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f36035ListLandCodesDataTable f36035ListLandCodes {
            get {
                return this.tablef36035ListLandCodes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F29505CreateSubdivisionData cln = ((F29505CreateSubdivisionData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["F29505_StateCodeComboDetails"] != null)) {
                    base.Tables.Add(new F29505_StateCodeComboDetailsDataTable(ds.Tables["F29505_StateCodeComboDetails"]));
                }
                if ((ds.Tables["F29505_DistrictComboDetails"] != null)) {
                    base.Tables.Add(new F29505_DistrictComboDetailsDataTable(ds.Tables["F29505_DistrictComboDetails"]));
                }
                if ((ds.Tables["F29505_NeighborhoodComboDetails"] != null)) {
                    base.Tables.Add(new F29505_NeighborhoodComboDetailsDataTable(ds.Tables["F29505_NeighborhoodComboDetails"]));
                }
                if ((ds.Tables["F29505_SubdivisionComboDetails"] != null)) {
                    base.Tables.Add(new F29505_SubdivisionComboDetailsDataTable(ds.Tables["F29505_SubdivisionComboDetails"]));
                }
                if ((ds.Tables["F29505_LandType1ComboDetails"] != null)) {
                    base.Tables.Add(new F29505_LandType1ComboDetailsDataTable(ds.Tables["F29505_LandType1ComboDetails"]));
                }
                if ((ds.Tables["F29505_LandType2ComboDetails"] != null)) {
                    base.Tables.Add(new F29505_LandType2ComboDetailsDataTable(ds.Tables["F29505_LandType2ComboDetails"]));
                }
                if ((ds.Tables["F29505_LandType3ComboDetails"] != null)) {
                    base.Tables.Add(new F29505_LandType3ComboDetailsDataTable(ds.Tables["F29505_LandType3ComboDetails"]));
                }
                if ((ds.Tables["F29505_Get_SubdivisionGridDetails"] != null)) {
                    base.Tables.Add(new F29505_Get_SubdivisionGridDetailsDataTable(ds.Tables["F29505_Get_SubdivisionGridDetails"]));
                }
                if ((ds.Tables["F29505_Get_SubdivisionHeaderDetails"] != null)) {
                    base.Tables.Add(new F29505_Get_SubdivisionHeaderDetailsDataTable(ds.Tables["F29505_Get_SubdivisionHeaderDetails"]));
                }
                if ((ds.Tables["Get_LandCodeValue"] != null)) {
                    base.Tables.Add(new Get_LandCodeValueDataTable(ds.Tables["Get_LandCodeValue"]));
                }
                if ((ds.Tables["Get_LandCodeAllValue"] != null)) {
                    base.Tables.Add(new Get_LandCodeAllValueDataTable(ds.Tables["Get_LandCodeAllValue"]));
                }
                if ((ds.Tables["f36035ListLandCodes"] != null)) {
                    base.Tables.Add(new f36035ListLandCodesDataTable(ds.Tables["f36035ListLandCodes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableF29505_StateCodeComboDetails = ((F29505_StateCodeComboDetailsDataTable)(base.Tables["F29505_StateCodeComboDetails"]));
            if ((initTable == true)) {
                if ((this.tableF29505_StateCodeComboDetails != null)) {
                    this.tableF29505_StateCodeComboDetails.InitVars();
                }
            }
            this.tableF29505_DistrictComboDetails = ((F29505_DistrictComboDetailsDataTable)(base.Tables["F29505_DistrictComboDetails"]));
            if ((initTable == true)) {
                if ((this.tableF29505_DistrictComboDetails != null)) {
                    this.tableF29505_DistrictComboDetails.InitVars();
                }
            }
            this.tableF29505_NeighborhoodComboDetails = ((F29505_NeighborhoodComboDetailsDataTable)(base.Tables["F29505_NeighborhoodComboDetails"]));
            if ((initTable == true)) {
                if ((this.tableF29505_NeighborhoodComboDetails != null)) {
                    this.tableF29505_NeighborhoodComboDetails.InitVars();
                }
            }
            this.tableF29505_SubdivisionComboDetails = ((F29505_SubdivisionComboDetailsDataTable)(base.Tables["F29505_SubdivisionComboDetails"]));
            if ((initTable == true)) {
                if ((this.tableF29505_SubdivisionComboDetails != null)) {
                    this.tableF29505_SubdivisionComboDetails.InitVars();
                }
            }
            this.tableF29505_LandType1ComboDetails = ((F29505_LandType1ComboDetailsDataTable)(base.Tables["F29505_LandType1ComboDetails"]));
            if ((initTable == true)) {
                if ((this.tableF29505_LandType1ComboDetails != null)) {
                    this.tableF29505_LandType1ComboDetails.InitVars();
                }
            }
            this.tableF29505_LandType2ComboDetails = ((F29505_LandType2ComboDetailsDataTable)(base.Tables["F29505_LandType2ComboDetails"]));
            if ((initTable == true)) {
                if ((this.tableF29505_LandType2ComboDetails != null)) {
                    this.tableF29505_LandType2ComboDetails.InitVars();
                }
            }
            this.tableF29505_LandType3ComboDetails = ((F29505_LandType3ComboDetailsDataTable)(base.Tables["F29505_LandType3ComboDetails"]));
            if ((initTable == true)) {
                if ((this.tableF29505_LandType3ComboDetails != null)) {
                    this.tableF29505_LandType3ComboDetails.InitVars();
                }
            }
            this.tableF29505_Get_SubdivisionGridDetails = ((F29505_Get_SubdivisionGridDetailsDataTable)(base.Tables["F29505_Get_SubdivisionGridDetails"]));
            if ((initTable == true)) {
                if ((this.tableF29505_Get_SubdivisionGridDetails != null)) {
                    this.tableF29505_Get_SubdivisionGridDetails.InitVars();
                }
            }
            this.tableF29505_Get_SubdivisionHeaderDetails = ((F29505_Get_SubdivisionHeaderDetailsDataTable)(base.Tables["F29505_Get_SubdivisionHeaderDetails"]));
            if ((initTable == true)) {
                if ((this.tableF29505_Get_SubdivisionHeaderDetails != null)) {
                    this.tableF29505_Get_SubdivisionHeaderDetails.InitVars();
                }
            }
            this.tableGet_LandCodeValue = ((Get_LandCodeValueDataTable)(base.Tables["Get_LandCodeValue"]));
            if ((initTable == true)) {
                if ((this.tableGet_LandCodeValue != null)) {
                    this.tableGet_LandCodeValue.InitVars();
                }
            }
            this.tableGet_LandCodeAllValue = ((Get_LandCodeAllValueDataTable)(base.Tables["Get_LandCodeAllValue"]));
            if ((initTable == true)) {
                if ((this.tableGet_LandCodeAllValue != null)) {
                    this.tableGet_LandCodeAllValue.InitVars();
                }
            }
            this.tablef36035ListLandCodes = ((f36035ListLandCodesDataTable)(base.Tables["f36035ListLandCodes"]));
            if ((initTable == true)) {
                if ((this.tablef36035ListLandCodes != null)) {
                    this.tablef36035ListLandCodes.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F29505CreateSubdivisionData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F29505CreateSubdivisionData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableF29505_StateCodeComboDetails = new F29505_StateCodeComboDetailsDataTable();
            base.Tables.Add(this.tableF29505_StateCodeComboDetails);
            this.tableF29505_DistrictComboDetails = new F29505_DistrictComboDetailsDataTable();
            base.Tables.Add(this.tableF29505_DistrictComboDetails);
            this.tableF29505_NeighborhoodComboDetails = new F29505_NeighborhoodComboDetailsDataTable();
            base.Tables.Add(this.tableF29505_NeighborhoodComboDetails);
            this.tableF29505_SubdivisionComboDetails = new F29505_SubdivisionComboDetailsDataTable();
            base.Tables.Add(this.tableF29505_SubdivisionComboDetails);
            this.tableF29505_LandType1ComboDetails = new F29505_LandType1ComboDetailsDataTable();
            base.Tables.Add(this.tableF29505_LandType1ComboDetails);
            this.tableF29505_LandType2ComboDetails = new F29505_LandType2ComboDetailsDataTable();
            base.Tables.Add(this.tableF29505_LandType2ComboDetails);
            this.tableF29505_LandType3ComboDetails = new F29505_LandType3ComboDetailsDataTable();
            base.Tables.Add(this.tableF29505_LandType3ComboDetails);
            this.tableF29505_Get_SubdivisionGridDetails = new F29505_Get_SubdivisionGridDetailsDataTable();
            base.Tables.Add(this.tableF29505_Get_SubdivisionGridDetails);
            this.tableF29505_Get_SubdivisionHeaderDetails = new F29505_Get_SubdivisionHeaderDetailsDataTable();
            base.Tables.Add(this.tableF29505_Get_SubdivisionHeaderDetails);
            this.tableGet_LandCodeValue = new Get_LandCodeValueDataTable();
            base.Tables.Add(this.tableGet_LandCodeValue);
            this.tableGet_LandCodeAllValue = new Get_LandCodeAllValueDataTable();
            base.Tables.Add(this.tableGet_LandCodeAllValue);
            this.tablef36035ListLandCodes = new f36035ListLandCodesDataTable();
            base.Tables.Add(this.tablef36035ListLandCodes);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF29505_StateCodeComboDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF29505_DistrictComboDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF29505_NeighborhoodComboDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF29505_SubdivisionComboDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF29505_LandType1ComboDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF29505_LandType2ComboDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF29505_LandType3ComboDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF29505_Get_SubdivisionGridDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeF29505_Get_SubdivisionHeaderDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGet_LandCodeValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGet_LandCodeAllValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef36035ListLandCodes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void F29505_StateCodeComboDetailsRowChangeEventHandler(object sender, F29505_StateCodeComboDetailsRowChangeEvent e);
        
        public delegate void F29505_DistrictComboDetailsRowChangeEventHandler(object sender, F29505_DistrictComboDetailsRowChangeEvent e);
        
        public delegate void F29505_NeighborhoodComboDetailsRowChangeEventHandler(object sender, F29505_NeighborhoodComboDetailsRowChangeEvent e);
        
        public delegate void F29505_SubdivisionComboDetailsRowChangeEventHandler(object sender, F29505_SubdivisionComboDetailsRowChangeEvent e);
        
        public delegate void F29505_LandType1ComboDetailsRowChangeEventHandler(object sender, F29505_LandType1ComboDetailsRowChangeEvent e);
        
        public delegate void F29505_LandType2ComboDetailsRowChangeEventHandler(object sender, F29505_LandType2ComboDetailsRowChangeEvent e);
        
        public delegate void F29505_LandType3ComboDetailsRowChangeEventHandler(object sender, F29505_LandType3ComboDetailsRowChangeEvent e);
        
        public delegate void F29505_Get_SubdivisionGridDetailsRowChangeEventHandler(object sender, F29505_Get_SubdivisionGridDetailsRowChangeEvent e);
        
        public delegate void F29505_Get_SubdivisionHeaderDetailsRowChangeEventHandler(object sender, F29505_Get_SubdivisionHeaderDetailsRowChangeEvent e);
        
        public delegate void Get_LandCodeValueRowChangeEventHandler(object sender, Get_LandCodeValueRowChangeEvent e);
        
        public delegate void Get_LandCodeAllValueRowChangeEventHandler(object sender, Get_LandCodeAllValueRowChangeEvent e);
        
        public delegate void f36035ListLandCodesRowChangeEventHandler(object sender, f36035ListLandCodesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F29505_StateCodeComboDetailsDataTable : global::System.Data.TypedTableBase<F29505_StateCodeComboDetailsRow> {
            
            private global::System.Data.DataColumn columnStateCodeID;
            
            private global::System.Data.DataColumn columnStateCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_StateCodeComboDetailsDataTable() {
                this.TableName = "F29505_StateCodeComboDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_StateCodeComboDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F29505_StateCodeComboDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeIDColumn {
                get {
                    return this.columnStateCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeColumn {
                get {
                    return this.columnStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_StateCodeComboDetailsRow this[int index] {
                get {
                    return ((F29505_StateCodeComboDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F29505_StateCodeComboDetailsRowChangeEventHandler F29505_StateCodeComboDetailsRowChanging;
            
            public event F29505_StateCodeComboDetailsRowChangeEventHandler F29505_StateCodeComboDetailsRowChanged;
            
            public event F29505_StateCodeComboDetailsRowChangeEventHandler F29505_StateCodeComboDetailsRowDeleting;
            
            public event F29505_StateCodeComboDetailsRowChangeEventHandler F29505_StateCodeComboDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF29505_StateCodeComboDetailsRow(F29505_StateCodeComboDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_StateCodeComboDetailsRow AddF29505_StateCodeComboDetailsRow(int StateCodeID, string StateCode) {
                F29505_StateCodeComboDetailsRow rowF29505_StateCodeComboDetailsRow = ((F29505_StateCodeComboDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StateCodeID,
                        StateCode};
                rowF29505_StateCodeComboDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF29505_StateCodeComboDetailsRow);
                return rowF29505_StateCodeComboDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F29505_StateCodeComboDetailsDataTable cln = ((F29505_StateCodeComboDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F29505_StateCodeComboDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStateCodeID = base.Columns["StateCodeID"];
                this.columnStateCode = base.Columns["StateCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStateCodeID = new global::System.Data.DataColumn("StateCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCodeID);
                this.columnStateCode = new global::System.Data.DataColumn("StateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCode);
                this.columnStateCode.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_StateCodeComboDetailsRow NewF29505_StateCodeComboDetailsRow() {
                return ((F29505_StateCodeComboDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F29505_StateCodeComboDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F29505_StateCodeComboDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F29505_StateCodeComboDetailsRowChanged != null)) {
                    this.F29505_StateCodeComboDetailsRowChanged(this, new F29505_StateCodeComboDetailsRowChangeEvent(((F29505_StateCodeComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F29505_StateCodeComboDetailsRowChanging != null)) {
                    this.F29505_StateCodeComboDetailsRowChanging(this, new F29505_StateCodeComboDetailsRowChangeEvent(((F29505_StateCodeComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F29505_StateCodeComboDetailsRowDeleted != null)) {
                    this.F29505_StateCodeComboDetailsRowDeleted(this, new F29505_StateCodeComboDetailsRowChangeEvent(((F29505_StateCodeComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F29505_StateCodeComboDetailsRowDeleting != null)) {
                    this.F29505_StateCodeComboDetailsRowDeleting(this, new F29505_StateCodeComboDetailsRowChangeEvent(((F29505_StateCodeComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF29505_StateCodeComboDetailsRow(F29505_StateCodeComboDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F29505_StateCodeComboDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F29505_DistrictComboDetailsDataTable : global::System.Data.TypedTableBase<F29505_DistrictComboDetailsRow> {
            
            private global::System.Data.DataColumn columnDistrictID;
            
            private global::System.Data.DataColumn columnDistrict;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_DistrictComboDetailsDataTable() {
                this.TableName = "F29505_DistrictComboDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_DistrictComboDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F29505_DistrictComboDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictIDColumn {
                get {
                    return this.columnDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_DistrictComboDetailsRow this[int index] {
                get {
                    return ((F29505_DistrictComboDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F29505_DistrictComboDetailsRowChangeEventHandler F29505_DistrictComboDetailsRowChanging;
            
            public event F29505_DistrictComboDetailsRowChangeEventHandler F29505_DistrictComboDetailsRowChanged;
            
            public event F29505_DistrictComboDetailsRowChangeEventHandler F29505_DistrictComboDetailsRowDeleting;
            
            public event F29505_DistrictComboDetailsRowChangeEventHandler F29505_DistrictComboDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF29505_DistrictComboDetailsRow(F29505_DistrictComboDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_DistrictComboDetailsRow AddF29505_DistrictComboDetailsRow(int DistrictID, string District) {
                F29505_DistrictComboDetailsRow rowF29505_DistrictComboDetailsRow = ((F29505_DistrictComboDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DistrictID,
                        District};
                rowF29505_DistrictComboDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF29505_DistrictComboDetailsRow);
                return rowF29505_DistrictComboDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F29505_DistrictComboDetailsDataTable cln = ((F29505_DistrictComboDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F29505_DistrictComboDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistrictID = base.Columns["DistrictID"];
                this.columnDistrict = base.Columns["District"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistrictID = new global::System.Data.DataColumn("DistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictID);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnDistrict.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_DistrictComboDetailsRow NewF29505_DistrictComboDetailsRow() {
                return ((F29505_DistrictComboDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F29505_DistrictComboDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F29505_DistrictComboDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F29505_DistrictComboDetailsRowChanged != null)) {
                    this.F29505_DistrictComboDetailsRowChanged(this, new F29505_DistrictComboDetailsRowChangeEvent(((F29505_DistrictComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F29505_DistrictComboDetailsRowChanging != null)) {
                    this.F29505_DistrictComboDetailsRowChanging(this, new F29505_DistrictComboDetailsRowChangeEvent(((F29505_DistrictComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F29505_DistrictComboDetailsRowDeleted != null)) {
                    this.F29505_DistrictComboDetailsRowDeleted(this, new F29505_DistrictComboDetailsRowChangeEvent(((F29505_DistrictComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F29505_DistrictComboDetailsRowDeleting != null)) {
                    this.F29505_DistrictComboDetailsRowDeleting(this, new F29505_DistrictComboDetailsRowChangeEvent(((F29505_DistrictComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF29505_DistrictComboDetailsRow(F29505_DistrictComboDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F29505_DistrictComboDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F29505_NeighborhoodComboDetailsDataTable : global::System.Data.TypedTableBase<F29505_NeighborhoodComboDetailsRow> {
            
            private global::System.Data.DataColumn columnNBHDID;
            
            private global::System.Data.DataColumn columnNeighborhood;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_NeighborhoodComboDetailsDataTable() {
                this.TableName = "F29505_NeighborhoodComboDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_NeighborhoodComboDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F29505_NeighborhoodComboDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeighborhoodColumn {
                get {
                    return this.columnNeighborhood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_NeighborhoodComboDetailsRow this[int index] {
                get {
                    return ((F29505_NeighborhoodComboDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F29505_NeighborhoodComboDetailsRowChangeEventHandler F29505_NeighborhoodComboDetailsRowChanging;
            
            public event F29505_NeighborhoodComboDetailsRowChangeEventHandler F29505_NeighborhoodComboDetailsRowChanged;
            
            public event F29505_NeighborhoodComboDetailsRowChangeEventHandler F29505_NeighborhoodComboDetailsRowDeleting;
            
            public event F29505_NeighborhoodComboDetailsRowChangeEventHandler F29505_NeighborhoodComboDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF29505_NeighborhoodComboDetailsRow(F29505_NeighborhoodComboDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_NeighborhoodComboDetailsRow AddF29505_NeighborhoodComboDetailsRow(int NBHDID, string Neighborhood) {
                F29505_NeighborhoodComboDetailsRow rowF29505_NeighborhoodComboDetailsRow = ((F29505_NeighborhoodComboDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NBHDID,
                        Neighborhood};
                rowF29505_NeighborhoodComboDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF29505_NeighborhoodComboDetailsRow);
                return rowF29505_NeighborhoodComboDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F29505_NeighborhoodComboDetailsDataTable cln = ((F29505_NeighborhoodComboDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F29505_NeighborhoodComboDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnNeighborhood = base.Columns["Neighborhood"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNBHDID = new global::System.Data.DataColumn("NBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnNeighborhood = new global::System.Data.DataColumn("Neighborhood", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhood);
                this.columnNeighborhood.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_NeighborhoodComboDetailsRow NewF29505_NeighborhoodComboDetailsRow() {
                return ((F29505_NeighborhoodComboDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F29505_NeighborhoodComboDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F29505_NeighborhoodComboDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F29505_NeighborhoodComboDetailsRowChanged != null)) {
                    this.F29505_NeighborhoodComboDetailsRowChanged(this, new F29505_NeighborhoodComboDetailsRowChangeEvent(((F29505_NeighborhoodComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F29505_NeighborhoodComboDetailsRowChanging != null)) {
                    this.F29505_NeighborhoodComboDetailsRowChanging(this, new F29505_NeighborhoodComboDetailsRowChangeEvent(((F29505_NeighborhoodComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F29505_NeighborhoodComboDetailsRowDeleted != null)) {
                    this.F29505_NeighborhoodComboDetailsRowDeleted(this, new F29505_NeighborhoodComboDetailsRowChangeEvent(((F29505_NeighborhoodComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F29505_NeighborhoodComboDetailsRowDeleting != null)) {
                    this.F29505_NeighborhoodComboDetailsRowDeleting(this, new F29505_NeighborhoodComboDetailsRowChangeEvent(((F29505_NeighborhoodComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF29505_NeighborhoodComboDetailsRow(F29505_NeighborhoodComboDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F29505_NeighborhoodComboDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F29505_SubdivisionComboDetailsDataTable : global::System.Data.TypedTableBase<F29505_SubdivisionComboDetailsRow> {
            
            private global::System.Data.DataColumn columnSubdivisionID;
            
            private global::System.Data.DataColumn columnSubName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_SubdivisionComboDetailsDataTable() {
                this.TableName = "F29505_SubdivisionComboDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_SubdivisionComboDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F29505_SubdivisionComboDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubdivisionIDColumn {
                get {
                    return this.columnSubdivisionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubNameColumn {
                get {
                    return this.columnSubName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_SubdivisionComboDetailsRow this[int index] {
                get {
                    return ((F29505_SubdivisionComboDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F29505_SubdivisionComboDetailsRowChangeEventHandler F29505_SubdivisionComboDetailsRowChanging;
            
            public event F29505_SubdivisionComboDetailsRowChangeEventHandler F29505_SubdivisionComboDetailsRowChanged;
            
            public event F29505_SubdivisionComboDetailsRowChangeEventHandler F29505_SubdivisionComboDetailsRowDeleting;
            
            public event F29505_SubdivisionComboDetailsRowChangeEventHandler F29505_SubdivisionComboDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF29505_SubdivisionComboDetailsRow(F29505_SubdivisionComboDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_SubdivisionComboDetailsRow AddF29505_SubdivisionComboDetailsRow(int SubdivisionID, string SubName) {
                F29505_SubdivisionComboDetailsRow rowF29505_SubdivisionComboDetailsRow = ((F29505_SubdivisionComboDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubdivisionID,
                        SubName};
                rowF29505_SubdivisionComboDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF29505_SubdivisionComboDetailsRow);
                return rowF29505_SubdivisionComboDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F29505_SubdivisionComboDetailsDataTable cln = ((F29505_SubdivisionComboDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F29505_SubdivisionComboDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSubdivisionID = base.Columns["SubdivisionID"];
                this.columnSubName = base.Columns["SubName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSubdivisionID = new global::System.Data.DataColumn("SubdivisionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubdivisionID);
                this.columnSubName = new global::System.Data.DataColumn("SubName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubName);
                this.columnSubName.MaxLength = 75;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_SubdivisionComboDetailsRow NewF29505_SubdivisionComboDetailsRow() {
                return ((F29505_SubdivisionComboDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F29505_SubdivisionComboDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F29505_SubdivisionComboDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F29505_SubdivisionComboDetailsRowChanged != null)) {
                    this.F29505_SubdivisionComboDetailsRowChanged(this, new F29505_SubdivisionComboDetailsRowChangeEvent(((F29505_SubdivisionComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F29505_SubdivisionComboDetailsRowChanging != null)) {
                    this.F29505_SubdivisionComboDetailsRowChanging(this, new F29505_SubdivisionComboDetailsRowChangeEvent(((F29505_SubdivisionComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F29505_SubdivisionComboDetailsRowDeleted != null)) {
                    this.F29505_SubdivisionComboDetailsRowDeleted(this, new F29505_SubdivisionComboDetailsRowChangeEvent(((F29505_SubdivisionComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F29505_SubdivisionComboDetailsRowDeleting != null)) {
                    this.F29505_SubdivisionComboDetailsRowDeleting(this, new F29505_SubdivisionComboDetailsRowChangeEvent(((F29505_SubdivisionComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF29505_SubdivisionComboDetailsRow(F29505_SubdivisionComboDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F29505_SubdivisionComboDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F29505_LandType1ComboDetailsDataTable : global::System.Data.TypedTableBase<F29505_LandType1ComboDetailsRow> {
            
            private global::System.Data.DataColumn columnLandTypeID1;
            
            private global::System.Data.DataColumn columnLandType1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType1ComboDetailsDataTable() {
                this.TableName = "F29505_LandType1ComboDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_LandType1ComboDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F29505_LandType1ComboDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID1Column {
                get {
                    return this.columnLandTypeID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandType1Column {
                get {
                    return this.columnLandType1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType1ComboDetailsRow this[int index] {
                get {
                    return ((F29505_LandType1ComboDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F29505_LandType1ComboDetailsRowChangeEventHandler F29505_LandType1ComboDetailsRowChanging;
            
            public event F29505_LandType1ComboDetailsRowChangeEventHandler F29505_LandType1ComboDetailsRowChanged;
            
            public event F29505_LandType1ComboDetailsRowChangeEventHandler F29505_LandType1ComboDetailsRowDeleting;
            
            public event F29505_LandType1ComboDetailsRowChangeEventHandler F29505_LandType1ComboDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF29505_LandType1ComboDetailsRow(F29505_LandType1ComboDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType1ComboDetailsRow AddF29505_LandType1ComboDetailsRow(int LandTypeID1, string LandType1) {
                F29505_LandType1ComboDetailsRow rowF29505_LandType1ComboDetailsRow = ((F29505_LandType1ComboDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LandTypeID1,
                        LandType1};
                rowF29505_LandType1ComboDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF29505_LandType1ComboDetailsRow);
                return rowF29505_LandType1ComboDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F29505_LandType1ComboDetailsDataTable cln = ((F29505_LandType1ComboDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F29505_LandType1ComboDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLandTypeID1 = base.Columns["LandTypeID1"];
                this.columnLandType1 = base.Columns["LandType1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLandTypeID1 = new global::System.Data.DataColumn("LandTypeID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID1);
                this.columnLandType1 = new global::System.Data.DataColumn("LandType1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandType1);
                this.columnLandType1.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType1ComboDetailsRow NewF29505_LandType1ComboDetailsRow() {
                return ((F29505_LandType1ComboDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F29505_LandType1ComboDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F29505_LandType1ComboDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F29505_LandType1ComboDetailsRowChanged != null)) {
                    this.F29505_LandType1ComboDetailsRowChanged(this, new F29505_LandType1ComboDetailsRowChangeEvent(((F29505_LandType1ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F29505_LandType1ComboDetailsRowChanging != null)) {
                    this.F29505_LandType1ComboDetailsRowChanging(this, new F29505_LandType1ComboDetailsRowChangeEvent(((F29505_LandType1ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F29505_LandType1ComboDetailsRowDeleted != null)) {
                    this.F29505_LandType1ComboDetailsRowDeleted(this, new F29505_LandType1ComboDetailsRowChangeEvent(((F29505_LandType1ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F29505_LandType1ComboDetailsRowDeleting != null)) {
                    this.F29505_LandType1ComboDetailsRowDeleting(this, new F29505_LandType1ComboDetailsRowChangeEvent(((F29505_LandType1ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF29505_LandType1ComboDetailsRow(F29505_LandType1ComboDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F29505_LandType1ComboDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F29505_LandType2ComboDetailsDataTable : global::System.Data.TypedTableBase<F29505_LandType2ComboDetailsRow> {
            
            private global::System.Data.DataColumn columnLandTypeID2;
            
            private global::System.Data.DataColumn columnLandType2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType2ComboDetailsDataTable() {
                this.TableName = "F29505_LandType2ComboDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_LandType2ComboDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F29505_LandType2ComboDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID2Column {
                get {
                    return this.columnLandTypeID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandType2Column {
                get {
                    return this.columnLandType2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType2ComboDetailsRow this[int index] {
                get {
                    return ((F29505_LandType2ComboDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F29505_LandType2ComboDetailsRowChangeEventHandler F29505_LandType2ComboDetailsRowChanging;
            
            public event F29505_LandType2ComboDetailsRowChangeEventHandler F29505_LandType2ComboDetailsRowChanged;
            
            public event F29505_LandType2ComboDetailsRowChangeEventHandler F29505_LandType2ComboDetailsRowDeleting;
            
            public event F29505_LandType2ComboDetailsRowChangeEventHandler F29505_LandType2ComboDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF29505_LandType2ComboDetailsRow(F29505_LandType2ComboDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType2ComboDetailsRow AddF29505_LandType2ComboDetailsRow(int LandTypeID2, string LandType2) {
                F29505_LandType2ComboDetailsRow rowF29505_LandType2ComboDetailsRow = ((F29505_LandType2ComboDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LandTypeID2,
                        LandType2};
                rowF29505_LandType2ComboDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF29505_LandType2ComboDetailsRow);
                return rowF29505_LandType2ComboDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F29505_LandType2ComboDetailsDataTable cln = ((F29505_LandType2ComboDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F29505_LandType2ComboDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLandTypeID2 = base.Columns["LandTypeID2"];
                this.columnLandType2 = base.Columns["LandType2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLandTypeID2 = new global::System.Data.DataColumn("LandTypeID2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID2);
                this.columnLandType2 = new global::System.Data.DataColumn("LandType2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandType2);
                this.columnLandType2.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType2ComboDetailsRow NewF29505_LandType2ComboDetailsRow() {
                return ((F29505_LandType2ComboDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F29505_LandType2ComboDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F29505_LandType2ComboDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F29505_LandType2ComboDetailsRowChanged != null)) {
                    this.F29505_LandType2ComboDetailsRowChanged(this, new F29505_LandType2ComboDetailsRowChangeEvent(((F29505_LandType2ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F29505_LandType2ComboDetailsRowChanging != null)) {
                    this.F29505_LandType2ComboDetailsRowChanging(this, new F29505_LandType2ComboDetailsRowChangeEvent(((F29505_LandType2ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F29505_LandType2ComboDetailsRowDeleted != null)) {
                    this.F29505_LandType2ComboDetailsRowDeleted(this, new F29505_LandType2ComboDetailsRowChangeEvent(((F29505_LandType2ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F29505_LandType2ComboDetailsRowDeleting != null)) {
                    this.F29505_LandType2ComboDetailsRowDeleting(this, new F29505_LandType2ComboDetailsRowChangeEvent(((F29505_LandType2ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF29505_LandType2ComboDetailsRow(F29505_LandType2ComboDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F29505_LandType2ComboDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F29505_LandType3ComboDetailsDataTable : global::System.Data.TypedTableBase<F29505_LandType3ComboDetailsRow> {
            
            private global::System.Data.DataColumn columnLandTypeID3;
            
            private global::System.Data.DataColumn columnLandType3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType3ComboDetailsDataTable() {
                this.TableName = "F29505_LandType3ComboDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_LandType3ComboDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F29505_LandType3ComboDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID3Column {
                get {
                    return this.columnLandTypeID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandType3Column {
                get {
                    return this.columnLandType3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType3ComboDetailsRow this[int index] {
                get {
                    return ((F29505_LandType3ComboDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F29505_LandType3ComboDetailsRowChangeEventHandler F29505_LandType3ComboDetailsRowChanging;
            
            public event F29505_LandType3ComboDetailsRowChangeEventHandler F29505_LandType3ComboDetailsRowChanged;
            
            public event F29505_LandType3ComboDetailsRowChangeEventHandler F29505_LandType3ComboDetailsRowDeleting;
            
            public event F29505_LandType3ComboDetailsRowChangeEventHandler F29505_LandType3ComboDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF29505_LandType3ComboDetailsRow(F29505_LandType3ComboDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType3ComboDetailsRow AddF29505_LandType3ComboDetailsRow(int LandTypeID3, string LandType3) {
                F29505_LandType3ComboDetailsRow rowF29505_LandType3ComboDetailsRow = ((F29505_LandType3ComboDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LandTypeID3,
                        LandType3};
                rowF29505_LandType3ComboDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF29505_LandType3ComboDetailsRow);
                return rowF29505_LandType3ComboDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F29505_LandType3ComboDetailsDataTable cln = ((F29505_LandType3ComboDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F29505_LandType3ComboDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLandTypeID3 = base.Columns["LandTypeID3"];
                this.columnLandType3 = base.Columns["LandType3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLandTypeID3 = new global::System.Data.DataColumn("LandTypeID3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID3);
                this.columnLandType3 = new global::System.Data.DataColumn("LandType3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandType3);
                this.columnLandType3.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType3ComboDetailsRow NewF29505_LandType3ComboDetailsRow() {
                return ((F29505_LandType3ComboDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F29505_LandType3ComboDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F29505_LandType3ComboDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F29505_LandType3ComboDetailsRowChanged != null)) {
                    this.F29505_LandType3ComboDetailsRowChanged(this, new F29505_LandType3ComboDetailsRowChangeEvent(((F29505_LandType3ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F29505_LandType3ComboDetailsRowChanging != null)) {
                    this.F29505_LandType3ComboDetailsRowChanging(this, new F29505_LandType3ComboDetailsRowChangeEvent(((F29505_LandType3ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F29505_LandType3ComboDetailsRowDeleted != null)) {
                    this.F29505_LandType3ComboDetailsRowDeleted(this, new F29505_LandType3ComboDetailsRowChangeEvent(((F29505_LandType3ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F29505_LandType3ComboDetailsRowDeleting != null)) {
                    this.F29505_LandType3ComboDetailsRowDeleting(this, new F29505_LandType3ComboDetailsRowChangeEvent(((F29505_LandType3ComboDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF29505_LandType3ComboDetailsRow(F29505_LandType3ComboDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F29505_LandType3ComboDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F29505_Get_SubdivisionGridDetailsDataTable : global::System.Data.TypedTableBase<F29505_Get_SubdivisionGridDetailsRow> {
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnMakeSubID;
            
            private global::System.Data.DataColumn columnRow;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnHouseNumber;
            
            private global::System.Data.DataColumn columnStreetID;
            
            private global::System.Data.DataColumn columnStreetName;
            
            private global::System.Data.DataColumn columnBlock;
            
            private global::System.Data.DataColumn columnLot;
            
            private global::System.Data.DataColumn columnLotWidth;
            
            private global::System.Data.DataColumn columnLotDepth;
            
            private global::System.Data.DataColumn columnAcres;
            
            private global::System.Data.DataColumn columnMID1;
            
            private global::System.Data.DataColumn columnMID2;
            
            private global::System.Data.DataColumn columnMID3;
            
            private global::System.Data.DataColumn columnMID4;
            
            private global::System.Data.DataColumn columnMID5;
            
            private global::System.Data.DataColumn columnLabel1;
            
            private global::System.Data.DataColumn columnLabel2;
            
            private global::System.Data.DataColumn columnLabel3;
            
            private global::System.Data.DataColumn columnLabel4;
            
            private global::System.Data.DataColumn columnLabel5;
            
            private global::System.Data.DataColumn columnLandShape;
            
            private global::System.Data.DataColumn columnShapeID;
            
            private global::System.Data.DataColumn columnAdjustmentTypeID;
            
            private global::System.Data.DataColumn columnAdjustmentType;
            
            private global::System.Data.DataColumn columnAdjustment;
            
            private global::System.Data.DataColumn columnNewConstruction;
            
            private global::System.Data.DataColumn columnIsValue;
            
            private global::System.Data.DataColumn columnIsValueID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionGridDetailsDataTable() {
                this.TableName = "F29505_Get_SubdivisionGridDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_Get_SubdivisionGridDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F29505_Get_SubdivisionGridDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakeSubIDColumn {
                get {
                    return this.columnMakeSubID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowColumn {
                get {
                    return this.columnRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HouseNumberColumn {
                get {
                    return this.columnHouseNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetIDColumn {
                get {
                    return this.columnStreetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetNameColumn {
                get {
                    return this.columnStreetName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockColumn {
                get {
                    return this.columnBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LotColumn {
                get {
                    return this.columnLot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LotWidthColumn {
                get {
                    return this.columnLotWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LotDepthColumn {
                get {
                    return this.columnLotDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcresColumn {
                get {
                    return this.columnAcres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID1Column {
                get {
                    return this.columnMID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID2Column {
                get {
                    return this.columnMID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID3Column {
                get {
                    return this.columnMID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID4Column {
                get {
                    return this.columnMID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID5Column {
                get {
                    return this.columnMID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Label1Column {
                get {
                    return this.columnLabel1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Label2Column {
                get {
                    return this.columnLabel2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Label3Column {
                get {
                    return this.columnLabel3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Label4Column {
                get {
                    return this.columnLabel4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Label5Column {
                get {
                    return this.columnLabel5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandShapeColumn {
                get {
                    return this.columnLandShape;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShapeIDColumn {
                get {
                    return this.columnShapeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustmentTypeIDColumn {
                get {
                    return this.columnAdjustmentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustmentTypeColumn {
                get {
                    return this.columnAdjustmentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustmentColumn {
                get {
                    return this.columnAdjustment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewConstructionColumn {
                get {
                    return this.columnNewConstruction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsValueColumn {
                get {
                    return this.columnIsValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsValueIDColumn {
                get {
                    return this.columnIsValueID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionGridDetailsRow this[int index] {
                get {
                    return ((F29505_Get_SubdivisionGridDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F29505_Get_SubdivisionGridDetailsRowChangeEventHandler F29505_Get_SubdivisionGridDetailsRowChanging;
            
            public event F29505_Get_SubdivisionGridDetailsRowChangeEventHandler F29505_Get_SubdivisionGridDetailsRowChanged;
            
            public event F29505_Get_SubdivisionGridDetailsRowChangeEventHandler F29505_Get_SubdivisionGridDetailsRowDeleting;
            
            public event F29505_Get_SubdivisionGridDetailsRowChangeEventHandler F29505_Get_SubdivisionGridDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF29505_Get_SubdivisionGridDetailsRow(F29505_Get_SubdivisionGridDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionGridDetailsRow AddF29505_Get_SubdivisionGridDetailsRow(
                        int ItemID, 
                        int MakeSubID, 
                        int Row, 
                        string ParcelNumber, 
                        string HouseNumber, 
                        int StreetID, 
                        string StreetName, 
                        string Block, 
                        string Lot, 
                        string LotWidth, 
                        string LotDepth, 
                        decimal Acres, 
                        string MID1, 
                        string MID2, 
                        string MID3, 
                        string MID4, 
                        string MID5, 
                        string Label1, 
                        string Label2, 
                        string Label3, 
                        string Label4, 
                        string Label5, 
                        string LandShape, 
                        string ShapeID, 
                        int AdjustmentTypeID, 
                        string AdjustmentType, 
                        string Adjustment, 
                        decimal NewConstruction, 
                        string IsValue, 
                        string IsValueID) {
                F29505_Get_SubdivisionGridDetailsRow rowF29505_Get_SubdivisionGridDetailsRow = ((F29505_Get_SubdivisionGridDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemID,
                        MakeSubID,
                        Row,
                        ParcelNumber,
                        HouseNumber,
                        StreetID,
                        StreetName,
                        Block,
                        Lot,
                        LotWidth,
                        LotDepth,
                        Acres,
                        MID1,
                        MID2,
                        MID3,
                        MID4,
                        MID5,
                        Label1,
                        Label2,
                        Label3,
                        Label4,
                        Label5,
                        LandShape,
                        ShapeID,
                        AdjustmentTypeID,
                        AdjustmentType,
                        Adjustment,
                        NewConstruction,
                        IsValue,
                        IsValueID};
                rowF29505_Get_SubdivisionGridDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF29505_Get_SubdivisionGridDetailsRow);
                return rowF29505_Get_SubdivisionGridDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F29505_Get_SubdivisionGridDetailsDataTable cln = ((F29505_Get_SubdivisionGridDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F29505_Get_SubdivisionGridDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemID = base.Columns["ItemID"];
                this.columnMakeSubID = base.Columns["MakeSubID"];
                this.columnRow = base.Columns["Row"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnHouseNumber = base.Columns["HouseNumber"];
                this.columnStreetID = base.Columns["StreetID"];
                this.columnStreetName = base.Columns["StreetName"];
                this.columnBlock = base.Columns["Block"];
                this.columnLot = base.Columns["Lot"];
                this.columnLotWidth = base.Columns["LotWidth"];
                this.columnLotDepth = base.Columns["LotDepth"];
                this.columnAcres = base.Columns["Acres"];
                this.columnMID1 = base.Columns["MID1"];
                this.columnMID2 = base.Columns["MID2"];
                this.columnMID3 = base.Columns["MID3"];
                this.columnMID4 = base.Columns["MID4"];
                this.columnMID5 = base.Columns["MID5"];
                this.columnLabel1 = base.Columns["Label1"];
                this.columnLabel2 = base.Columns["Label2"];
                this.columnLabel3 = base.Columns["Label3"];
                this.columnLabel4 = base.Columns["Label4"];
                this.columnLabel5 = base.Columns["Label5"];
                this.columnLandShape = base.Columns["LandShape"];
                this.columnShapeID = base.Columns["ShapeID"];
                this.columnAdjustmentTypeID = base.Columns["AdjustmentTypeID"];
                this.columnAdjustmentType = base.Columns["AdjustmentType"];
                this.columnAdjustment = base.Columns["Adjustment"];
                this.columnNewConstruction = base.Columns["NewConstruction"];
                this.columnIsValue = base.Columns["IsValue"];
                this.columnIsValueID = base.Columns["IsValueID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnMakeSubID = new global::System.Data.DataColumn("MakeSubID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeSubID);
                this.columnRow = new global::System.Data.DataColumn("Row", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnHouseNumber = new global::System.Data.DataColumn("HouseNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouseNumber);
                this.columnStreetID = new global::System.Data.DataColumn("StreetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetID);
                this.columnStreetName = new global::System.Data.DataColumn("StreetName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetName);
                this.columnBlock = new global::System.Data.DataColumn("Block", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlock);
                this.columnLot = new global::System.Data.DataColumn("Lot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLot);
                this.columnLotWidth = new global::System.Data.DataColumn("LotWidth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotWidth);
                this.columnLotDepth = new global::System.Data.DataColumn("LotDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotDepth);
                this.columnAcres = new global::System.Data.DataColumn("Acres", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcres);
                this.columnMID1 = new global::System.Data.DataColumn("MID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID1);
                this.columnMID2 = new global::System.Data.DataColumn("MID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID2);
                this.columnMID3 = new global::System.Data.DataColumn("MID3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID3);
                this.columnMID4 = new global::System.Data.DataColumn("MID4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID4);
                this.columnMID5 = new global::System.Data.DataColumn("MID5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID5);
                this.columnLabel1 = new global::System.Data.DataColumn("Label1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabel1);
                this.columnLabel2 = new global::System.Data.DataColumn("Label2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabel2);
                this.columnLabel3 = new global::System.Data.DataColumn("Label3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabel3);
                this.columnLabel4 = new global::System.Data.DataColumn("Label4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabel4);
                this.columnLabel5 = new global::System.Data.DataColumn("Label5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabel5);
                this.columnLandShape = new global::System.Data.DataColumn("LandShape", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandShape);
                this.columnShapeID = new global::System.Data.DataColumn("ShapeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShapeID);
                this.columnAdjustmentTypeID = new global::System.Data.DataColumn("AdjustmentTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustmentTypeID);
                this.columnAdjustmentType = new global::System.Data.DataColumn("AdjustmentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustmentType);
                this.columnAdjustment = new global::System.Data.DataColumn("Adjustment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustment);
                this.columnNewConstruction = new global::System.Data.DataColumn("NewConstruction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewConstruction);
                this.columnIsValue = new global::System.Data.DataColumn("IsValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsValue);
                this.columnIsValueID = new global::System.Data.DataColumn("IsValueID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsValueID);
                this.columnItemID.DefaultValue = ((int)(0));
                this.columnParcelNumber.MaxLength = 50;
                this.columnHouseNumber.MaxLength = 35;
                this.columnStreetName.MaxLength = 100;
                this.columnBlock.MaxLength = 10;
                this.columnLot.MaxLength = 10;
                this.columnLotWidth.MaxLength = 20;
                this.columnLotDepth.MaxLength = 20;
                this.columnMID1.MaxLength = 1000;
                this.columnMID2.MaxLength = 1000;
                this.columnMID3.MaxLength = 1000;
                this.columnMID4.MaxLength = 1000;
                this.columnMID5.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionGridDetailsRow NewF29505_Get_SubdivisionGridDetailsRow() {
                return ((F29505_Get_SubdivisionGridDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F29505_Get_SubdivisionGridDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F29505_Get_SubdivisionGridDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F29505_Get_SubdivisionGridDetailsRowChanged != null)) {
                    this.F29505_Get_SubdivisionGridDetailsRowChanged(this, new F29505_Get_SubdivisionGridDetailsRowChangeEvent(((F29505_Get_SubdivisionGridDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F29505_Get_SubdivisionGridDetailsRowChanging != null)) {
                    this.F29505_Get_SubdivisionGridDetailsRowChanging(this, new F29505_Get_SubdivisionGridDetailsRowChangeEvent(((F29505_Get_SubdivisionGridDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F29505_Get_SubdivisionGridDetailsRowDeleted != null)) {
                    this.F29505_Get_SubdivisionGridDetailsRowDeleted(this, new F29505_Get_SubdivisionGridDetailsRowChangeEvent(((F29505_Get_SubdivisionGridDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F29505_Get_SubdivisionGridDetailsRowDeleting != null)) {
                    this.F29505_Get_SubdivisionGridDetailsRowDeleting(this, new F29505_Get_SubdivisionGridDetailsRowChangeEvent(((F29505_Get_SubdivisionGridDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF29505_Get_SubdivisionGridDetailsRow(F29505_Get_SubdivisionGridDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F29505_Get_SubdivisionGridDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F29505_Get_SubdivisionHeaderDetailsDataTable : global::System.Data.TypedTableBase<F29505_Get_SubdivisionHeaderDetailsRow> {
            
            private global::System.Data.DataColumn columnMakeSubID;
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnIsProcessed;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnOwnerName;
            
            private global::System.Data.DataColumn columnStateCode;
            
            private global::System.Data.DataColumn columnDistrictID;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnNBHDID;
            
            private global::System.Data.DataColumn columnNeighborhood;
            
            private global::System.Data.DataColumn columnSubdivisionID;
            
            private global::System.Data.DataColumn columnSubName;
            
            private global::System.Data.DataColumn columnLandTypeID1;
            
            private global::System.Data.DataColumn columnLandType1;
            
            private global::System.Data.DataColumn columnLandTypeID2;
            
            private global::System.Data.DataColumn columnLandType2;
            
            private global::System.Data.DataColumn columnLandTypeID3;
            
            private global::System.Data.DataColumn columnLandType3;
            
            private global::System.Data.DataColumn columnLandCode;
            
            private global::System.Data.DataColumn columnNumParcels;
            
            private global::System.Data.DataColumn columnClassCode;
            
            private global::System.Data.DataColumn columnClassCodeColorRGBR;
            
            private global::System.Data.DataColumn columnConfiguredState;
            
            private global::System.Data.DataColumn columnAutoCompleteValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionHeaderDetailsDataTable() {
                this.TableName = "F29505_Get_SubdivisionHeaderDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_Get_SubdivisionHeaderDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected F29505_Get_SubdivisionHeaderDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakeSubIDColumn {
                get {
                    return this.columnMakeSubID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsProcessedColumn {
                get {
                    return this.columnIsProcessed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerNameColumn {
                get {
                    return this.columnOwnerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeColumn {
                get {
                    return this.columnStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictIDColumn {
                get {
                    return this.columnDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeighborhoodColumn {
                get {
                    return this.columnNeighborhood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubdivisionIDColumn {
                get {
                    return this.columnSubdivisionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubNameColumn {
                get {
                    return this.columnSubName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID1Column {
                get {
                    return this.columnLandTypeID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandType1Column {
                get {
                    return this.columnLandType1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID2Column {
                get {
                    return this.columnLandTypeID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandType2Column {
                get {
                    return this.columnLandType2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandTypeID3Column {
                get {
                    return this.columnLandTypeID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandType3Column {
                get {
                    return this.columnLandType3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandCodeColumn {
                get {
                    return this.columnLandCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumParcelsColumn {
                get {
                    return this.columnNumParcels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassCodeColumn {
                get {
                    return this.columnClassCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassCodeColorRGBRColumn {
                get {
                    return this.columnClassCodeColorRGBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfiguredStateColumn {
                get {
                    return this.columnConfiguredState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutoCompleteValueColumn {
                get {
                    return this.columnAutoCompleteValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionHeaderDetailsRow this[int index] {
                get {
                    return ((F29505_Get_SubdivisionHeaderDetailsRow)(this.Rows[index]));
                }
            }
            
            public event F29505_Get_SubdivisionHeaderDetailsRowChangeEventHandler F29505_Get_SubdivisionHeaderDetailsRowChanging;
            
            public event F29505_Get_SubdivisionHeaderDetailsRowChangeEventHandler F29505_Get_SubdivisionHeaderDetailsRowChanged;
            
            public event F29505_Get_SubdivisionHeaderDetailsRowChangeEventHandler F29505_Get_SubdivisionHeaderDetailsRowDeleting;
            
            public event F29505_Get_SubdivisionHeaderDetailsRowChangeEventHandler F29505_Get_SubdivisionHeaderDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddF29505_Get_SubdivisionHeaderDetailsRow(F29505_Get_SubdivisionHeaderDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionHeaderDetailsRow AddF29505_Get_SubdivisionHeaderDetailsRow(
                        int MakeSubID, 
                        int EventID, 
                        bool IsProcessed, 
                        short RollYear, 
                        int OwnerID, 
                        string OwnerName, 
                        string StateCode, 
                        int DistrictID, 
                        string District, 
                        int NBHDID, 
                        string Neighborhood, 
                        int SubdivisionID, 
                        string SubName, 
                        int LandTypeID1, 
                        string LandType1, 
                        int LandTypeID2, 
                        string LandType2, 
                        int LandTypeID3, 
                        string LandType3, 
                        string LandCode, 
                        byte NumParcels, 
                        string ClassCode, 
                        string ClassCodeColorRGBR, 
                        string ConfiguredState, 
                        string AutoCompleteValue) {
                F29505_Get_SubdivisionHeaderDetailsRow rowF29505_Get_SubdivisionHeaderDetailsRow = ((F29505_Get_SubdivisionHeaderDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MakeSubID,
                        EventID,
                        IsProcessed,
                        RollYear,
                        OwnerID,
                        OwnerName,
                        StateCode,
                        DistrictID,
                        District,
                        NBHDID,
                        Neighborhood,
                        SubdivisionID,
                        SubName,
                        LandTypeID1,
                        LandType1,
                        LandTypeID2,
                        LandType2,
                        LandTypeID3,
                        LandType3,
                        LandCode,
                        NumParcels,
                        ClassCode,
                        ClassCodeColorRGBR,
                        ConfiguredState,
                        AutoCompleteValue};
                rowF29505_Get_SubdivisionHeaderDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowF29505_Get_SubdivisionHeaderDetailsRow);
                return rowF29505_Get_SubdivisionHeaderDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                F29505_Get_SubdivisionHeaderDetailsDataTable cln = ((F29505_Get_SubdivisionHeaderDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F29505_Get_SubdivisionHeaderDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMakeSubID = base.Columns["MakeSubID"];
                this.columnEventID = base.Columns["EventID"];
                this.columnIsProcessed = base.Columns["IsProcessed"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnOwnerName = base.Columns["OwnerName"];
                this.columnStateCode = base.Columns["StateCode"];
                this.columnDistrictID = base.Columns["DistrictID"];
                this.columnDistrict = base.Columns["District"];
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnNeighborhood = base.Columns["Neighborhood"];
                this.columnSubdivisionID = base.Columns["SubdivisionID"];
                this.columnSubName = base.Columns["SubName"];
                this.columnLandTypeID1 = base.Columns["LandTypeID1"];
                this.columnLandType1 = base.Columns["LandType1"];
                this.columnLandTypeID2 = base.Columns["LandTypeID2"];
                this.columnLandType2 = base.Columns["LandType2"];
                this.columnLandTypeID3 = base.Columns["LandTypeID3"];
                this.columnLandType3 = base.Columns["LandType3"];
                this.columnLandCode = base.Columns["LandCode"];
                this.columnNumParcels = base.Columns["NumParcels"];
                this.columnClassCode = base.Columns["ClassCode"];
                this.columnClassCodeColorRGBR = base.Columns["ClassCodeColorRGBR"];
                this.columnConfiguredState = base.Columns["ConfiguredState"];
                this.columnAutoCompleteValue = base.Columns["AutoCompleteValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMakeSubID = new global::System.Data.DataColumn("MakeSubID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeSubID);
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnIsProcessed = new global::System.Data.DataColumn("IsProcessed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsProcessed);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
                this.columnStateCode = new global::System.Data.DataColumn("StateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCode);
                this.columnDistrictID = new global::System.Data.DataColumn("DistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictID);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnNBHDID = new global::System.Data.DataColumn("NBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnNeighborhood = new global::System.Data.DataColumn("Neighborhood", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhood);
                this.columnSubdivisionID = new global::System.Data.DataColumn("SubdivisionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubdivisionID);
                this.columnSubName = new global::System.Data.DataColumn("SubName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubName);
                this.columnLandTypeID1 = new global::System.Data.DataColumn("LandTypeID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID1);
                this.columnLandType1 = new global::System.Data.DataColumn("LandType1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandType1);
                this.columnLandTypeID2 = new global::System.Data.DataColumn("LandTypeID2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID2);
                this.columnLandType2 = new global::System.Data.DataColumn("LandType2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandType2);
                this.columnLandTypeID3 = new global::System.Data.DataColumn("LandTypeID3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeID3);
                this.columnLandType3 = new global::System.Data.DataColumn("LandType3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandType3);
                this.columnLandCode = new global::System.Data.DataColumn("LandCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCode);
                this.columnNumParcels = new global::System.Data.DataColumn("NumParcels", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumParcels);
                this.columnClassCode = new global::System.Data.DataColumn("ClassCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassCode);
                this.columnClassCodeColorRGBR = new global::System.Data.DataColumn("ClassCodeColorRGBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassCodeColorRGBR);
                this.columnConfiguredState = new global::System.Data.DataColumn("ConfiguredState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfiguredState);
                this.columnAutoCompleteValue = new global::System.Data.DataColumn("AutoCompleteValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoCompleteValue);
                this.columnOwnerName.MaxLength = 102;
                this.columnStateCode.MaxLength = 50;
                this.columnDistrict.MaxLength = 101;
                this.columnNeighborhood.MaxLength = 50;
                this.columnSubName.MaxLength = 75;
                this.columnLandType1.MaxLength = 20;
                this.columnLandType2.MaxLength = 20;
                this.columnLandType3.MaxLength = 20;
                this.columnLandCode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionHeaderDetailsRow NewF29505_Get_SubdivisionHeaderDetailsRow() {
                return ((F29505_Get_SubdivisionHeaderDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F29505_Get_SubdivisionHeaderDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(F29505_Get_SubdivisionHeaderDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F29505_Get_SubdivisionHeaderDetailsRowChanged != null)) {
                    this.F29505_Get_SubdivisionHeaderDetailsRowChanged(this, new F29505_Get_SubdivisionHeaderDetailsRowChangeEvent(((F29505_Get_SubdivisionHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F29505_Get_SubdivisionHeaderDetailsRowChanging != null)) {
                    this.F29505_Get_SubdivisionHeaderDetailsRowChanging(this, new F29505_Get_SubdivisionHeaderDetailsRowChangeEvent(((F29505_Get_SubdivisionHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F29505_Get_SubdivisionHeaderDetailsRowDeleted != null)) {
                    this.F29505_Get_SubdivisionHeaderDetailsRowDeleted(this, new F29505_Get_SubdivisionHeaderDetailsRowChangeEvent(((F29505_Get_SubdivisionHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F29505_Get_SubdivisionHeaderDetailsRowDeleting != null)) {
                    this.F29505_Get_SubdivisionHeaderDetailsRowDeleting(this, new F29505_Get_SubdivisionHeaderDetailsRowChangeEvent(((F29505_Get_SubdivisionHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveF29505_Get_SubdivisionHeaderDetailsRow(F29505_Get_SubdivisionHeaderDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F29505_Get_SubdivisionHeaderDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Get_LandCodeValueDataTable : global::System.Data.TypedTableBase<Get_LandCodeValueRow> {
            
            private global::System.Data.DataColumn columnLandCode;
            
            private global::System.Data.DataColumn columnReportAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeValueDataTable() {
                this.TableName = "Get_LandCodeValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Get_LandCodeValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Get_LandCodeValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandCodeColumn {
                get {
                    return this.columnLandCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportASColumn {
                get {
                    return this.columnReportAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeValueRow this[int index] {
                get {
                    return ((Get_LandCodeValueRow)(this.Rows[index]));
                }
            }
            
            public event Get_LandCodeValueRowChangeEventHandler Get_LandCodeValueRowChanging;
            
            public event Get_LandCodeValueRowChangeEventHandler Get_LandCodeValueRowChanged;
            
            public event Get_LandCodeValueRowChangeEventHandler Get_LandCodeValueRowDeleting;
            
            public event Get_LandCodeValueRowChangeEventHandler Get_LandCodeValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGet_LandCodeValueRow(Get_LandCodeValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeValueRow AddGet_LandCodeValueRow(string LandCode, string ReportAS) {
                Get_LandCodeValueRow rowGet_LandCodeValueRow = ((Get_LandCodeValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LandCode,
                        ReportAS};
                rowGet_LandCodeValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGet_LandCodeValueRow);
                return rowGet_LandCodeValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Get_LandCodeValueDataTable cln = ((Get_LandCodeValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Get_LandCodeValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLandCode = base.Columns["LandCode"];
                this.columnReportAS = base.Columns["ReportAS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLandCode = new global::System.Data.DataColumn("LandCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCode);
                this.columnReportAS = new global::System.Data.DataColumn("ReportAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportAS);
                this.columnLandCode.ReadOnly = true;
                this.columnLandCode.MaxLength = 20;
                this.columnReportAS.ReadOnly = true;
                this.columnReportAS.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeValueRow NewGet_LandCodeValueRow() {
                return ((Get_LandCodeValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Get_LandCodeValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Get_LandCodeValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Get_LandCodeValueRowChanged != null)) {
                    this.Get_LandCodeValueRowChanged(this, new Get_LandCodeValueRowChangeEvent(((Get_LandCodeValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Get_LandCodeValueRowChanging != null)) {
                    this.Get_LandCodeValueRowChanging(this, new Get_LandCodeValueRowChangeEvent(((Get_LandCodeValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Get_LandCodeValueRowDeleted != null)) {
                    this.Get_LandCodeValueRowDeleted(this, new Get_LandCodeValueRowChangeEvent(((Get_LandCodeValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Get_LandCodeValueRowDeleting != null)) {
                    this.Get_LandCodeValueRowDeleting(this, new Get_LandCodeValueRowChangeEvent(((Get_LandCodeValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGet_LandCodeValueRow(Get_LandCodeValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Get_LandCodeValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Get_LandCodeAllValueDataTable : global::System.Data.TypedTableBase<Get_LandCodeAllValueRow> {
            
            private global::System.Data.DataColumn columnLandCode;
            
            private global::System.Data.DataColumn columnLandCodeID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeAllValueDataTable() {
                this.TableName = "Get_LandCodeAllValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Get_LandCodeAllValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Get_LandCodeAllValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandCodeColumn {
                get {
                    return this.columnLandCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandCodeIDColumn {
                get {
                    return this.columnLandCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeAllValueRow this[int index] {
                get {
                    return ((Get_LandCodeAllValueRow)(this.Rows[index]));
                }
            }
            
            public event Get_LandCodeAllValueRowChangeEventHandler Get_LandCodeAllValueRowChanging;
            
            public event Get_LandCodeAllValueRowChangeEventHandler Get_LandCodeAllValueRowChanged;
            
            public event Get_LandCodeAllValueRowChangeEventHandler Get_LandCodeAllValueRowDeleting;
            
            public event Get_LandCodeAllValueRowChangeEventHandler Get_LandCodeAllValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGet_LandCodeAllValueRow(Get_LandCodeAllValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeAllValueRow AddGet_LandCodeAllValueRow(string LandCode) {
                Get_LandCodeAllValueRow rowGet_LandCodeAllValueRow = ((Get_LandCodeAllValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LandCode,
                        null};
                rowGet_LandCodeAllValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGet_LandCodeAllValueRow);
                return rowGet_LandCodeAllValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeAllValueRow FindByLandCodeID(int LandCodeID) {
                return ((Get_LandCodeAllValueRow)(this.Rows.Find(new object[] {
                            LandCodeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Get_LandCodeAllValueDataTable cln = ((Get_LandCodeAllValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Get_LandCodeAllValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLandCode = base.Columns["LandCode"];
                this.columnLandCodeID = base.Columns["LandCodeID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLandCode = new global::System.Data.DataColumn("LandCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCode);
                this.columnLandCodeID = new global::System.Data.DataColumn("LandCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCodeID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLandCodeID}, true));
                this.columnLandCode.AllowDBNull = false;
                this.columnLandCode.MaxLength = 20;
                this.columnLandCodeID.AutoIncrement = true;
                this.columnLandCodeID.AllowDBNull = false;
                this.columnLandCodeID.ReadOnly = true;
                this.columnLandCodeID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeAllValueRow NewGet_LandCodeAllValueRow() {
                return ((Get_LandCodeAllValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Get_LandCodeAllValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Get_LandCodeAllValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Get_LandCodeAllValueRowChanged != null)) {
                    this.Get_LandCodeAllValueRowChanged(this, new Get_LandCodeAllValueRowChangeEvent(((Get_LandCodeAllValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Get_LandCodeAllValueRowChanging != null)) {
                    this.Get_LandCodeAllValueRowChanging(this, new Get_LandCodeAllValueRowChangeEvent(((Get_LandCodeAllValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Get_LandCodeAllValueRowDeleted != null)) {
                    this.Get_LandCodeAllValueRowDeleted(this, new Get_LandCodeAllValueRowChangeEvent(((Get_LandCodeAllValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Get_LandCodeAllValueRowDeleting != null)) {
                    this.Get_LandCodeAllValueRowDeleting(this, new Get_LandCodeAllValueRowChangeEvent(((Get_LandCodeAllValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGet_LandCodeAllValueRow(Get_LandCodeAllValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Get_LandCodeAllValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f36035ListLandCodesDataTable : global::System.Data.TypedTableBase<f36035ListLandCodesRow> {
            
            private global::System.Data.DataColumn columnLandCode;
            
            private global::System.Data.DataColumn columnRollYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f36035ListLandCodesDataTable() {
                this.TableName = "f36035ListLandCodes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f36035ListLandCodesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f36035ListLandCodesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandCodeColumn {
                get {
                    return this.columnLandCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f36035ListLandCodesRow this[int index] {
                get {
                    return ((f36035ListLandCodesRow)(this.Rows[index]));
                }
            }
            
            public event f36035ListLandCodesRowChangeEventHandler f36035ListLandCodesRowChanging;
            
            public event f36035ListLandCodesRowChangeEventHandler f36035ListLandCodesRowChanged;
            
            public event f36035ListLandCodesRowChangeEventHandler f36035ListLandCodesRowDeleting;
            
            public event f36035ListLandCodesRowChangeEventHandler f36035ListLandCodesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf36035ListLandCodesRow(f36035ListLandCodesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f36035ListLandCodesRow Addf36035ListLandCodesRow(string LandCode, short RollYear) {
                f36035ListLandCodesRow rowf36035ListLandCodesRow = ((f36035ListLandCodesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LandCode,
                        RollYear};
                rowf36035ListLandCodesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf36035ListLandCodesRow);
                return rowf36035ListLandCodesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f36035ListLandCodesDataTable cln = ((f36035ListLandCodesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f36035ListLandCodesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLandCode = base.Columns["LandCode"];
                this.columnRollYear = base.Columns["RollYear"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLandCode = new global::System.Data.DataColumn("LandCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCode);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnLandCode.AllowDBNull = false;
                this.columnLandCode.MaxLength = 20;
                this.columnRollYear.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f36035ListLandCodesRow Newf36035ListLandCodesRow() {
                return ((f36035ListLandCodesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f36035ListLandCodesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f36035ListLandCodesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f36035ListLandCodesRowChanged != null)) {
                    this.f36035ListLandCodesRowChanged(this, new f36035ListLandCodesRowChangeEvent(((f36035ListLandCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f36035ListLandCodesRowChanging != null)) {
                    this.f36035ListLandCodesRowChanging(this, new f36035ListLandCodesRowChangeEvent(((f36035ListLandCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f36035ListLandCodesRowDeleted != null)) {
                    this.f36035ListLandCodesRowDeleted(this, new f36035ListLandCodesRowChangeEvent(((f36035ListLandCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f36035ListLandCodesRowDeleting != null)) {
                    this.f36035ListLandCodesRowDeleting(this, new f36035ListLandCodesRowChangeEvent(((f36035ListLandCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef36035ListLandCodesRow(f36035ListLandCodesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29505CreateSubdivisionData ds = new F29505CreateSubdivisionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f36035ListLandCodesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F29505_StateCodeComboDetailsRow : global::System.Data.DataRow {
            
            private F29505_StateCodeComboDetailsDataTable tableF29505_StateCodeComboDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_StateCodeComboDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF29505_StateCodeComboDetails = ((F29505_StateCodeComboDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StateCodeID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_StateCodeComboDetails.StateCodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StateCodeID\' in table \'F29505_StateCodeComboDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableF29505_StateCodeComboDetails.StateCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateCode {
                get {
                    if (this.IsStateCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_StateCodeComboDetails.StateCodeColumn]));
                    }
                }
                set {
                    this[this.tableF29505_StateCodeComboDetails.StateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeIDNull() {
                return this.IsNull(this.tableF29505_StateCodeComboDetails.StateCodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeIDNull() {
                this[this.tableF29505_StateCodeComboDetails.StateCodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeNull() {
                return this.IsNull(this.tableF29505_StateCodeComboDetails.StateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeNull() {
                this[this.tableF29505_StateCodeComboDetails.StateCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F29505_DistrictComboDetailsRow : global::System.Data.DataRow {
            
            private F29505_DistrictComboDetailsDataTable tableF29505_DistrictComboDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_DistrictComboDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF29505_DistrictComboDetails = ((F29505_DistrictComboDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DistrictID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_DistrictComboDetails.DistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictID\' in table \'F29505_DistrictComboDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableF29505_DistrictComboDetails.DistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    if (this.IsDistrictNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_DistrictComboDetails.DistrictColumn]));
                    }
                }
                set {
                    this[this.tableF29505_DistrictComboDetails.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictIDNull() {
                return this.IsNull(this.tableF29505_DistrictComboDetails.DistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictIDNull() {
                this[this.tableF29505_DistrictComboDetails.DistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableF29505_DistrictComboDetails.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableF29505_DistrictComboDetails.DistrictColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F29505_NeighborhoodComboDetailsRow : global::System.Data.DataRow {
            
            private F29505_NeighborhoodComboDetailsDataTable tableF29505_NeighborhoodComboDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_NeighborhoodComboDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF29505_NeighborhoodComboDetails = ((F29505_NeighborhoodComboDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_NeighborhoodComboDetails.NBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'F29505_NeighborhoodComboDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableF29505_NeighborhoodComboDetails.NBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Neighborhood {
                get {
                    if (this.IsNeighborhoodNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_NeighborhoodComboDetails.NeighborhoodColumn]));
                    }
                }
                set {
                    this[this.tableF29505_NeighborhoodComboDetails.NeighborhoodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tableF29505_NeighborhoodComboDetails.NBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tableF29505_NeighborhoodComboDetails.NBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodNull() {
                return this.IsNull(this.tableF29505_NeighborhoodComboDetails.NeighborhoodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodNull() {
                this[this.tableF29505_NeighborhoodComboDetails.NeighborhoodColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F29505_SubdivisionComboDetailsRow : global::System.Data.DataRow {
            
            private F29505_SubdivisionComboDetailsDataTable tableF29505_SubdivisionComboDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_SubdivisionComboDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF29505_SubdivisionComboDetails = ((F29505_SubdivisionComboDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubdivisionID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_SubdivisionComboDetails.SubdivisionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubdivisionID\' in table \'F29505_SubdivisionComboDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_SubdivisionComboDetails.SubdivisionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubName {
                get {
                    if (this.IsSubNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_SubdivisionComboDetails.SubNameColumn]));
                    }
                }
                set {
                    this[this.tableF29505_SubdivisionComboDetails.SubNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubdivisionIDNull() {
                return this.IsNull(this.tableF29505_SubdivisionComboDetails.SubdivisionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubdivisionIDNull() {
                this[this.tableF29505_SubdivisionComboDetails.SubdivisionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubNameNull() {
                return this.IsNull(this.tableF29505_SubdivisionComboDetails.SubNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubNameNull() {
                this[this.tableF29505_SubdivisionComboDetails.SubNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F29505_LandType1ComboDetailsRow : global::System.Data.DataRow {
            
            private F29505_LandType1ComboDetailsDataTable tableF29505_LandType1ComboDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_LandType1ComboDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF29505_LandType1ComboDetails = ((F29505_LandType1ComboDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID1 {
                get {
                    try {
                        return ((int)(this[this.tableF29505_LandType1ComboDetails.LandTypeID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID1\' in table \'F29505_LandType1ComboDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableF29505_LandType1ComboDetails.LandTypeID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandType1 {
                get {
                    if (this.IsLandType1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_LandType1ComboDetails.LandType1Column]));
                    }
                }
                set {
                    this[this.tableF29505_LandType1ComboDetails.LandType1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID1Null() {
                return this.IsNull(this.tableF29505_LandType1ComboDetails.LandTypeID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID1Null() {
                this[this.tableF29505_LandType1ComboDetails.LandTypeID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandType1Null() {
                return this.IsNull(this.tableF29505_LandType1ComboDetails.LandType1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandType1Null() {
                this[this.tableF29505_LandType1ComboDetails.LandType1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F29505_LandType2ComboDetailsRow : global::System.Data.DataRow {
            
            private F29505_LandType2ComboDetailsDataTable tableF29505_LandType2ComboDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_LandType2ComboDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF29505_LandType2ComboDetails = ((F29505_LandType2ComboDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID2 {
                get {
                    try {
                        return ((int)(this[this.tableF29505_LandType2ComboDetails.LandTypeID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID2\' in table \'F29505_LandType2ComboDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableF29505_LandType2ComboDetails.LandTypeID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandType2 {
                get {
                    if (this.IsLandType2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_LandType2ComboDetails.LandType2Column]));
                    }
                }
                set {
                    this[this.tableF29505_LandType2ComboDetails.LandType2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID2Null() {
                return this.IsNull(this.tableF29505_LandType2ComboDetails.LandTypeID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID2Null() {
                this[this.tableF29505_LandType2ComboDetails.LandTypeID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandType2Null() {
                return this.IsNull(this.tableF29505_LandType2ComboDetails.LandType2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandType2Null() {
                this[this.tableF29505_LandType2ComboDetails.LandType2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F29505_LandType3ComboDetailsRow : global::System.Data.DataRow {
            
            private F29505_LandType3ComboDetailsDataTable tableF29505_LandType3ComboDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_LandType3ComboDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF29505_LandType3ComboDetails = ((F29505_LandType3ComboDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID3 {
                get {
                    try {
                        return ((int)(this[this.tableF29505_LandType3ComboDetails.LandTypeID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID3\' in table \'F29505_LandType3ComboDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableF29505_LandType3ComboDetails.LandTypeID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandType3 {
                get {
                    if (this.IsLandType3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_LandType3ComboDetails.LandType3Column]));
                    }
                }
                set {
                    this[this.tableF29505_LandType3ComboDetails.LandType3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID3Null() {
                return this.IsNull(this.tableF29505_LandType3ComboDetails.LandTypeID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID3Null() {
                this[this.tableF29505_LandType3ComboDetails.LandTypeID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandType3Null() {
                return this.IsNull(this.tableF29505_LandType3ComboDetails.LandType3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandType3Null() {
                this[this.tableF29505_LandType3ComboDetails.LandType3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F29505_Get_SubdivisionGridDetailsRow : global::System.Data.DataRow {
            
            private F29505_Get_SubdivisionGridDetailsDataTable tableF29505_Get_SubdivisionGridDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_Get_SubdivisionGridDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF29505_Get_SubdivisionGridDetails = ((F29505_Get_SubdivisionGridDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionGridDetails.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'F29505_Get_SubdivisionGridDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MakeSubID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionGridDetails.MakeSubIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MakeSubID\' in table \'F29505_Get_SubdivisionGridDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.MakeSubIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Row {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionGridDetails.RowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row\' in table \'F29505_Get_SubdivisionGridDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.RowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    if (this.IsParcelNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.ParcelNumberColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HouseNumber {
                get {
                    if (this.IsHouseNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.HouseNumberColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.HouseNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StreetID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionGridDetails.StreetIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StreetID\' in table \'F29505_Get_SubdivisionGridDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.StreetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StreetName {
                get {
                    if (this.IsStreetNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.StreetNameColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.StreetNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Block {
                get {
                    if (this.IsBlockNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.BlockColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.BlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lot {
                get {
                    if (this.IsLotNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.LotColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.LotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LotWidth {
                get {
                    if (this.IsLotWidthNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.LotWidthColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.LotWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LotDepth {
                get {
                    if (this.IsLotDepthNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.LotDepthColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.LotDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Acres {
                get {
                    try {
                        return ((decimal)(this[this.tableF29505_Get_SubdivisionGridDetails.AcresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acres\' in table \'F29505_Get_SubdivisionGridDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.AcresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID1 {
                get {
                    if (this.IsMID1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.MID1Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.MID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID2 {
                get {
                    if (this.IsMID2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.MID2Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.MID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID3 {
                get {
                    if (this.IsMID3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.MID3Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.MID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID4 {
                get {
                    if (this.IsMID4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.MID4Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.MID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID5 {
                get {
                    if (this.IsMID5Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.MID5Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.MID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Label1 {
                get {
                    if (this.IsLabel1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.Label1Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.Label1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Label2 {
                get {
                    if (this.IsLabel2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.Label2Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.Label2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Label3 {
                get {
                    if (this.IsLabel3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.Label3Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.Label3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Label4 {
                get {
                    if (this.IsLabel4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.Label4Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.Label4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Label5 {
                get {
                    if (this.IsLabel5Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.Label5Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.Label5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandShape {
                get {
                    try {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.LandShapeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandShape\' in table \'F29505_Get_SubdivisionGridDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.LandShapeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShapeID {
                get {
                    try {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.ShapeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShapeID\' in table \'F29505_Get_SubdivisionGridDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.ShapeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AdjustmentTypeID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionGridDetails.AdjustmentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjustmentTypeID\' in table \'F29505_Get_SubdivisionGridDetai" +
                                "ls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.AdjustmentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AdjustmentType {
                get {
                    try {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.AdjustmentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjustmentType\' in table \'F29505_Get_SubdivisionGridDetails" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.AdjustmentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Adjustment {
                get {
                    try {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.AdjustmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adjustment\' in table \'F29505_Get_SubdivisionGridDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.AdjustmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NewConstruction {
                get {
                    try {
                        return ((decimal)(this[this.tableF29505_Get_SubdivisionGridDetails.NewConstructionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewConstruction\' in table \'F29505_Get_SubdivisionGridDetail" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.NewConstructionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsValue {
                get {
                    try {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.IsValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsValue\' in table \'F29505_Get_SubdivisionGridDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.IsValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsValueID {
                get {
                    try {
                        return ((string)(this[this.tableF29505_Get_SubdivisionGridDetails.IsValueIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsValueID\' in table \'F29505_Get_SubdivisionGridDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionGridDetails.IsValueIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakeSubIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.MakeSubIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakeSubIDNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.MakeSubIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.RowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.RowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNumberNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.ParcelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNumberNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.ParcelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHouseNumberNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.HouseNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHouseNumberNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.HouseNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.StreetIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetIDNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.StreetIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNameNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.StreetNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNameNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.StreetNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.BlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.BlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLotNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.LotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLotNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.LotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLotWidthNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.LotWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLotWidthNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.LotWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLotDepthNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.LotDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLotDepthNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.LotDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcresNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.AcresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcresNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.AcresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID1Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.MID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID1Null() {
                this[this.tableF29505_Get_SubdivisionGridDetails.MID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID2Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.MID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID2Null() {
                this[this.tableF29505_Get_SubdivisionGridDetails.MID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID3Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.MID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID3Null() {
                this[this.tableF29505_Get_SubdivisionGridDetails.MID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID4Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.MID4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID4Null() {
                this[this.tableF29505_Get_SubdivisionGridDetails.MID4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID5Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.MID5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID5Null() {
                this[this.tableF29505_Get_SubdivisionGridDetails.MID5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabel1Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.Label1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabel1Null() {
                this[this.tableF29505_Get_SubdivisionGridDetails.Label1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabel2Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.Label2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabel2Null() {
                this[this.tableF29505_Get_SubdivisionGridDetails.Label2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabel3Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.Label3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabel3Null() {
                this[this.tableF29505_Get_SubdivisionGridDetails.Label3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabel4Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.Label4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabel4Null() {
                this[this.tableF29505_Get_SubdivisionGridDetails.Label4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabel5Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.Label5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabel5Null() {
                this[this.tableF29505_Get_SubdivisionGridDetails.Label5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandShapeNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.LandShapeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandShapeNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.LandShapeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShapeIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.ShapeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShapeIDNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.ShapeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustmentTypeIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.AdjustmentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustmentTypeIDNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.AdjustmentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustmentTypeNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.AdjustmentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustmentTypeNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.AdjustmentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustmentNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.AdjustmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustmentNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.AdjustmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewConstructionNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.NewConstructionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewConstructionNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.NewConstructionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsValueNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.IsValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsValueNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.IsValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsValueIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionGridDetails.IsValueIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsValueIDNull() {
                this[this.tableF29505_Get_SubdivisionGridDetails.IsValueIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class F29505_Get_SubdivisionHeaderDetailsRow : global::System.Data.DataRow {
            
            private F29505_Get_SubdivisionHeaderDetailsDataTable tableF29505_Get_SubdivisionHeaderDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal F29505_Get_SubdivisionHeaderDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF29505_Get_SubdivisionHeaderDetails = ((F29505_Get_SubdivisionHeaderDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MakeSubID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionHeaderDetails.MakeSubIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MakeSubID\' in table \'F29505_Get_SubdivisionHeaderDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.MakeSubIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionHeaderDetails.EventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventID\' in table \'F29505_Get_SubdivisionHeaderDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProcessed {
                get {
                    try {
                        return ((bool)(this[this.tableF29505_Get_SubdivisionHeaderDetails.IsProcessedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsProcessed\' in table \'F29505_Get_SubdivisionHeaderDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.IsProcessedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tableF29505_Get_SubdivisionHeaderDetails.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'F29505_Get_SubdivisionHeaderDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionHeaderDetails.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'F29505_Get_SubdivisionHeaderDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerName {
                get {
                    if (this.IsOwnerNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.OwnerNameColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.OwnerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateCode {
                get {
                    if (this.IsStateCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.StateCodeColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.StateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DistrictID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionHeaderDetails.DistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictID\' in table \'F29505_Get_SubdivisionHeaderDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.DistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    if (this.IsDistrictNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.DistrictColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionHeaderDetails.NBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'F29505_Get_SubdivisionHeaderDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.NBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Neighborhood {
                get {
                    if (this.IsNeighborhoodNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.NeighborhoodColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.NeighborhoodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubdivisionID {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionHeaderDetails.SubdivisionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubdivisionID\' in table \'F29505_Get_SubdivisionHeaderDetail" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.SubdivisionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubName {
                get {
                    if (this.IsSubNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.SubNameColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.SubNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID1 {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID1\' in table \'F29505_Get_SubdivisionHeaderDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandType1 {
                get {
                    if (this.IsLandType1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.LandType1Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.LandType1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID2 {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID2\' in table \'F29505_Get_SubdivisionHeaderDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandType2 {
                get {
                    if (this.IsLandType2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.LandType2Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.LandType2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandTypeID3 {
                get {
                    try {
                        return ((int)(this[this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeID3\' in table \'F29505_Get_SubdivisionHeaderDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandType3 {
                get {
                    if (this.IsLandType3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.LandType3Column]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.LandType3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandCode {
                get {
                    if (this.IsLandCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.LandCodeColumn]));
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.LandCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NumParcels {
                get {
                    try {
                        return ((byte)(this[this.tableF29505_Get_SubdivisionHeaderDetails.NumParcelsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumParcels\' in table \'F29505_Get_SubdivisionHeaderDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.NumParcelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassCode {
                get {
                    try {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.ClassCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassCode\' in table \'F29505_Get_SubdivisionHeaderDetails\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.ClassCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassCodeColorRGBR {
                get {
                    try {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.ClassCodeColorRGBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassCodeColorRGBR\' in table \'F29505_Get_SubdivisionHeaderD" +
                                "etails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.ClassCodeColorRGBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConfiguredState {
                get {
                    try {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.ConfiguredStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfiguredState\' in table \'F29505_Get_SubdivisionHeaderDeta" +
                                "ils\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.ConfiguredStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AutoCompleteValue {
                get {
                    try {
                        return ((string)(this[this.tableF29505_Get_SubdivisionHeaderDetails.AutoCompleteValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AutoCompleteValue\' in table \'F29505_Get_SubdivisionHeaderDe" +
                                "tails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF29505_Get_SubdivisionHeaderDetails.AutoCompleteValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakeSubIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.MakeSubIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakeSubIDNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.MakeSubIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.EventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventIDNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.EventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsProcessedNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.IsProcessedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsProcessedNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.IsProcessedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.OwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerNameNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.OwnerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerNameNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.OwnerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.StateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.StateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.DistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictIDNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.DistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.NBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.NBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.NeighborhoodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.NeighborhoodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubdivisionIDNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.SubdivisionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubdivisionIDNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.SubdivisionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubNameNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.SubNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubNameNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.SubNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID1Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID1Null() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandType1Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.LandType1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandType1Null() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.LandType1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID2Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID2Null() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandType2Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.LandType2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandType2Null() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.LandType2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandTypeID3Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandTypeID3Null() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.LandTypeID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandType3Null() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.LandType3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandType3Null() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.LandType3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandCodeNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.LandCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandCodeNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.LandCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumParcelsNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.NumParcelsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumParcelsNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.NumParcelsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassCodeNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.ClassCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassCodeNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.ClassCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassCodeColorRGBRNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.ClassCodeColorRGBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassCodeColorRGBRNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.ClassCodeColorRGBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfiguredStateNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.ConfiguredStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfiguredStateNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.ConfiguredStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutoCompleteValueNull() {
                return this.IsNull(this.tableF29505_Get_SubdivisionHeaderDetails.AutoCompleteValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutoCompleteValueNull() {
                this[this.tableF29505_Get_SubdivisionHeaderDetails.AutoCompleteValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Get_LandCodeValueRow : global::System.Data.DataRow {
            
            private Get_LandCodeValueDataTable tableGet_LandCodeValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Get_LandCodeValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGet_LandCodeValue = ((Get_LandCodeValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandCode {
                get {
                    try {
                        return ((string)(this[this.tableGet_LandCodeValue.LandCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandCode\' in table \'Get_LandCodeValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGet_LandCodeValue.LandCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportAS {
                get {
                    try {
                        return ((string)(this[this.tableGet_LandCodeValue.ReportASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportAS\' in table \'Get_LandCodeValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGet_LandCodeValue.ReportASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandCodeNull() {
                return this.IsNull(this.tableGet_LandCodeValue.LandCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandCodeNull() {
                this[this.tableGet_LandCodeValue.LandCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportASNull() {
                return this.IsNull(this.tableGet_LandCodeValue.ReportASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportASNull() {
                this[this.tableGet_LandCodeValue.ReportASColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Get_LandCodeAllValueRow : global::System.Data.DataRow {
            
            private Get_LandCodeAllValueDataTable tableGet_LandCodeAllValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Get_LandCodeAllValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGet_LandCodeAllValue = ((Get_LandCodeAllValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandCode {
                get {
                    return ((string)(this[this.tableGet_LandCodeAllValue.LandCodeColumn]));
                }
                set {
                    this[this.tableGet_LandCodeAllValue.LandCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LandCodeID {
                get {
                    return ((int)(this[this.tableGet_LandCodeAllValue.LandCodeIDColumn]));
                }
                set {
                    this[this.tableGet_LandCodeAllValue.LandCodeIDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f36035ListLandCodesRow : global::System.Data.DataRow {
            
            private f36035ListLandCodesDataTable tablef36035ListLandCodes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f36035ListLandCodesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef36035ListLandCodes = ((f36035ListLandCodesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandCode {
                get {
                    return ((string)(this[this.tablef36035ListLandCodes.LandCodeColumn]));
                }
                set {
                    this[this.tablef36035ListLandCodes.LandCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    return ((short)(this[this.tablef36035ListLandCodes.RollYearColumn]));
                }
                set {
                    this[this.tablef36035ListLandCodes.RollYearColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F29505_StateCodeComboDetailsRowChangeEvent : global::System.EventArgs {
            
            private F29505_StateCodeComboDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_StateCodeComboDetailsRowChangeEvent(F29505_StateCodeComboDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_StateCodeComboDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F29505_DistrictComboDetailsRowChangeEvent : global::System.EventArgs {
            
            private F29505_DistrictComboDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_DistrictComboDetailsRowChangeEvent(F29505_DistrictComboDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_DistrictComboDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F29505_NeighborhoodComboDetailsRowChangeEvent : global::System.EventArgs {
            
            private F29505_NeighborhoodComboDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_NeighborhoodComboDetailsRowChangeEvent(F29505_NeighborhoodComboDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_NeighborhoodComboDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F29505_SubdivisionComboDetailsRowChangeEvent : global::System.EventArgs {
            
            private F29505_SubdivisionComboDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_SubdivisionComboDetailsRowChangeEvent(F29505_SubdivisionComboDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_SubdivisionComboDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F29505_LandType1ComboDetailsRowChangeEvent : global::System.EventArgs {
            
            private F29505_LandType1ComboDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType1ComboDetailsRowChangeEvent(F29505_LandType1ComboDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType1ComboDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F29505_LandType2ComboDetailsRowChangeEvent : global::System.EventArgs {
            
            private F29505_LandType2ComboDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType2ComboDetailsRowChangeEvent(F29505_LandType2ComboDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType2ComboDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F29505_LandType3ComboDetailsRowChangeEvent : global::System.EventArgs {
            
            private F29505_LandType3ComboDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType3ComboDetailsRowChangeEvent(F29505_LandType3ComboDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_LandType3ComboDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F29505_Get_SubdivisionGridDetailsRowChangeEvent : global::System.EventArgs {
            
            private F29505_Get_SubdivisionGridDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionGridDetailsRowChangeEvent(F29505_Get_SubdivisionGridDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionGridDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class F29505_Get_SubdivisionHeaderDetailsRowChangeEvent : global::System.EventArgs {
            
            private F29505_Get_SubdivisionHeaderDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionHeaderDetailsRowChangeEvent(F29505_Get_SubdivisionHeaderDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public F29505_Get_SubdivisionHeaderDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Get_LandCodeValueRowChangeEvent : global::System.EventArgs {
            
            private Get_LandCodeValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeValueRowChangeEvent(Get_LandCodeValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Get_LandCodeAllValueRowChangeEvent : global::System.EventArgs {
            
            private Get_LandCodeAllValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeAllValueRowChangeEvent(Get_LandCodeAllValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Get_LandCodeAllValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f36035ListLandCodesRowChangeEvent : global::System.EventArgs {
            
            private f36035ListLandCodesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f36035ListLandCodesRowChangeEvent(f36035ListLandCodesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f36035ListLandCodesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591