//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F16072MiscReceiptTemplate")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F16072MiscReceiptTemplate : global::System.Data.DataSet {
        
        private f11072_Get_MiscReceiptTemplateDataTable tablef11072_Get_MiscReceiptTemplate;
        
        private f16072_SaveMiscHeaderDetailsDataTable tablef16072_SaveMiscHeaderDetails;
        
        private f16072_SaveMiscAccountDetailsDataTable tablef16072_SaveMiscAccountDetails;
        
        private f16072_FilterDataDataTable tablef16072_FilterData;
        
        private f11072Get_MiscGridDetailsTableDataTable tablef11072Get_MiscGridDetailsTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F16072MiscReceiptTemplate() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F16072MiscReceiptTemplate(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f11072_Get_MiscReceiptTemplate"] != null)) {
                    base.Tables.Add(new f11072_Get_MiscReceiptTemplateDataTable(ds.Tables["f11072_Get_MiscReceiptTemplate"]));
                }
                if ((ds.Tables["f16072_SaveMiscHeaderDetails"] != null)) {
                    base.Tables.Add(new f16072_SaveMiscHeaderDetailsDataTable(ds.Tables["f16072_SaveMiscHeaderDetails"]));
                }
                if ((ds.Tables["f16072_SaveMiscAccountDetails"] != null)) {
                    base.Tables.Add(new f16072_SaveMiscAccountDetailsDataTable(ds.Tables["f16072_SaveMiscAccountDetails"]));
                }
                if ((ds.Tables["f16072_FilterData"] != null)) {
                    base.Tables.Add(new f16072_FilterDataDataTable(ds.Tables["f16072_FilterData"]));
                }
                if ((ds.Tables["f11072Get_MiscGridDetailsTable"] != null)) {
                    base.Tables.Add(new f11072Get_MiscGridDetailsTableDataTable(ds.Tables["f11072Get_MiscGridDetailsTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f11072_Get_MiscReceiptTemplateDataTable f11072_Get_MiscReceiptTemplate {
            get {
                return this.tablef11072_Get_MiscReceiptTemplate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f16072_SaveMiscHeaderDetailsDataTable f16072_SaveMiscHeaderDetails {
            get {
                return this.tablef16072_SaveMiscHeaderDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f16072_SaveMiscAccountDetailsDataTable f16072_SaveMiscAccountDetails {
            get {
                return this.tablef16072_SaveMiscAccountDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f16072_FilterDataDataTable f16072_FilterData {
            get {
                return this.tablef16072_FilterData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f11072Get_MiscGridDetailsTableDataTable f11072Get_MiscGridDetailsTable {
            get {
                return this.tablef11072Get_MiscGridDetailsTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F16072MiscReceiptTemplate cln = ((F16072MiscReceiptTemplate)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f11072_Get_MiscReceiptTemplate"] != null)) {
                    base.Tables.Add(new f11072_Get_MiscReceiptTemplateDataTable(ds.Tables["f11072_Get_MiscReceiptTemplate"]));
                }
                if ((ds.Tables["f16072_SaveMiscHeaderDetails"] != null)) {
                    base.Tables.Add(new f16072_SaveMiscHeaderDetailsDataTable(ds.Tables["f16072_SaveMiscHeaderDetails"]));
                }
                if ((ds.Tables["f16072_SaveMiscAccountDetails"] != null)) {
                    base.Tables.Add(new f16072_SaveMiscAccountDetailsDataTable(ds.Tables["f16072_SaveMiscAccountDetails"]));
                }
                if ((ds.Tables["f16072_FilterData"] != null)) {
                    base.Tables.Add(new f16072_FilterDataDataTable(ds.Tables["f16072_FilterData"]));
                }
                if ((ds.Tables["f11072Get_MiscGridDetailsTable"] != null)) {
                    base.Tables.Add(new f11072Get_MiscGridDetailsTableDataTable(ds.Tables["f11072Get_MiscGridDetailsTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef11072_Get_MiscReceiptTemplate = ((f11072_Get_MiscReceiptTemplateDataTable)(base.Tables["f11072_Get_MiscReceiptTemplate"]));
            if ((initTable == true)) {
                if ((this.tablef11072_Get_MiscReceiptTemplate != null)) {
                    this.tablef11072_Get_MiscReceiptTemplate.InitVars();
                }
            }
            this.tablef16072_SaveMiscHeaderDetails = ((f16072_SaveMiscHeaderDetailsDataTable)(base.Tables["f16072_SaveMiscHeaderDetails"]));
            if ((initTable == true)) {
                if ((this.tablef16072_SaveMiscHeaderDetails != null)) {
                    this.tablef16072_SaveMiscHeaderDetails.InitVars();
                }
            }
            this.tablef16072_SaveMiscAccountDetails = ((f16072_SaveMiscAccountDetailsDataTable)(base.Tables["f16072_SaveMiscAccountDetails"]));
            if ((initTable == true)) {
                if ((this.tablef16072_SaveMiscAccountDetails != null)) {
                    this.tablef16072_SaveMiscAccountDetails.InitVars();
                }
            }
            this.tablef16072_FilterData = ((f16072_FilterDataDataTable)(base.Tables["f16072_FilterData"]));
            if ((initTable == true)) {
                if ((this.tablef16072_FilterData != null)) {
                    this.tablef16072_FilterData.InitVars();
                }
            }
            this.tablef11072Get_MiscGridDetailsTable = ((f11072Get_MiscGridDetailsTableDataTable)(base.Tables["f11072Get_MiscGridDetailsTable"]));
            if ((initTable == true)) {
                if ((this.tablef11072Get_MiscGridDetailsTable != null)) {
                    this.tablef11072Get_MiscGridDetailsTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F16072MiscReceiptTemplate";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F16072MiscReceiptTemplate.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef11072_Get_MiscReceiptTemplate = new f11072_Get_MiscReceiptTemplateDataTable();
            base.Tables.Add(this.tablef11072_Get_MiscReceiptTemplate);
            this.tablef16072_SaveMiscHeaderDetails = new f16072_SaveMiscHeaderDetailsDataTable();
            base.Tables.Add(this.tablef16072_SaveMiscHeaderDetails);
            this.tablef16072_SaveMiscAccountDetails = new f16072_SaveMiscAccountDetailsDataTable();
            base.Tables.Add(this.tablef16072_SaveMiscAccountDetails);
            this.tablef16072_FilterData = new f16072_FilterDataDataTable();
            base.Tables.Add(this.tablef16072_FilterData);
            this.tablef11072Get_MiscGridDetailsTable = new f11072Get_MiscGridDetailsTableDataTable();
            base.Tables.Add(this.tablef11072Get_MiscGridDetailsTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef11072_Get_MiscReceiptTemplate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef16072_SaveMiscHeaderDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef16072_SaveMiscAccountDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef16072_FilterData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef11072Get_MiscGridDetailsTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F16072MiscReceiptTemplate ds = new F16072MiscReceiptTemplate();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f11072_Get_MiscReceiptTemplateRowChangeEventHandler(object sender, f11072_Get_MiscReceiptTemplateRowChangeEvent e);
        
        public delegate void f16072_SaveMiscHeaderDetailsRowChangeEventHandler(object sender, f16072_SaveMiscHeaderDetailsRowChangeEvent e);
        
        public delegate void f16072_SaveMiscAccountDetailsRowChangeEventHandler(object sender, f16072_SaveMiscAccountDetailsRowChangeEvent e);
        
        public delegate void f16072_FilterDataRowChangeEventHandler(object sender, f16072_FilterDataRowChangeEvent e);
        
        public delegate void f11072Get_MiscGridDetailsTableRowChangeEventHandler(object sender, f11072Get_MiscGridDetailsTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f11072_Get_MiscReceiptTemplateDataTable : global::System.Data.TypedTableBase<f11072_Get_MiscReceiptTemplateRow> {
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnReceivedFrom;
            
            private global::System.Data.DataColumn columnDefaultComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072_Get_MiscReceiptTemplateDataTable() {
                this.TableName = "f11072_Get_MiscReceiptTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f11072_Get_MiscReceiptTemplateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f11072_Get_MiscReceiptTemplateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedFromColumn {
                get {
                    return this.columnReceivedFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DefaultCommentColumn {
                get {
                    return this.columnDefaultComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072_Get_MiscReceiptTemplateRow this[int index] {
                get {
                    return ((f11072_Get_MiscReceiptTemplateRow)(this.Rows[index]));
                }
            }
            
            public event f11072_Get_MiscReceiptTemplateRowChangeEventHandler f11072_Get_MiscReceiptTemplateRowChanging;
            
            public event f11072_Get_MiscReceiptTemplateRowChangeEventHandler f11072_Get_MiscReceiptTemplateRowChanged;
            
            public event f11072_Get_MiscReceiptTemplateRowChangeEventHandler f11072_Get_MiscReceiptTemplateRowDeleting;
            
            public event f11072_Get_MiscReceiptTemplateRowChangeEventHandler f11072_Get_MiscReceiptTemplateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf11072_Get_MiscReceiptTemplateRow(f11072_Get_MiscReceiptTemplateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072_Get_MiscReceiptTemplateRow Addf11072_Get_MiscReceiptTemplateRow(string Description, string ReceivedFrom, string DefaultComment) {
                f11072_Get_MiscReceiptTemplateRow rowf11072_Get_MiscReceiptTemplateRow = ((f11072_Get_MiscReceiptTemplateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Description,
                        ReceivedFrom,
                        DefaultComment};
                rowf11072_Get_MiscReceiptTemplateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf11072_Get_MiscReceiptTemplateRow);
                return rowf11072_Get_MiscReceiptTemplateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f11072_Get_MiscReceiptTemplateDataTable cln = ((f11072_Get_MiscReceiptTemplateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f11072_Get_MiscReceiptTemplateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDescription = base.Columns["Description"];
                this.columnReceivedFrom = base.Columns["ReceivedFrom"];
                this.columnDefaultComment = base.Columns["DefaultComment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnReceivedFrom = new global::System.Data.DataColumn("ReceivedFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedFrom);
                this.columnDefaultComment = new global::System.Data.DataColumn("DefaultComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultComment);
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 100;
                this.columnReceivedFrom.MaxLength = 150;
                this.columnDefaultComment.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072_Get_MiscReceiptTemplateRow Newf11072_Get_MiscReceiptTemplateRow() {
                return ((f11072_Get_MiscReceiptTemplateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f11072_Get_MiscReceiptTemplateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f11072_Get_MiscReceiptTemplateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f11072_Get_MiscReceiptTemplateRowChanged != null)) {
                    this.f11072_Get_MiscReceiptTemplateRowChanged(this, new f11072_Get_MiscReceiptTemplateRowChangeEvent(((f11072_Get_MiscReceiptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f11072_Get_MiscReceiptTemplateRowChanging != null)) {
                    this.f11072_Get_MiscReceiptTemplateRowChanging(this, new f11072_Get_MiscReceiptTemplateRowChangeEvent(((f11072_Get_MiscReceiptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f11072_Get_MiscReceiptTemplateRowDeleted != null)) {
                    this.f11072_Get_MiscReceiptTemplateRowDeleted(this, new f11072_Get_MiscReceiptTemplateRowChangeEvent(((f11072_Get_MiscReceiptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f11072_Get_MiscReceiptTemplateRowDeleting != null)) {
                    this.f11072_Get_MiscReceiptTemplateRowDeleting(this, new f11072_Get_MiscReceiptTemplateRowChangeEvent(((f11072_Get_MiscReceiptTemplateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef11072_Get_MiscReceiptTemplateRow(f11072_Get_MiscReceiptTemplateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F16072MiscReceiptTemplate ds = new F16072MiscReceiptTemplate();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f11072_Get_MiscReceiptTemplateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f16072_SaveMiscHeaderDetailsDataTable : global::System.Data.TypedTableBase<f16072_SaveMiscHeaderDetailsRow> {
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnReceivedFrom;
            
            private global::System.Data.DataColumn columnDefaultComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscHeaderDetailsDataTable() {
                this.TableName = "f16072_SaveMiscHeaderDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f16072_SaveMiscHeaderDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f16072_SaveMiscHeaderDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedFromColumn {
                get {
                    return this.columnReceivedFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DefaultCommentColumn {
                get {
                    return this.columnDefaultComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscHeaderDetailsRow this[int index] {
                get {
                    return ((f16072_SaveMiscHeaderDetailsRow)(this.Rows[index]));
                }
            }
            
            public event f16072_SaveMiscHeaderDetailsRowChangeEventHandler f16072_SaveMiscHeaderDetailsRowChanging;
            
            public event f16072_SaveMiscHeaderDetailsRowChangeEventHandler f16072_SaveMiscHeaderDetailsRowChanged;
            
            public event f16072_SaveMiscHeaderDetailsRowChangeEventHandler f16072_SaveMiscHeaderDetailsRowDeleting;
            
            public event f16072_SaveMiscHeaderDetailsRowChangeEventHandler f16072_SaveMiscHeaderDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf16072_SaveMiscHeaderDetailsRow(f16072_SaveMiscHeaderDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscHeaderDetailsRow Addf16072_SaveMiscHeaderDetailsRow(string Description, string ReceivedFrom, string DefaultComment) {
                f16072_SaveMiscHeaderDetailsRow rowf16072_SaveMiscHeaderDetailsRow = ((f16072_SaveMiscHeaderDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Description,
                        ReceivedFrom,
                        DefaultComment};
                rowf16072_SaveMiscHeaderDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf16072_SaveMiscHeaderDetailsRow);
                return rowf16072_SaveMiscHeaderDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f16072_SaveMiscHeaderDetailsDataTable cln = ((f16072_SaveMiscHeaderDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f16072_SaveMiscHeaderDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDescription = base.Columns["Description"];
                this.columnReceivedFrom = base.Columns["ReceivedFrom"];
                this.columnDefaultComment = base.Columns["DefaultComment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnReceivedFrom = new global::System.Data.DataColumn("ReceivedFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedFrom);
                this.columnDefaultComment = new global::System.Data.DataColumn("DefaultComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultComment);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscHeaderDetailsRow Newf16072_SaveMiscHeaderDetailsRow() {
                return ((f16072_SaveMiscHeaderDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f16072_SaveMiscHeaderDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f16072_SaveMiscHeaderDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f16072_SaveMiscHeaderDetailsRowChanged != null)) {
                    this.f16072_SaveMiscHeaderDetailsRowChanged(this, new f16072_SaveMiscHeaderDetailsRowChangeEvent(((f16072_SaveMiscHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f16072_SaveMiscHeaderDetailsRowChanging != null)) {
                    this.f16072_SaveMiscHeaderDetailsRowChanging(this, new f16072_SaveMiscHeaderDetailsRowChangeEvent(((f16072_SaveMiscHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f16072_SaveMiscHeaderDetailsRowDeleted != null)) {
                    this.f16072_SaveMiscHeaderDetailsRowDeleted(this, new f16072_SaveMiscHeaderDetailsRowChangeEvent(((f16072_SaveMiscHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f16072_SaveMiscHeaderDetailsRowDeleting != null)) {
                    this.f16072_SaveMiscHeaderDetailsRowDeleting(this, new f16072_SaveMiscHeaderDetailsRowChangeEvent(((f16072_SaveMiscHeaderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef16072_SaveMiscHeaderDetailsRow(f16072_SaveMiscHeaderDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F16072MiscReceiptTemplate ds = new F16072MiscReceiptTemplate();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f16072_SaveMiscHeaderDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f16072_SaveMiscAccountDetailsDataTable : global::System.Data.TypedTableBase<f16072_SaveMiscAccountDetailsRow> {
            
            private global::System.Data.DataColumn columnMiscItemID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnAccountID;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscAccountDetailsDataTable() {
                this.TableName = "f16072_SaveMiscAccountDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f16072_SaveMiscAccountDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f16072_SaveMiscAccountDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscItemIDColumn {
                get {
                    return this.columnMiscItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscAccountDetailsRow this[int index] {
                get {
                    return ((f16072_SaveMiscAccountDetailsRow)(this.Rows[index]));
                }
            }
            
            public event f16072_SaveMiscAccountDetailsRowChangeEventHandler f16072_SaveMiscAccountDetailsRowChanging;
            
            public event f16072_SaveMiscAccountDetailsRowChangeEventHandler f16072_SaveMiscAccountDetailsRowChanged;
            
            public event f16072_SaveMiscAccountDetailsRowChangeEventHandler f16072_SaveMiscAccountDetailsRowDeleting;
            
            public event f16072_SaveMiscAccountDetailsRowChangeEventHandler f16072_SaveMiscAccountDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf16072_SaveMiscAccountDetailsRow(f16072_SaveMiscAccountDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscAccountDetailsRow Addf16072_SaveMiscAccountDetailsRow(string MiscItemID, string Description, string AccountID, string Amount, string Code) {
                f16072_SaveMiscAccountDetailsRow rowf16072_SaveMiscAccountDetailsRow = ((f16072_SaveMiscAccountDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MiscItemID,
                        Description,
                        AccountID,
                        Amount,
                        Code};
                rowf16072_SaveMiscAccountDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf16072_SaveMiscAccountDetailsRow);
                return rowf16072_SaveMiscAccountDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f16072_SaveMiscAccountDetailsDataTable cln = ((f16072_SaveMiscAccountDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f16072_SaveMiscAccountDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMiscItemID = base.Columns["MiscItemID"];
                this.columnDescription = base.Columns["Description"];
                this.columnAccountID = base.Columns["AccountID"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCode = base.Columns["Code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMiscItemID = new global::System.Data.DataColumn("MiscItemID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscItemID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountID);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscAccountDetailsRow Newf16072_SaveMiscAccountDetailsRow() {
                return ((f16072_SaveMiscAccountDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f16072_SaveMiscAccountDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f16072_SaveMiscAccountDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f16072_SaveMiscAccountDetailsRowChanged != null)) {
                    this.f16072_SaveMiscAccountDetailsRowChanged(this, new f16072_SaveMiscAccountDetailsRowChangeEvent(((f16072_SaveMiscAccountDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f16072_SaveMiscAccountDetailsRowChanging != null)) {
                    this.f16072_SaveMiscAccountDetailsRowChanging(this, new f16072_SaveMiscAccountDetailsRowChangeEvent(((f16072_SaveMiscAccountDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f16072_SaveMiscAccountDetailsRowDeleted != null)) {
                    this.f16072_SaveMiscAccountDetailsRowDeleted(this, new f16072_SaveMiscAccountDetailsRowChangeEvent(((f16072_SaveMiscAccountDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f16072_SaveMiscAccountDetailsRowDeleting != null)) {
                    this.f16072_SaveMiscAccountDetailsRowDeleting(this, new f16072_SaveMiscAccountDetailsRowChangeEvent(((f16072_SaveMiscAccountDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef16072_SaveMiscAccountDetailsRow(f16072_SaveMiscAccountDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F16072MiscReceiptTemplate ds = new F16072MiscReceiptTemplate();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f16072_SaveMiscAccountDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f16072_FilterDataDataTable : global::System.Data.TypedTableBase<f16072_FilterDataRow> {
            
            private global::System.Data.DataColumn columnAccountID;
            
            private global::System.Data.DataColumn columnAccountName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_FilterDataDataTable() {
                this.TableName = "f16072_FilterData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f16072_FilterDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f16072_FilterDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_FilterDataRow this[int index] {
                get {
                    return ((f16072_FilterDataRow)(this.Rows[index]));
                }
            }
            
            public event f16072_FilterDataRowChangeEventHandler f16072_FilterDataRowChanging;
            
            public event f16072_FilterDataRowChangeEventHandler f16072_FilterDataRowChanged;
            
            public event f16072_FilterDataRowChangeEventHandler f16072_FilterDataRowDeleting;
            
            public event f16072_FilterDataRowChangeEventHandler f16072_FilterDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf16072_FilterDataRow(f16072_FilterDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_FilterDataRow Addf16072_FilterDataRow(string AccountID, string AccountName) {
                f16072_FilterDataRow rowf16072_FilterDataRow = ((f16072_FilterDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountID,
                        AccountName};
                rowf16072_FilterDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf16072_FilterDataRow);
                return rowf16072_FilterDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f16072_FilterDataDataTable cln = ((f16072_FilterDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f16072_FilterDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAccountID = base.Columns["AccountID"];
                this.columnAccountName = base.Columns["AccountName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountID);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_FilterDataRow Newf16072_FilterDataRow() {
                return ((f16072_FilterDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f16072_FilterDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f16072_FilterDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f16072_FilterDataRowChanged != null)) {
                    this.f16072_FilterDataRowChanged(this, new f16072_FilterDataRowChangeEvent(((f16072_FilterDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f16072_FilterDataRowChanging != null)) {
                    this.f16072_FilterDataRowChanging(this, new f16072_FilterDataRowChangeEvent(((f16072_FilterDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f16072_FilterDataRowDeleted != null)) {
                    this.f16072_FilterDataRowDeleted(this, new f16072_FilterDataRowChangeEvent(((f16072_FilterDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f16072_FilterDataRowDeleting != null)) {
                    this.f16072_FilterDataRowDeleting(this, new f16072_FilterDataRowChangeEvent(((f16072_FilterDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef16072_FilterDataRow(f16072_FilterDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F16072MiscReceiptTemplate ds = new F16072MiscReceiptTemplate();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f16072_FilterDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f11072Get_MiscGridDetailsTableDataTable : global::System.Data.TypedTableBase<f11072Get_MiscGridDetailsTableRow> {
            
            private global::System.Data.DataColumn columnAccountID;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnMiscItemID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072Get_MiscGridDetailsTableDataTable() {
                this.TableName = "f11072Get_MiscGridDetailsTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f11072Get_MiscGridDetailsTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f11072Get_MiscGridDetailsTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscItemIDColumn {
                get {
                    return this.columnMiscItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072Get_MiscGridDetailsTableRow this[int index] {
                get {
                    return ((f11072Get_MiscGridDetailsTableRow)(this.Rows[index]));
                }
            }
            
            public event f11072Get_MiscGridDetailsTableRowChangeEventHandler f11072Get_MiscGridDetailsTableRowChanging;
            
            public event f11072Get_MiscGridDetailsTableRowChangeEventHandler f11072Get_MiscGridDetailsTableRowChanged;
            
            public event f11072Get_MiscGridDetailsTableRowChangeEventHandler f11072Get_MiscGridDetailsTableRowDeleting;
            
            public event f11072Get_MiscGridDetailsTableRowChangeEventHandler f11072Get_MiscGridDetailsTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf11072Get_MiscGridDetailsTableRow(f11072Get_MiscGridDetailsTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072Get_MiscGridDetailsTableRow Addf11072Get_MiscGridDetailsTableRow(string AccountID, string AccountName, string Description, string Code, decimal Amount, string MiscItemID) {
                f11072Get_MiscGridDetailsTableRow rowf11072Get_MiscGridDetailsTableRow = ((f11072Get_MiscGridDetailsTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountID,
                        AccountName,
                        Description,
                        Code,
                        Amount,
                        MiscItemID};
                rowf11072Get_MiscGridDetailsTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf11072Get_MiscGridDetailsTableRow);
                return rowf11072Get_MiscGridDetailsTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f11072Get_MiscGridDetailsTableDataTable cln = ((f11072Get_MiscGridDetailsTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f11072Get_MiscGridDetailsTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAccountID = base.Columns["AccountID"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnDescription = base.Columns["Description"];
                this.columnCode = base.Columns["Code"];
                this.columnAmount = base.Columns["Amount"];
                this.columnMiscItemID = base.Columns["MiscItemID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountID);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnMiscItemID = new global::System.Data.DataColumn("MiscItemID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscItemID);
                this.columnAccountName.MaxLength = 265;
                this.columnDescription.MaxLength = 100;
                this.columnCode.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072Get_MiscGridDetailsTableRow Newf11072Get_MiscGridDetailsTableRow() {
                return ((f11072Get_MiscGridDetailsTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f11072Get_MiscGridDetailsTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f11072Get_MiscGridDetailsTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f11072Get_MiscGridDetailsTableRowChanged != null)) {
                    this.f11072Get_MiscGridDetailsTableRowChanged(this, new f11072Get_MiscGridDetailsTableRowChangeEvent(((f11072Get_MiscGridDetailsTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f11072Get_MiscGridDetailsTableRowChanging != null)) {
                    this.f11072Get_MiscGridDetailsTableRowChanging(this, new f11072Get_MiscGridDetailsTableRowChangeEvent(((f11072Get_MiscGridDetailsTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f11072Get_MiscGridDetailsTableRowDeleted != null)) {
                    this.f11072Get_MiscGridDetailsTableRowDeleted(this, new f11072Get_MiscGridDetailsTableRowChangeEvent(((f11072Get_MiscGridDetailsTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f11072Get_MiscGridDetailsTableRowDeleting != null)) {
                    this.f11072Get_MiscGridDetailsTableRowDeleting(this, new f11072Get_MiscGridDetailsTableRowChangeEvent(((f11072Get_MiscGridDetailsTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef11072Get_MiscGridDetailsTableRow(f11072Get_MiscGridDetailsTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F16072MiscReceiptTemplate ds = new F16072MiscReceiptTemplate();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f11072Get_MiscGridDetailsTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f11072_Get_MiscReceiptTemplateRow : global::System.Data.DataRow {
            
            private f11072_Get_MiscReceiptTemplateDataTable tablef11072_Get_MiscReceiptTemplate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f11072_Get_MiscReceiptTemplateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef11072_Get_MiscReceiptTemplate = ((f11072_Get_MiscReceiptTemplateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    return ((string)(this[this.tablef11072_Get_MiscReceiptTemplate.DescriptionColumn]));
                }
                set {
                    this[this.tablef11072_Get_MiscReceiptTemplate.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceivedFrom {
                get {
                    try {
                        return ((string)(this[this.tablef11072_Get_MiscReceiptTemplate.ReceivedFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedFrom\' in table \'f11072_Get_MiscReceiptTemplate\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef11072_Get_MiscReceiptTemplate.ReceivedFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DefaultComment {
                get {
                    try {
                        return ((string)(this[this.tablef11072_Get_MiscReceiptTemplate.DefaultCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultComment\' in table \'f11072_Get_MiscReceiptTemplate\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablef11072_Get_MiscReceiptTemplate.DefaultCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedFromNull() {
                return this.IsNull(this.tablef11072_Get_MiscReceiptTemplate.ReceivedFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedFromNull() {
                this[this.tablef11072_Get_MiscReceiptTemplate.ReceivedFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefaultCommentNull() {
                return this.IsNull(this.tablef11072_Get_MiscReceiptTemplate.DefaultCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDefaultCommentNull() {
                this[this.tablef11072_Get_MiscReceiptTemplate.DefaultCommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f16072_SaveMiscHeaderDetailsRow : global::System.Data.DataRow {
            
            private f16072_SaveMiscHeaderDetailsDataTable tablef16072_SaveMiscHeaderDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f16072_SaveMiscHeaderDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef16072_SaveMiscHeaderDetails = ((f16072_SaveMiscHeaderDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablef16072_SaveMiscHeaderDetails.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'f16072_SaveMiscHeaderDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef16072_SaveMiscHeaderDetails.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceivedFrom {
                get {
                    try {
                        return ((string)(this[this.tablef16072_SaveMiscHeaderDetails.ReceivedFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedFrom\' in table \'f16072_SaveMiscHeaderDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef16072_SaveMiscHeaderDetails.ReceivedFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DefaultComment {
                get {
                    try {
                        return ((string)(this[this.tablef16072_SaveMiscHeaderDetails.DefaultCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultComment\' in table \'f16072_SaveMiscHeaderDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef16072_SaveMiscHeaderDetails.DefaultCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablef16072_SaveMiscHeaderDetails.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablef16072_SaveMiscHeaderDetails.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedFromNull() {
                return this.IsNull(this.tablef16072_SaveMiscHeaderDetails.ReceivedFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedFromNull() {
                this[this.tablef16072_SaveMiscHeaderDetails.ReceivedFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefaultCommentNull() {
                return this.IsNull(this.tablef16072_SaveMiscHeaderDetails.DefaultCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDefaultCommentNull() {
                this[this.tablef16072_SaveMiscHeaderDetails.DefaultCommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f16072_SaveMiscAccountDetailsRow : global::System.Data.DataRow {
            
            private f16072_SaveMiscAccountDetailsDataTable tablef16072_SaveMiscAccountDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f16072_SaveMiscAccountDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef16072_SaveMiscAccountDetails = ((f16072_SaveMiscAccountDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiscItemID {
                get {
                    try {
                        return ((string)(this[this.tablef16072_SaveMiscAccountDetails.MiscItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscItemID\' in table \'f16072_SaveMiscAccountDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef16072_SaveMiscAccountDetails.MiscItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablef16072_SaveMiscAccountDetails.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'f16072_SaveMiscAccountDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef16072_SaveMiscAccountDetails.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountID {
                get {
                    try {
                        return ((string)(this[this.tablef16072_SaveMiscAccountDetails.AccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountID\' in table \'f16072_SaveMiscAccountDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef16072_SaveMiscAccountDetails.AccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tablef16072_SaveMiscAccountDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'f16072_SaveMiscAccountDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablef16072_SaveMiscAccountDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tablef16072_SaveMiscAccountDetails.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'f16072_SaveMiscAccountDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef16072_SaveMiscAccountDetails.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscItemIDNull() {
                return this.IsNull(this.tablef16072_SaveMiscAccountDetails.MiscItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscItemIDNull() {
                this[this.tablef16072_SaveMiscAccountDetails.MiscItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablef16072_SaveMiscAccountDetails.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablef16072_SaveMiscAccountDetails.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountIDNull() {
                return this.IsNull(this.tablef16072_SaveMiscAccountDetails.AccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountIDNull() {
                this[this.tablef16072_SaveMiscAccountDetails.AccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablef16072_SaveMiscAccountDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablef16072_SaveMiscAccountDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tablef16072_SaveMiscAccountDetails.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tablef16072_SaveMiscAccountDetails.CodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f16072_FilterDataRow : global::System.Data.DataRow {
            
            private f16072_FilterDataDataTable tablef16072_FilterData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f16072_FilterDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef16072_FilterData = ((f16072_FilterDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountID {
                get {
                    try {
                        return ((string)(this[this.tablef16072_FilterData.AccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountID\' in table \'f16072_FilterData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef16072_FilterData.AccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tablef16072_FilterData.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'f16072_FilterData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef16072_FilterData.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountIDNull() {
                return this.IsNull(this.tablef16072_FilterData.AccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountIDNull() {
                this[this.tablef16072_FilterData.AccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tablef16072_FilterData.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tablef16072_FilterData.AccountNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f11072Get_MiscGridDetailsTableRow : global::System.Data.DataRow {
            
            private f11072Get_MiscGridDetailsTableDataTable tablef11072Get_MiscGridDetailsTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f11072Get_MiscGridDetailsTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef11072Get_MiscGridDetailsTable = ((f11072Get_MiscGridDetailsTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountID {
                get {
                    try {
                        return ((string)(this[this.tablef11072Get_MiscGridDetailsTable.AccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountID\' in table \'f11072Get_MiscGridDetailsTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablef11072Get_MiscGridDetailsTable.AccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tablef11072Get_MiscGridDetailsTable.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'f11072Get_MiscGridDetailsTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef11072Get_MiscGridDetailsTable.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablef11072Get_MiscGridDetailsTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'f11072Get_MiscGridDetailsTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablef11072Get_MiscGridDetailsTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tablef11072Get_MiscGridDetailsTable.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'f11072Get_MiscGridDetailsTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef11072Get_MiscGridDetailsTable.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablef11072Get_MiscGridDetailsTable.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'f11072Get_MiscGridDetailsTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablef11072Get_MiscGridDetailsTable.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiscItemID {
                get {
                    try {
                        return ((string)(this[this.tablef11072Get_MiscGridDetailsTable.MiscItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscItemID\' in table \'f11072Get_MiscGridDetailsTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef11072Get_MiscGridDetailsTable.MiscItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountIDNull() {
                return this.IsNull(this.tablef11072Get_MiscGridDetailsTable.AccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountIDNull() {
                this[this.tablef11072Get_MiscGridDetailsTable.AccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tablef11072Get_MiscGridDetailsTable.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tablef11072Get_MiscGridDetailsTable.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablef11072Get_MiscGridDetailsTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablef11072Get_MiscGridDetailsTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tablef11072Get_MiscGridDetailsTable.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tablef11072Get_MiscGridDetailsTable.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablef11072Get_MiscGridDetailsTable.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablef11072Get_MiscGridDetailsTable.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscItemIDNull() {
                return this.IsNull(this.tablef11072Get_MiscGridDetailsTable.MiscItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscItemIDNull() {
                this[this.tablef11072Get_MiscGridDetailsTable.MiscItemIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f11072_Get_MiscReceiptTemplateRowChangeEvent : global::System.EventArgs {
            
            private f11072_Get_MiscReceiptTemplateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072_Get_MiscReceiptTemplateRowChangeEvent(f11072_Get_MiscReceiptTemplateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072_Get_MiscReceiptTemplateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f16072_SaveMiscHeaderDetailsRowChangeEvent : global::System.EventArgs {
            
            private f16072_SaveMiscHeaderDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscHeaderDetailsRowChangeEvent(f16072_SaveMiscHeaderDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscHeaderDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f16072_SaveMiscAccountDetailsRowChangeEvent : global::System.EventArgs {
            
            private f16072_SaveMiscAccountDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscAccountDetailsRowChangeEvent(f16072_SaveMiscAccountDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_SaveMiscAccountDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f16072_FilterDataRowChangeEvent : global::System.EventArgs {
            
            private f16072_FilterDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_FilterDataRowChangeEvent(f16072_FilterDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f16072_FilterDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f11072Get_MiscGridDetailsTableRowChangeEvent : global::System.EventArgs {
            
            private f11072Get_MiscGridDetailsTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072Get_MiscGridDetailsTableRowChangeEvent(f11072Get_MiscGridDetailsTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f11072Get_MiscGridDetailsTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591