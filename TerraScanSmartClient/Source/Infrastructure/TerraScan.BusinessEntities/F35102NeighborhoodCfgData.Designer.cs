//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F35102NeighborhoodCfgData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F35102NeighborhoodCfgData : global::System.Data.DataSet {
        
        private ListNeighborhoodConfigurationTableDataTable tableListNeighborhoodConfigurationTable;
        
        private ListNeighborhoodChoiceDatatableDataTable tableListNeighborhoodChoiceDatatable;
        
        private ListNeighborhoodQueryDatatableDataTable tableListNeighborhoodQueryDatatable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F35102NeighborhoodCfgData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F35102NeighborhoodCfgData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ListNeighborhoodConfigurationTable"] != null)) {
                    base.Tables.Add(new ListNeighborhoodConfigurationTableDataTable(ds.Tables["ListNeighborhoodConfigurationTable"]));
                }
                if ((ds.Tables["ListNeighborhoodChoiceDatatable"] != null)) {
                    base.Tables.Add(new ListNeighborhoodChoiceDatatableDataTable(ds.Tables["ListNeighborhoodChoiceDatatable"]));
                }
                if ((ds.Tables["ListNeighborhoodQueryDatatable"] != null)) {
                    base.Tables.Add(new ListNeighborhoodQueryDatatableDataTable(ds.Tables["ListNeighborhoodQueryDatatable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListNeighborhoodConfigurationTableDataTable ListNeighborhoodConfigurationTable {
            get {
                return this.tableListNeighborhoodConfigurationTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListNeighborhoodChoiceDatatableDataTable ListNeighborhoodChoiceDatatable {
            get {
                return this.tableListNeighborhoodChoiceDatatable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListNeighborhoodQueryDatatableDataTable ListNeighborhoodQueryDatatable {
            get {
                return this.tableListNeighborhoodQueryDatatable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F35102NeighborhoodCfgData cln = ((F35102NeighborhoodCfgData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ListNeighborhoodConfigurationTable"] != null)) {
                    base.Tables.Add(new ListNeighborhoodConfigurationTableDataTable(ds.Tables["ListNeighborhoodConfigurationTable"]));
                }
                if ((ds.Tables["ListNeighborhoodChoiceDatatable"] != null)) {
                    base.Tables.Add(new ListNeighborhoodChoiceDatatableDataTable(ds.Tables["ListNeighborhoodChoiceDatatable"]));
                }
                if ((ds.Tables["ListNeighborhoodQueryDatatable"] != null)) {
                    base.Tables.Add(new ListNeighborhoodQueryDatatableDataTable(ds.Tables["ListNeighborhoodQueryDatatable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableListNeighborhoodConfigurationTable = ((ListNeighborhoodConfigurationTableDataTable)(base.Tables["ListNeighborhoodConfigurationTable"]));
            if ((initTable == true)) {
                if ((this.tableListNeighborhoodConfigurationTable != null)) {
                    this.tableListNeighborhoodConfigurationTable.InitVars();
                }
            }
            this.tableListNeighborhoodChoiceDatatable = ((ListNeighborhoodChoiceDatatableDataTable)(base.Tables["ListNeighborhoodChoiceDatatable"]));
            if ((initTable == true)) {
                if ((this.tableListNeighborhoodChoiceDatatable != null)) {
                    this.tableListNeighborhoodChoiceDatatable.InitVars();
                }
            }
            this.tableListNeighborhoodQueryDatatable = ((ListNeighborhoodQueryDatatableDataTable)(base.Tables["ListNeighborhoodQueryDatatable"]));
            if ((initTable == true)) {
                if ((this.tableListNeighborhoodQueryDatatable != null)) {
                    this.tableListNeighborhoodQueryDatatable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F35102NeighborhoodCfgData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F35102NeighborhoodCfgData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableListNeighborhoodConfigurationTable = new ListNeighborhoodConfigurationTableDataTable();
            base.Tables.Add(this.tableListNeighborhoodConfigurationTable);
            this.tableListNeighborhoodChoiceDatatable = new ListNeighborhoodChoiceDatatableDataTable();
            base.Tables.Add(this.tableListNeighborhoodChoiceDatatable);
            this.tableListNeighborhoodQueryDatatable = new ListNeighborhoodQueryDatatableDataTable();
            base.Tables.Add(this.tableListNeighborhoodQueryDatatable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListNeighborhoodConfigurationTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListNeighborhoodChoiceDatatable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListNeighborhoodQueryDatatable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F35102NeighborhoodCfgData ds = new F35102NeighborhoodCfgData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ListNeighborhoodConfigurationTableRowChangeEventHandler(object sender, ListNeighborhoodConfigurationTableRowChangeEvent e);
        
        public delegate void ListNeighborhoodChoiceDatatableRowChangeEventHandler(object sender, ListNeighborhoodChoiceDatatableRowChangeEvent e);
        
        public delegate void ListNeighborhoodQueryDatatableRowChangeEventHandler(object sender, ListNeighborhoodQueryDatatableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListNeighborhoodConfigurationTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnNBHDCfgID;
            
            private global::System.Data.DataColumn columnDisplayName;
            
            private global::System.Data.DataColumn columnCfgName;
            
            private global::System.Data.DataColumn columnCfgValue;
            
            private global::System.Data.DataColumn columnCfgID;
            
            private global::System.Data.DataColumn columnType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodConfigurationTableDataTable() {
                this.TableName = "ListNeighborhoodConfigurationTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListNeighborhoodConfigurationTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListNeighborhoodConfigurationTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDCfgIDColumn {
                get {
                    return this.columnNBHDCfgID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayNameColumn {
                get {
                    return this.columnDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CfgNameColumn {
                get {
                    return this.columnCfgName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CfgValueColumn {
                get {
                    return this.columnCfgValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CfgIDColumn {
                get {
                    return this.columnCfgID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodConfigurationTableRow this[int index] {
                get {
                    return ((ListNeighborhoodConfigurationTableRow)(this.Rows[index]));
                }
            }
            
            public event ListNeighborhoodConfigurationTableRowChangeEventHandler ListNeighborhoodConfigurationTableRowChanging;
            
            public event ListNeighborhoodConfigurationTableRowChangeEventHandler ListNeighborhoodConfigurationTableRowChanged;
            
            public event ListNeighborhoodConfigurationTableRowChangeEventHandler ListNeighborhoodConfigurationTableRowDeleting;
            
            public event ListNeighborhoodConfigurationTableRowChangeEventHandler ListNeighborhoodConfigurationTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListNeighborhoodConfigurationTableRow(ListNeighborhoodConfigurationTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodConfigurationTableRow AddListNeighborhoodConfigurationTableRow(int NBHDCfgID, string DisplayName, string CfgName, string CfgValue, int CfgID, string Type) {
                ListNeighborhoodConfigurationTableRow rowListNeighborhoodConfigurationTableRow = ((ListNeighborhoodConfigurationTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NBHDCfgID,
                        DisplayName,
                        CfgName,
                        CfgValue,
                        CfgID,
                        Type};
                rowListNeighborhoodConfigurationTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListNeighborhoodConfigurationTableRow);
                return rowListNeighborhoodConfigurationTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListNeighborhoodConfigurationTableDataTable cln = ((ListNeighborhoodConfigurationTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListNeighborhoodConfigurationTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNBHDCfgID = base.Columns["NBHDCfgID"];
                this.columnDisplayName = base.Columns["DisplayName"];
                this.columnCfgName = base.Columns["CfgName"];
                this.columnCfgValue = base.Columns["CfgValue"];
                this.columnCfgID = base.Columns["CfgID"];
                this.columnType = base.Columns["Type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNBHDCfgID = new global::System.Data.DataColumn("NBHDCfgID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDCfgID);
                this.columnDisplayName = new global::System.Data.DataColumn("DisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayName);
                this.columnCfgName = new global::System.Data.DataColumn("CfgName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCfgName);
                this.columnCfgValue = new global::System.Data.DataColumn("CfgValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCfgValue);
                this.columnCfgID = new global::System.Data.DataColumn("CfgID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCfgID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnNBHDCfgID.ReadOnly = true;
                this.columnDisplayName.MaxLength = 50;
                this.columnCfgName.MaxLength = 20;
                this.columnCfgValue.MaxLength = 2000;
                this.columnCfgID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodConfigurationTableRow NewListNeighborhoodConfigurationTableRow() {
                return ((ListNeighborhoodConfigurationTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListNeighborhoodConfigurationTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListNeighborhoodConfigurationTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListNeighborhoodConfigurationTableRowChanged != null)) {
                    this.ListNeighborhoodConfigurationTableRowChanged(this, new ListNeighborhoodConfigurationTableRowChangeEvent(((ListNeighborhoodConfigurationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListNeighborhoodConfigurationTableRowChanging != null)) {
                    this.ListNeighborhoodConfigurationTableRowChanging(this, new ListNeighborhoodConfigurationTableRowChangeEvent(((ListNeighborhoodConfigurationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListNeighborhoodConfigurationTableRowDeleted != null)) {
                    this.ListNeighborhoodConfigurationTableRowDeleted(this, new ListNeighborhoodConfigurationTableRowChangeEvent(((ListNeighborhoodConfigurationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListNeighborhoodConfigurationTableRowDeleting != null)) {
                    this.ListNeighborhoodConfigurationTableRowDeleting(this, new ListNeighborhoodConfigurationTableRowChangeEvent(((ListNeighborhoodConfigurationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListNeighborhoodConfigurationTableRow(ListNeighborhoodConfigurationTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35102NeighborhoodCfgData ds = new F35102NeighborhoodCfgData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListNeighborhoodConfigurationTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListNeighborhoodChoiceDatatableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnChoiceID;
            
            private global::System.Data.DataColumn columnChoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodChoiceDatatableDataTable() {
                this.TableName = "ListNeighborhoodChoiceDatatable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListNeighborhoodChoiceDatatableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListNeighborhoodChoiceDatatableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChoiceIDColumn {
                get {
                    return this.columnChoiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChoiceColumn {
                get {
                    return this.columnChoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodChoiceDatatableRow this[int index] {
                get {
                    return ((ListNeighborhoodChoiceDatatableRow)(this.Rows[index]));
                }
            }
            
            public event ListNeighborhoodChoiceDatatableRowChangeEventHandler ListNeighborhoodChoiceDatatableRowChanging;
            
            public event ListNeighborhoodChoiceDatatableRowChangeEventHandler ListNeighborhoodChoiceDatatableRowChanged;
            
            public event ListNeighborhoodChoiceDatatableRowChangeEventHandler ListNeighborhoodChoiceDatatableRowDeleting;
            
            public event ListNeighborhoodChoiceDatatableRowChangeEventHandler ListNeighborhoodChoiceDatatableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListNeighborhoodChoiceDatatableRow(ListNeighborhoodChoiceDatatableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodChoiceDatatableRow AddListNeighborhoodChoiceDatatableRow(int ChoiceID, string Choice) {
                ListNeighborhoodChoiceDatatableRow rowListNeighborhoodChoiceDatatableRow = ((ListNeighborhoodChoiceDatatableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChoiceID,
                        Choice};
                rowListNeighborhoodChoiceDatatableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListNeighborhoodChoiceDatatableRow);
                return rowListNeighborhoodChoiceDatatableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListNeighborhoodChoiceDatatableDataTable cln = ((ListNeighborhoodChoiceDatatableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListNeighborhoodChoiceDatatableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnChoiceID = base.Columns["ChoiceID"];
                this.columnChoice = base.Columns["Choice"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnChoiceID = new global::System.Data.DataColumn("ChoiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChoiceID);
                this.columnChoice = new global::System.Data.DataColumn("Choice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChoice);
                this.columnChoiceID.ReadOnly = true;
                this.columnChoice.MaxLength = 5000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodChoiceDatatableRow NewListNeighborhoodChoiceDatatableRow() {
                return ((ListNeighborhoodChoiceDatatableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListNeighborhoodChoiceDatatableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListNeighborhoodChoiceDatatableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListNeighborhoodChoiceDatatableRowChanged != null)) {
                    this.ListNeighborhoodChoiceDatatableRowChanged(this, new ListNeighborhoodChoiceDatatableRowChangeEvent(((ListNeighborhoodChoiceDatatableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListNeighborhoodChoiceDatatableRowChanging != null)) {
                    this.ListNeighborhoodChoiceDatatableRowChanging(this, new ListNeighborhoodChoiceDatatableRowChangeEvent(((ListNeighborhoodChoiceDatatableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListNeighborhoodChoiceDatatableRowDeleted != null)) {
                    this.ListNeighborhoodChoiceDatatableRowDeleted(this, new ListNeighborhoodChoiceDatatableRowChangeEvent(((ListNeighborhoodChoiceDatatableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListNeighborhoodChoiceDatatableRowDeleting != null)) {
                    this.ListNeighborhoodChoiceDatatableRowDeleting(this, new ListNeighborhoodChoiceDatatableRowChangeEvent(((ListNeighborhoodChoiceDatatableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListNeighborhoodChoiceDatatableRow(ListNeighborhoodChoiceDatatableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35102NeighborhoodCfgData ds = new F35102NeighborhoodCfgData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListNeighborhoodChoiceDatatableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListNeighborhoodQueryDatatableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnValue;
            
            private global::System.Data.DataColumn columnValueDisplay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodQueryDatatableDataTable() {
                this.TableName = "ListNeighborhoodQueryDatatable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListNeighborhoodQueryDatatableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListNeighborhoodQueryDatatableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueDisplayColumn {
                get {
                    return this.columnValueDisplay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodQueryDatatableRow this[int index] {
                get {
                    return ((ListNeighborhoodQueryDatatableRow)(this.Rows[index]));
                }
            }
            
            public event ListNeighborhoodQueryDatatableRowChangeEventHandler ListNeighborhoodQueryDatatableRowChanging;
            
            public event ListNeighborhoodQueryDatatableRowChangeEventHandler ListNeighborhoodQueryDatatableRowChanged;
            
            public event ListNeighborhoodQueryDatatableRowChangeEventHandler ListNeighborhoodQueryDatatableRowDeleting;
            
            public event ListNeighborhoodQueryDatatableRowChangeEventHandler ListNeighborhoodQueryDatatableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListNeighborhoodQueryDatatableRow(ListNeighborhoodQueryDatatableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodQueryDatatableRow AddListNeighborhoodQueryDatatableRow(string ValueDisplay) {
                ListNeighborhoodQueryDatatableRow rowListNeighborhoodQueryDatatableRow = ((ListNeighborhoodQueryDatatableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ValueDisplay};
                rowListNeighborhoodQueryDatatableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListNeighborhoodQueryDatatableRow);
                return rowListNeighborhoodQueryDatatableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListNeighborhoodQueryDatatableDataTable cln = ((ListNeighborhoodQueryDatatableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListNeighborhoodQueryDatatableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnValue = base.Columns["Value"];
                this.columnValueDisplay = base.Columns["ValueDisplay"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnValue = new global::System.Data.DataColumn("Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnValueDisplay = new global::System.Data.DataColumn("ValueDisplay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueDisplay);
                this.columnValue.AutoIncrement = true;
                this.columnValue.AllowDBNull = false;
                this.columnValue.ReadOnly = true;
                this.columnValueDisplay.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodQueryDatatableRow NewListNeighborhoodQueryDatatableRow() {
                return ((ListNeighborhoodQueryDatatableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListNeighborhoodQueryDatatableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListNeighborhoodQueryDatatableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListNeighborhoodQueryDatatableRowChanged != null)) {
                    this.ListNeighborhoodQueryDatatableRowChanged(this, new ListNeighborhoodQueryDatatableRowChangeEvent(((ListNeighborhoodQueryDatatableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListNeighborhoodQueryDatatableRowChanging != null)) {
                    this.ListNeighborhoodQueryDatatableRowChanging(this, new ListNeighborhoodQueryDatatableRowChangeEvent(((ListNeighborhoodQueryDatatableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListNeighborhoodQueryDatatableRowDeleted != null)) {
                    this.ListNeighborhoodQueryDatatableRowDeleted(this, new ListNeighborhoodQueryDatatableRowChangeEvent(((ListNeighborhoodQueryDatatableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListNeighborhoodQueryDatatableRowDeleting != null)) {
                    this.ListNeighborhoodQueryDatatableRowDeleting(this, new ListNeighborhoodQueryDatatableRowChangeEvent(((ListNeighborhoodQueryDatatableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListNeighborhoodQueryDatatableRow(ListNeighborhoodQueryDatatableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F35102NeighborhoodCfgData ds = new F35102NeighborhoodCfgData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListNeighborhoodQueryDatatableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListNeighborhoodConfigurationTableRow : global::System.Data.DataRow {
            
            private ListNeighborhoodConfigurationTableDataTable tableListNeighborhoodConfigurationTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListNeighborhoodConfigurationTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListNeighborhoodConfigurationTable = ((ListNeighborhoodConfigurationTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDCfgID {
                get {
                    try {
                        return ((int)(this[this.tableListNeighborhoodConfigurationTable.NBHDCfgIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDCfgID\' in table \'ListNeighborhoodConfigurationTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableListNeighborhoodConfigurationTable.NBHDCfgIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DisplayName {
                get {
                    try {
                        return ((string)(this[this.tableListNeighborhoodConfigurationTable.DisplayNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisplayName\' in table \'ListNeighborhoodConfigurationTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListNeighborhoodConfigurationTable.DisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CfgName {
                get {
                    try {
                        return ((string)(this[this.tableListNeighborhoodConfigurationTable.CfgNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CfgName\' in table \'ListNeighborhoodConfigurationTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableListNeighborhoodConfigurationTable.CfgNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CfgValue {
                get {
                    try {
                        return ((string)(this[this.tableListNeighborhoodConfigurationTable.CfgValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CfgValue\' in table \'ListNeighborhoodConfigurationTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableListNeighborhoodConfigurationTable.CfgValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CfgID {
                get {
                    try {
                        return ((int)(this[this.tableListNeighborhoodConfigurationTable.CfgIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CfgID\' in table \'ListNeighborhoodConfigurationTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableListNeighborhoodConfigurationTable.CfgIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableListNeighborhoodConfigurationTable.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'ListNeighborhoodConfigurationTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableListNeighborhoodConfigurationTable.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDCfgIDNull() {
                return this.IsNull(this.tableListNeighborhoodConfigurationTable.NBHDCfgIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDCfgIDNull() {
                this[this.tableListNeighborhoodConfigurationTable.NBHDCfgIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplayNameNull() {
                return this.IsNull(this.tableListNeighborhoodConfigurationTable.DisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplayNameNull() {
                this[this.tableListNeighborhoodConfigurationTable.DisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCfgNameNull() {
                return this.IsNull(this.tableListNeighborhoodConfigurationTable.CfgNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCfgNameNull() {
                this[this.tableListNeighborhoodConfigurationTable.CfgNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCfgValueNull() {
                return this.IsNull(this.tableListNeighborhoodConfigurationTable.CfgValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCfgValueNull() {
                this[this.tableListNeighborhoodConfigurationTable.CfgValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCfgIDNull() {
                return this.IsNull(this.tableListNeighborhoodConfigurationTable.CfgIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCfgIDNull() {
                this[this.tableListNeighborhoodConfigurationTable.CfgIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableListNeighborhoodConfigurationTable.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableListNeighborhoodConfigurationTable.TypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListNeighborhoodChoiceDatatableRow : global::System.Data.DataRow {
            
            private ListNeighborhoodChoiceDatatableDataTable tableListNeighborhoodChoiceDatatable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListNeighborhoodChoiceDatatableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListNeighborhoodChoiceDatatable = ((ListNeighborhoodChoiceDatatableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChoiceID {
                get {
                    try {
                        return ((int)(this[this.tableListNeighborhoodChoiceDatatable.ChoiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChoiceID\' in table \'ListNeighborhoodChoiceDatatable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableListNeighborhoodChoiceDatatable.ChoiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Choice {
                get {
                    try {
                        return ((string)(this[this.tableListNeighborhoodChoiceDatatable.ChoiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Choice\' in table \'ListNeighborhoodChoiceDatatable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableListNeighborhoodChoiceDatatable.ChoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChoiceIDNull() {
                return this.IsNull(this.tableListNeighborhoodChoiceDatatable.ChoiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChoiceIDNull() {
                this[this.tableListNeighborhoodChoiceDatatable.ChoiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChoiceNull() {
                return this.IsNull(this.tableListNeighborhoodChoiceDatatable.ChoiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChoiceNull() {
                this[this.tableListNeighborhoodChoiceDatatable.ChoiceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListNeighborhoodQueryDatatableRow : global::System.Data.DataRow {
            
            private ListNeighborhoodQueryDatatableDataTable tableListNeighborhoodQueryDatatable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListNeighborhoodQueryDatatableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListNeighborhoodQueryDatatable = ((ListNeighborhoodQueryDatatableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Value {
                get {
                    return ((int)(this[this.tableListNeighborhoodQueryDatatable.ValueColumn]));
                }
                set {
                    this[this.tableListNeighborhoodQueryDatatable.ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueDisplay {
                get {
                    try {
                        return ((string)(this[this.tableListNeighborhoodQueryDatatable.ValueDisplayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueDisplay\' in table \'ListNeighborhoodQueryDatatable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableListNeighborhoodQueryDatatable.ValueDisplayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueDisplayNull() {
                return this.IsNull(this.tableListNeighborhoodQueryDatatable.ValueDisplayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueDisplayNull() {
                this[this.tableListNeighborhoodQueryDatatable.ValueDisplayColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListNeighborhoodConfigurationTableRowChangeEvent : global::System.EventArgs {
            
            private ListNeighborhoodConfigurationTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodConfigurationTableRowChangeEvent(ListNeighborhoodConfigurationTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodConfigurationTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListNeighborhoodChoiceDatatableRowChangeEvent : global::System.EventArgs {
            
            private ListNeighborhoodChoiceDatatableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodChoiceDatatableRowChangeEvent(ListNeighborhoodChoiceDatatableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodChoiceDatatableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListNeighborhoodQueryDatatableRowChangeEvent : global::System.EventArgs {
            
            private ListNeighborhoodQueryDatatableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodQueryDatatableRowChangeEvent(ListNeighborhoodQueryDatatableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNeighborhoodQueryDatatableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591