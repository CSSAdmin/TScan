//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F29531AssciationLinkData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F29531AssciationLinkData : global::System.Data.DataSet {
        
        private AssociationLinkTypeDataTableDataTable tableAssociationLinkTypeDataTable;
        
        private AssociationDataTableDataTable tableAssociationDataTable;
        
        private UpdateAssociationDataTableDataTable tableUpdateAssociationDataTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F29531AssciationLinkData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F29531AssciationLinkData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AssociationLinkTypeDataTable"] != null)) {
                    base.Tables.Add(new AssociationLinkTypeDataTableDataTable(ds.Tables["AssociationLinkTypeDataTable"]));
                }
                if ((ds.Tables["AssociationDataTable"] != null)) {
                    base.Tables.Add(new AssociationDataTableDataTable(ds.Tables["AssociationDataTable"]));
                }
                if ((ds.Tables["UpdateAssociationDataTable"] != null)) {
                    base.Tables.Add(new UpdateAssociationDataTableDataTable(ds.Tables["UpdateAssociationDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AssociationLinkTypeDataTableDataTable AssociationLinkTypeDataTable {
            get {
                return this.tableAssociationLinkTypeDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AssociationDataTableDataTable AssociationDataTable {
            get {
                return this.tableAssociationDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UpdateAssociationDataTableDataTable UpdateAssociationDataTable {
            get {
                return this.tableUpdateAssociationDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F29531AssciationLinkData cln = ((F29531AssciationLinkData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AssociationLinkTypeDataTable"] != null)) {
                    base.Tables.Add(new AssociationLinkTypeDataTableDataTable(ds.Tables["AssociationLinkTypeDataTable"]));
                }
                if ((ds.Tables["AssociationDataTable"] != null)) {
                    base.Tables.Add(new AssociationDataTableDataTable(ds.Tables["AssociationDataTable"]));
                }
                if ((ds.Tables["UpdateAssociationDataTable"] != null)) {
                    base.Tables.Add(new UpdateAssociationDataTableDataTable(ds.Tables["UpdateAssociationDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAssociationLinkTypeDataTable = ((AssociationLinkTypeDataTableDataTable)(base.Tables["AssociationLinkTypeDataTable"]));
            if ((initTable == true)) {
                if ((this.tableAssociationLinkTypeDataTable != null)) {
                    this.tableAssociationLinkTypeDataTable.InitVars();
                }
            }
            this.tableAssociationDataTable = ((AssociationDataTableDataTable)(base.Tables["AssociationDataTable"]));
            if ((initTable == true)) {
                if ((this.tableAssociationDataTable != null)) {
                    this.tableAssociationDataTable.InitVars();
                }
            }
            this.tableUpdateAssociationDataTable = ((UpdateAssociationDataTableDataTable)(base.Tables["UpdateAssociationDataTable"]));
            if ((initTable == true)) {
                if ((this.tableUpdateAssociationDataTable != null)) {
                    this.tableUpdateAssociationDataTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F29531AssciationLinkData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F29531AssciationLinkData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAssociationLinkTypeDataTable = new AssociationLinkTypeDataTableDataTable();
            base.Tables.Add(this.tableAssociationLinkTypeDataTable);
            this.tableAssociationDataTable = new AssociationDataTableDataTable();
            base.Tables.Add(this.tableAssociationDataTable);
            this.tableUpdateAssociationDataTable = new UpdateAssociationDataTableDataTable();
            base.Tables.Add(this.tableUpdateAssociationDataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAssociationLinkTypeDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAssociationDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUpdateAssociationDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F29531AssciationLinkData ds = new F29531AssciationLinkData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void AssociationLinkTypeDataTableRowChangeEventHandler(object sender, AssociationLinkTypeDataTableRowChangeEvent e);
        
        public delegate void AssociationDataTableRowChangeEventHandler(object sender, AssociationDataTableRowChangeEvent e);
        
        public delegate void UpdateAssociationDataTableRowChangeEventHandler(object sender, UpdateAssociationDataTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AssociationLinkTypeDataTableDataTable : global::System.Data.TypedTableBase<AssociationLinkTypeDataTableRow> {
            
            private global::System.Data.DataColumn columnAssociationCfgID;
            
            private global::System.Data.DataColumn columnAssociationType;
            
            private global::System.Data.DataColumn columnSelectionForm;
            
            private global::System.Data.DataColumn columnDestinationForm;
            
            private global::System.Data.DataColumn columnLinkTextSQL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationLinkTypeDataTableDataTable() {
                this.TableName = "AssociationLinkTypeDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AssociationLinkTypeDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AssociationLinkTypeDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssociationCfgIDColumn {
                get {
                    return this.columnAssociationCfgID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssociationTypeColumn {
                get {
                    return this.columnAssociationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionFormColumn {
                get {
                    return this.columnSelectionForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationFormColumn {
                get {
                    return this.columnDestinationForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinkTextSQLColumn {
                get {
                    return this.columnLinkTextSQL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationLinkTypeDataTableRow this[int index] {
                get {
                    return ((AssociationLinkTypeDataTableRow)(this.Rows[index]));
                }
            }
            
            public event AssociationLinkTypeDataTableRowChangeEventHandler AssociationLinkTypeDataTableRowChanging;
            
            public event AssociationLinkTypeDataTableRowChangeEventHandler AssociationLinkTypeDataTableRowChanged;
            
            public event AssociationLinkTypeDataTableRowChangeEventHandler AssociationLinkTypeDataTableRowDeleting;
            
            public event AssociationLinkTypeDataTableRowChangeEventHandler AssociationLinkTypeDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAssociationLinkTypeDataTableRow(AssociationLinkTypeDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationLinkTypeDataTableRow AddAssociationLinkTypeDataTableRow(int AssociationCfgID, string AssociationType, int SelectionForm, int DestinationForm, string LinkTextSQL) {
                AssociationLinkTypeDataTableRow rowAssociationLinkTypeDataTableRow = ((AssociationLinkTypeDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AssociationCfgID,
                        AssociationType,
                        SelectionForm,
                        DestinationForm,
                        LinkTextSQL};
                rowAssociationLinkTypeDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAssociationLinkTypeDataTableRow);
                return rowAssociationLinkTypeDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AssociationLinkTypeDataTableDataTable cln = ((AssociationLinkTypeDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AssociationLinkTypeDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssociationCfgID = base.Columns["AssociationCfgID"];
                this.columnAssociationType = base.Columns["AssociationType"];
                this.columnSelectionForm = base.Columns["SelectionForm"];
                this.columnDestinationForm = base.Columns["DestinationForm"];
                this.columnLinkTextSQL = base.Columns["LinkTextSQL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssociationCfgID = new global::System.Data.DataColumn("AssociationCfgID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociationCfgID);
                this.columnAssociationType = new global::System.Data.DataColumn("AssociationType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociationType);
                this.columnSelectionForm = new global::System.Data.DataColumn("SelectionForm", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionForm);
                this.columnDestinationForm = new global::System.Data.DataColumn("DestinationForm", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationForm);
                this.columnLinkTextSQL = new global::System.Data.DataColumn("LinkTextSQL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkTextSQL);
                this.columnAssociationCfgID.ReadOnly = true;
                this.columnAssociationType.ReadOnly = true;
                this.columnAssociationType.MaxLength = 50;
                this.columnSelectionForm.ReadOnly = true;
                this.columnDestinationForm.ReadOnly = true;
                this.columnLinkTextSQL.ReadOnly = true;
                this.columnLinkTextSQL.MaxLength = 1500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationLinkTypeDataTableRow NewAssociationLinkTypeDataTableRow() {
                return ((AssociationLinkTypeDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AssociationLinkTypeDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AssociationLinkTypeDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AssociationLinkTypeDataTableRowChanged != null)) {
                    this.AssociationLinkTypeDataTableRowChanged(this, new AssociationLinkTypeDataTableRowChangeEvent(((AssociationLinkTypeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AssociationLinkTypeDataTableRowChanging != null)) {
                    this.AssociationLinkTypeDataTableRowChanging(this, new AssociationLinkTypeDataTableRowChangeEvent(((AssociationLinkTypeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AssociationLinkTypeDataTableRowDeleted != null)) {
                    this.AssociationLinkTypeDataTableRowDeleted(this, new AssociationLinkTypeDataTableRowChangeEvent(((AssociationLinkTypeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AssociationLinkTypeDataTableRowDeleting != null)) {
                    this.AssociationLinkTypeDataTableRowDeleting(this, new AssociationLinkTypeDataTableRowChangeEvent(((AssociationLinkTypeDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAssociationLinkTypeDataTableRow(AssociationLinkTypeDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29531AssciationLinkData ds = new F29531AssciationLinkData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AssociationLinkTypeDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AssociationDataTableDataTable : global::System.Data.TypedTableBase<AssociationDataTableRow> {
            
            private global::System.Data.DataColumn columnAssociationID;
            
            private global::System.Data.DataColumn columnForm;
            
            private global::System.Data.DataColumn columnKeyId;
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnLinkText;
            
            private global::System.Data.DataColumn columnDestinationForm;
            
            private global::System.Data.DataColumn columnParam1;
            
            private global::System.Data.DataColumn columnParam2;
            
            private global::System.Data.DataColumn columnParam3;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationDataTableDataTable() {
                this.TableName = "AssociationDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AssociationDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AssociationDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssociationIDColumn {
                get {
                    return this.columnAssociationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormColumn {
                get {
                    return this.columnForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeyIdColumn {
                get {
                    return this.columnKeyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinkTextColumn {
                get {
                    return this.columnLinkText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationFormColumn {
                get {
                    return this.columnDestinationForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Param1Column {
                get {
                    return this.columnParam1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Param2Column {
                get {
                    return this.columnParam2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Param3Column {
                get {
                    return this.columnParam3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationDataTableRow this[int index] {
                get {
                    return ((AssociationDataTableRow)(this.Rows[index]));
                }
            }
            
            public event AssociationDataTableRowChangeEventHandler AssociationDataTableRowChanging;
            
            public event AssociationDataTableRowChangeEventHandler AssociationDataTableRowChanged;
            
            public event AssociationDataTableRowChangeEventHandler AssociationDataTableRowDeleting;
            
            public event AssociationDataTableRowChangeEventHandler AssociationDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAssociationDataTableRow(AssociationDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationDataTableRow AddAssociationDataTableRow(int Form, int KeyId, int EventID, string LinkText, int DestinationForm, string Param1, string Param2, string Param3, string Description) {
                AssociationDataTableRow rowAssociationDataTableRow = ((AssociationDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Form,
                        KeyId,
                        EventID,
                        LinkText,
                        DestinationForm,
                        Param1,
                        Param2,
                        Param3,
                        Description};
                rowAssociationDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAssociationDataTableRow);
                return rowAssociationDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationDataTableRow FindByAssociationID(int AssociationID) {
                return ((AssociationDataTableRow)(this.Rows.Find(new object[] {
                            AssociationID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AssociationDataTableDataTable cln = ((AssociationDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AssociationDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssociationID = base.Columns["AssociationID"];
                this.columnForm = base.Columns["Form"];
                this.columnKeyId = base.Columns["KeyId"];
                this.columnEventID = base.Columns["EventID"];
                this.columnLinkText = base.Columns["LinkText"];
                this.columnDestinationForm = base.Columns["DestinationForm"];
                this.columnParam1 = base.Columns["Param1"];
                this.columnParam2 = base.Columns["Param2"];
                this.columnParam3 = base.Columns["Param3"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssociationID = new global::System.Data.DataColumn("AssociationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociationID);
                this.columnForm = new global::System.Data.DataColumn("Form", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm);
                this.columnKeyId = new global::System.Data.DataColumn("KeyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyId);
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnLinkText = new global::System.Data.DataColumn("LinkText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkText);
                this.columnDestinationForm = new global::System.Data.DataColumn("DestinationForm", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationForm);
                this.columnParam1 = new global::System.Data.DataColumn("Param1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParam1);
                this.columnParam2 = new global::System.Data.DataColumn("Param2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParam2);
                this.columnParam3 = new global::System.Data.DataColumn("Param3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParam3);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssociationID}, true));
                this.columnAssociationID.AutoIncrement = true;
                this.columnAssociationID.AllowDBNull = false;
                this.columnAssociationID.ReadOnly = true;
                this.columnAssociationID.Unique = true;
                this.columnLinkText.MaxLength = 100;
                this.columnParam1.MaxLength = 50;
                this.columnParam2.MaxLength = 50;
                this.columnParam3.MaxLength = 50;
                this.columnDescription.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationDataTableRow NewAssociationDataTableRow() {
                return ((AssociationDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AssociationDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AssociationDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AssociationDataTableRowChanged != null)) {
                    this.AssociationDataTableRowChanged(this, new AssociationDataTableRowChangeEvent(((AssociationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AssociationDataTableRowChanging != null)) {
                    this.AssociationDataTableRowChanging(this, new AssociationDataTableRowChangeEvent(((AssociationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AssociationDataTableRowDeleted != null)) {
                    this.AssociationDataTableRowDeleted(this, new AssociationDataTableRowChangeEvent(((AssociationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AssociationDataTableRowDeleting != null)) {
                    this.AssociationDataTableRowDeleting(this, new AssociationDataTableRowChangeEvent(((AssociationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAssociationDataTableRow(AssociationDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29531AssciationLinkData ds = new F29531AssciationLinkData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AssociationDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UpdateAssociationDataTableDataTable : global::System.Data.TypedTableBase<UpdateAssociationDataTableRow> {
            
            private global::System.Data.DataColumn columnAssociationID;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateAssociationDataTableDataTable() {
                this.TableName = "UpdateAssociationDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UpdateAssociationDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UpdateAssociationDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssociationIDColumn {
                get {
                    return this.columnAssociationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateAssociationDataTableRow this[int index] {
                get {
                    return ((UpdateAssociationDataTableRow)(this.Rows[index]));
                }
            }
            
            public event UpdateAssociationDataTableRowChangeEventHandler UpdateAssociationDataTableRowChanging;
            
            public event UpdateAssociationDataTableRowChangeEventHandler UpdateAssociationDataTableRowChanged;
            
            public event UpdateAssociationDataTableRowChangeEventHandler UpdateAssociationDataTableRowDeleting;
            
            public event UpdateAssociationDataTableRowChangeEventHandler UpdateAssociationDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUpdateAssociationDataTableRow(UpdateAssociationDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateAssociationDataTableRow AddUpdateAssociationDataTableRow(int AssociationID, string Description) {
                UpdateAssociationDataTableRow rowUpdateAssociationDataTableRow = ((UpdateAssociationDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AssociationID,
                        Description};
                rowUpdateAssociationDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUpdateAssociationDataTableRow);
                return rowUpdateAssociationDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UpdateAssociationDataTableDataTable cln = ((UpdateAssociationDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UpdateAssociationDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssociationID = base.Columns["AssociationID"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssociationID = new global::System.Data.DataColumn("AssociationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociationID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateAssociationDataTableRow NewUpdateAssociationDataTableRow() {
                return ((UpdateAssociationDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UpdateAssociationDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UpdateAssociationDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UpdateAssociationDataTableRowChanged != null)) {
                    this.UpdateAssociationDataTableRowChanged(this, new UpdateAssociationDataTableRowChangeEvent(((UpdateAssociationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UpdateAssociationDataTableRowChanging != null)) {
                    this.UpdateAssociationDataTableRowChanging(this, new UpdateAssociationDataTableRowChangeEvent(((UpdateAssociationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UpdateAssociationDataTableRowDeleted != null)) {
                    this.UpdateAssociationDataTableRowDeleted(this, new UpdateAssociationDataTableRowChangeEvent(((UpdateAssociationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UpdateAssociationDataTableRowDeleting != null)) {
                    this.UpdateAssociationDataTableRowDeleting(this, new UpdateAssociationDataTableRowChangeEvent(((UpdateAssociationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUpdateAssociationDataTableRow(UpdateAssociationDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29531AssciationLinkData ds = new F29531AssciationLinkData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UpdateAssociationDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AssociationLinkTypeDataTableRow : global::System.Data.DataRow {
            
            private AssociationLinkTypeDataTableDataTable tableAssociationLinkTypeDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AssociationLinkTypeDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAssociationLinkTypeDataTable = ((AssociationLinkTypeDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssociationCfgID {
                get {
                    try {
                        return ((int)(this[this.tableAssociationLinkTypeDataTable.AssociationCfgIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociationCfgID\' in table \'AssociationLinkTypeDataTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationLinkTypeDataTable.AssociationCfgIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssociationType {
                get {
                    try {
                        return ((string)(this[this.tableAssociationLinkTypeDataTable.AssociationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociationType\' in table \'AssociationLinkTypeDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationLinkTypeDataTable.AssociationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SelectionForm {
                get {
                    try {
                        return ((int)(this[this.tableAssociationLinkTypeDataTable.SelectionFormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelectionForm\' in table \'AssociationLinkTypeDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationLinkTypeDataTable.SelectionFormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DestinationForm {
                get {
                    try {
                        return ((int)(this[this.tableAssociationLinkTypeDataTable.DestinationFormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationForm\' in table \'AssociationLinkTypeDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationLinkTypeDataTable.DestinationFormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinkTextSQL {
                get {
                    try {
                        return ((string)(this[this.tableAssociationLinkTypeDataTable.LinkTextSQLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkTextSQL\' in table \'AssociationLinkTypeDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAssociationLinkTypeDataTable.LinkTextSQLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssociationCfgIDNull() {
                return this.IsNull(this.tableAssociationLinkTypeDataTable.AssociationCfgIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssociationCfgIDNull() {
                this[this.tableAssociationLinkTypeDataTable.AssociationCfgIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssociationTypeNull() {
                return this.IsNull(this.tableAssociationLinkTypeDataTable.AssociationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssociationTypeNull() {
                this[this.tableAssociationLinkTypeDataTable.AssociationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionFormNull() {
                return this.IsNull(this.tableAssociationLinkTypeDataTable.SelectionFormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionFormNull() {
                this[this.tableAssociationLinkTypeDataTable.SelectionFormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationFormNull() {
                return this.IsNull(this.tableAssociationLinkTypeDataTable.DestinationFormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationFormNull() {
                this[this.tableAssociationLinkTypeDataTable.DestinationFormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinkTextSQLNull() {
                return this.IsNull(this.tableAssociationLinkTypeDataTable.LinkTextSQLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinkTextSQLNull() {
                this[this.tableAssociationLinkTypeDataTable.LinkTextSQLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AssociationDataTableRow : global::System.Data.DataRow {
            
            private AssociationDataTableDataTable tableAssociationDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AssociationDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAssociationDataTable = ((AssociationDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssociationID {
                get {
                    return ((int)(this[this.tableAssociationDataTable.AssociationIDColumn]));
                }
                set {
                    this[this.tableAssociationDataTable.AssociationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Form {
                get {
                    try {
                        return ((int)(this[this.tableAssociationDataTable.FormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form\' in table \'AssociationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationDataTable.FormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KeyId {
                get {
                    try {
                        return ((int)(this[this.tableAssociationDataTable.KeyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeyId\' in table \'AssociationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationDataTable.KeyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    try {
                        return ((int)(this[this.tableAssociationDataTable.EventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventID\' in table \'AssociationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationDataTable.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinkText {
                get {
                    try {
                        return ((string)(this[this.tableAssociationDataTable.LinkTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkText\' in table \'AssociationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationDataTable.LinkTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DestinationForm {
                get {
                    try {
                        return ((int)(this[this.tableAssociationDataTable.DestinationFormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationForm\' in table \'AssociationDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableAssociationDataTable.DestinationFormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Param1 {
                get {
                    try {
                        return ((string)(this[this.tableAssociationDataTable.Param1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Param1\' in table \'AssociationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationDataTable.Param1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Param2 {
                get {
                    try {
                        return ((string)(this[this.tableAssociationDataTable.Param2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Param2\' in table \'AssociationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationDataTable.Param2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Param3 {
                get {
                    try {
                        return ((string)(this[this.tableAssociationDataTable.Param3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Param3\' in table \'AssociationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationDataTable.Param3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableAssociationDataTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'AssociationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAssociationDataTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormNull() {
                return this.IsNull(this.tableAssociationDataTable.FormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormNull() {
                this[this.tableAssociationDataTable.FormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeyIdNull() {
                return this.IsNull(this.tableAssociationDataTable.KeyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeyIdNull() {
                this[this.tableAssociationDataTable.KeyIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventIDNull() {
                return this.IsNull(this.tableAssociationDataTable.EventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventIDNull() {
                this[this.tableAssociationDataTable.EventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinkTextNull() {
                return this.IsNull(this.tableAssociationDataTable.LinkTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinkTextNull() {
                this[this.tableAssociationDataTable.LinkTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationFormNull() {
                return this.IsNull(this.tableAssociationDataTable.DestinationFormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationFormNull() {
                this[this.tableAssociationDataTable.DestinationFormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParam1Null() {
                return this.IsNull(this.tableAssociationDataTable.Param1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParam1Null() {
                this[this.tableAssociationDataTable.Param1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParam2Null() {
                return this.IsNull(this.tableAssociationDataTable.Param2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParam2Null() {
                this[this.tableAssociationDataTable.Param2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParam3Null() {
                return this.IsNull(this.tableAssociationDataTable.Param3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParam3Null() {
                this[this.tableAssociationDataTable.Param3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableAssociationDataTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableAssociationDataTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UpdateAssociationDataTableRow : global::System.Data.DataRow {
            
            private UpdateAssociationDataTableDataTable tableUpdateAssociationDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UpdateAssociationDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUpdateAssociationDataTable = ((UpdateAssociationDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssociationID {
                get {
                    try {
                        return ((int)(this[this.tableUpdateAssociationDataTable.AssociationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociationID\' in table \'UpdateAssociationDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUpdateAssociationDataTable.AssociationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableUpdateAssociationDataTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'UpdateAssociationDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUpdateAssociationDataTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssociationIDNull() {
                return this.IsNull(this.tableUpdateAssociationDataTable.AssociationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssociationIDNull() {
                this[this.tableUpdateAssociationDataTable.AssociationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableUpdateAssociationDataTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableUpdateAssociationDataTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AssociationLinkTypeDataTableRowChangeEvent : global::System.EventArgs {
            
            private AssociationLinkTypeDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationLinkTypeDataTableRowChangeEvent(AssociationLinkTypeDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationLinkTypeDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AssociationDataTableRowChangeEvent : global::System.EventArgs {
            
            private AssociationDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationDataTableRowChangeEvent(AssociationDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AssociationDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UpdateAssociationDataTableRowChangeEvent : global::System.EventArgs {
            
            private UpdateAssociationDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateAssociationDataTableRowChangeEvent(UpdateAssociationDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateAssociationDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591