//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F1406CentralAssessedSearchData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F1406CentralAssessedSearchData : global::System.Data.DataSet {
        
        private f1406_pclst_CentrallyAssessedGridTableDataTable tablef1406_pclst_CentrallyAssessedGridTable;
        
        private f1406_pcget_PropertyClassDataTable tablef1406_pcget_PropertyClass;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F1406CentralAssessedSearchData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F1406CentralAssessedSearchData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["f1406_pclst_CentrallyAssessedGridTable"] != null)) {
                    base.Tables.Add(new f1406_pclst_CentrallyAssessedGridTableDataTable(ds.Tables["f1406_pclst_CentrallyAssessedGridTable"]));
                }
                if ((ds.Tables["f1406_pcget_PropertyClass"] != null)) {
                    base.Tables.Add(new f1406_pcget_PropertyClassDataTable(ds.Tables["f1406_pcget_PropertyClass"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f1406_pclst_CentrallyAssessedGridTableDataTable f1406_pclst_CentrallyAssessedGridTable {
            get {
                return this.tablef1406_pclst_CentrallyAssessedGridTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public f1406_pcget_PropertyClassDataTable f1406_pcget_PropertyClass {
            get {
                return this.tablef1406_pcget_PropertyClass;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F1406CentralAssessedSearchData cln = ((F1406CentralAssessedSearchData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["f1406_pclst_CentrallyAssessedGridTable"] != null)) {
                    base.Tables.Add(new f1406_pclst_CentrallyAssessedGridTableDataTable(ds.Tables["f1406_pclst_CentrallyAssessedGridTable"]));
                }
                if ((ds.Tables["f1406_pcget_PropertyClass"] != null)) {
                    base.Tables.Add(new f1406_pcget_PropertyClassDataTable(ds.Tables["f1406_pcget_PropertyClass"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablef1406_pclst_CentrallyAssessedGridTable = ((f1406_pclst_CentrallyAssessedGridTableDataTable)(base.Tables["f1406_pclst_CentrallyAssessedGridTable"]));
            if ((initTable == true)) {
                if ((this.tablef1406_pclst_CentrallyAssessedGridTable != null)) {
                    this.tablef1406_pclst_CentrallyAssessedGridTable.InitVars();
                }
            }
            this.tablef1406_pcget_PropertyClass = ((f1406_pcget_PropertyClassDataTable)(base.Tables["f1406_pcget_PropertyClass"]));
            if ((initTable == true)) {
                if ((this.tablef1406_pcget_PropertyClass != null)) {
                    this.tablef1406_pcget_PropertyClass.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F1406CentralAssessedSearchData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F1406CentralAssessedSearchData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablef1406_pclst_CentrallyAssessedGridTable = new f1406_pclst_CentrallyAssessedGridTableDataTable();
            base.Tables.Add(this.tablef1406_pclst_CentrallyAssessedGridTable);
            this.tablef1406_pcget_PropertyClass = new f1406_pcget_PropertyClassDataTable();
            base.Tables.Add(this.tablef1406_pcget_PropertyClass);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef1406_pclst_CentrallyAssessedGridTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializef1406_pcget_PropertyClass() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F1406CentralAssessedSearchData ds = new F1406CentralAssessedSearchData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void f1406_pclst_CentrallyAssessedGridTableRowChangeEventHandler(object sender, f1406_pclst_CentrallyAssessedGridTableRowChangeEvent e);
        
        public delegate void f1406_pcget_PropertyClassRowChangeEventHandler(object sender, f1406_pcget_PropertyClassRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f1406_pclst_CentrallyAssessedGridTableDataTable : global::System.Data.TypedTableBase<f1406_pclst_CentrallyAssessedGridTableRow> {
            
            private global::System.Data.DataColumn columnCentralItemID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnStatementNumber;
            
            private global::System.Data.DataColumn columnOwnerName;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyNumber;
            
            private global::System.Data.DataColumn columnBranchLine;
            
            private global::System.Data.DataColumn columnPropertyClass;
            
            private global::System.Data.DataColumn columnFund;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pclst_CentrallyAssessedGridTableDataTable() {
                this.TableName = "f1406_pclst_CentrallyAssessedGridTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f1406_pclst_CentrallyAssessedGridTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f1406_pclst_CentrallyAssessedGridTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CentralItemIDColumn {
                get {
                    return this.columnCentralItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatementNumberColumn {
                get {
                    return this.columnStatementNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerNameColumn {
                get {
                    return this.columnOwnerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNumberColumn {
                get {
                    return this.columnCompanyNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchLineColumn {
                get {
                    return this.columnBranchLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassColumn {
                get {
                    return this.columnPropertyClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pclst_CentrallyAssessedGridTableRow this[int index] {
                get {
                    return ((f1406_pclst_CentrallyAssessedGridTableRow)(this.Rows[index]));
                }
            }
            
            public event f1406_pclst_CentrallyAssessedGridTableRowChangeEventHandler f1406_pclst_CentrallyAssessedGridTableRowChanging;
            
            public event f1406_pclst_CentrallyAssessedGridTableRowChangeEventHandler f1406_pclst_CentrallyAssessedGridTableRowChanged;
            
            public event f1406_pclst_CentrallyAssessedGridTableRowChangeEventHandler f1406_pclst_CentrallyAssessedGridTableRowDeleting;
            
            public event f1406_pclst_CentrallyAssessedGridTableRowChangeEventHandler f1406_pclst_CentrallyAssessedGridTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf1406_pclst_CentrallyAssessedGridTableRow(f1406_pclst_CentrallyAssessedGridTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pclst_CentrallyAssessedGridTableRow Addf1406_pclst_CentrallyAssessedGridTableRow(int CentralItemID, string ParcelNumber, string StatementNumber, string OwnerName, int RollYear, string CompanyName, string CompanyNumber, string BranchLine, string PropertyClass, string Fund) {
                f1406_pclst_CentrallyAssessedGridTableRow rowf1406_pclst_CentrallyAssessedGridTableRow = ((f1406_pclst_CentrallyAssessedGridTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CentralItemID,
                        ParcelNumber,
                        StatementNumber,
                        OwnerName,
                        RollYear,
                        CompanyName,
                        CompanyNumber,
                        BranchLine,
                        PropertyClass,
                        Fund};
                rowf1406_pclst_CentrallyAssessedGridTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf1406_pclst_CentrallyAssessedGridTableRow);
                return rowf1406_pclst_CentrallyAssessedGridTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f1406_pclst_CentrallyAssessedGridTableDataTable cln = ((f1406_pclst_CentrallyAssessedGridTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f1406_pclst_CentrallyAssessedGridTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCentralItemID = base.Columns["CentralItemID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnStatementNumber = base.Columns["StatementNumber"];
                this.columnOwnerName = base.Columns["OwnerName"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyNumber = base.Columns["CompanyNumber"];
                this.columnBranchLine = base.Columns["BranchLine"];
                this.columnPropertyClass = base.Columns["PropertyClass"];
                this.columnFund = base.Columns["Fund"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCentralItemID = new global::System.Data.DataColumn("CentralItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentralItemID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnStatementNumber = new global::System.Data.DataColumn("StatementNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementNumber);
                this.columnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyNumber = new global::System.Data.DataColumn("CompanyNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyNumber);
                this.columnBranchLine = new global::System.Data.DataColumn("BranchLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchLine);
                this.columnPropertyClass = new global::System.Data.DataColumn("PropertyClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClass);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnCentralItemID.ReadOnly = true;
                this.columnParcelNumber.AllowDBNull = false;
                this.columnParcelNumber.MaxLength = 50;
                this.columnStatementNumber.MaxLength = 50;
                this.columnOwnerName.ReadOnly = true;
                this.columnOwnerName.MaxLength = 102;
                this.columnRollYear.AllowDBNull = false;
                this.columnCompanyName.MaxLength = 250;
                this.columnCompanyNumber.MaxLength = 50;
                this.columnBranchLine.MaxLength = 50;
                this.columnPropertyClass.MaxLength = 50;
                this.columnFund.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pclst_CentrallyAssessedGridTableRow Newf1406_pclst_CentrallyAssessedGridTableRow() {
                return ((f1406_pclst_CentrallyAssessedGridTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f1406_pclst_CentrallyAssessedGridTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f1406_pclst_CentrallyAssessedGridTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f1406_pclst_CentrallyAssessedGridTableRowChanged != null)) {
                    this.f1406_pclst_CentrallyAssessedGridTableRowChanged(this, new f1406_pclst_CentrallyAssessedGridTableRowChangeEvent(((f1406_pclst_CentrallyAssessedGridTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f1406_pclst_CentrallyAssessedGridTableRowChanging != null)) {
                    this.f1406_pclst_CentrallyAssessedGridTableRowChanging(this, new f1406_pclst_CentrallyAssessedGridTableRowChangeEvent(((f1406_pclst_CentrallyAssessedGridTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f1406_pclst_CentrallyAssessedGridTableRowDeleted != null)) {
                    this.f1406_pclst_CentrallyAssessedGridTableRowDeleted(this, new f1406_pclst_CentrallyAssessedGridTableRowChangeEvent(((f1406_pclst_CentrallyAssessedGridTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f1406_pclst_CentrallyAssessedGridTableRowDeleting != null)) {
                    this.f1406_pclst_CentrallyAssessedGridTableRowDeleting(this, new f1406_pclst_CentrallyAssessedGridTableRowChangeEvent(((f1406_pclst_CentrallyAssessedGridTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef1406_pclst_CentrallyAssessedGridTableRow(f1406_pclst_CentrallyAssessedGridTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F1406CentralAssessedSearchData ds = new F1406CentralAssessedSearchData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f1406_pclst_CentrallyAssessedGridTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class f1406_pcget_PropertyClassDataTable : global::System.Data.TypedTableBase<f1406_pcget_PropertyClassRow> {
            
            private global::System.Data.DataColumn columnPropertyClassID;
            
            private global::System.Data.DataColumn columnPropertyClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pcget_PropertyClassDataTable() {
                this.TableName = "f1406_pcget_PropertyClass";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f1406_pcget_PropertyClassDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected f1406_pcget_PropertyClassDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassIDColumn {
                get {
                    return this.columnPropertyClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropertyClassColumn {
                get {
                    return this.columnPropertyClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pcget_PropertyClassRow this[int index] {
                get {
                    return ((f1406_pcget_PropertyClassRow)(this.Rows[index]));
                }
            }
            
            public event f1406_pcget_PropertyClassRowChangeEventHandler f1406_pcget_PropertyClassRowChanging;
            
            public event f1406_pcget_PropertyClassRowChangeEventHandler f1406_pcget_PropertyClassRowChanged;
            
            public event f1406_pcget_PropertyClassRowChangeEventHandler f1406_pcget_PropertyClassRowDeleting;
            
            public event f1406_pcget_PropertyClassRowChangeEventHandler f1406_pcget_PropertyClassRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addf1406_pcget_PropertyClassRow(f1406_pcget_PropertyClassRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pcget_PropertyClassRow Addf1406_pcget_PropertyClassRow(int PropertyClassID, string PropertyClass) {
                f1406_pcget_PropertyClassRow rowf1406_pcget_PropertyClassRow = ((f1406_pcget_PropertyClassRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PropertyClassID,
                        PropertyClass};
                rowf1406_pcget_PropertyClassRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowf1406_pcget_PropertyClassRow);
                return rowf1406_pcget_PropertyClassRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                f1406_pcget_PropertyClassDataTable cln = ((f1406_pcget_PropertyClassDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new f1406_pcget_PropertyClassDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPropertyClassID = base.Columns["PropertyClassID"];
                this.columnPropertyClass = base.Columns["PropertyClass"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPropertyClassID = new global::System.Data.DataColumn("PropertyClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClassID);
                this.columnPropertyClass = new global::System.Data.DataColumn("PropertyClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyClass);
                this.columnPropertyClassID.ReadOnly = true;
                this.columnPropertyClass.ReadOnly = true;
                this.columnPropertyClass.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pcget_PropertyClassRow Newf1406_pcget_PropertyClassRow() {
                return ((f1406_pcget_PropertyClassRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new f1406_pcget_PropertyClassRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(f1406_pcget_PropertyClassRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.f1406_pcget_PropertyClassRowChanged != null)) {
                    this.f1406_pcget_PropertyClassRowChanged(this, new f1406_pcget_PropertyClassRowChangeEvent(((f1406_pcget_PropertyClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.f1406_pcget_PropertyClassRowChanging != null)) {
                    this.f1406_pcget_PropertyClassRowChanging(this, new f1406_pcget_PropertyClassRowChangeEvent(((f1406_pcget_PropertyClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.f1406_pcget_PropertyClassRowDeleted != null)) {
                    this.f1406_pcget_PropertyClassRowDeleted(this, new f1406_pcget_PropertyClassRowChangeEvent(((f1406_pcget_PropertyClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.f1406_pcget_PropertyClassRowDeleting != null)) {
                    this.f1406_pcget_PropertyClassRowDeleting(this, new f1406_pcget_PropertyClassRowChangeEvent(((f1406_pcget_PropertyClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removef1406_pcget_PropertyClassRow(f1406_pcget_PropertyClassRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F1406CentralAssessedSearchData ds = new F1406CentralAssessedSearchData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "f1406_pcget_PropertyClassDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f1406_pclst_CentrallyAssessedGridTableRow : global::System.Data.DataRow {
            
            private f1406_pclst_CentrallyAssessedGridTableDataTable tablef1406_pclst_CentrallyAssessedGridTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f1406_pclst_CentrallyAssessedGridTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef1406_pclst_CentrallyAssessedGridTable = ((f1406_pclst_CentrallyAssessedGridTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CentralItemID {
                get {
                    try {
                        return ((int)(this[this.tablef1406_pclst_CentrallyAssessedGridTable.CentralItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CentralItemID\' in table \'f1406_pclst_CentrallyAssessedGridT" +
                                "able\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1406_pclst_CentrallyAssessedGridTable.CentralItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    return ((string)(this[this.tablef1406_pclst_CentrallyAssessedGridTable.ParcelNumberColumn]));
                }
                set {
                    this[this.tablef1406_pclst_CentrallyAssessedGridTable.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatementNumber {
                get {
                    try {
                        return ((string)(this[this.tablef1406_pclst_CentrallyAssessedGridTable.StatementNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatementNumber\' in table \'f1406_pclst_CentrallyAssessedGri" +
                                "dTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1406_pclst_CentrallyAssessedGridTable.StatementNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerName {
                get {
                    try {
                        return ((string)(this[this.tablef1406_pclst_CentrallyAssessedGridTable.OwnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerName\' in table \'f1406_pclst_CentrallyAssessedGridTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1406_pclst_CentrallyAssessedGridTable.OwnerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RollYear {
                get {
                    return ((int)(this[this.tablef1406_pclst_CentrallyAssessedGridTable.RollYearColumn]));
                }
                set {
                    this[this.tablef1406_pclst_CentrallyAssessedGridTable.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tablef1406_pclst_CentrallyAssessedGridTable.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'f1406_pclst_CentrallyAssessedGridTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1406_pclst_CentrallyAssessedGridTable.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyNumber {
                get {
                    try {
                        return ((string)(this[this.tablef1406_pclst_CentrallyAssessedGridTable.CompanyNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyNumber\' in table \'f1406_pclst_CentrallyAssessedGridT" +
                                "able\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1406_pclst_CentrallyAssessedGridTable.CompanyNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchLine {
                get {
                    try {
                        return ((string)(this[this.tablef1406_pclst_CentrallyAssessedGridTable.BranchLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchLine\' in table \'f1406_pclst_CentrallyAssessedGridTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1406_pclst_CentrallyAssessedGridTable.BranchLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyClass {
                get {
                    try {
                        return ((string)(this[this.tablef1406_pclst_CentrallyAssessedGridTable.PropertyClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyClass\' in table \'f1406_pclst_CentrallyAssessedGridT" +
                                "able\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1406_pclst_CentrallyAssessedGridTable.PropertyClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tablef1406_pclst_CentrallyAssessedGridTable.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'f1406_pclst_CentrallyAssessedGridTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablef1406_pclst_CentrallyAssessedGridTable.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCentralItemIDNull() {
                return this.IsNull(this.tablef1406_pclst_CentrallyAssessedGridTable.CentralItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCentralItemIDNull() {
                this[this.tablef1406_pclst_CentrallyAssessedGridTable.CentralItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementNumberNull() {
                return this.IsNull(this.tablef1406_pclst_CentrallyAssessedGridTable.StatementNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementNumberNull() {
                this[this.tablef1406_pclst_CentrallyAssessedGridTable.StatementNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerNameNull() {
                return this.IsNull(this.tablef1406_pclst_CentrallyAssessedGridTable.OwnerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerNameNull() {
                this[this.tablef1406_pclst_CentrallyAssessedGridTable.OwnerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tablef1406_pclst_CentrallyAssessedGridTable.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tablef1406_pclst_CentrallyAssessedGridTable.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNumberNull() {
                return this.IsNull(this.tablef1406_pclst_CentrallyAssessedGridTable.CompanyNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNumberNull() {
                this[this.tablef1406_pclst_CentrallyAssessedGridTable.CompanyNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchLineNull() {
                return this.IsNull(this.tablef1406_pclst_CentrallyAssessedGridTable.BranchLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchLineNull() {
                this[this.tablef1406_pclst_CentrallyAssessedGridTable.BranchLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyClassNull() {
                return this.IsNull(this.tablef1406_pclst_CentrallyAssessedGridTable.PropertyClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyClassNull() {
                this[this.tablef1406_pclst_CentrallyAssessedGridTable.PropertyClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFundNull() {
                return this.IsNull(this.tablef1406_pclst_CentrallyAssessedGridTable.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFundNull() {
                this[this.tablef1406_pclst_CentrallyAssessedGridTable.FundColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class f1406_pcget_PropertyClassRow : global::System.Data.DataRow {
            
            private f1406_pcget_PropertyClassDataTable tablef1406_pcget_PropertyClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal f1406_pcget_PropertyClassRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablef1406_pcget_PropertyClass = ((f1406_pcget_PropertyClassDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PropertyClassID {
                get {
                    try {
                        return ((int)(this[this.tablef1406_pcget_PropertyClass.PropertyClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyClassID\' in table \'f1406_pcget_PropertyClass\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablef1406_pcget_PropertyClass.PropertyClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyClass {
                get {
                    try {
                        return ((string)(this[this.tablef1406_pcget_PropertyClass.PropertyClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyClass\' in table \'f1406_pcget_PropertyClass\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablef1406_pcget_PropertyClass.PropertyClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyClassIDNull() {
                return this.IsNull(this.tablef1406_pcget_PropertyClass.PropertyClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyClassIDNull() {
                this[this.tablef1406_pcget_PropertyClass.PropertyClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropertyClassNull() {
                return this.IsNull(this.tablef1406_pcget_PropertyClass.PropertyClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropertyClassNull() {
                this[this.tablef1406_pcget_PropertyClass.PropertyClassColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f1406_pclst_CentrallyAssessedGridTableRowChangeEvent : global::System.EventArgs {
            
            private f1406_pclst_CentrallyAssessedGridTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pclst_CentrallyAssessedGridTableRowChangeEvent(f1406_pclst_CentrallyAssessedGridTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pclst_CentrallyAssessedGridTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class f1406_pcget_PropertyClassRowChangeEvent : global::System.EventArgs {
            
            private f1406_pcget_PropertyClassRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pcget_PropertyClassRowChangeEvent(f1406_pcget_PropertyClassRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public f1406_pcget_PropertyClassRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591