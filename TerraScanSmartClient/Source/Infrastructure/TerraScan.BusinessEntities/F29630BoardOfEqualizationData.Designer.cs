//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F29630BoardOfEqualizationData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F29630BoardOfEqualizationData : global::System.Data.DataSet {
        
        private GetBOEDetailsDataTable tableGetBOEDetails;
        
        private GetBOEValuesDataTable tableGetBOEValues;
        
        private GetBOEParcelDetailsDataTable tableGetBOEParcelDetails;
        
        private SaveBOEDetailsDataTable tableSaveBOEDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F29630BoardOfEqualizationData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F29630BoardOfEqualizationData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GetBOEDetails"] != null)) {
                    base.Tables.Add(new GetBOEDetailsDataTable(ds.Tables["GetBOEDetails"]));
                }
                if ((ds.Tables["GetBOEValues"] != null)) {
                    base.Tables.Add(new GetBOEValuesDataTable(ds.Tables["GetBOEValues"]));
                }
                if ((ds.Tables["GetBOEParcelDetails"] != null)) {
                    base.Tables.Add(new GetBOEParcelDetailsDataTable(ds.Tables["GetBOEParcelDetails"]));
                }
                if ((ds.Tables["SaveBOEDetails"] != null)) {
                    base.Tables.Add(new SaveBOEDetailsDataTable(ds.Tables["SaveBOEDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetBOEDetailsDataTable GetBOEDetails {
            get {
                return this.tableGetBOEDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetBOEValuesDataTable GetBOEValues {
            get {
                return this.tableGetBOEValues;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetBOEParcelDetailsDataTable GetBOEParcelDetails {
            get {
                return this.tableGetBOEParcelDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SaveBOEDetailsDataTable SaveBOEDetails {
            get {
                return this.tableSaveBOEDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F29630BoardOfEqualizationData cln = ((F29630BoardOfEqualizationData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GetBOEDetails"] != null)) {
                    base.Tables.Add(new GetBOEDetailsDataTable(ds.Tables["GetBOEDetails"]));
                }
                if ((ds.Tables["GetBOEValues"] != null)) {
                    base.Tables.Add(new GetBOEValuesDataTable(ds.Tables["GetBOEValues"]));
                }
                if ((ds.Tables["GetBOEParcelDetails"] != null)) {
                    base.Tables.Add(new GetBOEParcelDetailsDataTable(ds.Tables["GetBOEParcelDetails"]));
                }
                if ((ds.Tables["SaveBOEDetails"] != null)) {
                    base.Tables.Add(new SaveBOEDetailsDataTable(ds.Tables["SaveBOEDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGetBOEDetails = ((GetBOEDetailsDataTable)(base.Tables["GetBOEDetails"]));
            if ((initTable == true)) {
                if ((this.tableGetBOEDetails != null)) {
                    this.tableGetBOEDetails.InitVars();
                }
            }
            this.tableGetBOEValues = ((GetBOEValuesDataTable)(base.Tables["GetBOEValues"]));
            if ((initTable == true)) {
                if ((this.tableGetBOEValues != null)) {
                    this.tableGetBOEValues.InitVars();
                }
            }
            this.tableGetBOEParcelDetails = ((GetBOEParcelDetailsDataTable)(base.Tables["GetBOEParcelDetails"]));
            if ((initTable == true)) {
                if ((this.tableGetBOEParcelDetails != null)) {
                    this.tableGetBOEParcelDetails.InitVars();
                }
            }
            this.tableSaveBOEDetails = ((SaveBOEDetailsDataTable)(base.Tables["SaveBOEDetails"]));
            if ((initTable == true)) {
                if ((this.tableSaveBOEDetails != null)) {
                    this.tableSaveBOEDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F29630BoardOfEqualizationData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F29630BoardOfEqualizationData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGetBOEDetails = new GetBOEDetailsDataTable();
            base.Tables.Add(this.tableGetBOEDetails);
            this.tableGetBOEValues = new GetBOEValuesDataTable();
            base.Tables.Add(this.tableGetBOEValues);
            this.tableGetBOEParcelDetails = new GetBOEParcelDetailsDataTable();
            base.Tables.Add(this.tableGetBOEParcelDetails);
            this.tableSaveBOEDetails = new SaveBOEDetailsDataTable();
            base.Tables.Add(this.tableSaveBOEDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetBOEDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetBOEValues() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetBOEParcelDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSaveBOEDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F29630BoardOfEqualizationData ds = new F29630BoardOfEqualizationData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GetBOEDetailsRowChangeEventHandler(object sender, GetBOEDetailsRowChangeEvent e);
        
        public delegate void GetBOEValuesRowChangeEventHandler(object sender, GetBOEValuesRowChangeEvent e);
        
        public delegate void GetBOEParcelDetailsRowChangeEventHandler(object sender, GetBOEParcelDetailsRowChangeEvent e);
        
        public delegate void SaveBOEDetailsRowChangeEventHandler(object sender, SaveBOEDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetBOEDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBOEID;
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnProtestedBy;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnEmailAddress;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnAppraiser;
            
            private global::System.Data.DataColumn columnProtestNumber;
            
            private global::System.Data.DataColumn columnHearingDate;
            
            private global::System.Data.DataColumn columnActionDate;
            
            private global::System.Data.DataColumn columnClosedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEDetailsDataTable() {
                this.TableName = "GetBOEDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetBOEDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetBOEDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOEIDColumn {
                get {
                    return this.columnBOEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProtestedByColumn {
                get {
                    return this.columnProtestedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailAddressColumn {
                get {
                    return this.columnEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppraiserColumn {
                get {
                    return this.columnAppraiser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProtestNumberColumn {
                get {
                    return this.columnProtestNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HearingDateColumn {
                get {
                    return this.columnHearingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActionDateColumn {
                get {
                    return this.columnActionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosedDateColumn {
                get {
                    return this.columnClosedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEDetailsRow this[int index] {
                get {
                    return ((GetBOEDetailsRow)(this.Rows[index]));
                }
            }
            
            public event GetBOEDetailsRowChangeEventHandler GetBOEDetailsRowChanging;
            
            public event GetBOEDetailsRowChangeEventHandler GetBOEDetailsRowChanged;
            
            public event GetBOEDetailsRowChangeEventHandler GetBOEDetailsRowDeleting;
            
            public event GetBOEDetailsRowChangeEventHandler GetBOEDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetBOEDetailsRow(GetBOEDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEDetailsRow AddGetBOEDetailsRow(
                        int BOEID, 
                        int EventID, 
                        string ProtestedBy, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string State, 
                        string Zip, 
                        string PhoneNumber, 
                        string EmailAddress, 
                        int UserID, 
                        string Appraiser, 
                        string ProtestNumber, 
                        System.DateTime HearingDate, 
                        System.DateTime ActionDate, 
                        System.DateTime ClosedDate) {
                GetBOEDetailsRow rowGetBOEDetailsRow = ((GetBOEDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BOEID,
                        EventID,
                        ProtestedBy,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        PhoneNumber,
                        EmailAddress,
                        UserID,
                        Appraiser,
                        ProtestNumber,
                        HearingDate,
                        ActionDate,
                        ClosedDate};
                rowGetBOEDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetBOEDetailsRow);
                return rowGetBOEDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetBOEDetailsDataTable cln = ((GetBOEDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetBOEDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBOEID = base.Columns["BOEID"];
                this.columnEventID = base.Columns["EventID"];
                this.columnProtestedBy = base.Columns["ProtestedBy"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnEmailAddress = base.Columns["EmailAddress"];
                this.columnUserID = base.Columns["UserID"];
                this.columnAppraiser = base.Columns["Appraiser"];
                this.columnProtestNumber = base.Columns["ProtestNumber"];
                this.columnHearingDate = base.Columns["HearingDate"];
                this.columnActionDate = base.Columns["ActionDate"];
                this.columnClosedDate = base.Columns["ClosedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBOEID = new global::System.Data.DataColumn("BOEID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOEID);
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnProtestedBy = new global::System.Data.DataColumn("ProtestedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProtestedBy);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnEmailAddress = new global::System.Data.DataColumn("EmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmailAddress);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnAppraiser = new global::System.Data.DataColumn("Appraiser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppraiser);
                this.columnProtestNumber = new global::System.Data.DataColumn("ProtestNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProtestNumber);
                this.columnHearingDate = new global::System.Data.DataColumn("HearingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHearingDate);
                this.columnActionDate = new global::System.Data.DataColumn("ActionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionDate);
                this.columnClosedDate = new global::System.Data.DataColumn("ClosedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosedDate);
                this.columnProtestedBy.MaxLength = 50;
                this.columnAddress1.MaxLength = 50;
                this.columnAddress2.MaxLength = 50;
                this.columnCity.MaxLength = 30;
                this.columnState.MaxLength = 6;
                this.columnZip.MaxLength = 12;
                this.columnPhoneNumber.MaxLength = 20;
                this.columnEmailAddress.MaxLength = 50;
                this.columnAppraiser.MaxLength = 50;
                this.columnProtestNumber.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEDetailsRow NewGetBOEDetailsRow() {
                return ((GetBOEDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetBOEDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetBOEDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetBOEDetailsRowChanged != null)) {
                    this.GetBOEDetailsRowChanged(this, new GetBOEDetailsRowChangeEvent(((GetBOEDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetBOEDetailsRowChanging != null)) {
                    this.GetBOEDetailsRowChanging(this, new GetBOEDetailsRowChangeEvent(((GetBOEDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetBOEDetailsRowDeleted != null)) {
                    this.GetBOEDetailsRowDeleted(this, new GetBOEDetailsRowChangeEvent(((GetBOEDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetBOEDetailsRowDeleting != null)) {
                    this.GetBOEDetailsRowDeleting(this, new GetBOEDetailsRowChangeEvent(((GetBOEDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetBOEDetailsRow(GetBOEDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29630BoardOfEqualizationData ds = new F29630BoardOfEqualizationData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetBOEDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetBOEValuesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnValueBreakdown;
            
            private global::System.Data.DataColumn columnAssessedValue;
            
            private global::System.Data.DataColumn columnApellantsValue;
            
            private global::System.Data.DataColumn columnStipulatedValue;
            
            private global::System.Data.DataColumn columnBOEValue;
            
            private global::System.Data.DataColumn columnIsRoll;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEValuesDataTable() {
                this.TableName = "GetBOEValues";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetBOEValuesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetBOEValuesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueBreakdownColumn {
                get {
                    return this.columnValueBreakdown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessedValueColumn {
                get {
                    return this.columnAssessedValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApellantsValueColumn {
                get {
                    return this.columnApellantsValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StipulatedValueColumn {
                get {
                    return this.columnStipulatedValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOEValueColumn {
                get {
                    return this.columnBOEValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRollColumn {
                get {
                    return this.columnIsRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEValuesRow this[int index] {
                get {
                    return ((GetBOEValuesRow)(this.Rows[index]));
                }
            }
            
            public event GetBOEValuesRowChangeEventHandler GetBOEValuesRowChanging;
            
            public event GetBOEValuesRowChangeEventHandler GetBOEValuesRowChanged;
            
            public event GetBOEValuesRowChangeEventHandler GetBOEValuesRowDeleting;
            
            public event GetBOEValuesRowChangeEventHandler GetBOEValuesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetBOEValuesRow(GetBOEValuesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEValuesRow AddGetBOEValuesRow(string ValueBreakdown, string AssessedValue, string ApellantsValue, string StipulatedValue, string BOEValue, bool IsRoll) {
                GetBOEValuesRow rowGetBOEValuesRow = ((GetBOEValuesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ValueBreakdown,
                        AssessedValue,
                        ApellantsValue,
                        StipulatedValue,
                        BOEValue,
                        IsRoll};
                rowGetBOEValuesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetBOEValuesRow);
                return rowGetBOEValuesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetBOEValuesDataTable cln = ((GetBOEValuesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetBOEValuesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnValueBreakdown = base.Columns["ValueBreakdown"];
                this.columnAssessedValue = base.Columns["AssessedValue"];
                this.columnApellantsValue = base.Columns["ApellantsValue"];
                this.columnStipulatedValue = base.Columns["StipulatedValue"];
                this.columnBOEValue = base.Columns["BOEValue"];
                this.columnIsRoll = base.Columns["IsRoll"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnValueBreakdown = new global::System.Data.DataColumn("ValueBreakdown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueBreakdown);
                this.columnAssessedValue = new global::System.Data.DataColumn("AssessedValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessedValue);
                this.columnApellantsValue = new global::System.Data.DataColumn("ApellantsValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApellantsValue);
                this.columnStipulatedValue = new global::System.Data.DataColumn("StipulatedValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStipulatedValue);
                this.columnBOEValue = new global::System.Data.DataColumn("BOEValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOEValue);
                this.columnIsRoll = new global::System.Data.DataColumn("IsRoll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRoll);
                this.columnValueBreakdown.MaxLength = 100;
                this.columnAssessedValue.MaxLength = 20;
                this.columnApellantsValue.MaxLength = 20;
                this.columnStipulatedValue.MaxLength = 20;
                this.columnBOEValue.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEValuesRow NewGetBOEValuesRow() {
                return ((GetBOEValuesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetBOEValuesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetBOEValuesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetBOEValuesRowChanged != null)) {
                    this.GetBOEValuesRowChanged(this, new GetBOEValuesRowChangeEvent(((GetBOEValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetBOEValuesRowChanging != null)) {
                    this.GetBOEValuesRowChanging(this, new GetBOEValuesRowChangeEvent(((GetBOEValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetBOEValuesRowDeleted != null)) {
                    this.GetBOEValuesRowDeleted(this, new GetBOEValuesRowChangeEvent(((GetBOEValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetBOEValuesRowDeleting != null)) {
                    this.GetBOEValuesRowDeleting(this, new GetBOEValuesRowChangeEvent(((GetBOEValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetBOEValuesRow(GetBOEValuesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29630BoardOfEqualizationData ds = new F29630BoardOfEqualizationData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetBOEValuesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetBOEParcelDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnParcelNumber;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnParcelTypeID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnRetired;
            
            private global::System.Data.DataColumn columnExempt;
            
            private global::System.Data.DataColumn columnLockAdminBy;
            
            private global::System.Data.DataColumn columnLockAppraisalBy;
            
            private global::System.Data.DataColumn columnLockValueBy;
            
            private global::System.Data.DataColumn columnEvents;
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPrimaryOwner;
            
            private global::System.Data.DataColumn columnSitus;
            
            private global::System.Data.DataColumn columnLegal;
            
            private global::System.Data.DataColumn columnDOR;
            
            private global::System.Data.DataColumn columnMID1;
            
            private global::System.Data.DataColumn columnMID2;
            
            private global::System.Data.DataColumn columnMID3;
            
            private global::System.Data.DataColumn columnMID4;
            
            private global::System.Data.DataColumn columnMID5;
            
            private global::System.Data.DataColumn columnLabel;
            
            private global::System.Data.DataColumn columnLabe2;
            
            private global::System.Data.DataColumn columnLabe3;
            
            private global::System.Data.DataColumn columnLabe4;
            
            private global::System.Data.DataColumn columnLabe5;
            
            private global::System.Data.DataColumn columnMask1;
            
            private global::System.Data.DataColumn columnMask2;
            
            private global::System.Data.DataColumn columnMask3;
            
            private global::System.Data.DataColumn columnMask4;
            
            private global::System.Data.DataColumn columnMask5;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnNeighborhoodGroup;
            
            private global::System.Data.DataColumn columnNBHDID;
            
            private global::System.Data.DataColumn columnDistrictID;
            
            private global::System.Data.DataColumn columnAssessmentTypeID;
            
            private global::System.Data.DataColumn columnAssessmentType;
            
            private global::System.Data.DataColumn columnOwnerID;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEParcelDetailsDataTable() {
                this.TableName = "GetBOEParcelDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetBOEParcelDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetBOEParcelDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNumberColumn {
                get {
                    return this.columnParcelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelTypeIDColumn {
                get {
                    return this.columnParcelTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RetiredColumn {
                get {
                    return this.columnRetired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExemptColumn {
                get {
                    return this.columnExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAdminByColumn {
                get {
                    return this.columnLockAdminBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockAppraisalByColumn {
                get {
                    return this.columnLockAppraisalBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LockValueByColumn {
                get {
                    return this.columnLockValueBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventsColumn {
                get {
                    return this.columnEvents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimaryOwnerColumn {
                get {
                    return this.columnPrimaryOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SitusColumn {
                get {
                    return this.columnSitus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LegalColumn {
                get {
                    return this.columnLegal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DORColumn {
                get {
                    return this.columnDOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID1Column {
                get {
                    return this.columnMID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID2Column {
                get {
                    return this.columnMID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID3Column {
                get {
                    return this.columnMID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID4Column {
                get {
                    return this.columnMID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MID5Column {
                get {
                    return this.columnMID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelColumn {
                get {
                    return this.columnLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe2Column {
                get {
                    return this.columnLabe2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe3Column {
                get {
                    return this.columnLabe3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe4Column {
                get {
                    return this.columnLabe4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Labe5Column {
                get {
                    return this.columnLabe5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask1Column {
                get {
                    return this.columnMask1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask2Column {
                get {
                    return this.columnMask2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask3Column {
                get {
                    return this.columnMask3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask4Column {
                get {
                    return this.columnMask4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mask5Column {
                get {
                    return this.columnMask5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeighborhoodGroupColumn {
                get {
                    return this.columnNeighborhoodGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBHDIDColumn {
                get {
                    return this.columnNBHDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictIDColumn {
                get {
                    return this.columnDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessmentTypeIDColumn {
                get {
                    return this.columnAssessmentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessmentTypeColumn {
                get {
                    return this.columnAssessmentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerIDColumn {
                get {
                    return this.columnOwnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEParcelDetailsRow this[int index] {
                get {
                    return ((GetBOEParcelDetailsRow)(this.Rows[index]));
                }
            }
            
            public event GetBOEParcelDetailsRowChangeEventHandler GetBOEParcelDetailsRowChanging;
            
            public event GetBOEParcelDetailsRowChangeEventHandler GetBOEParcelDetailsRowChanged;
            
            public event GetBOEParcelDetailsRowChangeEventHandler GetBOEParcelDetailsRowDeleting;
            
            public event GetBOEParcelDetailsRowChangeEventHandler GetBOEParcelDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetBOEParcelDetailsRow(GetBOEParcelDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEParcelDetailsRow AddGetBOEParcelDetailsRow(
                        string ParcelNumber, 
                        short RollYear, 
                        byte ParcelTypeID, 
                        string Type, 
                        string Retired, 
                        string Exempt, 
                        int LockAdminBy, 
                        int LockAppraisalBy, 
                        int LockValueBy, 
                        string Events, 
                        int EventID, 
                        string Description, 
                        string PrimaryOwner, 
                        string Situs, 
                        string Legal, 
                        string DOR, 
                        string MID1, 
                        string MID2, 
                        string MID3, 
                        string MID4, 
                        string MID5, 
                        string Label, 
                        string Labe2, 
                        string Labe3, 
                        string Labe4, 
                        string Labe5, 
                        string Mask1, 
                        string Mask2, 
                        string Mask3, 
                        string Mask4, 
                        string Mask5, 
                        string District, 
                        string NeighborhoodGroup, 
                        short AssessmentTypeID, 
                        string AssessmentType, 
                        int OwnerID, 
                        string PhoneNumber) {
                GetBOEParcelDetailsRow rowGetBOEParcelDetailsRow = ((GetBOEParcelDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ParcelNumber,
                        RollYear,
                        ParcelTypeID,
                        Type,
                        Retired,
                        Exempt,
                        LockAdminBy,
                        LockAppraisalBy,
                        LockValueBy,
                        Events,
                        EventID,
                        Description,
                        PrimaryOwner,
                        Situs,
                        Legal,
                        DOR,
                        MID1,
                        MID2,
                        MID3,
                        MID4,
                        MID5,
                        Label,
                        Labe2,
                        Labe3,
                        Labe4,
                        Labe5,
                        Mask1,
                        Mask2,
                        Mask3,
                        Mask4,
                        Mask5,
                        District,
                        NeighborhoodGroup,
                        null,
                        null,
                        AssessmentTypeID,
                        AssessmentType,
                        OwnerID,
                        PhoneNumber};
                rowGetBOEParcelDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetBOEParcelDetailsRow);
                return rowGetBOEParcelDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetBOEParcelDetailsDataTable cln = ((GetBOEParcelDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetBOEParcelDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnParcelNumber = base.Columns["ParcelNumber"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnParcelTypeID = base.Columns["ParcelTypeID"];
                this.columnType = base.Columns["Type"];
                this.columnRetired = base.Columns["Retired"];
                this.columnExempt = base.Columns["Exempt"];
                this.columnLockAdminBy = base.Columns["LockAdminBy"];
                this.columnLockAppraisalBy = base.Columns["LockAppraisalBy"];
                this.columnLockValueBy = base.Columns["LockValueBy"];
                this.columnEvents = base.Columns["Events"];
                this.columnEventID = base.Columns["EventID"];
                this.columnDescription = base.Columns["Description"];
                this.columnPrimaryOwner = base.Columns["PrimaryOwner"];
                this.columnSitus = base.Columns["Situs"];
                this.columnLegal = base.Columns["Legal"];
                this.columnDOR = base.Columns["DOR"];
                this.columnMID1 = base.Columns["MID1"];
                this.columnMID2 = base.Columns["MID2"];
                this.columnMID3 = base.Columns["MID3"];
                this.columnMID4 = base.Columns["MID4"];
                this.columnMID5 = base.Columns["MID5"];
                this.columnLabel = base.Columns["Label"];
                this.columnLabe2 = base.Columns["Labe2"];
                this.columnLabe3 = base.Columns["Labe3"];
                this.columnLabe4 = base.Columns["Labe4"];
                this.columnLabe5 = base.Columns["Labe5"];
                this.columnMask1 = base.Columns["Mask1"];
                this.columnMask2 = base.Columns["Mask2"];
                this.columnMask3 = base.Columns["Mask3"];
                this.columnMask4 = base.Columns["Mask4"];
                this.columnMask5 = base.Columns["Mask5"];
                this.columnDistrict = base.Columns["District"];
                this.columnNeighborhoodGroup = base.Columns["NeighborhoodGroup"];
                this.columnNBHDID = base.Columns["NBHDID"];
                this.columnDistrictID = base.Columns["DistrictID"];
                this.columnAssessmentTypeID = base.Columns["AssessmentTypeID"];
                this.columnAssessmentType = base.Columns["AssessmentType"];
                this.columnOwnerID = base.Columns["OwnerID"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnParcelNumber = new global::System.Data.DataColumn("ParcelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNumber);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnParcelTypeID = new global::System.Data.DataColumn("ParcelTypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelTypeID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnRetired = new global::System.Data.DataColumn("Retired", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetired);
                this.columnExempt = new global::System.Data.DataColumn("Exempt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExempt);
                this.columnLockAdminBy = new global::System.Data.DataColumn("LockAdminBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAdminBy);
                this.columnLockAppraisalBy = new global::System.Data.DataColumn("LockAppraisalBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockAppraisalBy);
                this.columnLockValueBy = new global::System.Data.DataColumn("LockValueBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockValueBy);
                this.columnEvents = new global::System.Data.DataColumn("Events", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvents);
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPrimaryOwner = new global::System.Data.DataColumn("PrimaryOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryOwner);
                this.columnSitus = new global::System.Data.DataColumn("Situs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSitus);
                this.columnLegal = new global::System.Data.DataColumn("Legal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLegal);
                this.columnDOR = new global::System.Data.DataColumn("DOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOR);
                this.columnMID1 = new global::System.Data.DataColumn("MID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID1);
                this.columnMID2 = new global::System.Data.DataColumn("MID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID2);
                this.columnMID3 = new global::System.Data.DataColumn("MID3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID3);
                this.columnMID4 = new global::System.Data.DataColumn("MID4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID4);
                this.columnMID5 = new global::System.Data.DataColumn("MID5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID5);
                this.columnLabel = new global::System.Data.DataColumn("Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabel);
                this.columnLabe2 = new global::System.Data.DataColumn("Labe2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe2);
                this.columnLabe3 = new global::System.Data.DataColumn("Labe3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe3);
                this.columnLabe4 = new global::System.Data.DataColumn("Labe4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe4);
                this.columnLabe5 = new global::System.Data.DataColumn("Labe5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabe5);
                this.columnMask1 = new global::System.Data.DataColumn("Mask1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask1);
                this.columnMask2 = new global::System.Data.DataColumn("Mask2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask2);
                this.columnMask3 = new global::System.Data.DataColumn("Mask3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask3);
                this.columnMask4 = new global::System.Data.DataColumn("Mask4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask4);
                this.columnMask5 = new global::System.Data.DataColumn("Mask5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMask5);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnNeighborhoodGroup = new global::System.Data.DataColumn("NeighborhoodGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeighborhoodGroup);
                this.columnNBHDID = new global::System.Data.DataColumn("NBHDID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNBHDID);
                this.columnDistrictID = new global::System.Data.DataColumn("DistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictID);
                this.columnAssessmentTypeID = new global::System.Data.DataColumn("AssessmentTypeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessmentTypeID);
                this.columnAssessmentType = new global::System.Data.DataColumn("AssessmentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessmentType);
                this.columnOwnerID = new global::System.Data.DataColumn("OwnerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerID);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnParcelID.AutoIncrement = true;
                this.columnParcelID.AllowDBNull = false;
                this.columnParcelID.ReadOnly = true;
                this.columnParcelNumber.AllowDBNull = false;
                this.columnParcelNumber.MaxLength = 50;
                this.columnParcelTypeID.AllowDBNull = false;
                this.columnType.MaxLength = 50;
                this.columnRetired.ReadOnly = true;
                this.columnRetired.MaxLength = 7;
                this.columnExempt.ReadOnly = true;
                this.columnExempt.MaxLength = 6;
                this.columnEvents.ReadOnly = true;
                this.columnEvents.MaxLength = 6;
                this.columnEventID.ReadOnly = true;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 50;
                this.columnPrimaryOwner.ReadOnly = true;
                this.columnPrimaryOwner.MaxLength = 102;
                this.columnSitus.ReadOnly = true;
                this.columnSitus.MaxLength = 400;
                this.columnLegal.ReadOnly = true;
                this.columnLegal.MaxLength = 1000;
                this.columnDOR.ReadOnly = true;
                this.columnDOR.MaxLength = 250;
                this.columnMID1.ReadOnly = true;
                this.columnMID1.MaxLength = 250;
                this.columnMID2.ReadOnly = true;
                this.columnMID2.MaxLength = 250;
                this.columnMID3.ReadOnly = true;
                this.columnMID3.MaxLength = 250;
                this.columnMID4.ReadOnly = true;
                this.columnMID4.MaxLength = 250;
                this.columnMID5.ReadOnly = true;
                this.columnMID5.MaxLength = 250;
                this.columnLabel.ReadOnly = true;
                this.columnLabel.MaxLength = 1000;
                this.columnLabe2.ReadOnly = true;
                this.columnLabe2.MaxLength = 1000;
                this.columnLabe3.ReadOnly = true;
                this.columnLabe3.MaxLength = 1000;
                this.columnLabe4.ReadOnly = true;
                this.columnLabe4.MaxLength = 1000;
                this.columnLabe5.ReadOnly = true;
                this.columnLabe5.MaxLength = 1000;
                this.columnMask1.ReadOnly = true;
                this.columnMask1.MaxLength = 1000;
                this.columnMask2.ReadOnly = true;
                this.columnMask2.MaxLength = 1000;
                this.columnMask3.ReadOnly = true;
                this.columnMask3.MaxLength = 1000;
                this.columnMask4.ReadOnly = true;
                this.columnMask4.MaxLength = 1000;
                this.columnMask5.ReadOnly = true;
                this.columnMask5.MaxLength = 1000;
                this.columnDistrict.ReadOnly = true;
                this.columnDistrict.MaxLength = 103;
                this.columnNeighborhoodGroup.ReadOnly = true;
                this.columnNeighborhoodGroup.MaxLength = 250;
                this.columnNBHDID.AutoIncrement = true;
                this.columnNBHDID.ReadOnly = true;
                this.columnDistrictID.AutoIncrement = true;
                this.columnDistrictID.ReadOnly = true;
                this.columnAssessmentType.MaxLength = 50;
                this.columnPhoneNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEParcelDetailsRow NewGetBOEParcelDetailsRow() {
                return ((GetBOEParcelDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetBOEParcelDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetBOEParcelDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetBOEParcelDetailsRowChanged != null)) {
                    this.GetBOEParcelDetailsRowChanged(this, new GetBOEParcelDetailsRowChangeEvent(((GetBOEParcelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetBOEParcelDetailsRowChanging != null)) {
                    this.GetBOEParcelDetailsRowChanging(this, new GetBOEParcelDetailsRowChangeEvent(((GetBOEParcelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetBOEParcelDetailsRowDeleted != null)) {
                    this.GetBOEParcelDetailsRowDeleted(this, new GetBOEParcelDetailsRowChangeEvent(((GetBOEParcelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetBOEParcelDetailsRowDeleting != null)) {
                    this.GetBOEParcelDetailsRowDeleting(this, new GetBOEParcelDetailsRowChangeEvent(((GetBOEParcelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetBOEParcelDetailsRow(GetBOEParcelDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29630BoardOfEqualizationData ds = new F29630BoardOfEqualizationData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetBOEParcelDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SaveBOEDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBOEID;
            
            private global::System.Data.DataColumn columnEventID;
            
            private global::System.Data.DataColumn columnProtestedBy;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnEmailAddress;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnAppraiser;
            
            private global::System.Data.DataColumn columnProtestNumber;
            
            private global::System.Data.DataColumn columnHearingDate;
            
            private global::System.Data.DataColumn columnActionDate;
            
            private global::System.Data.DataColumn columnClosedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveBOEDetailsDataTable() {
                this.TableName = "SaveBOEDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SaveBOEDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SaveBOEDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOEIDColumn {
                get {
                    return this.columnBOEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIDColumn {
                get {
                    return this.columnEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProtestedByColumn {
                get {
                    return this.columnProtestedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailAddressColumn {
                get {
                    return this.columnEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppraiserColumn {
                get {
                    return this.columnAppraiser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProtestNumberColumn {
                get {
                    return this.columnProtestNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HearingDateColumn {
                get {
                    return this.columnHearingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActionDateColumn {
                get {
                    return this.columnActionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosedDateColumn {
                get {
                    return this.columnClosedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveBOEDetailsRow this[int index] {
                get {
                    return ((SaveBOEDetailsRow)(this.Rows[index]));
                }
            }
            
            public event SaveBOEDetailsRowChangeEventHandler SaveBOEDetailsRowChanging;
            
            public event SaveBOEDetailsRowChangeEventHandler SaveBOEDetailsRowChanged;
            
            public event SaveBOEDetailsRowChangeEventHandler SaveBOEDetailsRowDeleting;
            
            public event SaveBOEDetailsRowChangeEventHandler SaveBOEDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSaveBOEDetailsRow(SaveBOEDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveBOEDetailsRow AddSaveBOEDetailsRow(
                        int BOEID, 
                        int EventID, 
                        string ProtestedBy, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string State, 
                        string Zip, 
                        string PhoneNumber, 
                        string EmailAddress, 
                        int UserID, 
                        string Appraiser, 
                        string ProtestNumber, 
                        string HearingDate, 
                        string ActionDate, 
                        string ClosedDate) {
                SaveBOEDetailsRow rowSaveBOEDetailsRow = ((SaveBOEDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BOEID,
                        EventID,
                        ProtestedBy,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        PhoneNumber,
                        EmailAddress,
                        UserID,
                        Appraiser,
                        ProtestNumber,
                        HearingDate,
                        ActionDate,
                        ClosedDate};
                rowSaveBOEDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSaveBOEDetailsRow);
                return rowSaveBOEDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SaveBOEDetailsDataTable cln = ((SaveBOEDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SaveBOEDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBOEID = base.Columns["BOEID"];
                this.columnEventID = base.Columns["EventID"];
                this.columnProtestedBy = base.Columns["ProtestedBy"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnEmailAddress = base.Columns["EmailAddress"];
                this.columnUserID = base.Columns["UserID"];
                this.columnAppraiser = base.Columns["Appraiser"];
                this.columnProtestNumber = base.Columns["ProtestNumber"];
                this.columnHearingDate = base.Columns["HearingDate"];
                this.columnActionDate = base.Columns["ActionDate"];
                this.columnClosedDate = base.Columns["ClosedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBOEID = new global::System.Data.DataColumn("BOEID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOEID);
                this.columnEventID = new global::System.Data.DataColumn("EventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventID);
                this.columnProtestedBy = new global::System.Data.DataColumn("ProtestedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProtestedBy);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnEmailAddress = new global::System.Data.DataColumn("EmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmailAddress);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnAppraiser = new global::System.Data.DataColumn("Appraiser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppraiser);
                this.columnProtestNumber = new global::System.Data.DataColumn("ProtestNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProtestNumber);
                this.columnHearingDate = new global::System.Data.DataColumn("HearingDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHearingDate);
                this.columnActionDate = new global::System.Data.DataColumn("ActionDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionDate);
                this.columnClosedDate = new global::System.Data.DataColumn("ClosedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosedDate);
                this.columnProtestedBy.MaxLength = 50;
                this.columnAddress1.MaxLength = 50;
                this.columnAddress2.MaxLength = 50;
                this.columnCity.MaxLength = 30;
                this.columnState.MaxLength = 6;
                this.columnZip.MaxLength = 12;
                this.columnPhoneNumber.MaxLength = 20;
                this.columnEmailAddress.MaxLength = 50;
                this.columnAppraiser.MaxLength = 50;
                this.columnProtestNumber.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveBOEDetailsRow NewSaveBOEDetailsRow() {
                return ((SaveBOEDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SaveBOEDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SaveBOEDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SaveBOEDetailsRowChanged != null)) {
                    this.SaveBOEDetailsRowChanged(this, new SaveBOEDetailsRowChangeEvent(((SaveBOEDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SaveBOEDetailsRowChanging != null)) {
                    this.SaveBOEDetailsRowChanging(this, new SaveBOEDetailsRowChangeEvent(((SaveBOEDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SaveBOEDetailsRowDeleted != null)) {
                    this.SaveBOEDetailsRowDeleted(this, new SaveBOEDetailsRowChangeEvent(((SaveBOEDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SaveBOEDetailsRowDeleting != null)) {
                    this.SaveBOEDetailsRowDeleting(this, new SaveBOEDetailsRowChangeEvent(((SaveBOEDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSaveBOEDetailsRow(SaveBOEDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F29630BoardOfEqualizationData ds = new F29630BoardOfEqualizationData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SaveBOEDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetBOEDetailsRow : global::System.Data.DataRow {
            
            private GetBOEDetailsDataTable tableGetBOEDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetBOEDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetBOEDetails = ((GetBOEDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOEID {
                get {
                    try {
                        return ((int)(this[this.tableGetBOEDetails.BOEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOEID\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.BOEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    try {
                        return ((int)(this[this.tableGetBOEDetails.EventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventID\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProtestedBy {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEDetails.ProtestedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProtestedBy\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.ProtestedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEDetails.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEDetails.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEDetails.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEDetails.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEDetails.ZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zip\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEDetails.PhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNumber\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmailAddress {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEDetails.EmailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmailAddress\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.EmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    try {
                        return ((int)(this[this.tableGetBOEDetails.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Appraiser {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEDetails.AppraiserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Appraiser\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.AppraiserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProtestNumber {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEDetails.ProtestNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProtestNumber\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.ProtestNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HearingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetBOEDetails.HearingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HearingDate\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.HearingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ActionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetBOEDetails.ActionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionDate\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.ActionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ClosedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetBOEDetails.ClosedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosedDate\' in table \'GetBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEDetails.ClosedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOEIDNull() {
                return this.IsNull(this.tableGetBOEDetails.BOEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOEIDNull() {
                this[this.tableGetBOEDetails.BOEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventIDNull() {
                return this.IsNull(this.tableGetBOEDetails.EventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventIDNull() {
                this[this.tableGetBOEDetails.EventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProtestedByNull() {
                return this.IsNull(this.tableGetBOEDetails.ProtestedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProtestedByNull() {
                this[this.tableGetBOEDetails.ProtestedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableGetBOEDetails.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableGetBOEDetails.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableGetBOEDetails.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableGetBOEDetails.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableGetBOEDetails.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableGetBOEDetails.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableGetBOEDetails.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableGetBOEDetails.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipNull() {
                return this.IsNull(this.tableGetBOEDetails.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipNull() {
                this[this.tableGetBOEDetails.ZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNumberNull() {
                return this.IsNull(this.tableGetBOEDetails.PhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNumberNull() {
                this[this.tableGetBOEDetails.PhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailAddressNull() {
                return this.IsNull(this.tableGetBOEDetails.EmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailAddressNull() {
                this[this.tableGetBOEDetails.EmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableGetBOEDetails.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableGetBOEDetails.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppraiserNull() {
                return this.IsNull(this.tableGetBOEDetails.AppraiserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppraiserNull() {
                this[this.tableGetBOEDetails.AppraiserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProtestNumberNull() {
                return this.IsNull(this.tableGetBOEDetails.ProtestNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProtestNumberNull() {
                this[this.tableGetBOEDetails.ProtestNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHearingDateNull() {
                return this.IsNull(this.tableGetBOEDetails.HearingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHearingDateNull() {
                this[this.tableGetBOEDetails.HearingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActionDateNull() {
                return this.IsNull(this.tableGetBOEDetails.ActionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActionDateNull() {
                this[this.tableGetBOEDetails.ActionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosedDateNull() {
                return this.IsNull(this.tableGetBOEDetails.ClosedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosedDateNull() {
                this[this.tableGetBOEDetails.ClosedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetBOEValuesRow : global::System.Data.DataRow {
            
            private GetBOEValuesDataTable tableGetBOEValues;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetBOEValuesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetBOEValues = ((GetBOEValuesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueBreakdown {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEValues.ValueBreakdownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueBreakdown\' in table \'GetBOEValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEValues.ValueBreakdownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssessedValue {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEValues.AssessedValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessedValue\' in table \'GetBOEValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEValues.AssessedValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApellantsValue {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEValues.ApellantsValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApellantsValue\' in table \'GetBOEValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEValues.ApellantsValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StipulatedValue {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEValues.StipulatedValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StipulatedValue\' in table \'GetBOEValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEValues.StipulatedValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOEValue {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEValues.BOEValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOEValue\' in table \'GetBOEValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEValues.BOEValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoll {
                get {
                    try {
                        return ((bool)(this[this.tableGetBOEValues.IsRollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRoll\' in table \'GetBOEValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEValues.IsRollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueBreakdownNull() {
                return this.IsNull(this.tableGetBOEValues.ValueBreakdownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueBreakdownNull() {
                this[this.tableGetBOEValues.ValueBreakdownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessedValueNull() {
                return this.IsNull(this.tableGetBOEValues.AssessedValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessedValueNull() {
                this[this.tableGetBOEValues.AssessedValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApellantsValueNull() {
                return this.IsNull(this.tableGetBOEValues.ApellantsValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApellantsValueNull() {
                this[this.tableGetBOEValues.ApellantsValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStipulatedValueNull() {
                return this.IsNull(this.tableGetBOEValues.StipulatedValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStipulatedValueNull() {
                this[this.tableGetBOEValues.StipulatedValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOEValueNull() {
                return this.IsNull(this.tableGetBOEValues.BOEValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOEValueNull() {
                this[this.tableGetBOEValues.BOEValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRollNull() {
                return this.IsNull(this.tableGetBOEValues.IsRollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRollNull() {
                this[this.tableGetBOEValues.IsRollColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetBOEParcelDetailsRow : global::System.Data.DataRow {
            
            private GetBOEParcelDetailsDataTable tableGetBOEParcelDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetBOEParcelDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetBOEParcelDetails = ((GetBOEParcelDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    return ((int)(this[this.tableGetBOEParcelDetails.ParcelIDColumn]));
                }
                set {
                    this[this.tableGetBOEParcelDetails.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNumber {
                get {
                    return ((string)(this[this.tableGetBOEParcelDetails.ParcelNumberColumn]));
                }
                set {
                    this[this.tableGetBOEParcelDetails.ParcelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tableGetBOEParcelDetails.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ParcelTypeID {
                get {
                    return ((byte)(this[this.tableGetBOEParcelDetails.ParcelTypeIDColumn]));
                }
                set {
                    this[this.tableGetBOEParcelDetails.ParcelTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Retired {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.RetiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Retired\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.RetiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Exempt {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.ExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Exempt\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.ExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAdminBy {
                get {
                    try {
                        return ((int)(this[this.tableGetBOEParcelDetails.LockAdminByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAdminBy\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.LockAdminByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockAppraisalBy {
                get {
                    try {
                        return ((int)(this[this.tableGetBOEParcelDetails.LockAppraisalByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockAppraisalBy\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.LockAppraisalByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LockValueBy {
                get {
                    try {
                        return ((int)(this[this.tableGetBOEParcelDetails.LockValueByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockValueBy\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.LockValueByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Events {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.EventsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Events\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.EventsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    try {
                        return ((int)(this[this.tableGetBOEParcelDetails.EventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventID\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    return ((string)(this[this.tableGetBOEParcelDetails.DescriptionColumn]));
                }
                set {
                    this[this.tableGetBOEParcelDetails.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrimaryOwner {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.PrimaryOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrimaryOwner\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.PrimaryOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Situs {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.SitusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Situs\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.SitusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Legal {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.LegalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Legal\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.LegalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOR {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.DORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOR\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.DORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID1 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.MID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID1\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.MID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID2 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.MID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID2\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.MID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID3 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.MID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID3\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.MID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID4 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.MID4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID4\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.MID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MID5 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.MID5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID5\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.MID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Label {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Label\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe2 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.Labe2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe2\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.Labe2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe3 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.Labe3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe3\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.Labe3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe4 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.Labe4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe4\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.Labe4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labe5 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.Labe5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labe5\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.Labe5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask1 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.Mask1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask1\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.Mask1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask2 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.Mask2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask2\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.Mask2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask3 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.Mask3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask3\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.Mask3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask4 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.Mask4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask4\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.Mask4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mask5 {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.Mask5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mask5\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.Mask5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NeighborhoodGroup {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.NeighborhoodGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NeighborhoodGroup\' in table \'GetBOEParcelDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.NeighborhoodGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NBHDID {
                get {
                    try {
                        return ((int)(this[this.tableGetBOEParcelDetails.NBHDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NBHDID\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.NBHDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DistrictID {
                get {
                    try {
                        return ((int)(this[this.tableGetBOEParcelDetails.DistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictID\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.DistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short AssessmentTypeID {
                get {
                    try {
                        return ((short)(this[this.tableGetBOEParcelDetails.AssessmentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessmentTypeID\' in table \'GetBOEParcelDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.AssessmentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssessmentType {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.AssessmentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessmentType\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.AssessmentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerID {
                get {
                    try {
                        return ((int)(this[this.tableGetBOEParcelDetails.OwnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerID\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.OwnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableGetBOEParcelDetails.PhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNumber\' in table \'GetBOEParcelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetBOEParcelDetails.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableGetBOEParcelDetails.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableGetBOEParcelDetails.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetiredNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.RetiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetiredNull() {
                this[this.tableGetBOEParcelDetails.RetiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExemptNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.ExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExemptNull() {
                this[this.tableGetBOEParcelDetails.ExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAdminByNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.LockAdminByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAdminByNull() {
                this[this.tableGetBOEParcelDetails.LockAdminByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockAppraisalByNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.LockAppraisalByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockAppraisalByNull() {
                this[this.tableGetBOEParcelDetails.LockAppraisalByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLockValueByNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.LockValueByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLockValueByNull() {
                this[this.tableGetBOEParcelDetails.LockValueByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventsNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.EventsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventsNull() {
                this[this.tableGetBOEParcelDetails.EventsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventIDNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.EventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventIDNull() {
                this[this.tableGetBOEParcelDetails.EventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimaryOwnerNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.PrimaryOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimaryOwnerNull() {
                this[this.tableGetBOEParcelDetails.PrimaryOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSitusNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.SitusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSitusNull() {
                this[this.tableGetBOEParcelDetails.SitusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLegalNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.LegalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLegalNull() {
                this[this.tableGetBOEParcelDetails.LegalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDORNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.DORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDORNull() {
                this[this.tableGetBOEParcelDetails.DORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID1Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.MID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID1Null() {
                this[this.tableGetBOEParcelDetails.MID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID2Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.MID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID2Null() {
                this[this.tableGetBOEParcelDetails.MID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID3Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.MID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID3Null() {
                this[this.tableGetBOEParcelDetails.MID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID4Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.MID4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID4Null() {
                this[this.tableGetBOEParcelDetails.MID4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMID5Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.MID5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMID5Null() {
                this[this.tableGetBOEParcelDetails.MID5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelNull() {
                this[this.tableGetBOEParcelDetails.LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe2Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.Labe2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe2Null() {
                this[this.tableGetBOEParcelDetails.Labe2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe3Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.Labe3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe3Null() {
                this[this.tableGetBOEParcelDetails.Labe3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe4Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.Labe4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe4Null() {
                this[this.tableGetBOEParcelDetails.Labe4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabe5Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.Labe5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabe5Null() {
                this[this.tableGetBOEParcelDetails.Labe5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask1Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.Mask1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask1Null() {
                this[this.tableGetBOEParcelDetails.Mask1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask2Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.Mask2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask2Null() {
                this[this.tableGetBOEParcelDetails.Mask2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask3Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.Mask3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask3Null() {
                this[this.tableGetBOEParcelDetails.Mask3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask4Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.Mask4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask4Null() {
                this[this.tableGetBOEParcelDetails.Mask4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMask5Null() {
                return this.IsNull(this.tableGetBOEParcelDetails.Mask5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMask5Null() {
                this[this.tableGetBOEParcelDetails.Mask5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableGetBOEParcelDetails.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeighborhoodGroupNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.NeighborhoodGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeighborhoodGroupNull() {
                this[this.tableGetBOEParcelDetails.NeighborhoodGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBHDIDNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.NBHDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBHDIDNull() {
                this[this.tableGetBOEParcelDetails.NBHDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictIDNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.DistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictIDNull() {
                this[this.tableGetBOEParcelDetails.DistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessmentTypeIDNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.AssessmentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessmentTypeIDNull() {
                this[this.tableGetBOEParcelDetails.AssessmentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessmentTypeNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.AssessmentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessmentTypeNull() {
                this[this.tableGetBOEParcelDetails.AssessmentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerIDNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.OwnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerIDNull() {
                this[this.tableGetBOEParcelDetails.OwnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNumberNull() {
                return this.IsNull(this.tableGetBOEParcelDetails.PhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNumberNull() {
                this[this.tableGetBOEParcelDetails.PhoneNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SaveBOEDetailsRow : global::System.Data.DataRow {
            
            private SaveBOEDetailsDataTable tableSaveBOEDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SaveBOEDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSaveBOEDetails = ((SaveBOEDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOEID {
                get {
                    try {
                        return ((int)(this[this.tableSaveBOEDetails.BOEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOEID\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.BOEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EventID {
                get {
                    try {
                        return ((int)(this[this.tableSaveBOEDetails.EventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventID\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.EventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProtestedBy {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.ProtestedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProtestedBy\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.ProtestedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.ZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zip\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.PhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNumber\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmailAddress {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.EmailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmailAddress\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.EmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    try {
                        return ((int)(this[this.tableSaveBOEDetails.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Appraiser {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.AppraiserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Appraiser\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.AppraiserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProtestNumber {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.ProtestNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProtestNumber\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.ProtestNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HearingDate {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.HearingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HearingDate\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.HearingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActionDate {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.ActionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionDate\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.ActionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClosedDate {
                get {
                    try {
                        return ((string)(this[this.tableSaveBOEDetails.ClosedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosedDate\' in table \'SaveBOEDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaveBOEDetails.ClosedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOEIDNull() {
                return this.IsNull(this.tableSaveBOEDetails.BOEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOEIDNull() {
                this[this.tableSaveBOEDetails.BOEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventIDNull() {
                return this.IsNull(this.tableSaveBOEDetails.EventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventIDNull() {
                this[this.tableSaveBOEDetails.EventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProtestedByNull() {
                return this.IsNull(this.tableSaveBOEDetails.ProtestedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProtestedByNull() {
                this[this.tableSaveBOEDetails.ProtestedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableSaveBOEDetails.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableSaveBOEDetails.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableSaveBOEDetails.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableSaveBOEDetails.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableSaveBOEDetails.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableSaveBOEDetails.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableSaveBOEDetails.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableSaveBOEDetails.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipNull() {
                return this.IsNull(this.tableSaveBOEDetails.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipNull() {
                this[this.tableSaveBOEDetails.ZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNumberNull() {
                return this.IsNull(this.tableSaveBOEDetails.PhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNumberNull() {
                this[this.tableSaveBOEDetails.PhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailAddressNull() {
                return this.IsNull(this.tableSaveBOEDetails.EmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailAddressNull() {
                this[this.tableSaveBOEDetails.EmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableSaveBOEDetails.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableSaveBOEDetails.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppraiserNull() {
                return this.IsNull(this.tableSaveBOEDetails.AppraiserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppraiserNull() {
                this[this.tableSaveBOEDetails.AppraiserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProtestNumberNull() {
                return this.IsNull(this.tableSaveBOEDetails.ProtestNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProtestNumberNull() {
                this[this.tableSaveBOEDetails.ProtestNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHearingDateNull() {
                return this.IsNull(this.tableSaveBOEDetails.HearingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHearingDateNull() {
                this[this.tableSaveBOEDetails.HearingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActionDateNull() {
                return this.IsNull(this.tableSaveBOEDetails.ActionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActionDateNull() {
                this[this.tableSaveBOEDetails.ActionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosedDateNull() {
                return this.IsNull(this.tableSaveBOEDetails.ClosedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosedDateNull() {
                this[this.tableSaveBOEDetails.ClosedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetBOEDetailsRowChangeEvent : global::System.EventArgs {
            
            private GetBOEDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEDetailsRowChangeEvent(GetBOEDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetBOEValuesRowChangeEvent : global::System.EventArgs {
            
            private GetBOEValuesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEValuesRowChangeEvent(GetBOEValuesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEValuesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetBOEParcelDetailsRowChangeEvent : global::System.EventArgs {
            
            private GetBOEParcelDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEParcelDetailsRowChangeEvent(GetBOEParcelDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetBOEParcelDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SaveBOEDetailsRowChangeEvent : global::System.EventArgs {
            
            private SaveBOEDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveBOEDetailsRowChangeEvent(SaveBOEDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SaveBOEDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591