//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F1030SpecialDistrictDefinitionData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F1030SpecialDistrictDefinitionData : global::System.Data.DataSet {
        
        private GetDistrictDefinitionDetailsDataTable tableGetDistrictDefinitionDetails;
        
        private GetDistrictDistributionDetailsDataTable tableGetDistrictDistributionDetails;
        
        private DistrictDetailsDataTable tableDistrictDetails;
        
        private DistrictPostingListDataTable tableDistrictPostingList;
        
        private DistrictRateListDataTable tableDistrictRateList;
        
        private DistrictDistributionTypeListDataTable tableDistrictDistributionTypeList;
        
        private GetDistrictRateDetailsDataTable tableGetDistrictRateDetails;
        
        private ListDistrictDefinitionIDDataTable tableListDistrictDefinitionID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F1030SpecialDistrictDefinitionData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F1030SpecialDistrictDefinitionData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GetDistrictDefinitionDetails"] != null)) {
                    base.Tables.Add(new GetDistrictDefinitionDetailsDataTable(ds.Tables["GetDistrictDefinitionDetails"]));
                }
                if ((ds.Tables["GetDistrictDistributionDetails"] != null)) {
                    base.Tables.Add(new GetDistrictDistributionDetailsDataTable(ds.Tables["GetDistrictDistributionDetails"]));
                }
                if ((ds.Tables["DistrictDetails"] != null)) {
                    base.Tables.Add(new DistrictDetailsDataTable(ds.Tables["DistrictDetails"]));
                }
                if ((ds.Tables["DistrictPostingList"] != null)) {
                    base.Tables.Add(new DistrictPostingListDataTable(ds.Tables["DistrictPostingList"]));
                }
                if ((ds.Tables["DistrictRateList"] != null)) {
                    base.Tables.Add(new DistrictRateListDataTable(ds.Tables["DistrictRateList"]));
                }
                if ((ds.Tables["DistrictDistributionTypeList"] != null)) {
                    base.Tables.Add(new DistrictDistributionTypeListDataTable(ds.Tables["DistrictDistributionTypeList"]));
                }
                if ((ds.Tables["GetDistrictRateDetails"] != null)) {
                    base.Tables.Add(new GetDistrictRateDetailsDataTable(ds.Tables["GetDistrictRateDetails"]));
                }
                if ((ds.Tables["ListDistrictDefinitionID"] != null)) {
                    base.Tables.Add(new ListDistrictDefinitionIDDataTable(ds.Tables["ListDistrictDefinitionID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetDistrictDefinitionDetailsDataTable GetDistrictDefinitionDetails {
            get {
                return this.tableGetDistrictDefinitionDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetDistrictDistributionDetailsDataTable GetDistrictDistributionDetails {
            get {
                return this.tableGetDistrictDistributionDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistrictDetailsDataTable DistrictDetails {
            get {
                return this.tableDistrictDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistrictPostingListDataTable DistrictPostingList {
            get {
                return this.tableDistrictPostingList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistrictRateListDataTable DistrictRateList {
            get {
                return this.tableDistrictRateList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistrictDistributionTypeListDataTable DistrictDistributionTypeList {
            get {
                return this.tableDistrictDistributionTypeList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetDistrictRateDetailsDataTable GetDistrictRateDetails {
            get {
                return this.tableGetDistrictRateDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListDistrictDefinitionIDDataTable ListDistrictDefinitionID {
            get {
                return this.tableListDistrictDefinitionID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F1030SpecialDistrictDefinitionData cln = ((F1030SpecialDistrictDefinitionData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GetDistrictDefinitionDetails"] != null)) {
                    base.Tables.Add(new GetDistrictDefinitionDetailsDataTable(ds.Tables["GetDistrictDefinitionDetails"]));
                }
                if ((ds.Tables["GetDistrictDistributionDetails"] != null)) {
                    base.Tables.Add(new GetDistrictDistributionDetailsDataTable(ds.Tables["GetDistrictDistributionDetails"]));
                }
                if ((ds.Tables["DistrictDetails"] != null)) {
                    base.Tables.Add(new DistrictDetailsDataTable(ds.Tables["DistrictDetails"]));
                }
                if ((ds.Tables["DistrictPostingList"] != null)) {
                    base.Tables.Add(new DistrictPostingListDataTable(ds.Tables["DistrictPostingList"]));
                }
                if ((ds.Tables["DistrictRateList"] != null)) {
                    base.Tables.Add(new DistrictRateListDataTable(ds.Tables["DistrictRateList"]));
                }
                if ((ds.Tables["DistrictDistributionTypeList"] != null)) {
                    base.Tables.Add(new DistrictDistributionTypeListDataTable(ds.Tables["DistrictDistributionTypeList"]));
                }
                if ((ds.Tables["GetDistrictRateDetails"] != null)) {
                    base.Tables.Add(new GetDistrictRateDetailsDataTable(ds.Tables["GetDistrictRateDetails"]));
                }
                if ((ds.Tables["ListDistrictDefinitionID"] != null)) {
                    base.Tables.Add(new ListDistrictDefinitionIDDataTable(ds.Tables["ListDistrictDefinitionID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGetDistrictDefinitionDetails = ((GetDistrictDefinitionDetailsDataTable)(base.Tables["GetDistrictDefinitionDetails"]));
            if ((initTable == true)) {
                if ((this.tableGetDistrictDefinitionDetails != null)) {
                    this.tableGetDistrictDefinitionDetails.InitVars();
                }
            }
            this.tableGetDistrictDistributionDetails = ((GetDistrictDistributionDetailsDataTable)(base.Tables["GetDistrictDistributionDetails"]));
            if ((initTable == true)) {
                if ((this.tableGetDistrictDistributionDetails != null)) {
                    this.tableGetDistrictDistributionDetails.InitVars();
                }
            }
            this.tableDistrictDetails = ((DistrictDetailsDataTable)(base.Tables["DistrictDetails"]));
            if ((initTable == true)) {
                if ((this.tableDistrictDetails != null)) {
                    this.tableDistrictDetails.InitVars();
                }
            }
            this.tableDistrictPostingList = ((DistrictPostingListDataTable)(base.Tables["DistrictPostingList"]));
            if ((initTable == true)) {
                if ((this.tableDistrictPostingList != null)) {
                    this.tableDistrictPostingList.InitVars();
                }
            }
            this.tableDistrictRateList = ((DistrictRateListDataTable)(base.Tables["DistrictRateList"]));
            if ((initTable == true)) {
                if ((this.tableDistrictRateList != null)) {
                    this.tableDistrictRateList.InitVars();
                }
            }
            this.tableDistrictDistributionTypeList = ((DistrictDistributionTypeListDataTable)(base.Tables["DistrictDistributionTypeList"]));
            if ((initTable == true)) {
                if ((this.tableDistrictDistributionTypeList != null)) {
                    this.tableDistrictDistributionTypeList.InitVars();
                }
            }
            this.tableGetDistrictRateDetails = ((GetDistrictRateDetailsDataTable)(base.Tables["GetDistrictRateDetails"]));
            if ((initTable == true)) {
                if ((this.tableGetDistrictRateDetails != null)) {
                    this.tableGetDistrictRateDetails.InitVars();
                }
            }
            this.tableListDistrictDefinitionID = ((ListDistrictDefinitionIDDataTable)(base.Tables["ListDistrictDefinitionID"]));
            if ((initTable == true)) {
                if ((this.tableListDistrictDefinitionID != null)) {
                    this.tableListDistrictDefinitionID.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "1030SpecialDistrictDefinitionData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/1030SpecialDistrictDefinitionData.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGetDistrictDefinitionDetails = new GetDistrictDefinitionDetailsDataTable();
            base.Tables.Add(this.tableGetDistrictDefinitionDetails);
            this.tableGetDistrictDistributionDetails = new GetDistrictDistributionDetailsDataTable();
            base.Tables.Add(this.tableGetDistrictDistributionDetails);
            this.tableDistrictDetails = new DistrictDetailsDataTable();
            base.Tables.Add(this.tableDistrictDetails);
            this.tableDistrictPostingList = new DistrictPostingListDataTable();
            base.Tables.Add(this.tableDistrictPostingList);
            this.tableDistrictRateList = new DistrictRateListDataTable();
            base.Tables.Add(this.tableDistrictRateList);
            this.tableDistrictDistributionTypeList = new DistrictDistributionTypeListDataTable();
            base.Tables.Add(this.tableDistrictDistributionTypeList);
            this.tableGetDistrictRateDetails = new GetDistrictRateDetailsDataTable();
            base.Tables.Add(this.tableGetDistrictRateDetails);
            this.tableListDistrictDefinitionID = new ListDistrictDefinitionIDDataTable();
            base.Tables.Add(this.tableListDistrictDefinitionID);
            this.ExtendedProperties.Add("Generator_DataSetName", "F1030SpecialDistrictDefinitionData");
            this.ExtendedProperties.Add("Generator_UserDSName", "1030SpecialDistrictDefinitionData");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetDistrictDefinitionDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetDistrictDistributionDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistrictDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistrictPostingList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistrictRateList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistrictDistributionTypeList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetDistrictRateDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListDistrictDefinitionID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F1030SpecialDistrictDefinitionData ds = new F1030SpecialDistrictDefinitionData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GetDistrictDefinitionDetailsRowChangeEventHandler(object sender, GetDistrictDefinitionDetailsRowChangeEvent e);
        
        public delegate void GetDistrictDistributionDetailsRowChangeEventHandler(object sender, GetDistrictDistributionDetailsRowChangeEvent e);
        
        public delegate void DistrictDetailsRowChangeEventHandler(object sender, DistrictDetailsRowChangeEvent e);
        
        public delegate void DistrictPostingListRowChangeEventHandler(object sender, DistrictPostingListRowChangeEvent e);
        
        public delegate void DistrictRateListRowChangeEventHandler(object sender, DistrictRateListRowChangeEvent e);
        
        public delegate void DistrictDistributionTypeListRowChangeEventHandler(object sender, DistrictDistributionTypeListRowChangeEvent e);
        
        public delegate void GetDistrictRateDetailsRowChangeEventHandler(object sender, GetDistrictRateDetailsRowChangeEvent e);
        
        public delegate void ListDistrictDefinitionIDRowChangeEventHandler(object sender, ListDistrictDefinitionIDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetDistrictDefinitionDetailsDataTable : global::System.Data.TypedTableBase<GetDistrictDefinitionDetailsRow> {
            
            private global::System.Data.DataColumn columnSADistrictID;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnMinimumDistrictFee;
            
            private global::System.Data.DataColumn columnPostTypeID;
            
            private global::System.Data.DataColumn columnSAName;
            
            private global::System.Data.DataColumn columnPostName;
            
            private global::System.Data.DataColumn columnDistrictStatement;
            
            private global::System.Data.DataColumn columnDistrictInfoA1;
            
            private global::System.Data.DataColumn columnDistrictInfoA2;
            
            private global::System.Data.DataColumn columnDistrictInfoA3;
            
            private global::System.Data.DataColumn columnDistrictInfoA4;
            
            private global::System.Data.DataColumn columnDistrictInfoA5;
            
            private global::System.Data.DataColumn columnDistrictInfoA6;
            
            private global::System.Data.DataColumn columnDistrictInfoB1;
            
            private global::System.Data.DataColumn columnDistrictInfoB2;
            
            private global::System.Data.DataColumn columnDistrictInfoB3;
            
            private global::System.Data.DataColumn columnDistrictInfoB4;
            
            private global::System.Data.DataColumn columnDistrictInfoB5;
            
            private global::System.Data.DataColumn columnDistrictInfoB6;
            
            private global::System.Data.DataColumn columnIsHalfPaymentAllowed;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDefinitionDetailsDataTable() {
                this.TableName = "GetDistrictDefinitionDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetDistrictDefinitionDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetDistrictDefinitionDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SADistrictIDColumn {
                get {
                    return this.columnSADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinimumDistrictFeeColumn {
                get {
                    return this.columnMinimumDistrictFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostTypeIDColumn {
                get {
                    return this.columnPostTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SANameColumn {
                get {
                    return this.columnSAName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostNameColumn {
                get {
                    return this.columnPostName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictStatementColumn {
                get {
                    return this.columnDistrictStatement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoA1Column {
                get {
                    return this.columnDistrictInfoA1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoA2Column {
                get {
                    return this.columnDistrictInfoA2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoA3Column {
                get {
                    return this.columnDistrictInfoA3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoA4Column {
                get {
                    return this.columnDistrictInfoA4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoA5Column {
                get {
                    return this.columnDistrictInfoA5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoA6Column {
                get {
                    return this.columnDistrictInfoA6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoB1Column {
                get {
                    return this.columnDistrictInfoB1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoB2Column {
                get {
                    return this.columnDistrictInfoB2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoB3Column {
                get {
                    return this.columnDistrictInfoB3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoB4Column {
                get {
                    return this.columnDistrictInfoB4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoB5Column {
                get {
                    return this.columnDistrictInfoB5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictInfoB6Column {
                get {
                    return this.columnDistrictInfoB6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsHalfPaymentAllowedColumn {
                get {
                    return this.columnIsHalfPaymentAllowed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDefinitionDetailsRow this[int index] {
                get {
                    return ((GetDistrictDefinitionDetailsRow)(this.Rows[index]));
                }
            }
            
            public event GetDistrictDefinitionDetailsRowChangeEventHandler GetDistrictDefinitionDetailsRowChanging;
            
            public event GetDistrictDefinitionDetailsRowChangeEventHandler GetDistrictDefinitionDetailsRowChanged;
            
            public event GetDistrictDefinitionDetailsRowChangeEventHandler GetDistrictDefinitionDetailsRowDeleting;
            
            public event GetDistrictDefinitionDetailsRowChangeEventHandler GetDistrictDefinitionDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetDistrictDefinitionDetailsRow(GetDistrictDefinitionDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDefinitionDetailsRow AddGetDistrictDefinitionDetailsRow(
                        int SADistrictID, 
                        int District, 
                        short RollYear, 
                        decimal MinimumDistrictFee, 
                        int PostTypeID, 
                        string SAName, 
                        string PostName, 
                        int DistrictStatement, 
                        string DistrictInfoA1, 
                        string DistrictInfoA2, 
                        string DistrictInfoA3, 
                        string DistrictInfoA4, 
                        string DistrictInfoA5, 
                        string DistrictInfoA6, 
                        string DistrictInfoB1, 
                        string DistrictInfoB2, 
                        string DistrictInfoB3, 
                        string DistrictInfoB4, 
                        string DistrictInfoB5, 
                        string DistrictInfoB6, 
                        bool IsHalfPaymentAllowed) {
                GetDistrictDefinitionDetailsRow rowGetDistrictDefinitionDetailsRow = ((GetDistrictDefinitionDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SADistrictID,
                        District,
                        RollYear,
                        MinimumDistrictFee,
                        PostTypeID,
                        SAName,
                        PostName,
                        DistrictStatement,
                        DistrictInfoA1,
                        DistrictInfoA2,
                        DistrictInfoA3,
                        DistrictInfoA4,
                        DistrictInfoA5,
                        DistrictInfoA6,
                        DistrictInfoB1,
                        DistrictInfoB2,
                        DistrictInfoB3,
                        DistrictInfoB4,
                        DistrictInfoB5,
                        DistrictInfoB6,
                        IsHalfPaymentAllowed};
                rowGetDistrictDefinitionDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetDistrictDefinitionDetailsRow);
                return rowGetDistrictDefinitionDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetDistrictDefinitionDetailsDataTable cln = ((GetDistrictDefinitionDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetDistrictDefinitionDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSADistrictID = base.Columns["SADistrictID"];
                this.columnDistrict = base.Columns["District"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnMinimumDistrictFee = base.Columns["MinimumDistrictFee"];
                this.columnPostTypeID = base.Columns["PostTypeID"];
                this.columnSAName = base.Columns["SAName"];
                this.columnPostName = base.Columns["PostName"];
                this.columnDistrictStatement = base.Columns["DistrictStatement"];
                this.columnDistrictInfoA1 = base.Columns["DistrictInfoA1"];
                this.columnDistrictInfoA2 = base.Columns["DistrictInfoA2"];
                this.columnDistrictInfoA3 = base.Columns["DistrictInfoA3"];
                this.columnDistrictInfoA4 = base.Columns["DistrictInfoA4"];
                this.columnDistrictInfoA5 = base.Columns["DistrictInfoA5"];
                this.columnDistrictInfoA6 = base.Columns["DistrictInfoA6"];
                this.columnDistrictInfoB1 = base.Columns["DistrictInfoB1"];
                this.columnDistrictInfoB2 = base.Columns["DistrictInfoB2"];
                this.columnDistrictInfoB3 = base.Columns["DistrictInfoB3"];
                this.columnDistrictInfoB4 = base.Columns["DistrictInfoB4"];
                this.columnDistrictInfoB5 = base.Columns["DistrictInfoB5"];
                this.columnDistrictInfoB6 = base.Columns["DistrictInfoB6"];
                this.columnIsHalfPaymentAllowed = base.Columns["IsHalfPaymentAllowed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSADistrictID = new global::System.Data.DataColumn("SADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSADistrictID);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnMinimumDistrictFee = new global::System.Data.DataColumn("MinimumDistrictFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimumDistrictFee);
                this.columnPostTypeID = new global::System.Data.DataColumn("PostTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostTypeID);
                this.columnSAName = new global::System.Data.DataColumn("SAName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAName);
                this.columnPostName = new global::System.Data.DataColumn("PostName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostName);
                this.columnDistrictStatement = new global::System.Data.DataColumn("DistrictStatement", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictStatement);
                this.columnDistrictInfoA1 = new global::System.Data.DataColumn("DistrictInfoA1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoA1);
                this.columnDistrictInfoA2 = new global::System.Data.DataColumn("DistrictInfoA2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoA2);
                this.columnDistrictInfoA3 = new global::System.Data.DataColumn("DistrictInfoA3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoA3);
                this.columnDistrictInfoA4 = new global::System.Data.DataColumn("DistrictInfoA4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoA4);
                this.columnDistrictInfoA5 = new global::System.Data.DataColumn("DistrictInfoA5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoA5);
                this.columnDistrictInfoA6 = new global::System.Data.DataColumn("DistrictInfoA6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoA6);
                this.columnDistrictInfoB1 = new global::System.Data.DataColumn("DistrictInfoB1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoB1);
                this.columnDistrictInfoB2 = new global::System.Data.DataColumn("DistrictInfoB2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoB2);
                this.columnDistrictInfoB3 = new global::System.Data.DataColumn("DistrictInfoB3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoB3);
                this.columnDistrictInfoB4 = new global::System.Data.DataColumn("DistrictInfoB4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoB4);
                this.columnDistrictInfoB5 = new global::System.Data.DataColumn("DistrictInfoB5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoB5);
                this.columnDistrictInfoB6 = new global::System.Data.DataColumn("DistrictInfoB6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictInfoB6);
                this.columnIsHalfPaymentAllowed = new global::System.Data.DataColumn("IsHalfPaymentAllowed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHalfPaymentAllowed);
                this.columnSAName.MaxLength = 50;
                this.columnPostName.MaxLength = 50;
                this.columnDistrictInfoA1.MaxLength = 50;
                this.columnDistrictInfoA2.MaxLength = 50;
                this.columnDistrictInfoA3.MaxLength = 50;
                this.columnDistrictInfoA4.MaxLength = 50;
                this.columnDistrictInfoA5.MaxLength = 50;
                this.columnDistrictInfoA6.MaxLength = 50;
                this.columnDistrictInfoB1.MaxLength = 50;
                this.columnDistrictInfoB2.MaxLength = 50;
                this.columnDistrictInfoB3.MaxLength = 50;
                this.columnDistrictInfoB4.MaxLength = 50;
                this.columnDistrictInfoB5.MaxLength = 50;
                this.columnDistrictInfoB6.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDefinitionDetailsRow NewGetDistrictDefinitionDetailsRow() {
                return ((GetDistrictDefinitionDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetDistrictDefinitionDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetDistrictDefinitionDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetDistrictDefinitionDetailsRowChanged != null)) {
                    this.GetDistrictDefinitionDetailsRowChanged(this, new GetDistrictDefinitionDetailsRowChangeEvent(((GetDistrictDefinitionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetDistrictDefinitionDetailsRowChanging != null)) {
                    this.GetDistrictDefinitionDetailsRowChanging(this, new GetDistrictDefinitionDetailsRowChangeEvent(((GetDistrictDefinitionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetDistrictDefinitionDetailsRowDeleted != null)) {
                    this.GetDistrictDefinitionDetailsRowDeleted(this, new GetDistrictDefinitionDetailsRowChangeEvent(((GetDistrictDefinitionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetDistrictDefinitionDetailsRowDeleting != null)) {
                    this.GetDistrictDefinitionDetailsRowDeleting(this, new GetDistrictDefinitionDetailsRowChangeEvent(((GetDistrictDefinitionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetDistrictDefinitionDetailsRow(GetDistrictDefinitionDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F1030SpecialDistrictDefinitionData ds = new F1030SpecialDistrictDefinitionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetDistrictDefinitionDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetDistrictDistributionDetailsDataTable : global::System.Data.TypedTableBase<GetDistrictDistributionDetailsRow> {
            
            private global::System.Data.DataColumn columnSARateItemID;
            
            private global::System.Data.DataColumn columnSADistrictID;
            
            private global::System.Data.DataColumn columnItemTypeID;
            
            private global::System.Data.DataColumn columnPercentage;
            
            private global::System.Data.DataColumn columnAccount;
            
            private global::System.Data.DataColumn columnAccountStatus;
            
            private global::System.Data.DataColumn columnDistributionType;
            
            private global::System.Data.DataColumn columnAccountID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDistributionDetailsDataTable() {
                this.TableName = "GetDistrictDistributionDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetDistrictDistributionDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetDistrictDistributionDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SARateItemIDColumn {
                get {
                    return this.columnSARateItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SADistrictIDColumn {
                get {
                    return this.columnSADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemTypeIDColumn {
                get {
                    return this.columnItemTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageColumn {
                get {
                    return this.columnPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountColumn {
                get {
                    return this.columnAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountStatusColumn {
                get {
                    return this.columnAccountStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributionTypeColumn {
                get {
                    return this.columnDistributionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDistributionDetailsRow this[int index] {
                get {
                    return ((GetDistrictDistributionDetailsRow)(this.Rows[index]));
                }
            }
            
            public event GetDistrictDistributionDetailsRowChangeEventHandler GetDistrictDistributionDetailsRowChanging;
            
            public event GetDistrictDistributionDetailsRowChangeEventHandler GetDistrictDistributionDetailsRowChanged;
            
            public event GetDistrictDistributionDetailsRowChangeEventHandler GetDistrictDistributionDetailsRowDeleting;
            
            public event GetDistrictDistributionDetailsRowChangeEventHandler GetDistrictDistributionDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetDistrictDistributionDetailsRow(GetDistrictDistributionDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDistributionDetailsRow AddGetDistrictDistributionDetailsRow(int SARateItemID, int SADistrictID, int ItemTypeID, decimal Percentage, string Account, int AccountStatus, string DistributionType, int AccountID) {
                GetDistrictDistributionDetailsRow rowGetDistrictDistributionDetailsRow = ((GetDistrictDistributionDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SARateItemID,
                        SADistrictID,
                        ItemTypeID,
                        Percentage,
                        Account,
                        AccountStatus,
                        DistributionType,
                        AccountID};
                rowGetDistrictDistributionDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetDistrictDistributionDetailsRow);
                return rowGetDistrictDistributionDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetDistrictDistributionDetailsDataTable cln = ((GetDistrictDistributionDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetDistrictDistributionDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSARateItemID = base.Columns["SARateItemID"];
                this.columnSADistrictID = base.Columns["SADistrictID"];
                this.columnItemTypeID = base.Columns["ItemTypeID"];
                this.columnPercentage = base.Columns["Percentage"];
                this.columnAccount = base.Columns["Account"];
                this.columnAccountStatus = base.Columns["AccountStatus"];
                this.columnDistributionType = base.Columns["DistributionType"];
                this.columnAccountID = base.Columns["AccountID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSARateItemID = new global::System.Data.DataColumn("SARateItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSARateItemID);
                this.columnSADistrictID = new global::System.Data.DataColumn("SADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSADistrictID);
                this.columnItemTypeID = new global::System.Data.DataColumn("ItemTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemTypeID);
                this.columnPercentage = new global::System.Data.DataColumn("Percentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentage);
                this.columnAccount = new global::System.Data.DataColumn("Account", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount);
                this.columnAccountStatus = new global::System.Data.DataColumn("AccountStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountStatus);
                this.columnDistributionType = new global::System.Data.DataColumn("DistributionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributionType);
                this.columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountID);
                this.columnAccount.DefaultValue = ((string)(""));
                this.columnAccount.MaxLength = 262;
                this.columnDistributionType.DefaultValue = ((string)(""));
                this.columnDistributionType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDistributionDetailsRow NewGetDistrictDistributionDetailsRow() {
                return ((GetDistrictDistributionDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetDistrictDistributionDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetDistrictDistributionDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetDistrictDistributionDetailsRowChanged != null)) {
                    this.GetDistrictDistributionDetailsRowChanged(this, new GetDistrictDistributionDetailsRowChangeEvent(((GetDistrictDistributionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetDistrictDistributionDetailsRowChanging != null)) {
                    this.GetDistrictDistributionDetailsRowChanging(this, new GetDistrictDistributionDetailsRowChangeEvent(((GetDistrictDistributionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetDistrictDistributionDetailsRowDeleted != null)) {
                    this.GetDistrictDistributionDetailsRowDeleted(this, new GetDistrictDistributionDetailsRowChangeEvent(((GetDistrictDistributionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetDistrictDistributionDetailsRowDeleting != null)) {
                    this.GetDistrictDistributionDetailsRowDeleting(this, new GetDistrictDistributionDetailsRowChangeEvent(((GetDistrictDistributionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetDistrictDistributionDetailsRow(GetDistrictDistributionDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F1030SpecialDistrictDefinitionData ds = new F1030SpecialDistrictDefinitionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetDistrictDistributionDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistrictDetailsDataTable : global::System.Data.TypedTableBase<DistrictDetailsRow> {
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnTotalDistrict;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDetailsDataTable() {
                this.TableName = "DistrictDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistrictDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistrictDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDistrictColumn {
                get {
                    return this.columnTotalDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDetailsRow this[int index] {
                get {
                    return ((DistrictDetailsRow)(this.Rows[index]));
                }
            }
            
            public event DistrictDetailsRowChangeEventHandler DistrictDetailsRowChanging;
            
            public event DistrictDetailsRowChangeEventHandler DistrictDetailsRowChanged;
            
            public event DistrictDetailsRowChangeEventHandler DistrictDetailsRowDeleting;
            
            public event DistrictDetailsRowChangeEventHandler DistrictDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistrictDetailsRow(DistrictDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDetailsRow AddDistrictDetailsRow(string RollYear, int TotalDistrict) {
                DistrictDetailsRow rowDistrictDetailsRow = ((DistrictDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RollYear,
                        TotalDistrict};
                rowDistrictDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistrictDetailsRow);
                return rowDistrictDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistrictDetailsDataTable cln = ((DistrictDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistrictDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRollYear = base.Columns["RollYear"];
                this.columnTotalDistrict = base.Columns["TotalDistrict"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnTotalDistrict = new global::System.Data.DataColumn("TotalDistrict", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDistrict);
                this.columnRollYear.MaxLength = 4;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDetailsRow NewDistrictDetailsRow() {
                return ((DistrictDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistrictDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistrictDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistrictDetailsRowChanged != null)) {
                    this.DistrictDetailsRowChanged(this, new DistrictDetailsRowChangeEvent(((DistrictDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistrictDetailsRowChanging != null)) {
                    this.DistrictDetailsRowChanging(this, new DistrictDetailsRowChangeEvent(((DistrictDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistrictDetailsRowDeleted != null)) {
                    this.DistrictDetailsRowDeleted(this, new DistrictDetailsRowChangeEvent(((DistrictDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistrictDetailsRowDeleting != null)) {
                    this.DistrictDetailsRowDeleting(this, new DistrictDetailsRowChangeEvent(((DistrictDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistrictDetailsRow(DistrictDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F1030SpecialDistrictDefinitionData ds = new F1030SpecialDistrictDefinitionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistrictDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistrictPostingListDataTable : global::System.Data.TypedTableBase<DistrictPostingListRow> {
            
            private global::System.Data.DataColumn columnPostTypeID;
            
            private global::System.Data.DataColumn columnPostName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictPostingListDataTable() {
                this.TableName = "DistrictPostingList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistrictPostingListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistrictPostingListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostTypeIDColumn {
                get {
                    return this.columnPostTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostNameColumn {
                get {
                    return this.columnPostName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictPostingListRow this[int index] {
                get {
                    return ((DistrictPostingListRow)(this.Rows[index]));
                }
            }
            
            public event DistrictPostingListRowChangeEventHandler DistrictPostingListRowChanging;
            
            public event DistrictPostingListRowChangeEventHandler DistrictPostingListRowChanged;
            
            public event DistrictPostingListRowChangeEventHandler DistrictPostingListRowDeleting;
            
            public event DistrictPostingListRowChangeEventHandler DistrictPostingListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistrictPostingListRow(DistrictPostingListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictPostingListRow AddDistrictPostingListRow(int PostTypeID, string PostName) {
                DistrictPostingListRow rowDistrictPostingListRow = ((DistrictPostingListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PostTypeID,
                        PostName};
                rowDistrictPostingListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistrictPostingListRow);
                return rowDistrictPostingListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistrictPostingListDataTable cln = ((DistrictPostingListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistrictPostingListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPostTypeID = base.Columns["PostTypeID"];
                this.columnPostName = base.Columns["PostName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPostTypeID = new global::System.Data.DataColumn("PostTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostTypeID);
                this.columnPostName = new global::System.Data.DataColumn("PostName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostName);
                this.columnPostName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictPostingListRow NewDistrictPostingListRow() {
                return ((DistrictPostingListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistrictPostingListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistrictPostingListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistrictPostingListRowChanged != null)) {
                    this.DistrictPostingListRowChanged(this, new DistrictPostingListRowChangeEvent(((DistrictPostingListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistrictPostingListRowChanging != null)) {
                    this.DistrictPostingListRowChanging(this, new DistrictPostingListRowChangeEvent(((DistrictPostingListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistrictPostingListRowDeleted != null)) {
                    this.DistrictPostingListRowDeleted(this, new DistrictPostingListRowChangeEvent(((DistrictPostingListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistrictPostingListRowDeleting != null)) {
                    this.DistrictPostingListRowDeleting(this, new DistrictPostingListRowChangeEvent(((DistrictPostingListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistrictPostingListRow(DistrictPostingListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F1030SpecialDistrictDefinitionData ds = new F1030SpecialDistrictDefinitionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistrictPostingListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistrictRateListDataTable : global::System.Data.TypedTableBase<DistrictRateListRow> {
            
            private global::System.Data.DataColumn columnItemTypeID;
            
            private global::System.Data.DataColumn columnItemType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictRateListDataTable() {
                this.TableName = "DistrictRateList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistrictRateListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistrictRateListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemTypeIDColumn {
                get {
                    return this.columnItemTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemTypeColumn {
                get {
                    return this.columnItemType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictRateListRow this[int index] {
                get {
                    return ((DistrictRateListRow)(this.Rows[index]));
                }
            }
            
            public event DistrictRateListRowChangeEventHandler DistrictRateListRowChanging;
            
            public event DistrictRateListRowChangeEventHandler DistrictRateListRowChanged;
            
            public event DistrictRateListRowChangeEventHandler DistrictRateListRowDeleting;
            
            public event DistrictRateListRowChangeEventHandler DistrictRateListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistrictRateListRow(DistrictRateListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictRateListRow AddDistrictRateListRow(int ItemTypeID, string ItemType) {
                DistrictRateListRow rowDistrictRateListRow = ((DistrictRateListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemTypeID,
                        ItemType};
                rowDistrictRateListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistrictRateListRow);
                return rowDistrictRateListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistrictRateListDataTable cln = ((DistrictRateListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistrictRateListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemTypeID = base.Columns["ItemTypeID"];
                this.columnItemType = base.Columns["ItemType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemTypeID = new global::System.Data.DataColumn("ItemTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemTypeID);
                this.columnItemType = new global::System.Data.DataColumn("ItemType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemType);
                this.columnItemType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictRateListRow NewDistrictRateListRow() {
                return ((DistrictRateListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistrictRateListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistrictRateListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistrictRateListRowChanged != null)) {
                    this.DistrictRateListRowChanged(this, new DistrictRateListRowChangeEvent(((DistrictRateListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistrictRateListRowChanging != null)) {
                    this.DistrictRateListRowChanging(this, new DistrictRateListRowChangeEvent(((DistrictRateListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistrictRateListRowDeleted != null)) {
                    this.DistrictRateListRowDeleted(this, new DistrictRateListRowChangeEvent(((DistrictRateListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistrictRateListRowDeleting != null)) {
                    this.DistrictRateListRowDeleting(this, new DistrictRateListRowChangeEvent(((DistrictRateListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistrictRateListRow(DistrictRateListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F1030SpecialDistrictDefinitionData ds = new F1030SpecialDistrictDefinitionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistrictRateListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistrictDistributionTypeListDataTable : global::System.Data.TypedTableBase<DistrictDistributionTypeListRow> {
            
            private global::System.Data.DataColumn columnItemTypeID;
            
            private global::System.Data.DataColumn columnDistributionType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDistributionTypeListDataTable() {
                this.TableName = "DistrictDistributionTypeList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistrictDistributionTypeListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistrictDistributionTypeListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemTypeIDColumn {
                get {
                    return this.columnItemTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributionTypeColumn {
                get {
                    return this.columnDistributionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDistributionTypeListRow this[int index] {
                get {
                    return ((DistrictDistributionTypeListRow)(this.Rows[index]));
                }
            }
            
            public event DistrictDistributionTypeListRowChangeEventHandler DistrictDistributionTypeListRowChanging;
            
            public event DistrictDistributionTypeListRowChangeEventHandler DistrictDistributionTypeListRowChanged;
            
            public event DistrictDistributionTypeListRowChangeEventHandler DistrictDistributionTypeListRowDeleting;
            
            public event DistrictDistributionTypeListRowChangeEventHandler DistrictDistributionTypeListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistrictDistributionTypeListRow(DistrictDistributionTypeListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDistributionTypeListRow AddDistrictDistributionTypeListRow(int ItemTypeID, string DistributionType) {
                DistrictDistributionTypeListRow rowDistrictDistributionTypeListRow = ((DistrictDistributionTypeListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemTypeID,
                        DistributionType};
                rowDistrictDistributionTypeListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistrictDistributionTypeListRow);
                return rowDistrictDistributionTypeListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistrictDistributionTypeListDataTable cln = ((DistrictDistributionTypeListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistrictDistributionTypeListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemTypeID = base.Columns["ItemTypeID"];
                this.columnDistributionType = base.Columns["DistributionType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemTypeID = new global::System.Data.DataColumn("ItemTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemTypeID);
                this.columnDistributionType = new global::System.Data.DataColumn("DistributionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributionType);
                this.columnDistributionType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDistributionTypeListRow NewDistrictDistributionTypeListRow() {
                return ((DistrictDistributionTypeListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistrictDistributionTypeListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistrictDistributionTypeListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistrictDistributionTypeListRowChanged != null)) {
                    this.DistrictDistributionTypeListRowChanged(this, new DistrictDistributionTypeListRowChangeEvent(((DistrictDistributionTypeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistrictDistributionTypeListRowChanging != null)) {
                    this.DistrictDistributionTypeListRowChanging(this, new DistrictDistributionTypeListRowChangeEvent(((DistrictDistributionTypeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistrictDistributionTypeListRowDeleted != null)) {
                    this.DistrictDistributionTypeListRowDeleted(this, new DistrictDistributionTypeListRowChangeEvent(((DistrictDistributionTypeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistrictDistributionTypeListRowDeleting != null)) {
                    this.DistrictDistributionTypeListRowDeleting(this, new DistrictDistributionTypeListRowChangeEvent(((DistrictDistributionTypeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistrictDistributionTypeListRow(DistrictDistributionTypeListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F1030SpecialDistrictDefinitionData ds = new F1030SpecialDistrictDefinitionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistrictDistributionTypeListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetDistrictRateDetailsDataTable : global::System.Data.TypedTableBase<GetDistrictRateDetailsRow> {
            
            private global::System.Data.DataColumn columnSADistrictID;
            
            private global::System.Data.DataColumn columnSARateItemID;
            
            private global::System.Data.DataColumn columnItemTypeID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnHasMinimum;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnRateType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictRateDetailsDataTable() {
                this.TableName = "GetDistrictRateDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetDistrictRateDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetDistrictRateDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SADistrictIDColumn {
                get {
                    return this.columnSADistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SARateItemIDColumn {
                get {
                    return this.columnSARateItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemTypeIDColumn {
                get {
                    return this.columnItemTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HasMinimumColumn {
                get {
                    return this.columnHasMinimum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateTypeColumn {
                get {
                    return this.columnRateType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictRateDetailsRow this[int index] {
                get {
                    return ((GetDistrictRateDetailsRow)(this.Rows[index]));
                }
            }
            
            public event GetDistrictRateDetailsRowChangeEventHandler GetDistrictRateDetailsRowChanging;
            
            public event GetDistrictRateDetailsRowChangeEventHandler GetDistrictRateDetailsRowChanged;
            
            public event GetDistrictRateDetailsRowChangeEventHandler GetDistrictRateDetailsRowDeleting;
            
            public event GetDistrictRateDetailsRowChangeEventHandler GetDistrictRateDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetDistrictRateDetailsRow(GetDistrictRateDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictRateDetailsRow AddGetDistrictRateDetailsRow(int SADistrictID, int SARateItemID, int ItemTypeID, string Description, string HasMinimum, string Amount, string RateType) {
                GetDistrictRateDetailsRow rowGetDistrictRateDetailsRow = ((GetDistrictRateDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SADistrictID,
                        SARateItemID,
                        ItemTypeID,
                        Description,
                        HasMinimum,
                        Amount,
                        RateType};
                rowGetDistrictRateDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetDistrictRateDetailsRow);
                return rowGetDistrictRateDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetDistrictRateDetailsDataTable cln = ((GetDistrictRateDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetDistrictRateDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSADistrictID = base.Columns["SADistrictID"];
                this.columnSARateItemID = base.Columns["SARateItemID"];
                this.columnItemTypeID = base.Columns["ItemTypeID"];
                this.columnDescription = base.Columns["Description"];
                this.columnHasMinimum = base.Columns["HasMinimum"];
                this.columnAmount = base.Columns["Amount"];
                this.columnRateType = base.Columns["RateType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSADistrictID = new global::System.Data.DataColumn("SADistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSADistrictID);
                this.columnSARateItemID = new global::System.Data.DataColumn("SARateItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSARateItemID);
                this.columnItemTypeID = new global::System.Data.DataColumn("ItemTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemTypeID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnHasMinimum = new global::System.Data.DataColumn("HasMinimum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasMinimum);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnRateType = new global::System.Data.DataColumn("RateType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateType);
                this.columnDescription.DefaultValue = ((string)(""));
                this.columnDescription.MaxLength = 50;
                this.columnHasMinimum.MaxLength = 8;
                this.columnRateType.DefaultValue = ((string)(""));
                this.columnRateType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictRateDetailsRow NewGetDistrictRateDetailsRow() {
                return ((GetDistrictRateDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetDistrictRateDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetDistrictRateDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetDistrictRateDetailsRowChanged != null)) {
                    this.GetDistrictRateDetailsRowChanged(this, new GetDistrictRateDetailsRowChangeEvent(((GetDistrictRateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetDistrictRateDetailsRowChanging != null)) {
                    this.GetDistrictRateDetailsRowChanging(this, new GetDistrictRateDetailsRowChangeEvent(((GetDistrictRateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetDistrictRateDetailsRowDeleted != null)) {
                    this.GetDistrictRateDetailsRowDeleted(this, new GetDistrictRateDetailsRowChangeEvent(((GetDistrictRateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetDistrictRateDetailsRowDeleting != null)) {
                    this.GetDistrictRateDetailsRowDeleting(this, new GetDistrictRateDetailsRowChangeEvent(((GetDistrictRateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetDistrictRateDetailsRow(GetDistrictRateDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F1030SpecialDistrictDefinitionData ds = new F1030SpecialDistrictDefinitionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetDistrictRateDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListDistrictDefinitionIDDataTable : global::System.Data.TypedTableBase<ListDistrictDefinitionIDRow> {
            
            private global::System.Data.DataColumn columnKeyID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDistrictDefinitionIDDataTable() {
                this.TableName = "ListDistrictDefinitionID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListDistrictDefinitionIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListDistrictDefinitionIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeyIDColumn {
                get {
                    return this.columnKeyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDistrictDefinitionIDRow this[int index] {
                get {
                    return ((ListDistrictDefinitionIDRow)(this.Rows[index]));
                }
            }
            
            public event ListDistrictDefinitionIDRowChangeEventHandler ListDistrictDefinitionIDRowChanging;
            
            public event ListDistrictDefinitionIDRowChangeEventHandler ListDistrictDefinitionIDRowChanged;
            
            public event ListDistrictDefinitionIDRowChangeEventHandler ListDistrictDefinitionIDRowDeleting;
            
            public event ListDistrictDefinitionIDRowChangeEventHandler ListDistrictDefinitionIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListDistrictDefinitionIDRow(ListDistrictDefinitionIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDistrictDefinitionIDRow AddListDistrictDefinitionIDRow() {
                ListDistrictDefinitionIDRow rowListDistrictDefinitionIDRow = ((ListDistrictDefinitionIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                rowListDistrictDefinitionIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListDistrictDefinitionIDRow);
                return rowListDistrictDefinitionIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListDistrictDefinitionIDDataTable cln = ((ListDistrictDefinitionIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListDistrictDefinitionIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKeyID = base.Columns["KeyID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKeyID = new global::System.Data.DataColumn("KeyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyID);
                this.columnKeyID.AutoIncrement = true;
                this.columnKeyID.AllowDBNull = false;
                this.columnKeyID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDistrictDefinitionIDRow NewListDistrictDefinitionIDRow() {
                return ((ListDistrictDefinitionIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListDistrictDefinitionIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListDistrictDefinitionIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListDistrictDefinitionIDRowChanged != null)) {
                    this.ListDistrictDefinitionIDRowChanged(this, new ListDistrictDefinitionIDRowChangeEvent(((ListDistrictDefinitionIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListDistrictDefinitionIDRowChanging != null)) {
                    this.ListDistrictDefinitionIDRowChanging(this, new ListDistrictDefinitionIDRowChangeEvent(((ListDistrictDefinitionIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListDistrictDefinitionIDRowDeleted != null)) {
                    this.ListDistrictDefinitionIDRowDeleted(this, new ListDistrictDefinitionIDRowChangeEvent(((ListDistrictDefinitionIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListDistrictDefinitionIDRowDeleting != null)) {
                    this.ListDistrictDefinitionIDRowDeleting(this, new ListDistrictDefinitionIDRowChangeEvent(((ListDistrictDefinitionIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListDistrictDefinitionIDRow(ListDistrictDefinitionIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F1030SpecialDistrictDefinitionData ds = new F1030SpecialDistrictDefinitionData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListDistrictDefinitionIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetDistrictDefinitionDetailsRow : global::System.Data.DataRow {
            
            private GetDistrictDefinitionDetailsDataTable tableGetDistrictDefinitionDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetDistrictDefinitionDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetDistrictDefinitionDetails = ((GetDistrictDefinitionDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SADistrictID {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictDefinitionDetails.SADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SADistrictID\' in table \'GetDistrictDefinitionDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.SADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int District {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictDefinitionDetails.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'GetDistrictDefinitionDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tableGetDistrictDefinitionDetails.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'GetDistrictDefinitionDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MinimumDistrictFee {
                get {
                    try {
                        return ((decimal)(this[this.tableGetDistrictDefinitionDetails.MinimumDistrictFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinimumDistrictFee\' in table \'GetDistrictDefinitionDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.MinimumDistrictFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PostTypeID {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictDefinitionDetails.PostTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostTypeID\' in table \'GetDistrictDefinitionDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.PostTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SAName {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.SANameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAName\' in table \'GetDistrictDefinitionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.SANameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostName {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.PostNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostName\' in table \'GetDistrictDefinitionDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.PostNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DistrictStatement {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictDefinitionDetails.DistrictStatementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictStatement\' in table \'GetDistrictDefinitionDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictStatementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoA1 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoA1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoA1\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoA1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoA2 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoA2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoA2\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoA2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoA3 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoA3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoA3\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoA3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoA4 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoA4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoA4\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoA4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoA5 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoA5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoA5\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoA5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoA6 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoA6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoA6\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoA6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoB1 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoB1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoB1\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoB1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoB2 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoB2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoB2\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoB2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoB3 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoB3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoB3\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoB3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoB4 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoB4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoB4\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoB4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoB5 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoB5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoB5\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoB5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictInfoB6 {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDefinitionDetails.DistrictInfoB6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictInfoB6\' in table \'GetDistrictDefinitionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.DistrictInfoB6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHalfPaymentAllowed {
                get {
                    try {
                        return ((bool)(this[this.tableGetDistrictDefinitionDetails.IsHalfPaymentAllowedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHalfPaymentAllowed\' in table \'GetDistrictDefinitionDetail" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDefinitionDetails.IsHalfPaymentAllowedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSADistrictIDNull() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.SADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSADistrictIDNull() {
                this[this.tableGetDistrictDefinitionDetails.SADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableGetDistrictDefinitionDetails.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableGetDistrictDefinitionDetails.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimumDistrictFeeNull() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.MinimumDistrictFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimumDistrictFeeNull() {
                this[this.tableGetDistrictDefinitionDetails.MinimumDistrictFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostTypeIDNull() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.PostTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostTypeIDNull() {
                this[this.tableGetDistrictDefinitionDetails.PostTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSANameNull() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.SANameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSANameNull() {
                this[this.tableGetDistrictDefinitionDetails.SANameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostNameNull() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.PostNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostNameNull() {
                this[this.tableGetDistrictDefinitionDetails.PostNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictStatementNull() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictStatementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictStatementNull() {
                this[this.tableGetDistrictDefinitionDetails.DistrictStatementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoA1Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoA1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoA1Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoA1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoA2Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoA2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoA2Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoA2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoA3Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoA3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoA3Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoA3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoA4Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoA4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoA4Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoA4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoA5Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoA5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoA5Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoA5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoA6Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoA6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoA6Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoA6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoB1Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoB1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoB1Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoB1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoB2Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoB2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoB2Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoB2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoB3Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoB3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoB3Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoB3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoB4Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoB4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoB4Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoB4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoB5Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoB5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoB5Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoB5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictInfoB6Null() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.DistrictInfoB6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictInfoB6Null() {
                this[this.tableGetDistrictDefinitionDetails.DistrictInfoB6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsHalfPaymentAllowedNull() {
                return this.IsNull(this.tableGetDistrictDefinitionDetails.IsHalfPaymentAllowedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsHalfPaymentAllowedNull() {
                this[this.tableGetDistrictDefinitionDetails.IsHalfPaymentAllowedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetDistrictDistributionDetailsRow : global::System.Data.DataRow {
            
            private GetDistrictDistributionDetailsDataTable tableGetDistrictDistributionDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetDistrictDistributionDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetDistrictDistributionDetails = ((GetDistrictDistributionDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SARateItemID {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictDistributionDetails.SARateItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SARateItemID\' in table \'GetDistrictDistributionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDistributionDetails.SARateItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SADistrictID {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictDistributionDetails.SADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SADistrictID\' in table \'GetDistrictDistributionDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDistributionDetails.SADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemTypeID {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictDistributionDetails.ItemTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemTypeID\' in table \'GetDistrictDistributionDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDistributionDetails.ItemTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Percentage {
                get {
                    try {
                        return ((decimal)(this[this.tableGetDistrictDistributionDetails.PercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Percentage\' in table \'GetDistrictDistributionDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDistributionDetails.PercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Account {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDistributionDetails.AccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Account\' in table \'GetDistrictDistributionDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDistributionDetails.AccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AccountStatus {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictDistributionDetails.AccountStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountStatus\' in table \'GetDistrictDistributionDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDistributionDetails.AccountStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributionType {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictDistributionDetails.DistributionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributionType\' in table \'GetDistrictDistributionDetails\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDistributionDetails.DistributionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AccountID {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictDistributionDetails.AccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountID\' in table \'GetDistrictDistributionDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictDistributionDetails.AccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSARateItemIDNull() {
                return this.IsNull(this.tableGetDistrictDistributionDetails.SARateItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSARateItemIDNull() {
                this[this.tableGetDistrictDistributionDetails.SARateItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSADistrictIDNull() {
                return this.IsNull(this.tableGetDistrictDistributionDetails.SADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSADistrictIDNull() {
                this[this.tableGetDistrictDistributionDetails.SADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemTypeIDNull() {
                return this.IsNull(this.tableGetDistrictDistributionDetails.ItemTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemTypeIDNull() {
                this[this.tableGetDistrictDistributionDetails.ItemTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPercentageNull() {
                return this.IsNull(this.tableGetDistrictDistributionDetails.PercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPercentageNull() {
                this[this.tableGetDistrictDistributionDetails.PercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNull() {
                return this.IsNull(this.tableGetDistrictDistributionDetails.AccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNull() {
                this[this.tableGetDistrictDistributionDetails.AccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountStatusNull() {
                return this.IsNull(this.tableGetDistrictDistributionDetails.AccountStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountStatusNull() {
                this[this.tableGetDistrictDistributionDetails.AccountStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributionTypeNull() {
                return this.IsNull(this.tableGetDistrictDistributionDetails.DistributionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributionTypeNull() {
                this[this.tableGetDistrictDistributionDetails.DistributionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountIDNull() {
                return this.IsNull(this.tableGetDistrictDistributionDetails.AccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountIDNull() {
                this[this.tableGetDistrictDistributionDetails.AccountIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistrictDetailsRow : global::System.Data.DataRow {
            
            private DistrictDetailsDataTable tableDistrictDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistrictDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistrictDetails = ((DistrictDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RollYear {
                get {
                    try {
                        return ((string)(this[this.tableDistrictDetails.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'DistrictDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistrictDetails.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalDistrict {
                get {
                    try {
                        return ((int)(this[this.tableDistrictDetails.TotalDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDistrict\' in table \'DistrictDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistrictDetails.TotalDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableDistrictDetails.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableDistrictDetails.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDistrictNull() {
                return this.IsNull(this.tableDistrictDetails.TotalDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDistrictNull() {
                this[this.tableDistrictDetails.TotalDistrictColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistrictPostingListRow : global::System.Data.DataRow {
            
            private DistrictPostingListDataTable tableDistrictPostingList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistrictPostingListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistrictPostingList = ((DistrictPostingListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PostTypeID {
                get {
                    try {
                        return ((int)(this[this.tableDistrictPostingList.PostTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostTypeID\' in table \'DistrictPostingList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistrictPostingList.PostTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostName {
                get {
                    try {
                        return ((string)(this[this.tableDistrictPostingList.PostNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostName\' in table \'DistrictPostingList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistrictPostingList.PostNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostTypeIDNull() {
                return this.IsNull(this.tableDistrictPostingList.PostTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostTypeIDNull() {
                this[this.tableDistrictPostingList.PostTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostNameNull() {
                return this.IsNull(this.tableDistrictPostingList.PostNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostNameNull() {
                this[this.tableDistrictPostingList.PostNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistrictRateListRow : global::System.Data.DataRow {
            
            private DistrictRateListDataTable tableDistrictRateList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistrictRateListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistrictRateList = ((DistrictRateListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemTypeID {
                get {
                    try {
                        return ((int)(this[this.tableDistrictRateList.ItemTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemTypeID\' in table \'DistrictRateList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistrictRateList.ItemTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemType {
                get {
                    try {
                        return ((string)(this[this.tableDistrictRateList.ItemTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemType\' in table \'DistrictRateList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistrictRateList.ItemTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemTypeIDNull() {
                return this.IsNull(this.tableDistrictRateList.ItemTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemTypeIDNull() {
                this[this.tableDistrictRateList.ItemTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemTypeNull() {
                return this.IsNull(this.tableDistrictRateList.ItemTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemTypeNull() {
                this[this.tableDistrictRateList.ItemTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistrictDistributionTypeListRow : global::System.Data.DataRow {
            
            private DistrictDistributionTypeListDataTable tableDistrictDistributionTypeList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistrictDistributionTypeListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistrictDistributionTypeList = ((DistrictDistributionTypeListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemTypeID {
                get {
                    try {
                        return ((int)(this[this.tableDistrictDistributionTypeList.ItemTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemTypeID\' in table \'DistrictDistributionTypeList\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDistrictDistributionTypeList.ItemTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributionType {
                get {
                    try {
                        return ((string)(this[this.tableDistrictDistributionTypeList.DistributionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributionType\' in table \'DistrictDistributionTypeList\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistrictDistributionTypeList.DistributionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemTypeIDNull() {
                return this.IsNull(this.tableDistrictDistributionTypeList.ItemTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemTypeIDNull() {
                this[this.tableDistrictDistributionTypeList.ItemTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributionTypeNull() {
                return this.IsNull(this.tableDistrictDistributionTypeList.DistributionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributionTypeNull() {
                this[this.tableDistrictDistributionTypeList.DistributionTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetDistrictRateDetailsRow : global::System.Data.DataRow {
            
            private GetDistrictRateDetailsDataTable tableGetDistrictRateDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetDistrictRateDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetDistrictRateDetails = ((GetDistrictRateDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SADistrictID {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictRateDetails.SADistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SADistrictID\' in table \'GetDistrictRateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictRateDetails.SADistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SARateItemID {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictRateDetails.SARateItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SARateItemID\' in table \'GetDistrictRateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictRateDetails.SARateItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemTypeID {
                get {
                    try {
                        return ((int)(this[this.tableGetDistrictRateDetails.ItemTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemTypeID\' in table \'GetDistrictRateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictRateDetails.ItemTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictRateDetails.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'GetDistrictRateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictRateDetails.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HasMinimum {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictRateDetails.HasMinimumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasMinimum\' in table \'GetDistrictRateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictRateDetails.HasMinimumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictRateDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'GetDistrictRateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictRateDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateType {
                get {
                    try {
                        return ((string)(this[this.tableGetDistrictRateDetails.RateTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RateType\' in table \'GetDistrictRateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDistrictRateDetails.RateTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSADistrictIDNull() {
                return this.IsNull(this.tableGetDistrictRateDetails.SADistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSADistrictIDNull() {
                this[this.tableGetDistrictRateDetails.SADistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSARateItemIDNull() {
                return this.IsNull(this.tableGetDistrictRateDetails.SARateItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSARateItemIDNull() {
                this[this.tableGetDistrictRateDetails.SARateItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemTypeIDNull() {
                return this.IsNull(this.tableGetDistrictRateDetails.ItemTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemTypeIDNull() {
                this[this.tableGetDistrictRateDetails.ItemTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGetDistrictRateDetails.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableGetDistrictRateDetails.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHasMinimumNull() {
                return this.IsNull(this.tableGetDistrictRateDetails.HasMinimumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHasMinimumNull() {
                this[this.tableGetDistrictRateDetails.HasMinimumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableGetDistrictRateDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableGetDistrictRateDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateTypeNull() {
                return this.IsNull(this.tableGetDistrictRateDetails.RateTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateTypeNull() {
                this[this.tableGetDistrictRateDetails.RateTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListDistrictDefinitionIDRow : global::System.Data.DataRow {
            
            private ListDistrictDefinitionIDDataTable tableListDistrictDefinitionID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListDistrictDefinitionIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListDistrictDefinitionID = ((ListDistrictDefinitionIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KeyID {
                get {
                    return ((int)(this[this.tableListDistrictDefinitionID.KeyIDColumn]));
                }
                set {
                    this[this.tableListDistrictDefinitionID.KeyIDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetDistrictDefinitionDetailsRowChangeEvent : global::System.EventArgs {
            
            private GetDistrictDefinitionDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDefinitionDetailsRowChangeEvent(GetDistrictDefinitionDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDefinitionDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetDistrictDistributionDetailsRowChangeEvent : global::System.EventArgs {
            
            private GetDistrictDistributionDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDistributionDetailsRowChangeEvent(GetDistrictDistributionDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictDistributionDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistrictDetailsRowChangeEvent : global::System.EventArgs {
            
            private DistrictDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDetailsRowChangeEvent(DistrictDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistrictPostingListRowChangeEvent : global::System.EventArgs {
            
            private DistrictPostingListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictPostingListRowChangeEvent(DistrictPostingListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictPostingListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistrictRateListRowChangeEvent : global::System.EventArgs {
            
            private DistrictRateListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictRateListRowChangeEvent(DistrictRateListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictRateListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistrictDistributionTypeListRowChangeEvent : global::System.EventArgs {
            
            private DistrictDistributionTypeListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDistributionTypeListRowChangeEvent(DistrictDistributionTypeListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictDistributionTypeListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetDistrictRateDetailsRowChangeEvent : global::System.EventArgs {
            
            private GetDistrictRateDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictRateDetailsRowChangeEvent(GetDistrictRateDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDistrictRateDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListDistrictDefinitionIDRowChangeEvent : global::System.EventArgs {
            
            private ListDistrictDefinitionIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDistrictDefinitionIDRowChangeEvent(ListDistrictDefinitionIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDistrictDefinitionIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591