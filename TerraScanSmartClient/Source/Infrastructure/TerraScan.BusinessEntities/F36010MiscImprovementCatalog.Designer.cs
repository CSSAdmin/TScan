//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F36010MiscImprovementCatalog")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F36010MiscImprovementCatalog : global::System.Data.DataSet {
        
        private GetMICatalogDataTable tableGetMICatalog;
        
        private GetMiscCatalogChoiceDataTable tableGetMiscCatalogChoice;
        
        private ListDeprTableDataTable tableListDeprTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F36010MiscImprovementCatalog() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F36010MiscImprovementCatalog(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GetMICatalog"] != null)) {
                    base.Tables.Add(new GetMICatalogDataTable(ds.Tables["GetMICatalog"]));
                }
                if ((ds.Tables["GetMiscCatalogChoice"] != null)) {
                    base.Tables.Add(new GetMiscCatalogChoiceDataTable(ds.Tables["GetMiscCatalogChoice"]));
                }
                if ((ds.Tables["ListDeprTable"] != null)) {
                    base.Tables.Add(new ListDeprTableDataTable(ds.Tables["ListDeprTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetMICatalogDataTable GetMICatalog {
            get {
                return this.tableGetMICatalog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetMiscCatalogChoiceDataTable GetMiscCatalogChoice {
            get {
                return this.tableGetMiscCatalogChoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListDeprTableDataTable ListDeprTable {
            get {
                return this.tableListDeprTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F36010MiscImprovementCatalog cln = ((F36010MiscImprovementCatalog)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GetMICatalog"] != null)) {
                    base.Tables.Add(new GetMICatalogDataTable(ds.Tables["GetMICatalog"]));
                }
                if ((ds.Tables["GetMiscCatalogChoice"] != null)) {
                    base.Tables.Add(new GetMiscCatalogChoiceDataTable(ds.Tables["GetMiscCatalogChoice"]));
                }
                if ((ds.Tables["ListDeprTable"] != null)) {
                    base.Tables.Add(new ListDeprTableDataTable(ds.Tables["ListDeprTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGetMICatalog = ((GetMICatalogDataTable)(base.Tables["GetMICatalog"]));
            if ((initTable == true)) {
                if ((this.tableGetMICatalog != null)) {
                    this.tableGetMICatalog.InitVars();
                }
            }
            this.tableGetMiscCatalogChoice = ((GetMiscCatalogChoiceDataTable)(base.Tables["GetMiscCatalogChoice"]));
            if ((initTable == true)) {
                if ((this.tableGetMiscCatalogChoice != null)) {
                    this.tableGetMiscCatalogChoice.InitVars();
                }
            }
            this.tableListDeprTable = ((ListDeprTableDataTable)(base.Tables["ListDeprTable"]));
            if ((initTable == true)) {
                if ((this.tableListDeprTable != null)) {
                    this.tableListDeprTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F36010MiscImprovementCatalog";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F36010MiscImprovementCatalog.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGetMICatalog = new GetMICatalogDataTable();
            base.Tables.Add(this.tableGetMICatalog);
            this.tableGetMiscCatalogChoice = new GetMiscCatalogChoiceDataTable();
            base.Tables.Add(this.tableGetMiscCatalogChoice);
            this.tableListDeprTable = new ListDeprTableDataTable();
            base.Tables.Add(this.tableListDeprTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetMICatalog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetMiscCatalogChoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListDeprTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F36010MiscImprovementCatalog ds = new F36010MiscImprovementCatalog();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GetMICatalogRowChangeEventHandler(object sender, GetMICatalogRowChangeEvent e);
        
        public delegate void GetMiscCatalogChoiceRowChangeEventHandler(object sender, GetMiscCatalogChoiceRowChangeEvent e);
        
        public delegate void ListDeprTableRowChangeEventHandler(object sender, ListDeprTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetMICatalogDataTable : global::System.Data.TypedTableBase<GetMICatalogRow> {
            
            private global::System.Data.DataColumn columnMICodeID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnMICode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnVFormula;
            
            private global::System.Data.DataColumn columnL01;
            
            private global::System.Data.DataColumn columnD01;
            
            private global::System.Data.DataColumn columnS01;
            
            private global::System.Data.DataColumn columnC01;
            
            private global::System.Data.DataColumn columnF01;
            
            private global::System.Data.DataColumn columnL02;
            
            private global::System.Data.DataColumn columnD02;
            
            private global::System.Data.DataColumn columnS02;
            
            private global::System.Data.DataColumn columnC02;
            
            private global::System.Data.DataColumn columnF02;
            
            private global::System.Data.DataColumn columnL03;
            
            private global::System.Data.DataColumn columnD03;
            
            private global::System.Data.DataColumn columnS03;
            
            private global::System.Data.DataColumn columnC03;
            
            private global::System.Data.DataColumn columnF03;
            
            private global::System.Data.DataColumn columnL04;
            
            private global::System.Data.DataColumn columnD04;
            
            private global::System.Data.DataColumn columnS04;
            
            private global::System.Data.DataColumn columnC04;
            
            private global::System.Data.DataColumn columnF04;
            
            private global::System.Data.DataColumn columnL05;
            
            private global::System.Data.DataColumn columnD05;
            
            private global::System.Data.DataColumn columnS05;
            
            private global::System.Data.DataColumn columnC05;
            
            private global::System.Data.DataColumn columnF05;
            
            private global::System.Data.DataColumn columnL06;
            
            private global::System.Data.DataColumn columnD06;
            
            private global::System.Data.DataColumn columnS06;
            
            private global::System.Data.DataColumn columnC06;
            
            private global::System.Data.DataColumn columnF06;
            
            private global::System.Data.DataColumn columnL07;
            
            private global::System.Data.DataColumn columnD07;
            
            private global::System.Data.DataColumn columnS07;
            
            private global::System.Data.DataColumn columnC07;
            
            private global::System.Data.DataColumn columnF07;
            
            private global::System.Data.DataColumn columnL08;
            
            private global::System.Data.DataColumn columnD08;
            
            private global::System.Data.DataColumn columnS08;
            
            private global::System.Data.DataColumn columnC08;
            
            private global::System.Data.DataColumn columnF08;
            
            private global::System.Data.DataColumn columnL09;
            
            private global::System.Data.DataColumn columnD09;
            
            private global::System.Data.DataColumn columnS09;
            
            private global::System.Data.DataColumn columnC09;
            
            private global::System.Data.DataColumn columnF09;
            
            private global::System.Data.DataColumn columnL10;
            
            private global::System.Data.DataColumn columnD10;
            
            private global::System.Data.DataColumn columnS10;
            
            private global::System.Data.DataColumn columnC10;
            
            private global::System.Data.DataColumn columnF10;
            
            private global::System.Data.DataColumn columnL11;
            
            private global::System.Data.DataColumn columnD11;
            
            private global::System.Data.DataColumn columnS11;
            
            private global::System.Data.DataColumn columnC11;
            
            private global::System.Data.DataColumn columnF11;
            
            private global::System.Data.DataColumn columnL12;
            
            private global::System.Data.DataColumn columnD12;
            
            private global::System.Data.DataColumn columnS12;
            
            private global::System.Data.DataColumn columnC12;
            
            private global::System.Data.DataColumn columnF12;
            
            private global::System.Data.DataColumn columnDeprTableID;
            
            private global::System.Data.DataColumn columnWithPrimary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMICatalogDataTable() {
                this.TableName = "GetMICatalog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetMICatalogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetMICatalogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MICodeIDColumn {
                get {
                    return this.columnMICodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MICodeColumn {
                get {
                    return this.columnMICode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VFormulaColumn {
                get {
                    return this.columnVFormula;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L01Column {
                get {
                    return this.columnL01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D01Column {
                get {
                    return this.columnD01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S01Column {
                get {
                    return this.columnS01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C01Column {
                get {
                    return this.columnC01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F01Column {
                get {
                    return this.columnF01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L02Column {
                get {
                    return this.columnL02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D02Column {
                get {
                    return this.columnD02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S02Column {
                get {
                    return this.columnS02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C02Column {
                get {
                    return this.columnC02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F02Column {
                get {
                    return this.columnF02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L03Column {
                get {
                    return this.columnL03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D03Column {
                get {
                    return this.columnD03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S03Column {
                get {
                    return this.columnS03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C03Column {
                get {
                    return this.columnC03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F03Column {
                get {
                    return this.columnF03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L04Column {
                get {
                    return this.columnL04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D04Column {
                get {
                    return this.columnD04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S04Column {
                get {
                    return this.columnS04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C04Column {
                get {
                    return this.columnC04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F04Column {
                get {
                    return this.columnF04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L05Column {
                get {
                    return this.columnL05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D05Column {
                get {
                    return this.columnD05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S05Column {
                get {
                    return this.columnS05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C05Column {
                get {
                    return this.columnC05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F05Column {
                get {
                    return this.columnF05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L06Column {
                get {
                    return this.columnL06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D06Column {
                get {
                    return this.columnD06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S06Column {
                get {
                    return this.columnS06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C06Column {
                get {
                    return this.columnC06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F06Column {
                get {
                    return this.columnF06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L07Column {
                get {
                    return this.columnL07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D07Column {
                get {
                    return this.columnD07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S07Column {
                get {
                    return this.columnS07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C07Column {
                get {
                    return this.columnC07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F07Column {
                get {
                    return this.columnF07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L08Column {
                get {
                    return this.columnL08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D08Column {
                get {
                    return this.columnD08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S08Column {
                get {
                    return this.columnS08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C08Column {
                get {
                    return this.columnC08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F08Column {
                get {
                    return this.columnF08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L09Column {
                get {
                    return this.columnL09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D09Column {
                get {
                    return this.columnD09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S09Column {
                get {
                    return this.columnS09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C09Column {
                get {
                    return this.columnC09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F09Column {
                get {
                    return this.columnF09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L10Column {
                get {
                    return this.columnL10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D10Column {
                get {
                    return this.columnD10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S10Column {
                get {
                    return this.columnS10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C10Column {
                get {
                    return this.columnC10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F10Column {
                get {
                    return this.columnF10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L11Column {
                get {
                    return this.columnL11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D11Column {
                get {
                    return this.columnD11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S11Column {
                get {
                    return this.columnS11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C11Column {
                get {
                    return this.columnC11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F11Column {
                get {
                    return this.columnF11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn L12Column {
                get {
                    return this.columnL12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D12Column {
                get {
                    return this.columnD12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S12Column {
                get {
                    return this.columnS12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C12Column {
                get {
                    return this.columnC12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F12Column {
                get {
                    return this.columnF12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprTableIDColumn {
                get {
                    return this.columnDeprTableID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WithPrimaryColumn {
                get {
                    return this.columnWithPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMICatalogRow this[int index] {
                get {
                    return ((GetMICatalogRow)(this.Rows[index]));
                }
            }
            
            public event GetMICatalogRowChangeEventHandler GetMICatalogRowChanging;
            
            public event GetMICatalogRowChangeEventHandler GetMICatalogRowChanged;
            
            public event GetMICatalogRowChangeEventHandler GetMICatalogRowDeleting;
            
            public event GetMICatalogRowChangeEventHandler GetMICatalogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetMICatalogRow(GetMICatalogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMICatalogRow AddGetMICatalogRow(
                        int MICodeID, 
                        short RollYear, 
                        string MICode, 
                        string Description, 
                        string VFormula, 
                        string L01, 
                        short D01, 
                        short S01, 
                        short C01, 
                        string F01, 
                        string L02, 
                        short D02, 
                        short S02, 
                        short C02, 
                        string F02, 
                        string L03, 
                        short D03, 
                        short S03, 
                        short C03, 
                        string F03, 
                        string L04, 
                        short D04, 
                        short S04, 
                        short C04, 
                        string F04, 
                        string L05, 
                        short D05, 
                        short S05, 
                        short C05, 
                        string F05, 
                        string L06, 
                        short D06, 
                        short S06, 
                        short C06, 
                        string F06, 
                        string L07, 
                        short D07, 
                        short S07, 
                        short C07, 
                        string F07, 
                        string L08, 
                        short D08, 
                        short S08, 
                        short C08, 
                        string F08, 
                        string L09, 
                        short D09, 
                        short S09, 
                        short C09, 
                        string F09, 
                        string L10, 
                        short D10, 
                        short S10, 
                        short C10, 
                        string F10, 
                        string L11, 
                        short D11, 
                        short S11, 
                        short C11, 
                        string F11, 
                        string L12, 
                        short D12, 
                        short S12, 
                        short C12, 
                        string F12, 
                        int DeprTableID, 
                        bool WithPrimary) {
                GetMICatalogRow rowGetMICatalogRow = ((GetMICatalogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MICodeID,
                        RollYear,
                        MICode,
                        Description,
                        VFormula,
                        L01,
                        D01,
                        S01,
                        C01,
                        F01,
                        L02,
                        D02,
                        S02,
                        C02,
                        F02,
                        L03,
                        D03,
                        S03,
                        C03,
                        F03,
                        L04,
                        D04,
                        S04,
                        C04,
                        F04,
                        L05,
                        D05,
                        S05,
                        C05,
                        F05,
                        L06,
                        D06,
                        S06,
                        C06,
                        F06,
                        L07,
                        D07,
                        S07,
                        C07,
                        F07,
                        L08,
                        D08,
                        S08,
                        C08,
                        F08,
                        L09,
                        D09,
                        S09,
                        C09,
                        F09,
                        L10,
                        D10,
                        S10,
                        C10,
                        F10,
                        L11,
                        D11,
                        S11,
                        C11,
                        F11,
                        L12,
                        D12,
                        S12,
                        C12,
                        F12,
                        DeprTableID,
                        WithPrimary};
                rowGetMICatalogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetMICatalogRow);
                return rowGetMICatalogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetMICatalogDataTable cln = ((GetMICatalogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetMICatalogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMICodeID = base.Columns["MICodeID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnMICode = base.Columns["MICode"];
                this.columnDescription = base.Columns["Description"];
                this.columnVFormula = base.Columns["VFormula"];
                this.columnL01 = base.Columns["L01"];
                this.columnD01 = base.Columns["D01"];
                this.columnS01 = base.Columns["S01"];
                this.columnC01 = base.Columns["C01"];
                this.columnF01 = base.Columns["F01"];
                this.columnL02 = base.Columns["L02"];
                this.columnD02 = base.Columns["D02"];
                this.columnS02 = base.Columns["S02"];
                this.columnC02 = base.Columns["C02"];
                this.columnF02 = base.Columns["F02"];
                this.columnL03 = base.Columns["L03"];
                this.columnD03 = base.Columns["D03"];
                this.columnS03 = base.Columns["S03"];
                this.columnC03 = base.Columns["C03"];
                this.columnF03 = base.Columns["F03"];
                this.columnL04 = base.Columns["L04"];
                this.columnD04 = base.Columns["D04"];
                this.columnS04 = base.Columns["S04"];
                this.columnC04 = base.Columns["C04"];
                this.columnF04 = base.Columns["F04"];
                this.columnL05 = base.Columns["L05"];
                this.columnD05 = base.Columns["D05"];
                this.columnS05 = base.Columns["S05"];
                this.columnC05 = base.Columns["C05"];
                this.columnF05 = base.Columns["F05"];
                this.columnL06 = base.Columns["L06"];
                this.columnD06 = base.Columns["D06"];
                this.columnS06 = base.Columns["S06"];
                this.columnC06 = base.Columns["C06"];
                this.columnF06 = base.Columns["F06"];
                this.columnL07 = base.Columns["L07"];
                this.columnD07 = base.Columns["D07"];
                this.columnS07 = base.Columns["S07"];
                this.columnC07 = base.Columns["C07"];
                this.columnF07 = base.Columns["F07"];
                this.columnL08 = base.Columns["L08"];
                this.columnD08 = base.Columns["D08"];
                this.columnS08 = base.Columns["S08"];
                this.columnC08 = base.Columns["C08"];
                this.columnF08 = base.Columns["F08"];
                this.columnL09 = base.Columns["L09"];
                this.columnD09 = base.Columns["D09"];
                this.columnS09 = base.Columns["S09"];
                this.columnC09 = base.Columns["C09"];
                this.columnF09 = base.Columns["F09"];
                this.columnL10 = base.Columns["L10"];
                this.columnD10 = base.Columns["D10"];
                this.columnS10 = base.Columns["S10"];
                this.columnC10 = base.Columns["C10"];
                this.columnF10 = base.Columns["F10"];
                this.columnL11 = base.Columns["L11"];
                this.columnD11 = base.Columns["D11"];
                this.columnS11 = base.Columns["S11"];
                this.columnC11 = base.Columns["C11"];
                this.columnF11 = base.Columns["F11"];
                this.columnL12 = base.Columns["L12"];
                this.columnD12 = base.Columns["D12"];
                this.columnS12 = base.Columns["S12"];
                this.columnC12 = base.Columns["C12"];
                this.columnF12 = base.Columns["F12"];
                this.columnDeprTableID = base.Columns["DeprTableID"];
                this.columnWithPrimary = base.Columns["WithPrimary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMICodeID = new global::System.Data.DataColumn("MICodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMICodeID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnMICode = new global::System.Data.DataColumn("MICode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMICode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnVFormula = new global::System.Data.DataColumn("VFormula", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVFormula);
                this.columnL01 = new global::System.Data.DataColumn("L01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL01);
                this.columnD01 = new global::System.Data.DataColumn("D01", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD01);
                this.columnS01 = new global::System.Data.DataColumn("S01", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS01);
                this.columnC01 = new global::System.Data.DataColumn("C01", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC01);
                this.columnF01 = new global::System.Data.DataColumn("F01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF01);
                this.columnL02 = new global::System.Data.DataColumn("L02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL02);
                this.columnD02 = new global::System.Data.DataColumn("D02", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD02);
                this.columnS02 = new global::System.Data.DataColumn("S02", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS02);
                this.columnC02 = new global::System.Data.DataColumn("C02", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC02);
                this.columnF02 = new global::System.Data.DataColumn("F02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF02);
                this.columnL03 = new global::System.Data.DataColumn("L03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL03);
                this.columnD03 = new global::System.Data.DataColumn("D03", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD03);
                this.columnS03 = new global::System.Data.DataColumn("S03", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS03);
                this.columnC03 = new global::System.Data.DataColumn("C03", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC03);
                this.columnF03 = new global::System.Data.DataColumn("F03", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF03);
                this.columnL04 = new global::System.Data.DataColumn("L04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL04);
                this.columnD04 = new global::System.Data.DataColumn("D04", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD04);
                this.columnS04 = new global::System.Data.DataColumn("S04", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS04);
                this.columnC04 = new global::System.Data.DataColumn("C04", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC04);
                this.columnF04 = new global::System.Data.DataColumn("F04", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF04);
                this.columnL05 = new global::System.Data.DataColumn("L05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL05);
                this.columnD05 = new global::System.Data.DataColumn("D05", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD05);
                this.columnS05 = new global::System.Data.DataColumn("S05", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS05);
                this.columnC05 = new global::System.Data.DataColumn("C05", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC05);
                this.columnF05 = new global::System.Data.DataColumn("F05", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF05);
                this.columnL06 = new global::System.Data.DataColumn("L06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL06);
                this.columnD06 = new global::System.Data.DataColumn("D06", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD06);
                this.columnS06 = new global::System.Data.DataColumn("S06", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS06);
                this.columnC06 = new global::System.Data.DataColumn("C06", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC06);
                this.columnF06 = new global::System.Data.DataColumn("F06", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF06);
                this.columnL07 = new global::System.Data.DataColumn("L07", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL07);
                this.columnD07 = new global::System.Data.DataColumn("D07", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD07);
                this.columnS07 = new global::System.Data.DataColumn("S07", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS07);
                this.columnC07 = new global::System.Data.DataColumn("C07", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC07);
                this.columnF07 = new global::System.Data.DataColumn("F07", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF07);
                this.columnL08 = new global::System.Data.DataColumn("L08", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL08);
                this.columnD08 = new global::System.Data.DataColumn("D08", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD08);
                this.columnS08 = new global::System.Data.DataColumn("S08", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS08);
                this.columnC08 = new global::System.Data.DataColumn("C08", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC08);
                this.columnF08 = new global::System.Data.DataColumn("F08", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF08);
                this.columnL09 = new global::System.Data.DataColumn("L09", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL09);
                this.columnD09 = new global::System.Data.DataColumn("D09", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD09);
                this.columnS09 = new global::System.Data.DataColumn("S09", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS09);
                this.columnC09 = new global::System.Data.DataColumn("C09", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC09);
                this.columnF09 = new global::System.Data.DataColumn("F09", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF09);
                this.columnL10 = new global::System.Data.DataColumn("L10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL10);
                this.columnD10 = new global::System.Data.DataColumn("D10", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD10);
                this.columnS10 = new global::System.Data.DataColumn("S10", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS10);
                this.columnC10 = new global::System.Data.DataColumn("C10", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC10);
                this.columnF10 = new global::System.Data.DataColumn("F10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF10);
                this.columnL11 = new global::System.Data.DataColumn("L11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL11);
                this.columnD11 = new global::System.Data.DataColumn("D11", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD11);
                this.columnS11 = new global::System.Data.DataColumn("S11", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS11);
                this.columnC11 = new global::System.Data.DataColumn("C11", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC11);
                this.columnF11 = new global::System.Data.DataColumn("F11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF11);
                this.columnL12 = new global::System.Data.DataColumn("L12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL12);
                this.columnD12 = new global::System.Data.DataColumn("D12", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD12);
                this.columnS12 = new global::System.Data.DataColumn("S12", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS12);
                this.columnC12 = new global::System.Data.DataColumn("C12", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC12);
                this.columnF12 = new global::System.Data.DataColumn("F12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF12);
                this.columnDeprTableID = new global::System.Data.DataColumn("DeprTableID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprTableID);
                this.columnWithPrimary = new global::System.Data.DataColumn("WithPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithPrimary);
                this.columnMICode.MaxLength = 10;
                this.columnDescription.MaxLength = 40;
                this.columnVFormula.MaxLength = 1500;
                this.columnL01.MaxLength = 12;
                this.columnF01.MaxLength = 1500;
                this.columnL02.MaxLength = 12;
                this.columnF02.MaxLength = 1500;
                this.columnL03.MaxLength = 12;
                this.columnF03.MaxLength = 1500;
                this.columnL04.MaxLength = 12;
                this.columnF04.MaxLength = 1500;
                this.columnL05.MaxLength = 12;
                this.columnF05.MaxLength = 1500;
                this.columnL06.MaxLength = 12;
                this.columnF06.MaxLength = 1500;
                this.columnL07.MaxLength = 12;
                this.columnF07.MaxLength = 1500;
                this.columnL08.MaxLength = 12;
                this.columnF08.MaxLength = 1500;
                this.columnL09.MaxLength = 12;
                this.columnF09.MaxLength = 1500;
                this.columnL10.MaxLength = 12;
                this.columnF10.MaxLength = 1500;
                this.columnL11.MaxLength = 12;
                this.columnF11.MaxLength = 1500;
                this.columnL12.MaxLength = 12;
                this.columnF12.MaxLength = 1500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMICatalogRow NewGetMICatalogRow() {
                return ((GetMICatalogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetMICatalogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetMICatalogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetMICatalogRowChanged != null)) {
                    this.GetMICatalogRowChanged(this, new GetMICatalogRowChangeEvent(((GetMICatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetMICatalogRowChanging != null)) {
                    this.GetMICatalogRowChanging(this, new GetMICatalogRowChangeEvent(((GetMICatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetMICatalogRowDeleted != null)) {
                    this.GetMICatalogRowDeleted(this, new GetMICatalogRowChangeEvent(((GetMICatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetMICatalogRowDeleting != null)) {
                    this.GetMICatalogRowDeleting(this, new GetMICatalogRowChangeEvent(((GetMICatalogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetMICatalogRow(GetMICatalogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36010MiscImprovementCatalog ds = new F36010MiscImprovementCatalog();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetMICatalogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetMiscCatalogChoiceDataTable : global::System.Data.TypedTableBase<GetMiscCatalogChoiceRow> {
            
            private global::System.Data.DataColumn columnMIChoiceID;
            
            private global::System.Data.DataColumn columnMICodeID;
            
            private global::System.Data.DataColumn columnFieldNum;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemValue;
            
            private global::System.Data.DataColumn columnIsCommited;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMiscCatalogChoiceDataTable() {
                this.TableName = "GetMiscCatalogChoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetMiscCatalogChoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetMiscCatalogChoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIChoiceIDColumn {
                get {
                    return this.columnMIChoiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MICodeIDColumn {
                get {
                    return this.columnMICodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldNumColumn {
                get {
                    return this.columnFieldNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemValueColumn {
                get {
                    return this.columnItemValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCommitedColumn {
                get {
                    return this.columnIsCommited;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMiscCatalogChoiceRow this[int index] {
                get {
                    return ((GetMiscCatalogChoiceRow)(this.Rows[index]));
                }
            }
            
            public event GetMiscCatalogChoiceRowChangeEventHandler GetMiscCatalogChoiceRowChanging;
            
            public event GetMiscCatalogChoiceRowChangeEventHandler GetMiscCatalogChoiceRowChanged;
            
            public event GetMiscCatalogChoiceRowChangeEventHandler GetMiscCatalogChoiceRowDeleting;
            
            public event GetMiscCatalogChoiceRowChangeEventHandler GetMiscCatalogChoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetMiscCatalogChoiceRow(GetMiscCatalogChoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMiscCatalogChoiceRow AddGetMiscCatalogChoiceRow(int MIChoiceID, int MICodeID, byte FieldNum, string ItemName, decimal ItemValue, bool IsCommited) {
                GetMiscCatalogChoiceRow rowGetMiscCatalogChoiceRow = ((GetMiscCatalogChoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MIChoiceID,
                        MICodeID,
                        FieldNum,
                        ItemName,
                        ItemValue,
                        IsCommited};
                rowGetMiscCatalogChoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetMiscCatalogChoiceRow);
                return rowGetMiscCatalogChoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetMiscCatalogChoiceDataTable cln = ((GetMiscCatalogChoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetMiscCatalogChoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMIChoiceID = base.Columns["MIChoiceID"];
                this.columnMICodeID = base.Columns["MICodeID"];
                this.columnFieldNum = base.Columns["FieldNum"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemValue = base.Columns["ItemValue"];
                this.columnIsCommited = base.Columns["IsCommited"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMIChoiceID = new global::System.Data.DataColumn("MIChoiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIChoiceID);
                this.columnMICodeID = new global::System.Data.DataColumn("MICodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMICodeID);
                this.columnFieldNum = new global::System.Data.DataColumn("FieldNum", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldNum);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemValue = new global::System.Data.DataColumn("ItemValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemValue);
                this.columnIsCommited = new global::System.Data.DataColumn("IsCommited", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCommited);
                this.columnItemName.MaxLength = 20;
                this.columnIsCommited.DefaultValue = ((bool)(true));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMiscCatalogChoiceRow NewGetMiscCatalogChoiceRow() {
                return ((GetMiscCatalogChoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetMiscCatalogChoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetMiscCatalogChoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetMiscCatalogChoiceRowChanged != null)) {
                    this.GetMiscCatalogChoiceRowChanged(this, new GetMiscCatalogChoiceRowChangeEvent(((GetMiscCatalogChoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetMiscCatalogChoiceRowChanging != null)) {
                    this.GetMiscCatalogChoiceRowChanging(this, new GetMiscCatalogChoiceRowChangeEvent(((GetMiscCatalogChoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetMiscCatalogChoiceRowDeleted != null)) {
                    this.GetMiscCatalogChoiceRowDeleted(this, new GetMiscCatalogChoiceRowChangeEvent(((GetMiscCatalogChoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetMiscCatalogChoiceRowDeleting != null)) {
                    this.GetMiscCatalogChoiceRowDeleting(this, new GetMiscCatalogChoiceRowChangeEvent(((GetMiscCatalogChoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetMiscCatalogChoiceRow(GetMiscCatalogChoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36010MiscImprovementCatalog ds = new F36010MiscImprovementCatalog();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetMiscCatalogChoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListDeprTableDataTable : global::System.Data.TypedTableBase<ListDeprTableRow> {
            
            private global::System.Data.DataColumn columnDeprTableID;
            
            private global::System.Data.DataColumn columnDeprName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDeprTableDataTable() {
                this.TableName = "ListDeprTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListDeprTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListDeprTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprTableIDColumn {
                get {
                    return this.columnDeprTableID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprNameColumn {
                get {
                    return this.columnDeprName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDeprTableRow this[int index] {
                get {
                    return ((ListDeprTableRow)(this.Rows[index]));
                }
            }
            
            public event ListDeprTableRowChangeEventHandler ListDeprTableRowChanging;
            
            public event ListDeprTableRowChangeEventHandler ListDeprTableRowChanged;
            
            public event ListDeprTableRowChangeEventHandler ListDeprTableRowDeleting;
            
            public event ListDeprTableRowChangeEventHandler ListDeprTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListDeprTableRow(ListDeprTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDeprTableRow AddListDeprTableRow(int DeprTableID, string DeprName) {
                ListDeprTableRow rowListDeprTableRow = ((ListDeprTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeprTableID,
                        DeprName};
                rowListDeprTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListDeprTableRow);
                return rowListDeprTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListDeprTableDataTable cln = ((ListDeprTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListDeprTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeprTableID = base.Columns["DeprTableID"];
                this.columnDeprName = base.Columns["DeprName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeprTableID = new global::System.Data.DataColumn("DeprTableID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprTableID);
                this.columnDeprName = new global::System.Data.DataColumn("DeprName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprName);
                this.columnDeprTableID.ReadOnly = true;
                this.columnDeprName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDeprTableRow NewListDeprTableRow() {
                return ((ListDeprTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListDeprTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListDeprTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListDeprTableRowChanged != null)) {
                    this.ListDeprTableRowChanged(this, new ListDeprTableRowChangeEvent(((ListDeprTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListDeprTableRowChanging != null)) {
                    this.ListDeprTableRowChanging(this, new ListDeprTableRowChangeEvent(((ListDeprTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListDeprTableRowDeleted != null)) {
                    this.ListDeprTableRowDeleted(this, new ListDeprTableRowChangeEvent(((ListDeprTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListDeprTableRowDeleting != null)) {
                    this.ListDeprTableRowDeleting(this, new ListDeprTableRowChangeEvent(((ListDeprTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListDeprTableRow(ListDeprTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36010MiscImprovementCatalog ds = new F36010MiscImprovementCatalog();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListDeprTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetMICatalogRow : global::System.Data.DataRow {
            
            private GetMICatalogDataTable tableGetMICatalog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetMICatalogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetMICatalog = ((GetMICatalogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MICodeID {
                get {
                    try {
                        return ((int)(this[this.tableGetMICatalog.MICodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MICodeID\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.MICodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MICode {
                get {
                    if (this.IsMICodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.MICodeColumn]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.MICodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    if (this.IsDescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.DescriptionColumn]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VFormula {
                get {
                    if (this.IsVFormulaNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.VFormulaColumn]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.VFormulaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L01 {
                get {
                    if (this.IsL01Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L01Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D01 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D01\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S01 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S01\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C01 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C01\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F01 {
                get {
                    if (this.IsF01Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F01Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L02 {
                get {
                    if (this.IsL02Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L02Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D02 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D02\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S02 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S02\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C02 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C02\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F02 {
                get {
                    if (this.IsF02Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F02Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L03 {
                get {
                    if (this.IsL03Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L03Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D03 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D03\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S03 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S03\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C03 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C03\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F03 {
                get {
                    if (this.IsF03Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F03Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L04 {
                get {
                    if (this.IsL04Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L04Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D04 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D04\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S04 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S04\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C04 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C04\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F04 {
                get {
                    if (this.IsF04Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F04Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L05 {
                get {
                    if (this.IsL05Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L05Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D05 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D05\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S05 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S05\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C05 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C05\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F05 {
                get {
                    if (this.IsF05Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F05Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L06 {
                get {
                    if (this.IsL06Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L06Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D06 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D06\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S06 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S06\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C06 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C06\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F06 {
                get {
                    if (this.IsF06Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F06Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L07 {
                get {
                    if (this.IsL07Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L07Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D07 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D07\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S07 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S07\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C07 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C07\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F07 {
                get {
                    if (this.IsF07Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F07Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L08 {
                get {
                    if (this.IsL08Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L08Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D08 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D08\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S08 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S08\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C08 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C08\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F08 {
                get {
                    if (this.IsF08Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F08Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L09 {
                get {
                    if (this.IsL09Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L09Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D09 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D09\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S09 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S09\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C09 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C09\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F09 {
                get {
                    if (this.IsF09Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F09Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L10 {
                get {
                    if (this.IsL10Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L10Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D10 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D10\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S10 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S10\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C10 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C10\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F10 {
                get {
                    if (this.IsF10Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F10Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L11 {
                get {
                    if (this.IsL11Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L11Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D11 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D11\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S11 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S11\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C11 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C11\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F11 {
                get {
                    if (this.IsF11Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F11Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L12 {
                get {
                    if (this.IsL12Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.L12Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.L12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short D12 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.D12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D12\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.D12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short S12 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.S12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S12\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.S12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short C12 {
                get {
                    try {
                        return ((short)(this[this.tableGetMICatalog.C12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C12\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.C12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F12 {
                get {
                    if (this.IsF12Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMICatalog.F12Column]));
                    }
                }
                set {
                    this[this.tableGetMICatalog.F12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeprTableID {
                get {
                    try {
                        return ((int)(this[this.tableGetMICatalog.DeprTableIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprTableID\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.DeprTableIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WithPrimary {
                get {
                    try {
                        return ((bool)(this[this.tableGetMICatalog.WithPrimaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WithPrimary\' in table \'GetMICatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMICatalog.WithPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMICodeIDNull() {
                return this.IsNull(this.tableGetMICatalog.MICodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMICodeIDNull() {
                this[this.tableGetMICatalog.MICodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableGetMICatalog.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableGetMICatalog.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMICodeNull() {
                return this.IsNull(this.tableGetMICatalog.MICodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMICodeNull() {
                this[this.tableGetMICatalog.MICodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGetMICatalog.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableGetMICatalog.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVFormulaNull() {
                return this.IsNull(this.tableGetMICatalog.VFormulaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVFormulaNull() {
                this[this.tableGetMICatalog.VFormulaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL01Null() {
                return this.IsNull(this.tableGetMICatalog.L01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL01Null() {
                this[this.tableGetMICatalog.L01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD01Null() {
                return this.IsNull(this.tableGetMICatalog.D01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD01Null() {
                this[this.tableGetMICatalog.D01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS01Null() {
                return this.IsNull(this.tableGetMICatalog.S01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS01Null() {
                this[this.tableGetMICatalog.S01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC01Null() {
                return this.IsNull(this.tableGetMICatalog.C01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC01Null() {
                this[this.tableGetMICatalog.C01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF01Null() {
                return this.IsNull(this.tableGetMICatalog.F01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF01Null() {
                this[this.tableGetMICatalog.F01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL02Null() {
                return this.IsNull(this.tableGetMICatalog.L02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL02Null() {
                this[this.tableGetMICatalog.L02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD02Null() {
                return this.IsNull(this.tableGetMICatalog.D02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD02Null() {
                this[this.tableGetMICatalog.D02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS02Null() {
                return this.IsNull(this.tableGetMICatalog.S02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS02Null() {
                this[this.tableGetMICatalog.S02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC02Null() {
                return this.IsNull(this.tableGetMICatalog.C02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC02Null() {
                this[this.tableGetMICatalog.C02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF02Null() {
                return this.IsNull(this.tableGetMICatalog.F02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF02Null() {
                this[this.tableGetMICatalog.F02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL03Null() {
                return this.IsNull(this.tableGetMICatalog.L03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL03Null() {
                this[this.tableGetMICatalog.L03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD03Null() {
                return this.IsNull(this.tableGetMICatalog.D03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD03Null() {
                this[this.tableGetMICatalog.D03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS03Null() {
                return this.IsNull(this.tableGetMICatalog.S03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS03Null() {
                this[this.tableGetMICatalog.S03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC03Null() {
                return this.IsNull(this.tableGetMICatalog.C03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC03Null() {
                this[this.tableGetMICatalog.C03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF03Null() {
                return this.IsNull(this.tableGetMICatalog.F03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF03Null() {
                this[this.tableGetMICatalog.F03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL04Null() {
                return this.IsNull(this.tableGetMICatalog.L04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL04Null() {
                this[this.tableGetMICatalog.L04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD04Null() {
                return this.IsNull(this.tableGetMICatalog.D04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD04Null() {
                this[this.tableGetMICatalog.D04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS04Null() {
                return this.IsNull(this.tableGetMICatalog.S04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS04Null() {
                this[this.tableGetMICatalog.S04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC04Null() {
                return this.IsNull(this.tableGetMICatalog.C04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC04Null() {
                this[this.tableGetMICatalog.C04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF04Null() {
                return this.IsNull(this.tableGetMICatalog.F04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF04Null() {
                this[this.tableGetMICatalog.F04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL05Null() {
                return this.IsNull(this.tableGetMICatalog.L05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL05Null() {
                this[this.tableGetMICatalog.L05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD05Null() {
                return this.IsNull(this.tableGetMICatalog.D05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD05Null() {
                this[this.tableGetMICatalog.D05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS05Null() {
                return this.IsNull(this.tableGetMICatalog.S05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS05Null() {
                this[this.tableGetMICatalog.S05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC05Null() {
                return this.IsNull(this.tableGetMICatalog.C05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC05Null() {
                this[this.tableGetMICatalog.C05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF05Null() {
                return this.IsNull(this.tableGetMICatalog.F05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF05Null() {
                this[this.tableGetMICatalog.F05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL06Null() {
                return this.IsNull(this.tableGetMICatalog.L06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL06Null() {
                this[this.tableGetMICatalog.L06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD06Null() {
                return this.IsNull(this.tableGetMICatalog.D06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD06Null() {
                this[this.tableGetMICatalog.D06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS06Null() {
                return this.IsNull(this.tableGetMICatalog.S06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS06Null() {
                this[this.tableGetMICatalog.S06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC06Null() {
                return this.IsNull(this.tableGetMICatalog.C06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC06Null() {
                this[this.tableGetMICatalog.C06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF06Null() {
                return this.IsNull(this.tableGetMICatalog.F06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF06Null() {
                this[this.tableGetMICatalog.F06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL07Null() {
                return this.IsNull(this.tableGetMICatalog.L07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL07Null() {
                this[this.tableGetMICatalog.L07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD07Null() {
                return this.IsNull(this.tableGetMICatalog.D07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD07Null() {
                this[this.tableGetMICatalog.D07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS07Null() {
                return this.IsNull(this.tableGetMICatalog.S07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS07Null() {
                this[this.tableGetMICatalog.S07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC07Null() {
                return this.IsNull(this.tableGetMICatalog.C07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC07Null() {
                this[this.tableGetMICatalog.C07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF07Null() {
                return this.IsNull(this.tableGetMICatalog.F07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF07Null() {
                this[this.tableGetMICatalog.F07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL08Null() {
                return this.IsNull(this.tableGetMICatalog.L08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL08Null() {
                this[this.tableGetMICatalog.L08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD08Null() {
                return this.IsNull(this.tableGetMICatalog.D08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD08Null() {
                this[this.tableGetMICatalog.D08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS08Null() {
                return this.IsNull(this.tableGetMICatalog.S08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS08Null() {
                this[this.tableGetMICatalog.S08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC08Null() {
                return this.IsNull(this.tableGetMICatalog.C08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC08Null() {
                this[this.tableGetMICatalog.C08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF08Null() {
                return this.IsNull(this.tableGetMICatalog.F08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF08Null() {
                this[this.tableGetMICatalog.F08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL09Null() {
                return this.IsNull(this.tableGetMICatalog.L09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL09Null() {
                this[this.tableGetMICatalog.L09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD09Null() {
                return this.IsNull(this.tableGetMICatalog.D09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD09Null() {
                this[this.tableGetMICatalog.D09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS09Null() {
                return this.IsNull(this.tableGetMICatalog.S09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS09Null() {
                this[this.tableGetMICatalog.S09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC09Null() {
                return this.IsNull(this.tableGetMICatalog.C09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC09Null() {
                this[this.tableGetMICatalog.C09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF09Null() {
                return this.IsNull(this.tableGetMICatalog.F09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF09Null() {
                this[this.tableGetMICatalog.F09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL10Null() {
                return this.IsNull(this.tableGetMICatalog.L10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL10Null() {
                this[this.tableGetMICatalog.L10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD10Null() {
                return this.IsNull(this.tableGetMICatalog.D10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD10Null() {
                this[this.tableGetMICatalog.D10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS10Null() {
                return this.IsNull(this.tableGetMICatalog.S10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS10Null() {
                this[this.tableGetMICatalog.S10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC10Null() {
                return this.IsNull(this.tableGetMICatalog.C10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC10Null() {
                this[this.tableGetMICatalog.C10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF10Null() {
                return this.IsNull(this.tableGetMICatalog.F10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF10Null() {
                this[this.tableGetMICatalog.F10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL11Null() {
                return this.IsNull(this.tableGetMICatalog.L11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL11Null() {
                this[this.tableGetMICatalog.L11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD11Null() {
                return this.IsNull(this.tableGetMICatalog.D11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD11Null() {
                this[this.tableGetMICatalog.D11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS11Null() {
                return this.IsNull(this.tableGetMICatalog.S11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS11Null() {
                this[this.tableGetMICatalog.S11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC11Null() {
                return this.IsNull(this.tableGetMICatalog.C11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC11Null() {
                this[this.tableGetMICatalog.C11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF11Null() {
                return this.IsNull(this.tableGetMICatalog.F11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF11Null() {
                this[this.tableGetMICatalog.F11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL12Null() {
                return this.IsNull(this.tableGetMICatalog.L12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL12Null() {
                this[this.tableGetMICatalog.L12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD12Null() {
                return this.IsNull(this.tableGetMICatalog.D12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD12Null() {
                this[this.tableGetMICatalog.D12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS12Null() {
                return this.IsNull(this.tableGetMICatalog.S12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS12Null() {
                this[this.tableGetMICatalog.S12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC12Null() {
                return this.IsNull(this.tableGetMICatalog.C12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC12Null() {
                this[this.tableGetMICatalog.C12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF12Null() {
                return this.IsNull(this.tableGetMICatalog.F12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF12Null() {
                this[this.tableGetMICatalog.F12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprTableIDNull() {
                return this.IsNull(this.tableGetMICatalog.DeprTableIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprTableIDNull() {
                this[this.tableGetMICatalog.DeprTableIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWithPrimaryNull() {
                return this.IsNull(this.tableGetMICatalog.WithPrimaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWithPrimaryNull() {
                this[this.tableGetMICatalog.WithPrimaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetMiscCatalogChoiceRow : global::System.Data.DataRow {
            
            private GetMiscCatalogChoiceDataTable tableGetMiscCatalogChoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetMiscCatalogChoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetMiscCatalogChoice = ((GetMiscCatalogChoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIChoiceID {
                get {
                    try {
                        return ((int)(this[this.tableGetMiscCatalogChoice.MIChoiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIChoiceID\' in table \'GetMiscCatalogChoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMiscCatalogChoice.MIChoiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MICodeID {
                get {
                    try {
                        return ((int)(this[this.tableGetMiscCatalogChoice.MICodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MICodeID\' in table \'GetMiscCatalogChoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMiscCatalogChoice.MICodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte FieldNum {
                get {
                    try {
                        return ((byte)(this[this.tableGetMiscCatalogChoice.FieldNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldNum\' in table \'GetMiscCatalogChoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMiscCatalogChoice.FieldNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    if (this.IsItemNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGetMiscCatalogChoice.ItemNameColumn]));
                    }
                }
                set {
                    this[this.tableGetMiscCatalogChoice.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ItemValue {
                get {
                    try {
                        return ((decimal)(this[this.tableGetMiscCatalogChoice.ItemValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemValue\' in table \'GetMiscCatalogChoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMiscCatalogChoice.ItemValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommited {
                get {
                    try {
                        return ((bool)(this[this.tableGetMiscCatalogChoice.IsCommitedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCommited\' in table \'GetMiscCatalogChoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMiscCatalogChoice.IsCommitedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIChoiceIDNull() {
                return this.IsNull(this.tableGetMiscCatalogChoice.MIChoiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIChoiceIDNull() {
                this[this.tableGetMiscCatalogChoice.MIChoiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMICodeIDNull() {
                return this.IsNull(this.tableGetMiscCatalogChoice.MICodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMICodeIDNull() {
                this[this.tableGetMiscCatalogChoice.MICodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFieldNumNull() {
                return this.IsNull(this.tableGetMiscCatalogChoice.FieldNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFieldNumNull() {
                this[this.tableGetMiscCatalogChoice.FieldNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableGetMiscCatalogChoice.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableGetMiscCatalogChoice.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemValueNull() {
                return this.IsNull(this.tableGetMiscCatalogChoice.ItemValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemValueNull() {
                this[this.tableGetMiscCatalogChoice.ItemValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCommitedNull() {
                return this.IsNull(this.tableGetMiscCatalogChoice.IsCommitedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCommitedNull() {
                this[this.tableGetMiscCatalogChoice.IsCommitedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListDeprTableRow : global::System.Data.DataRow {
            
            private ListDeprTableDataTable tableListDeprTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListDeprTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListDeprTable = ((ListDeprTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeprTableID {
                get {
                    try {
                        return ((int)(this[this.tableListDeprTable.DeprTableIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprTableID\' in table \'ListDeprTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDeprTable.DeprTableIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeprName {
                get {
                    if (this.IsDeprNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableListDeprTable.DeprNameColumn]));
                    }
                }
                set {
                    this[this.tableListDeprTable.DeprNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprTableIDNull() {
                return this.IsNull(this.tableListDeprTable.DeprTableIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprTableIDNull() {
                this[this.tableListDeprTable.DeprTableIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprNameNull() {
                return this.IsNull(this.tableListDeprTable.DeprNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprNameNull() {
                this[this.tableListDeprTable.DeprNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetMICatalogRowChangeEvent : global::System.EventArgs {
            
            private GetMICatalogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMICatalogRowChangeEvent(GetMICatalogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMICatalogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetMiscCatalogChoiceRowChangeEvent : global::System.EventArgs {
            
            private GetMiscCatalogChoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMiscCatalogChoiceRowChangeEvent(GetMiscCatalogChoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetMiscCatalogChoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListDeprTableRowChangeEvent : global::System.EventArgs {
            
            private ListDeprTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDeprTableRowChangeEvent(ListDeprTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDeprTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591