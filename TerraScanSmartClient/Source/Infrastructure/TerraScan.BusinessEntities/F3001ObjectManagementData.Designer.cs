//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F3001ObjectManagementData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F3001ObjectManagementData : global::System.Data.DataSet {
        
        private ObjectDetailDataTableDataTable tableObjectDetailDataTable;
        
        private ClassDetailDataTable tableClassDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F3001ObjectManagementData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F3001ObjectManagementData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ObjectDetailDataTable"] != null)) {
                    base.Tables.Add(new ObjectDetailDataTableDataTable(ds.Tables["ObjectDetailDataTable"]));
                }
                if ((ds.Tables["ClassDetail"] != null)) {
                    base.Tables.Add(new ClassDetailDataTable(ds.Tables["ClassDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ObjectDetailDataTableDataTable ObjectDetailDataTable {
            get {
                return this.tableObjectDetailDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClassDetailDataTable ClassDetail {
            get {
                return this.tableClassDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F3001ObjectManagementData cln = ((F3001ObjectManagementData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ObjectDetailDataTable"] != null)) {
                    base.Tables.Add(new ObjectDetailDataTableDataTable(ds.Tables["ObjectDetailDataTable"]));
                }
                if ((ds.Tables["ClassDetail"] != null)) {
                    base.Tables.Add(new ClassDetailDataTable(ds.Tables["ClassDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableObjectDetailDataTable = ((ObjectDetailDataTableDataTable)(base.Tables["ObjectDetailDataTable"]));
            if ((initTable == true)) {
                if ((this.tableObjectDetailDataTable != null)) {
                    this.tableObjectDetailDataTable.InitVars();
                }
            }
            this.tableClassDetail = ((ClassDetailDataTable)(base.Tables["ClassDetail"]));
            if ((initTable == true)) {
                if ((this.tableClassDetail != null)) {
                    this.tableClassDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F3001ObjectManagementData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F3001ObjectManagementData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableObjectDetailDataTable = new ObjectDetailDataTableDataTable();
            base.Tables.Add(this.tableObjectDetailDataTable);
            this.tableClassDetail = new ClassDetailDataTable();
            base.Tables.Add(this.tableClassDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeObjectDetailDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeClassDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F3001ObjectManagementData ds = new F3001ObjectManagementData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ObjectDetailDataTableRowChangeEventHandler(object sender, ObjectDetailDataTableRowChangeEvent e);
        
        public delegate void ClassDetailRowChangeEventHandler(object sender, ClassDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ObjectDetailDataTableDataTable : global::System.Data.TypedTableBase<ObjectDetailDataTableRow> {
            
            private global::System.Data.DataColumn columnCopyToParcel;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnParcelNo;
            
            private global::System.Data.DataColumn columnParcelID;
            
            private global::System.Data.DataColumn columnObjectID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnIsValue;
            
            private global::System.Data.DataColumn columnIsRoll;
            
            private global::System.Data.DataColumn columnObjDesc;
            
            private global::System.Data.DataColumn columnStateCode;
            
            private global::System.Data.DataColumn columnIsAgriculture;
            
            private global::System.Data.DataColumn columnClassID;
            
            private global::System.Data.DataColumn columnIsMobileHome;
            
            private global::System.Data.DataColumn _columnManufacturer_Make_;
            
            private global::System.Data.DataColumn columnModel;
            
            private global::System.Data.DataColumn _columnMobileHomeFile_;
            
            private global::System.Data.DataColumn _columnDecal_TPO__;
            
            private global::System.Data.DataColumn _columnSerial_VIN__;
            
            private global::System.Data.DataColumn _columnHUDTag_;
            
            private global::System.Data.DataColumn _columnTitle_;
            
            private global::System.Data.DataColumn _columnTitleElimination_;
            
            private global::System.Data.DataColumn columnFilingDate;
            
            private global::System.Data.DataColumn columnParkName;
            
            private global::System.Data.DataColumn columnSiteNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ObjectDetailDataTableDataTable() {
                this.TableName = "ObjectDetailDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ObjectDetailDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ObjectDetailDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CopyToParcelColumn {
                get {
                    return this.columnCopyToParcel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelNoColumn {
                get {
                    return this.columnParcelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParcelIDColumn {
                get {
                    return this.columnParcelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectIDColumn {
                get {
                    return this.columnObjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsValueColumn {
                get {
                    return this.columnIsValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRollColumn {
                get {
                    return this.columnIsRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjDescColumn {
                get {
                    return this.columnObjDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeColumn {
                get {
                    return this.columnStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAgricultureColumn {
                get {
                    return this.columnIsAgriculture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassIDColumn {
                get {
                    return this.columnClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsMobileHomeColumn {
                get {
                    return this.columnIsMobileHome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _Manufacturer_Make_Column {
                get {
                    return this._columnManufacturer_Make_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelColumn {
                get {
                    return this.columnModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _MobileHomeFile_Column {
                get {
                    return this._columnMobileHomeFile_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _Decal_TPO__Column {
                get {
                    return this._columnDecal_TPO__;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _Serial_VIN__Column {
                get {
                    return this._columnSerial_VIN__;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _HUDTag_Column {
                get {
                    return this._columnHUDTag_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _Title_Column {
                get {
                    return this._columnTitle_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _TitleElimination_Column {
                get {
                    return this._columnTitleElimination_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilingDateColumn {
                get {
                    return this.columnFilingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParkNameColumn {
                get {
                    return this.columnParkName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteNumberColumn {
                get {
                    return this.columnSiteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ObjectDetailDataTableRow this[int index] {
                get {
                    return ((ObjectDetailDataTableRow)(this.Rows[index]));
                }
            }
            
            public event ObjectDetailDataTableRowChangeEventHandler ObjectDetailDataTableRowChanging;
            
            public event ObjectDetailDataTableRowChangeEventHandler ObjectDetailDataTableRowChanged;
            
            public event ObjectDetailDataTableRowChangeEventHandler ObjectDetailDataTableRowDeleting;
            
            public event ObjectDetailDataTableRowChangeEventHandler ObjectDetailDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddObjectDetailDataTableRow(ObjectDetailDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ObjectDetailDataTableRow AddObjectDetailDataTableRow(
                        string CopyToParcel, 
                        short RollYear, 
                        string ParcelNo, 
                        string Description, 
                        bool IsValue, 
                        bool IsRoll, 
                        string ObjDesc, 
                        string StateCode, 
                        bool IsAgriculture, 
                        int ClassID, 
                        bool IsMobileHome, 
                        string _Manufacturer_Make_, 
                        string Model, 
                        string _MobileHomeFile_, 
                        string _Decal_TPO__, 
                        string _Serial_VIN__, 
                        string _HUDTag_, 
                        string _Title_, 
                        string _TitleElimination_, 
                        string FilingDate, 
                        string ParkName, 
                        string SiteNumber) {
                ObjectDetailDataTableRow rowObjectDetailDataTableRow = ((ObjectDetailDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CopyToParcel,
                        RollYear,
                        ParcelNo,
                        null,
                        null,
                        Description,
                        IsValue,
                        IsRoll,
                        ObjDesc,
                        StateCode,
                        IsAgriculture,
                        ClassID,
                        IsMobileHome,
                        _Manufacturer_Make_,
                        Model,
                        _MobileHomeFile_,
                        _Decal_TPO__,
                        _Serial_VIN__,
                        _HUDTag_,
                        _Title_,
                        _TitleElimination_,
                        FilingDate,
                        ParkName,
                        SiteNumber};
                rowObjectDetailDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowObjectDetailDataTableRow);
                return rowObjectDetailDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ObjectDetailDataTableDataTable cln = ((ObjectDetailDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ObjectDetailDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCopyToParcel = base.Columns["CopyToParcel"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnParcelNo = base.Columns["ParcelNo"];
                this.columnParcelID = base.Columns["ParcelID"];
                this.columnObjectID = base.Columns["ObjectID"];
                this.columnDescription = base.Columns["Description"];
                this.columnIsValue = base.Columns["IsValue"];
                this.columnIsRoll = base.Columns["IsRoll"];
                this.columnObjDesc = base.Columns["ObjDesc"];
                this.columnStateCode = base.Columns["StateCode"];
                this.columnIsAgriculture = base.Columns["IsAgriculture"];
                this.columnClassID = base.Columns["ClassID"];
                this.columnIsMobileHome = base.Columns["IsMobileHome"];
                this._columnManufacturer_Make_ = base.Columns["Manufacturer(Make)"];
                this.columnModel = base.Columns["Model"];
                this._columnMobileHomeFile_ = base.Columns["MobileHomeFile#"];
                this._columnDecal_TPO__ = base.Columns["Decal(TPO)#"];
                this._columnSerial_VIN__ = base.Columns["Serial(VIN)#"];
                this._columnHUDTag_ = base.Columns["HUDTag#"];
                this._columnTitle_ = base.Columns["Title#"];
                this._columnTitleElimination_ = base.Columns["TitleElimination#"];
                this.columnFilingDate = base.Columns["FilingDate"];
                this.columnParkName = base.Columns["ParkName"];
                this.columnSiteNumber = base.Columns["SiteNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCopyToParcel = new global::System.Data.DataColumn("CopyToParcel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCopyToParcel);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnParcelNo = new global::System.Data.DataColumn("ParcelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelNo);
                this.columnParcelID = new global::System.Data.DataColumn("ParcelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelID);
                this.columnObjectID = new global::System.Data.DataColumn("ObjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnIsValue = new global::System.Data.DataColumn("IsValue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsValue);
                this.columnIsRoll = new global::System.Data.DataColumn("IsRoll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRoll);
                this.columnObjDesc = new global::System.Data.DataColumn("ObjDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjDesc);
                this.columnStateCode = new global::System.Data.DataColumn("StateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCode);
                this.columnIsAgriculture = new global::System.Data.DataColumn("IsAgriculture", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAgriculture);
                this.columnClassID = new global::System.Data.DataColumn("ClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassID);
                this.columnIsMobileHome = new global::System.Data.DataColumn("IsMobileHome", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMobileHome);
                this._columnManufacturer_Make_ = new global::System.Data.DataColumn("Manufacturer(Make)", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnManufacturer_Make_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnManufacturer_Make_");
                this._columnManufacturer_Make_.ExtendedProperties.Add("Generator_UserColumnName", "Manufacturer(Make)");
                base.Columns.Add(this._columnManufacturer_Make_);
                this.columnModel = new global::System.Data.DataColumn("Model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel);
                this._columnMobileHomeFile_ = new global::System.Data.DataColumn("MobileHomeFile#", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnMobileHomeFile_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnMobileHomeFile_");
                this._columnMobileHomeFile_.ExtendedProperties.Add("Generator_UserColumnName", "MobileHomeFile#");
                base.Columns.Add(this._columnMobileHomeFile_);
                this._columnDecal_TPO__ = new global::System.Data.DataColumn("Decal(TPO)#", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnDecal_TPO__.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnDecal_TPO__");
                this._columnDecal_TPO__.ExtendedProperties.Add("Generator_UserColumnName", "Decal(TPO)#");
                base.Columns.Add(this._columnDecal_TPO__);
                this._columnSerial_VIN__ = new global::System.Data.DataColumn("Serial(VIN)#", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnSerial_VIN__.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSerial_VIN__");
                this._columnSerial_VIN__.ExtendedProperties.Add("Generator_UserColumnName", "Serial(VIN)#");
                base.Columns.Add(this._columnSerial_VIN__);
                this._columnHUDTag_ = new global::System.Data.DataColumn("HUDTag#", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnHUDTag_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnHUDTag_");
                this._columnHUDTag_.ExtendedProperties.Add("Generator_UserColumnName", "HUDTag#");
                base.Columns.Add(this._columnHUDTag_);
                this._columnTitle_ = new global::System.Data.DataColumn("Title#", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnTitle_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnTitle_");
                this._columnTitle_.ExtendedProperties.Add("Generator_UserColumnName", "Title#");
                base.Columns.Add(this._columnTitle_);
                this._columnTitleElimination_ = new global::System.Data.DataColumn("TitleElimination#", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnTitleElimination_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnTitleElimination_");
                this._columnTitleElimination_.ExtendedProperties.Add("Generator_UserColumnName", "TitleElimination#");
                base.Columns.Add(this._columnTitleElimination_);
                this.columnFilingDate = new global::System.Data.DataColumn("FilingDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilingDate);
                this.columnParkName = new global::System.Data.DataColumn("ParkName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParkName);
                this.columnSiteNumber = new global::System.Data.DataColumn("SiteNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteNumber);
                this.columnCopyToParcel.ReadOnly = true;
                this.columnCopyToParcel.MaxLength = 110;
                this.columnParcelNo.ReadOnly = true;
                this.columnParcelNo.MaxLength = 57;
                this.columnParcelID.AutoIncrement = true;
                this.columnParcelID.AllowDBNull = false;
                this.columnParcelID.ReadOnly = true;
                this.columnObjectID.AutoIncrement = true;
                this.columnObjectID.AllowDBNull = false;
                this.columnObjectID.ReadOnly = true;
                this.columnDescription.MaxLength = 200;
                this.columnIsValue.ReadOnly = true;
                this.columnIsRoll.ReadOnly = true;
                this.columnObjDesc.ReadOnly = true;
                this.columnObjDesc.MaxLength = 208;
                this.columnStateCode.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ObjectDetailDataTableRow NewObjectDetailDataTableRow() {
                return ((ObjectDetailDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ObjectDetailDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ObjectDetailDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ObjectDetailDataTableRowChanged != null)) {
                    this.ObjectDetailDataTableRowChanged(this, new ObjectDetailDataTableRowChangeEvent(((ObjectDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ObjectDetailDataTableRowChanging != null)) {
                    this.ObjectDetailDataTableRowChanging(this, new ObjectDetailDataTableRowChangeEvent(((ObjectDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ObjectDetailDataTableRowDeleted != null)) {
                    this.ObjectDetailDataTableRowDeleted(this, new ObjectDetailDataTableRowChangeEvent(((ObjectDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ObjectDetailDataTableRowDeleting != null)) {
                    this.ObjectDetailDataTableRowDeleting(this, new ObjectDetailDataTableRowChangeEvent(((ObjectDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveObjectDetailDataTableRow(ObjectDetailDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3001ObjectManagementData ds = new F3001ObjectManagementData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ObjectDetailDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClassDetailDataTable : global::System.Data.TypedTableBase<ClassDetailRow> {
            
            private global::System.Data.DataColumn columnClassID;
            
            private global::System.Data.DataColumn columnClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClassDetailDataTable() {
                this.TableName = "ClassDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClassDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ClassDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassIDColumn {
                get {
                    return this.columnClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn {
                get {
                    return this.columnClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClassDetailRow this[int index] {
                get {
                    return ((ClassDetailRow)(this.Rows[index]));
                }
            }
            
            public event ClassDetailRowChangeEventHandler ClassDetailRowChanging;
            
            public event ClassDetailRowChangeEventHandler ClassDetailRowChanged;
            
            public event ClassDetailRowChangeEventHandler ClassDetailRowDeleting;
            
            public event ClassDetailRowChangeEventHandler ClassDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddClassDetailRow(ClassDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClassDetailRow AddClassDetailRow(int ClassID, string Class) {
                ClassDetailRow rowClassDetailRow = ((ClassDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ClassID,
                        Class};
                rowClassDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClassDetailRow);
                return rowClassDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ClassDetailDataTable cln = ((ClassDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClassDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnClassID = base.Columns["ClassID"];
                this.columnClass = base.Columns["Class"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnClassID = new global::System.Data.DataColumn("ClassID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassID);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnClass.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClassDetailRow NewClassDetailRow() {
                return ((ClassDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClassDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ClassDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClassDetailRowChanged != null)) {
                    this.ClassDetailRowChanged(this, new ClassDetailRowChangeEvent(((ClassDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClassDetailRowChanging != null)) {
                    this.ClassDetailRowChanging(this, new ClassDetailRowChangeEvent(((ClassDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClassDetailRowDeleted != null)) {
                    this.ClassDetailRowDeleted(this, new ClassDetailRowChangeEvent(((ClassDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClassDetailRowDeleting != null)) {
                    this.ClassDetailRowDeleting(this, new ClassDetailRowChangeEvent(((ClassDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveClassDetailRow(ClassDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F3001ObjectManagementData ds = new F3001ObjectManagementData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClassDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ObjectDetailDataTableRow : global::System.Data.DataRow {
            
            private ObjectDetailDataTableDataTable tableObjectDetailDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ObjectDetailDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableObjectDetailDataTable = ((ObjectDetailDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CopyToParcel {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable.CopyToParcelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CopyToParcel\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.CopyToParcelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tableObjectDetailDataTable.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParcelNo {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable.ParcelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParcelNo\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.ParcelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParcelID {
                get {
                    return ((int)(this[this.tableObjectDetailDataTable.ParcelIDColumn]));
                }
                set {
                    this[this.tableObjectDetailDataTable.ParcelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ObjectID {
                get {
                    return ((int)(this[this.tableObjectDetailDataTable.ObjectIDColumn]));
                }
                set {
                    this[this.tableObjectDetailDataTable.ObjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue {
                get {
                    try {
                        return ((bool)(this[this.tableObjectDetailDataTable.IsValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsValue\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.IsValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoll {
                get {
                    try {
                        return ((bool)(this[this.tableObjectDetailDataTable.IsRollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRoll\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.IsRollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ObjDesc {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable.ObjDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjDesc\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.ObjDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateCode {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable.StateCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StateCode\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.StateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgriculture {
                get {
                    try {
                        return ((bool)(this[this.tableObjectDetailDataTable.IsAgricultureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAgriculture\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.IsAgricultureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassID {
                get {
                    try {
                        return ((int)(this[this.tableObjectDetailDataTable.ClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassID\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.ClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileHome {
                get {
                    try {
                        return ((bool)(this[this.tableObjectDetailDataTable.IsMobileHomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsMobileHome\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.IsMobileHomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Manufacturer_Make_ {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable._Manufacturer_Make_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manufacturer(Make)\' in table \'ObjectDetailDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable._Manufacturer_Make_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Model {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable.ModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Model\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.ModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _MobileHomeFile_ {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable._MobileHomeFile_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileHomeFile#\' in table \'ObjectDetailDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable._MobileHomeFile_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Decal_TPO__ {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable._Decal_TPO__Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Decal(TPO)#\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable._Decal_TPO__Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Serial_VIN__ {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable._Serial_VIN__Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serial(VIN)#\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable._Serial_VIN__Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _HUDTag_ {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable._HUDTag_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUDTag#\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable._HUDTag_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Title_ {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable._Title_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title#\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable._Title_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _TitleElimination_ {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable._TitleElimination_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TitleElimination#\' in table \'ObjectDetailDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable._TitleElimination_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilingDate {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable.FilingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilingDate\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.FilingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParkName {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable.ParkNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParkName\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.ParkNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteNumber {
                get {
                    try {
                        return ((string)(this[this.tableObjectDetailDataTable.SiteNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteNumber\' in table \'ObjectDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableObjectDetailDataTable.SiteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCopyToParcelNull() {
                return this.IsNull(this.tableObjectDetailDataTable.CopyToParcelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCopyToParcelNull() {
                this[this.tableObjectDetailDataTable.CopyToParcelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableObjectDetailDataTable.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableObjectDetailDataTable.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParcelNoNull() {
                return this.IsNull(this.tableObjectDetailDataTable.ParcelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParcelNoNull() {
                this[this.tableObjectDetailDataTable.ParcelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableObjectDetailDataTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableObjectDetailDataTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsValueNull() {
                return this.IsNull(this.tableObjectDetailDataTable.IsValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsValueNull() {
                this[this.tableObjectDetailDataTable.IsValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRollNull() {
                return this.IsNull(this.tableObjectDetailDataTable.IsRollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRollNull() {
                this[this.tableObjectDetailDataTable.IsRollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjDescNull() {
                return this.IsNull(this.tableObjectDetailDataTable.ObjDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjDescNull() {
                this[this.tableObjectDetailDataTable.ObjDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeNull() {
                return this.IsNull(this.tableObjectDetailDataTable.StateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeNull() {
                this[this.tableObjectDetailDataTable.StateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAgricultureNull() {
                return this.IsNull(this.tableObjectDetailDataTable.IsAgricultureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAgricultureNull() {
                this[this.tableObjectDetailDataTable.IsAgricultureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassIDNull() {
                return this.IsNull(this.tableObjectDetailDataTable.ClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassIDNull() {
                this[this.tableObjectDetailDataTable.ClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsMobileHomeNull() {
                return this.IsNull(this.tableObjectDetailDataTable.IsMobileHomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsMobileHomeNull() {
                this[this.tableObjectDetailDataTable.IsMobileHomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Manufacturer_Make_Null() {
                return this.IsNull(this.tableObjectDetailDataTable._Manufacturer_Make_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Manufacturer_Make_Null() {
                this[this.tableObjectDetailDataTable._Manufacturer_Make_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNull() {
                return this.IsNull(this.tableObjectDetailDataTable.ModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNull() {
                this[this.tableObjectDetailDataTable.ModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_MobileHomeFile_Null() {
                return this.IsNull(this.tableObjectDetailDataTable._MobileHomeFile_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_MobileHomeFile_Null() {
                this[this.tableObjectDetailDataTable._MobileHomeFile_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Decal_TPO__Null() {
                return this.IsNull(this.tableObjectDetailDataTable._Decal_TPO__Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Decal_TPO__Null() {
                this[this.tableObjectDetailDataTable._Decal_TPO__Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Serial_VIN__Null() {
                return this.IsNull(this.tableObjectDetailDataTable._Serial_VIN__Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Serial_VIN__Null() {
                this[this.tableObjectDetailDataTable._Serial_VIN__Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_HUDTag_Null() {
                return this.IsNull(this.tableObjectDetailDataTable._HUDTag_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_HUDTag_Null() {
                this[this.tableObjectDetailDataTable._HUDTag_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Title_Null() {
                return this.IsNull(this.tableObjectDetailDataTable._Title_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Title_Null() {
                this[this.tableObjectDetailDataTable._Title_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_TitleElimination_Null() {
                return this.IsNull(this.tableObjectDetailDataTable._TitleElimination_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_TitleElimination_Null() {
                this[this.tableObjectDetailDataTable._TitleElimination_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilingDateNull() {
                return this.IsNull(this.tableObjectDetailDataTable.FilingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilingDateNull() {
                this[this.tableObjectDetailDataTable.FilingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParkNameNull() {
                return this.IsNull(this.tableObjectDetailDataTable.ParkNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParkNameNull() {
                this[this.tableObjectDetailDataTable.ParkNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteNumberNull() {
                return this.IsNull(this.tableObjectDetailDataTable.SiteNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteNumberNull() {
                this[this.tableObjectDetailDataTable.SiteNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ClassDetailRow : global::System.Data.DataRow {
            
            private ClassDetailDataTable tableClassDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClassDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClassDetail = ((ClassDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassID {
                get {
                    try {
                        return ((int)(this[this.tableClassDetail.ClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassID\' in table \'ClassDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClassDetail.ClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class {
                get {
                    try {
                        return ((string)(this[this.tableClassDetail.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'ClassDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClassDetail.ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassIDNull() {
                return this.IsNull(this.tableClassDetail.ClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassIDNull() {
                this[this.tableClassDetail.ClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull() {
                return this.IsNull(this.tableClassDetail.ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull() {
                this[this.tableClassDetail.ClassColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ObjectDetailDataTableRowChangeEvent : global::System.EventArgs {
            
            private ObjectDetailDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ObjectDetailDataTableRowChangeEvent(ObjectDetailDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ObjectDetailDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ClassDetailRowChangeEvent : global::System.EventArgs {
            
            private ClassDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClassDetailRowChangeEvent(ClassDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClassDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591