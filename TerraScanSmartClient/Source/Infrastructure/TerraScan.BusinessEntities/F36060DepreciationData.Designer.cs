//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TerraScan.BusinessEntities {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("F36060DepreciationData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class F36060DepreciationData : global::System.Data.DataSet {
        
        private ListDepreciationIteamsTablesDataTable tableListDepreciationIteamsTables;
        
        private GetDepreciationTablesDataTable tableGetDepreciationTables;
        
        private ListDepreciationGridTablesDataTable tableListDepreciationGridTables;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public F36060DepreciationData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected F36060DepreciationData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ListDepreciationIteamsTables"] != null)) {
                    base.Tables.Add(new ListDepreciationIteamsTablesDataTable(ds.Tables["ListDepreciationIteamsTables"]));
                }
                if ((ds.Tables["GetDepreciationTables"] != null)) {
                    base.Tables.Add(new GetDepreciationTablesDataTable(ds.Tables["GetDepreciationTables"]));
                }
                if ((ds.Tables["ListDepreciationGridTables"] != null)) {
                    base.Tables.Add(new ListDepreciationGridTablesDataTable(ds.Tables["ListDepreciationGridTables"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListDepreciationIteamsTablesDataTable ListDepreciationIteamsTables {
            get {
                return this.tableListDepreciationIteamsTables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetDepreciationTablesDataTable GetDepreciationTables {
            get {
                return this.tableGetDepreciationTables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListDepreciationGridTablesDataTable ListDepreciationGridTables {
            get {
                return this.tableListDepreciationGridTables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            F36060DepreciationData cln = ((F36060DepreciationData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ListDepreciationIteamsTables"] != null)) {
                    base.Tables.Add(new ListDepreciationIteamsTablesDataTable(ds.Tables["ListDepreciationIteamsTables"]));
                }
                if ((ds.Tables["GetDepreciationTables"] != null)) {
                    base.Tables.Add(new GetDepreciationTablesDataTable(ds.Tables["GetDepreciationTables"]));
                }
                if ((ds.Tables["ListDepreciationGridTables"] != null)) {
                    base.Tables.Add(new ListDepreciationGridTablesDataTable(ds.Tables["ListDepreciationGridTables"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableListDepreciationIteamsTables = ((ListDepreciationIteamsTablesDataTable)(base.Tables["ListDepreciationIteamsTables"]));
            if ((initTable == true)) {
                if ((this.tableListDepreciationIteamsTables != null)) {
                    this.tableListDepreciationIteamsTables.InitVars();
                }
            }
            this.tableGetDepreciationTables = ((GetDepreciationTablesDataTable)(base.Tables["GetDepreciationTables"]));
            if ((initTable == true)) {
                if ((this.tableGetDepreciationTables != null)) {
                    this.tableGetDepreciationTables.InitVars();
                }
            }
            this.tableListDepreciationGridTables = ((ListDepreciationGridTablesDataTable)(base.Tables["ListDepreciationGridTables"]));
            if ((initTable == true)) {
                if ((this.tableListDepreciationGridTables != null)) {
                    this.tableListDepreciationGridTables.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "F36060DepreciationData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/F36060DepreciationData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableListDepreciationIteamsTables = new ListDepreciationIteamsTablesDataTable();
            base.Tables.Add(this.tableListDepreciationIteamsTables);
            this.tableGetDepreciationTables = new GetDepreciationTablesDataTable();
            base.Tables.Add(this.tableGetDepreciationTables);
            this.tableListDepreciationGridTables = new ListDepreciationGridTablesDataTable();
            base.Tables.Add(this.tableListDepreciationGridTables);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListDepreciationIteamsTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetDepreciationTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListDepreciationGridTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            F36060DepreciationData ds = new F36060DepreciationData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ListDepreciationIteamsTablesRowChangeEventHandler(object sender, ListDepreciationIteamsTablesRowChangeEvent e);
        
        public delegate void GetDepreciationTablesRowChangeEventHandler(object sender, GetDepreciationTablesRowChangeEvent e);
        
        public delegate void ListDepreciationGridTablesRowChangeEventHandler(object sender, ListDepreciationGridTablesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListDepreciationIteamsTablesDataTable : global::System.Data.TypedTableBase<ListDepreciationIteamsTablesRow> {
            
            private global::System.Data.DataColumn columnDeprItemID;
            
            private global::System.Data.DataColumn columnDeprTableID;
            
            private global::System.Data.DataColumn columnEffectiveAge;
            
            private global::System.Data.DataColumn columnDepr1;
            
            private global::System.Data.DataColumn columnDepr2;
            
            private global::System.Data.DataColumn columnDepr3;
            
            private global::System.Data.DataColumn columnDepr4;
            
            private global::System.Data.DataColumn columnDepr5;
            
            private global::System.Data.DataColumn columnDepr6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationIteamsTablesDataTable() {
                this.TableName = "ListDepreciationIteamsTables";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListDepreciationIteamsTablesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListDepreciationIteamsTablesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprItemIDColumn {
                get {
                    return this.columnDeprItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprTableIDColumn {
                get {
                    return this.columnDeprTableID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveAgeColumn {
                get {
                    return this.columnEffectiveAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr1Column {
                get {
                    return this.columnDepr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr2Column {
                get {
                    return this.columnDepr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr3Column {
                get {
                    return this.columnDepr3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr4Column {
                get {
                    return this.columnDepr4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr5Column {
                get {
                    return this.columnDepr5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depr6Column {
                get {
                    return this.columnDepr6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationIteamsTablesRow this[int index] {
                get {
                    return ((ListDepreciationIteamsTablesRow)(this.Rows[index]));
                }
            }
            
            public event ListDepreciationIteamsTablesRowChangeEventHandler ListDepreciationIteamsTablesRowChanging;
            
            public event ListDepreciationIteamsTablesRowChangeEventHandler ListDepreciationIteamsTablesRowChanged;
            
            public event ListDepreciationIteamsTablesRowChangeEventHandler ListDepreciationIteamsTablesRowDeleting;
            
            public event ListDepreciationIteamsTablesRowChangeEventHandler ListDepreciationIteamsTablesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListDepreciationIteamsTablesRow(ListDepreciationIteamsTablesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationIteamsTablesRow AddListDepreciationIteamsTablesRow(string DeprItemID, string DeprTableID, int EffectiveAge, decimal Depr1, decimal Depr2, decimal Depr3, decimal Depr4, decimal Depr5, decimal Depr6) {
                ListDepreciationIteamsTablesRow rowListDepreciationIteamsTablesRow = ((ListDepreciationIteamsTablesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeprItemID,
                        DeprTableID,
                        EffectiveAge,
                        Depr1,
                        Depr2,
                        Depr3,
                        Depr4,
                        Depr5,
                        Depr6};
                rowListDepreciationIteamsTablesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListDepreciationIteamsTablesRow);
                return rowListDepreciationIteamsTablesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListDepreciationIteamsTablesDataTable cln = ((ListDepreciationIteamsTablesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListDepreciationIteamsTablesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeprItemID = base.Columns["DeprItemID"];
                this.columnDeprTableID = base.Columns["DeprTableID"];
                this.columnEffectiveAge = base.Columns["EffectiveAge"];
                this.columnDepr1 = base.Columns["Depr1"];
                this.columnDepr2 = base.Columns["Depr2"];
                this.columnDepr3 = base.Columns["Depr3"];
                this.columnDepr4 = base.Columns["Depr4"];
                this.columnDepr5 = base.Columns["Depr5"];
                this.columnDepr6 = base.Columns["Depr6"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeprItemID = new global::System.Data.DataColumn("DeprItemID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprItemID);
                this.columnDeprTableID = new global::System.Data.DataColumn("DeprTableID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprTableID);
                this.columnEffectiveAge = new global::System.Data.DataColumn("EffectiveAge", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveAge);
                this.columnDepr1 = new global::System.Data.DataColumn("Depr1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr1);
                this.columnDepr2 = new global::System.Data.DataColumn("Depr2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr2);
                this.columnDepr3 = new global::System.Data.DataColumn("Depr3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr3);
                this.columnDepr4 = new global::System.Data.DataColumn("Depr4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr4);
                this.columnDepr5 = new global::System.Data.DataColumn("Depr5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr5);
                this.columnDepr6 = new global::System.Data.DataColumn("Depr6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepr6);
                this.columnDeprItemID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationIteamsTablesRow NewListDepreciationIteamsTablesRow() {
                return ((ListDepreciationIteamsTablesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListDepreciationIteamsTablesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListDepreciationIteamsTablesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListDepreciationIteamsTablesRowChanged != null)) {
                    this.ListDepreciationIteamsTablesRowChanged(this, new ListDepreciationIteamsTablesRowChangeEvent(((ListDepreciationIteamsTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListDepreciationIteamsTablesRowChanging != null)) {
                    this.ListDepreciationIteamsTablesRowChanging(this, new ListDepreciationIteamsTablesRowChangeEvent(((ListDepreciationIteamsTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListDepreciationIteamsTablesRowDeleted != null)) {
                    this.ListDepreciationIteamsTablesRowDeleted(this, new ListDepreciationIteamsTablesRowChangeEvent(((ListDepreciationIteamsTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListDepreciationIteamsTablesRowDeleting != null)) {
                    this.ListDepreciationIteamsTablesRowDeleting(this, new ListDepreciationIteamsTablesRowChangeEvent(((ListDepreciationIteamsTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListDepreciationIteamsTablesRow(ListDepreciationIteamsTablesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36060DepreciationData ds = new F36060DepreciationData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListDepreciationIteamsTablesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetDepreciationTablesDataTable : global::System.Data.TypedTableBase<GetDepreciationTablesRow> {
            
            private global::System.Data.DataColumn columnDeprTableID;
            
            private global::System.Data.DataColumn columnRollYear;
            
            private global::System.Data.DataColumn columnDeprName;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnLife;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnSerialNo;
            
            private global::System.Data.DataColumn columnDesc1;
            
            private global::System.Data.DataColumn columnCond1;
            
            private global::System.Data.DataColumn columnDesc2;
            
            private global::System.Data.DataColumn columnCond2;
            
            private global::System.Data.DataColumn columnDesc3;
            
            private global::System.Data.DataColumn columnCond3;
            
            private global::System.Data.DataColumn columnDesc4;
            
            private global::System.Data.DataColumn columnCond4;
            
            private global::System.Data.DataColumn columnDesc5;
            
            private global::System.Data.DataColumn columnCond5;
            
            private global::System.Data.DataColumn columnDesc6;
            
            private global::System.Data.DataColumn columnCond6;
            
            private global::System.Data.DataColumn columnIsPersonalProperty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDepreciationTablesDataTable() {
                this.TableName = "GetDepreciationTables";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetDepreciationTablesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetDepreciationTablesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprTableIDColumn {
                get {
                    return this.columnDeprTableID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollYearColumn {
                get {
                    return this.columnRollYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeprNameColumn {
                get {
                    return this.columnDeprName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LifeColumn {
                get {
                    return this.columnLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc1Column {
                get {
                    return this.columnDesc1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond1Column {
                get {
                    return this.columnCond1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc2Column {
                get {
                    return this.columnDesc2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond2Column {
                get {
                    return this.columnCond2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc3Column {
                get {
                    return this.columnDesc3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond3Column {
                get {
                    return this.columnCond3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc4Column {
                get {
                    return this.columnDesc4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond4Column {
                get {
                    return this.columnCond4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc5Column {
                get {
                    return this.columnDesc5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond5Column {
                get {
                    return this.columnCond5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desc6Column {
                get {
                    return this.columnDesc6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cond6Column {
                get {
                    return this.columnCond6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPersonalPropertyColumn {
                get {
                    return this.columnIsPersonalProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDepreciationTablesRow this[int index] {
                get {
                    return ((GetDepreciationTablesRow)(this.Rows[index]));
                }
            }
            
            public event GetDepreciationTablesRowChangeEventHandler GetDepreciationTablesRowChanging;
            
            public event GetDepreciationTablesRowChangeEventHandler GetDepreciationTablesRowChanged;
            
            public event GetDepreciationTablesRowChangeEventHandler GetDepreciationTablesRowDeleting;
            
            public event GetDepreciationTablesRowChangeEventHandler GetDepreciationTablesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetDepreciationTablesRow(GetDepreciationTablesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDepreciationTablesRow AddGetDepreciationTablesRow(
                        int DeprTableID, 
                        short RollYear, 
                        string DeprName, 
                        bool IsActive, 
                        int Life, 
                        string Description, 
                        string Desc1, 
                        string Cond1, 
                        string Desc2, 
                        string Cond2, 
                        string Desc3, 
                        string Cond3, 
                        string Desc4, 
                        string Cond4, 
                        string Desc5, 
                        string Cond5, 
                        string Desc6, 
                        string Cond6, 
                        bool IsPersonalProperty) {
                GetDepreciationTablesRow rowGetDepreciationTablesRow = ((GetDepreciationTablesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeprTableID,
                        RollYear,
                        DeprName,
                        IsActive,
                        Life,
                        Description,
                        null,
                        Desc1,
                        Cond1,
                        Desc2,
                        Cond2,
                        Desc3,
                        Cond3,
                        Desc4,
                        Cond4,
                        Desc5,
                        Cond5,
                        Desc6,
                        Cond6,
                        IsPersonalProperty};
                rowGetDepreciationTablesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetDepreciationTablesRow);
                return rowGetDepreciationTablesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetDepreciationTablesDataTable cln = ((GetDepreciationTablesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetDepreciationTablesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeprTableID = base.Columns["DeprTableID"];
                this.columnRollYear = base.Columns["RollYear"];
                this.columnDeprName = base.Columns["DeprName"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnLife = base.Columns["Life"];
                this.columnDescription = base.Columns["Description"];
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnDesc1 = base.Columns["Desc1"];
                this.columnCond1 = base.Columns["Cond1"];
                this.columnDesc2 = base.Columns["Desc2"];
                this.columnCond2 = base.Columns["Cond2"];
                this.columnDesc3 = base.Columns["Desc3"];
                this.columnCond3 = base.Columns["Cond3"];
                this.columnDesc4 = base.Columns["Desc4"];
                this.columnCond4 = base.Columns["Cond4"];
                this.columnDesc5 = base.Columns["Desc5"];
                this.columnCond5 = base.Columns["Cond5"];
                this.columnDesc6 = base.Columns["Desc6"];
                this.columnCond6 = base.Columns["Cond6"];
                this.columnIsPersonalProperty = base.Columns["IsPersonalProperty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeprTableID = new global::System.Data.DataColumn("DeprTableID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprTableID);
                this.columnRollYear = new global::System.Data.DataColumn("RollYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRollYear);
                this.columnDeprName = new global::System.Data.DataColumn("DeprName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeprName);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnLife = new global::System.Data.DataColumn("Life", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLife);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnSerialNo = new global::System.Data.DataColumn("SerialNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnDesc1 = new global::System.Data.DataColumn("Desc1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc1);
                this.columnCond1 = new global::System.Data.DataColumn("Cond1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond1);
                this.columnDesc2 = new global::System.Data.DataColumn("Desc2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc2);
                this.columnCond2 = new global::System.Data.DataColumn("Cond2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond2);
                this.columnDesc3 = new global::System.Data.DataColumn("Desc3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc3);
                this.columnCond3 = new global::System.Data.DataColumn("Cond3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond3);
                this.columnDesc4 = new global::System.Data.DataColumn("Desc4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc4);
                this.columnCond4 = new global::System.Data.DataColumn("Cond4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond4);
                this.columnDesc5 = new global::System.Data.DataColumn("Desc5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc5);
                this.columnCond5 = new global::System.Data.DataColumn("Cond5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond5);
                this.columnDesc6 = new global::System.Data.DataColumn("Desc6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc6);
                this.columnCond6 = new global::System.Data.DataColumn("Cond6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCond6);
                this.columnIsPersonalProperty = new global::System.Data.DataColumn("IsPersonalProperty", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPersonalProperty);
                this.columnDeprTableID.ReadOnly = true;
                this.columnDeprName.MaxLength = 50;
                this.columnDescription.MaxLength = 100;
                this.columnSerialNo.AutoIncrement = true;
                this.columnSerialNo.ReadOnly = true;
                this.columnDesc1.MaxLength = 20;
                this.columnCond1.ReadOnly = true;
                this.columnDesc2.MaxLength = 20;
                this.columnCond2.ReadOnly = true;
                this.columnDesc3.MaxLength = 20;
                this.columnCond3.ReadOnly = true;
                this.columnDesc4.MaxLength = 20;
                this.columnCond4.ReadOnly = true;
                this.columnDesc5.MaxLength = 20;
                this.columnCond5.ReadOnly = true;
                this.columnDesc6.MaxLength = 20;
                this.columnCond6.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDepreciationTablesRow NewGetDepreciationTablesRow() {
                return ((GetDepreciationTablesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetDepreciationTablesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetDepreciationTablesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetDepreciationTablesRowChanged != null)) {
                    this.GetDepreciationTablesRowChanged(this, new GetDepreciationTablesRowChangeEvent(((GetDepreciationTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetDepreciationTablesRowChanging != null)) {
                    this.GetDepreciationTablesRowChanging(this, new GetDepreciationTablesRowChangeEvent(((GetDepreciationTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetDepreciationTablesRowDeleted != null)) {
                    this.GetDepreciationTablesRowDeleted(this, new GetDepreciationTablesRowChangeEvent(((GetDepreciationTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetDepreciationTablesRowDeleting != null)) {
                    this.GetDepreciationTablesRowDeleting(this, new GetDepreciationTablesRowChangeEvent(((GetDepreciationTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetDepreciationTablesRow(GetDepreciationTablesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36060DepreciationData ds = new F36060DepreciationData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetDepreciationTablesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListDepreciationGridTablesDataTable : global::System.Data.TypedTableBase<ListDepreciationGridTablesRow> {
            
            private global::System.Data.DataColumn columnSerialNo;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnMultiplier;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationGridTablesDataTable() {
                this.TableName = "ListDepreciationGridTables";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListDepreciationGridTablesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListDepreciationGridTablesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MultiplierColumn {
                get {
                    return this.columnMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationGridTablesRow this[int index] {
                get {
                    return ((ListDepreciationGridTablesRow)(this.Rows[index]));
                }
            }
            
            public event ListDepreciationGridTablesRowChangeEventHandler ListDepreciationGridTablesRowChanging;
            
            public event ListDepreciationGridTablesRowChangeEventHandler ListDepreciationGridTablesRowChanged;
            
            public event ListDepreciationGridTablesRowChangeEventHandler ListDepreciationGridTablesRowDeleting;
            
            public event ListDepreciationGridTablesRowChangeEventHandler ListDepreciationGridTablesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListDepreciationGridTablesRow(ListDepreciationGridTablesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationGridTablesRow AddListDepreciationGridTablesRow(int SerialNo, string Description, string Multiplier) {
                ListDepreciationGridTablesRow rowListDepreciationGridTablesRow = ((ListDepreciationGridTablesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SerialNo,
                        Description,
                        Multiplier};
                rowListDepreciationGridTablesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListDepreciationGridTablesRow);
                return rowListDepreciationGridTablesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListDepreciationGridTablesDataTable cln = ((ListDepreciationGridTablesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListDepreciationGridTablesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnDescription = base.Columns["Description"];
                this.columnMultiplier = base.Columns["Multiplier"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSerialNo = new global::System.Data.DataColumn("SerialNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMultiplier = new global::System.Data.DataColumn("Multiplier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultiplier);
                this.columnDescription.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationGridTablesRow NewListDepreciationGridTablesRow() {
                return ((ListDepreciationGridTablesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListDepreciationGridTablesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListDepreciationGridTablesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListDepreciationGridTablesRowChanged != null)) {
                    this.ListDepreciationGridTablesRowChanged(this, new ListDepreciationGridTablesRowChangeEvent(((ListDepreciationGridTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListDepreciationGridTablesRowChanging != null)) {
                    this.ListDepreciationGridTablesRowChanging(this, new ListDepreciationGridTablesRowChangeEvent(((ListDepreciationGridTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListDepreciationGridTablesRowDeleted != null)) {
                    this.ListDepreciationGridTablesRowDeleted(this, new ListDepreciationGridTablesRowChangeEvent(((ListDepreciationGridTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListDepreciationGridTablesRowDeleting != null)) {
                    this.ListDepreciationGridTablesRowDeleting(this, new ListDepreciationGridTablesRowChangeEvent(((ListDepreciationGridTablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListDepreciationGridTablesRow(ListDepreciationGridTablesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                F36060DepreciationData ds = new F36060DepreciationData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListDepreciationGridTablesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListDepreciationIteamsTablesRow : global::System.Data.DataRow {
            
            private ListDepreciationIteamsTablesDataTable tableListDepreciationIteamsTables;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListDepreciationIteamsTablesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListDepreciationIteamsTables = ((ListDepreciationIteamsTablesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeprItemID {
                get {
                    try {
                        return ((string)(this[this.tableListDepreciationIteamsTables.DeprItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprItemID\' in table \'ListDepreciationIteamsTables\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationIteamsTables.DeprItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeprTableID {
                get {
                    try {
                        return ((string)(this[this.tableListDepreciationIteamsTables.DeprTableIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprTableID\' in table \'ListDepreciationIteamsTables\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationIteamsTables.DeprTableIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EffectiveAge {
                get {
                    try {
                        return ((int)(this[this.tableListDepreciationIteamsTables.EffectiveAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveAge\' in table \'ListDepreciationIteamsTables\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationIteamsTables.EffectiveAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr1 {
                get {
                    try {
                        return ((decimal)(this[this.tableListDepreciationIteamsTables.Depr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr1\' in table \'ListDepreciationIteamsTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationIteamsTables.Depr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr2 {
                get {
                    try {
                        return ((decimal)(this[this.tableListDepreciationIteamsTables.Depr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr2\' in table \'ListDepreciationIteamsTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationIteamsTables.Depr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr3 {
                get {
                    try {
                        return ((decimal)(this[this.tableListDepreciationIteamsTables.Depr3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr3\' in table \'ListDepreciationIteamsTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationIteamsTables.Depr3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr4 {
                get {
                    try {
                        return ((decimal)(this[this.tableListDepreciationIteamsTables.Depr4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr4\' in table \'ListDepreciationIteamsTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationIteamsTables.Depr4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr5 {
                get {
                    try {
                        return ((decimal)(this[this.tableListDepreciationIteamsTables.Depr5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr5\' in table \'ListDepreciationIteamsTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationIteamsTables.Depr5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Depr6 {
                get {
                    try {
                        return ((decimal)(this[this.tableListDepreciationIteamsTables.Depr6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depr6\' in table \'ListDepreciationIteamsTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationIteamsTables.Depr6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprItemIDNull() {
                return this.IsNull(this.tableListDepreciationIteamsTables.DeprItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprItemIDNull() {
                this[this.tableListDepreciationIteamsTables.DeprItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprTableIDNull() {
                return this.IsNull(this.tableListDepreciationIteamsTables.DeprTableIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprTableIDNull() {
                this[this.tableListDepreciationIteamsTables.DeprTableIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveAgeNull() {
                return this.IsNull(this.tableListDepreciationIteamsTables.EffectiveAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveAgeNull() {
                this[this.tableListDepreciationIteamsTables.EffectiveAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr1Null() {
                return this.IsNull(this.tableListDepreciationIteamsTables.Depr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr1Null() {
                this[this.tableListDepreciationIteamsTables.Depr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr2Null() {
                return this.IsNull(this.tableListDepreciationIteamsTables.Depr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr2Null() {
                this[this.tableListDepreciationIteamsTables.Depr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr3Null() {
                return this.IsNull(this.tableListDepreciationIteamsTables.Depr3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr3Null() {
                this[this.tableListDepreciationIteamsTables.Depr3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr4Null() {
                return this.IsNull(this.tableListDepreciationIteamsTables.Depr4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr4Null() {
                this[this.tableListDepreciationIteamsTables.Depr4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr5Null() {
                return this.IsNull(this.tableListDepreciationIteamsTables.Depr5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr5Null() {
                this[this.tableListDepreciationIteamsTables.Depr5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepr6Null() {
                return this.IsNull(this.tableListDepreciationIteamsTables.Depr6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepr6Null() {
                this[this.tableListDepreciationIteamsTables.Depr6Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetDepreciationTablesRow : global::System.Data.DataRow {
            
            private GetDepreciationTablesDataTable tableGetDepreciationTables;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetDepreciationTablesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetDepreciationTables = ((GetDepreciationTablesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeprTableID {
                get {
                    try {
                        return ((int)(this[this.tableGetDepreciationTables.DeprTableIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprTableID\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.DeprTableIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RollYear {
                get {
                    try {
                        return ((short)(this[this.tableGetDepreciationTables.RollYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RollYear\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.RollYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeprName {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.DeprNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeprName\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.DeprNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableGetDepreciationTables.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Life {
                get {
                    try {
                        return ((int)(this[this.tableGetDepreciationTables.LifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Life\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.LifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SerialNo {
                get {
                    try {
                        return ((int)(this[this.tableGetDepreciationTables.SerialNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNo\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.SerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc1 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Desc1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc1\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Desc1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cond1 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Cond1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond1\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Cond1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc2 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Desc2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc2\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Desc2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cond2 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Cond2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond2\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Cond2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc3 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Desc3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc3\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Desc3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cond3 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Cond3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond3\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Cond3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc4 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Desc4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc4\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Desc4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cond4 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Cond4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond4\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Cond4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc5 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Desc5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc5\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Desc5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cond5 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Cond5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond5\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Cond5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc6 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Desc6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc6\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Desc6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cond6 {
                get {
                    try {
                        return ((string)(this[this.tableGetDepreciationTables.Cond6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cond6\' in table \'GetDepreciationTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.Cond6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalProperty {
                get {
                    try {
                        return ((bool)(this[this.tableGetDepreciationTables.IsPersonalPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPersonalProperty\' in table \'GetDepreciationTables\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetDepreciationTables.IsPersonalPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprTableIDNull() {
                return this.IsNull(this.tableGetDepreciationTables.DeprTableIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprTableIDNull() {
                this[this.tableGetDepreciationTables.DeprTableIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollYearNull() {
                return this.IsNull(this.tableGetDepreciationTables.RollYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollYearNull() {
                this[this.tableGetDepreciationTables.RollYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeprNameNull() {
                return this.IsNull(this.tableGetDepreciationTables.DeprNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeprNameNull() {
                this[this.tableGetDepreciationTables.DeprNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableGetDepreciationTables.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tableGetDepreciationTables.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLifeNull() {
                return this.IsNull(this.tableGetDepreciationTables.LifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLifeNull() {
                this[this.tableGetDepreciationTables.LifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGetDepreciationTables.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableGetDepreciationTables.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialNoNull() {
                return this.IsNull(this.tableGetDepreciationTables.SerialNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialNoNull() {
                this[this.tableGetDepreciationTables.SerialNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc1Null() {
                return this.IsNull(this.tableGetDepreciationTables.Desc1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc1Null() {
                this[this.tableGetDepreciationTables.Desc1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond1Null() {
                return this.IsNull(this.tableGetDepreciationTables.Cond1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond1Null() {
                this[this.tableGetDepreciationTables.Cond1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc2Null() {
                return this.IsNull(this.tableGetDepreciationTables.Desc2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc2Null() {
                this[this.tableGetDepreciationTables.Desc2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond2Null() {
                return this.IsNull(this.tableGetDepreciationTables.Cond2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond2Null() {
                this[this.tableGetDepreciationTables.Cond2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc3Null() {
                return this.IsNull(this.tableGetDepreciationTables.Desc3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc3Null() {
                this[this.tableGetDepreciationTables.Desc3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond3Null() {
                return this.IsNull(this.tableGetDepreciationTables.Cond3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond3Null() {
                this[this.tableGetDepreciationTables.Cond3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc4Null() {
                return this.IsNull(this.tableGetDepreciationTables.Desc4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc4Null() {
                this[this.tableGetDepreciationTables.Desc4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond4Null() {
                return this.IsNull(this.tableGetDepreciationTables.Cond4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond4Null() {
                this[this.tableGetDepreciationTables.Cond4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc5Null() {
                return this.IsNull(this.tableGetDepreciationTables.Desc5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc5Null() {
                this[this.tableGetDepreciationTables.Desc5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond5Null() {
                return this.IsNull(this.tableGetDepreciationTables.Cond5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond5Null() {
                this[this.tableGetDepreciationTables.Cond5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesc6Null() {
                return this.IsNull(this.tableGetDepreciationTables.Desc6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesc6Null() {
                this[this.tableGetDepreciationTables.Desc6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCond6Null() {
                return this.IsNull(this.tableGetDepreciationTables.Cond6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCond6Null() {
                this[this.tableGetDepreciationTables.Cond6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPersonalPropertyNull() {
                return this.IsNull(this.tableGetDepreciationTables.IsPersonalPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPersonalPropertyNull() {
                this[this.tableGetDepreciationTables.IsPersonalPropertyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListDepreciationGridTablesRow : global::System.Data.DataRow {
            
            private ListDepreciationGridTablesDataTable tableListDepreciationGridTables;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListDepreciationGridTablesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListDepreciationGridTables = ((ListDepreciationGridTablesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SerialNo {
                get {
                    try {
                        return ((int)(this[this.tableListDepreciationGridTables.SerialNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNo\' in table \'ListDepreciationGridTables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationGridTables.SerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableListDepreciationGridTables.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ListDepreciationGridTables\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableListDepreciationGridTables.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Multiplier {
                get {
                    try {
                        return ((string)(this[this.tableListDepreciationGridTables.MultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Multiplier\' in table \'ListDepreciationGridTables\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableListDepreciationGridTables.MultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialNoNull() {
                return this.IsNull(this.tableListDepreciationGridTables.SerialNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialNoNull() {
                this[this.tableListDepreciationGridTables.SerialNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableListDepreciationGridTables.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableListDepreciationGridTables.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMultiplierNull() {
                return this.IsNull(this.tableListDepreciationGridTables.MultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMultiplierNull() {
                this[this.tableListDepreciationGridTables.MultiplierColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListDepreciationIteamsTablesRowChangeEvent : global::System.EventArgs {
            
            private ListDepreciationIteamsTablesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationIteamsTablesRowChangeEvent(ListDepreciationIteamsTablesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationIteamsTablesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetDepreciationTablesRowChangeEvent : global::System.EventArgs {
            
            private GetDepreciationTablesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDepreciationTablesRowChangeEvent(GetDepreciationTablesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetDepreciationTablesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListDepreciationGridTablesRowChangeEvent : global::System.EventArgs {
            
            private ListDepreciationGridTablesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationGridTablesRowChangeEvent(ListDepreciationGridTablesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListDepreciationGridTablesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591