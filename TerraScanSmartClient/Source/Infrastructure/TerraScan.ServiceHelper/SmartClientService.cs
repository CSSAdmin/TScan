//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace = "http://TerraScan.ServiceContracts", ConfigurationName = "ISmartClientService")]
public interface ISmartClientService
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://TerraScan.ServiceContracts/ISmartClientService/GetExciseIndividualType", ReplyAction = "http://TerraScan.ServiceContracts/ISmartClientService/GetExciseIndividualTypeResp" +
        "onse")]
    string GetExciseIndividualType();

    [System.ServiceModel.OperationContractAttribute(Action = "http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxAffidavitDetail" +
        "s", ReplyAction = "http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxAffidavitDetail" +
        "sResponse")]
    string GetExciseTaxAffidavitDetails(int statmentId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxAffidavitCalula" +
        "teAmountDue", ReplyAction = "http://TerraScan.ServiceContracts/ISmartClientService/GetExciseTaxAffidavitCalula" +
        "teAmountDueResponse")]
    string GetExciseTaxAffidavitCalulateAmountDue(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateID, int taxCode, double taxableSaleAmount);

    [System.ServiceModel.OperationContractAttribute(Action = "http://TerraScan.ServiceContracts/ISmartClientService/GetAffidavitStatementId", ReplyAction = "http://TerraScan.ServiceContracts/ISmartClientService/GetAffidavitStatementIdResp" +
        "onse")]
    string GetAffidavitStatementId(int formId, string orderField, string orderBy);

    [System.ServiceModel.OperationContractAttribute(Action = "http://TerraScan.ServiceContracts/ISmartClientService/ExecuteAffdvtQuery", ReplyAction = "http://TerraScan.ServiceContracts/ISmartClientService/ExecuteAffdvtQueryResponse")]
    string ExecuteAffdvtQuery(int formId, string whereCondnSql, string orderByCondn);

    [System.ServiceModel.OperationContractAttribute(Action = "http://TerraScan.ServiceContracts/ISmartClientService/SaveAffiDavitDetails", ReplyAction = "http://TerraScan.ServiceContracts/ISmartClientService/SaveAffiDavitDetailsRespons" +
        "e")]
    int SaveAffiDavitDetails(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails);

    [System.ServiceModel.OperationContractAttribute(Action = "http://TerraScan.ServiceContracts/ISmartClientService/GetOwnerDetails", ReplyAction = "http://TerraScan.ServiceContracts/ISmartClientService/GetOwnerDetailsResponse")]
    string GetOwnerDetails(int ownerId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictSelection", ReplyAction = "http://TerraScan.ServiceContracts/ISmartClientService/GetDistrictSelectionRespons" +
        "e")]
    string GetDistrictSelection(int exciseRateId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://TerraScan.ServiceContracts/ISmartClientService/DeleteAffidavitDetails", ReplyAction = "http://TerraScan.ServiceContracts/ISmartClientService/DeleteAffidavitDetailsRespo" +
        "nse")]
    void DeleteAffidavitDetails(int statementId);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface ISmartClientServiceChannel : ISmartClientService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class SmartClientServiceClient : System.ServiceModel.ClientBase<ISmartClientService>, ISmartClientService
{

    public SmartClientServiceClient()
    {
    }

    public SmartClientServiceClient(string endpointConfigurationName)
        :
            base(endpointConfigurationName)
    {
    }

    public SmartClientServiceClient(string endpointConfigurationName, string remoteAddress)
        :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public SmartClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)
        :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public SmartClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress)
        :
            base(binding, remoteAddress)
    {
    }

    public string GetExciseIndividualType()
    {
        return base.Channel.GetExciseIndividualType();
    }

    public string GetExciseTaxAffidavitDetails(int statmentId)
    {
        return base.Channel.GetExciseTaxAffidavitDetails(statmentId);
    }

    public string GetExciseTaxAffidavitCalulateAmountDue(System.DateTime saleDate, System.DateTime paymentDate, int exciseRateID, int taxCode, double taxableSaleAmount)
    {
        return base.Channel.GetExciseTaxAffidavitCalulateAmountDue(saleDate, paymentDate, exciseRateID, taxCode, taxableSaleAmount);
    }

    public string GetAffidavitStatementId(int formId, string orderField, string orderBy)
    {
        return base.Channel.GetAffidavitStatementId(formId, orderField, orderBy);
    }

    public string ExecuteAffdvtQuery(int formId, string whereCondnSql, string orderByCondn)
    {
        return base.Channel.ExecuteAffdvtQuery(formId, whereCondnSql, orderByCondn);
    }

    public int SaveAffiDavitDetails(int statementId, string partiesAddress, string parcelDetails, string exciseAffidavitDetails)
    {
        return base.Channel.SaveAffiDavitDetails(statementId, partiesAddress, parcelDetails, exciseAffidavitDetails);
    }

    public string GetOwnerDetails(int ownerId)
    {
        return base.Channel.GetOwnerDetails(ownerId);
    }

    public string GetDistrictSelection(int exciseRateId)
    {
        return base.Channel.GetDistrictSelection(exciseRateId);
    }

    public void DeleteAffidavitDetails(int statementId)
    {
        base.Channel.DeleteAffidavitDetails(statementId);
    }
}

